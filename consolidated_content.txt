--- Fichier: C:\Users\Alex\Python\fitness-app\.gitignore ---
--- Nom du fichier: .gitignore ---
--- Contenu ---
__pycache__/
*.pyc
*.pyo
*.pyd
.Python
env/
.env
venv/
.venv/
.DS_Store
.vscode/
*.db
*.sqlite
*.sqlite3
node_modules/
.coverage
htmlcov/
consolidator.ipynb
consolidated_content.txt
bdd_shower.ipynb
enrich_with_ollama_fixed.py
exercises_old.json
.eslintrc.json
--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\bdd_shower.ipynb ---
--- Nom du fichier: bdd_shower.ipynb ---
--- Contenu ---
{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "27829fae",
   "metadata": {},
   "outputs": [],
   "source": [
    "# debug_database.py\n",
    "import pandas as pd\n",
    "import json\n",
    "from sqlalchemy import create_engine, text\n",
    "import os\n",
    "from datetime import datetime\n",
    "\n",
    "# Configuration - Remplacez par votre URL de base de donn√©es\n",
    "DATABASE_URL = os.getenv(\"DATABASE_URL\", \"postgresql://user:pass@localhost/fitness_db\")\n",
    "# Pour SQLite local : \"sqlite:///./fitness.db\"\n",
    "\n",
    "def debug_database():\n",
    "    \"\"\"Analyse compl√®te de la base de donn√©es\"\"\"\n",
    "    engine = create_engine(DATABASE_URL)\n",
    "    \n",
    "    print(\"=== ANALYSE DE LA BASE DE DONN√âES ===\\n\")\n",
    "    \n",
    "    try:\n",
    "        # 1. V√©rifier les tables existantes\n",
    "        with engine.connect() as conn:\n",
    "            tables = pd.read_sql(\"\"\"\n",
    "                SELECT table_name \n",
    "                FROM information_schema.tables \n",
    "                WHERE table_schema = 'public'\n",
    "            \"\"\", conn)\n",
    "            print(\"Tables disponibles:\")\n",
    "            print(tables)\n",
    "            print(\"\\n\" + \"=\"*50 + \"\\n\")\n",
    "        \n",
    "        # 2. Analyser la table users\n",
    "        with engine.connect() as conn:\n",
    "            # Structure\n",
    "            columns = pd.read_sql(\"\"\"\n",
    "                SELECT column_name, data_type, is_nullable\n",
    "                FROM information_schema.columns\n",
    "                WHERE table_name = 'users'\n",
    "                ORDER BY ordinal_position\n",
    "            \"\"\", conn)\n",
    "            print(\"Structure de la table 'users':\")\n",
    "            print(columns)\n",
    "            print(\"\\n\" + \"=\"*50 + \"\\n\")\n",
    "            \n",
    "            # Donn√©es\n",
    "            users_df = pd.read_sql(\"SELECT * FROM users\", conn)\n",
    "            print(f\"Nombre d'utilisateurs: {len(users_df)}\")\n",
    "            \n",
    "            if len(users_df) > 0:\n",
    "                print(\"\\n√âchantillon des utilisateurs:\")\n",
    "                print(users_df[['id', 'name', 'age', 'experience_level']].head())\n",
    "                \n",
    "                print(\"\\nObjectifs uniques:\")\n",
    "                all_goals = []\n",
    "                for goals in users_df['goals']:\n",
    "                    if goals:\n",
    "                        all_goals.extend(json.loads(goals) if isinstance(goals, str) else goals)\n",
    "                print(list(set(all_goals)))\n",
    "                \n",
    "                print(\"\\n√âquipements uniques:\")\n",
    "                all_equipment = []\n",
    "                for equip in users_df['available_equipment']:\n",
    "                    if equip:\n",
    "                        all_equipment.extend(json.loads(equip) if isinstance(equip, str) else equip)\n",
    "                print(list(set(all_equipment)))\n",
    "                \n",
    "                print(\"\\nPoids d'halt√®res:\")\n",
    "                for idx, row in users_df.iterrows():\n",
    "                    weights = json.loads(row['dumbbell_weights']) if isinstance(row['dumbbell_weights'], str) else row['dumbbell_weights']\n",
    "                    print(f\"User {row['name']}: {weights}\")\n",
    "                \n",
    "                print(\"\\nConfiguration barbell:\")\n",
    "                for idx, row in users_df.iterrows():\n",
    "                    if row['barbell_weights']:\n",
    "                        barbell = json.loads(row['barbell_weights']) if isinstance(row['barbell_weights'], str) else row['barbell_weights']\n",
    "                        print(f\"User {row['name']}: {barbell}\")\n",
    "                \n",
    "                print(\"\\n√âlastiques:\")\n",
    "                for idx, row in users_df.iterrows():\n",
    "                    if row['resistance_bands']:\n",
    "                        bands = json.loads(row['resistance_bands']) if isinstance(row['resistance_bands'], str) else row['resistance_bands']\n",
    "                        print(f\"User {row['name']}: {bands}\")\n",
    "        \n",
    "        # 3. Analyser la table workouts\n",
    "        with engine.connect() as conn:\n",
    "            workouts_df = pd.read_sql(\"SELECT * FROM workouts ORDER BY created_at DESC LIMIT 10\", conn)\n",
    "            print(f\"\\n\\nNombre total de workouts: {len(workouts_df)}\")\n",
    "            if len(workouts_df) > 0:\n",
    "                print(\"\\nDerniers workouts:\")\n",
    "                print(workouts_df[['id', 'user_id', 'name', 'created_at']].head())\n",
    "        \n",
    "        # 4. Analyser exercises.json\n",
    "        print(\"\\n\\n=== ANALYSE DE exercises.json ===\")\n",
    "        try:\n",
    "            with open('exercises.json', 'r', encoding='utf-8') as f:\n",
    "                exercises = json.load(f)\n",
    "            \n",
    "            print(f\"Nombre total d'exercices: {len(exercises)}\")\n",
    "            \n",
    "            # V√©rifier les incoh√©rences\n",
    "            body_part_keys = set()\n",
    "            equipment_types = set()\n",
    "            goals_in_exercises = set()\n",
    "            \n",
    "            for ex in exercises:\n",
    "                # V√©rifier bodyPart vs body_part\n",
    "                if 'bodyPart' in ex:\n",
    "                    body_part_keys.add('bodyPart')\n",
    "                if 'body_part' in ex:\n",
    "                    body_part_keys.add('body_part')\n",
    "                \n",
    "                # Collecter tous les √©quipements\n",
    "                if 'equipment' in ex:\n",
    "                    equipment_types.update(ex['equipment'])\n",
    "                \n",
    "                # Collecter tous les objectifs\n",
    "                if 'goals' in ex:\n",
    "                    goals_in_exercises.update(ex['goals'])\n",
    "            \n",
    "            print(f\"\\nCl√©s body_part trouv√©es: {body_part_keys}\")\n",
    "            print(f\"\\nTypes d'√©quipement uniques ({len(equipment_types)}):\")\n",
    "            for eq in sorted(equipment_types):\n",
    "                print(f\"  - {eq}\")\n",
    "            \n",
    "            print(f\"\\nObjectifs trouv√©s dans exercises.json:\")\n",
    "            for goal in sorted(goals_in_exercises):\n",
    "                print(f\"  - {goal}\")\n",
    "                \n",
    "        except FileNotFoundError:\n",
    "            print(\"exercises.json non trouv√©\")\n",
    "        \n",
    "    except Exception as e:\n",
    "        print(f\"Erreur: {e}\")\n",
    "        import traceback\n",
    "        traceback.print_exc()\n",
    "\n",
    "def fix_exercises_json():\n",
    "    \"\"\"Corriger les incoh√©rences dans exercises.json\"\"\"\n",
    "    print(\"\\n=== CORRECTION DE exercises.json ===\")\n",
    "    \n",
    "    with open('exercises.json', 'r', encoding='utf-8') as f:\n",
    "        exercises = json.load(f)\n",
    "    \n",
    "    fixed_count = 0\n",
    "    for exercise in exercises:\n",
    "        # Corriger bodyPart -> body_part\n",
    "        if 'bodyPart' in exercise:\n",
    "            exercise['body_part'] = exercise.pop('bodyPart')\n",
    "            fixed_count += 1\n",
    "        \n",
    "        # Standardiser les √©quipements\n",
    "        if 'equipment' in exercise:\n",
    "            exercise['equipment'] = [\n",
    "                eq.lower().replace(' ', '_') if eq not in ['bodyweight', 'cable', 'barbell', 'dumbbells'] \n",
    "                else eq for eq in exercise['equipment']\n",
    "            ]\n",
    "        \n",
    "        # Assurer que les objectifs correspondent √† ceux de l'interface\n",
    "        # Mapper les anciens objectifs vers les nouveaux si n√©cessaire\n",
    "        goal_mapping = {\n",
    "            'muscle_gain': 'hypertrophy',\n",
    "            'muscle gain': 'hypertrophy',\n",
    "            'mass': 'hypertrophy',\n",
    "            'power': 'strength',\n",
    "            'fat_loss': 'weight_loss',\n",
    "            'fat loss': 'weight_loss',\n",
    "            'conditioning': 'cardio',\n",
    "            'mobility': 'flexibility'\n",
    "        }\n",
    "        \n",
    "        if 'goals' in exercise:\n",
    "            exercise['goals'] = [goal_mapping.get(g.lower(), g.lower()) for g in exercise['goals']]\n",
    "    \n",
    "    # Sauvegarder\n",
    "    with open('exercises_fixed.json', 'w', encoding='utf-8') as f:\n",
    "        json.dump(exercises, f, ensure_ascii=False, indent=2)\n",
    "    \n",
    "    print(f\"Corrig√© {fixed_count} exercices\")\n",
    "    print(\"Fichier sauvegard√© dans exercises_fixed.json\")\n",
    "\n",
    "if __name__ == \"__main__\":\n",
    "    debug_database()\n",
    "    fix_exercises_json()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "7f7d2a59",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "üîß Script de correction des mappings fitness-app\n",
      "============================================================\n",
      "Cr√©ation de la sauvegarde dans C:\\Users\\Alex\\Python\\fitness-app_backup...\n",
      "‚úì Sauvegarde cr√©√©e\n",
      "\n",
      "Analyse des fichiers dans C:\\Users\\Alex\\Python\\fitness-app...\n",
      "‚úì Modifi√©: enrich_with_ollama_fixed.py (2 changements)\n",
      "‚úì Modifi√©: exercises.json (389 changements)\n",
      "‚úì Modifi√©: backend\\ml_engine.py (9 changements)\n",
      "‚úì Modifi√©: frontend\\app-config.js (12 changements)\n",
      "\n",
      "============================================================\n",
      "R√âSUM√â DES MODIFICATIONS\n",
      "============================================================\n",
      "Total de fichiers analys√©s: 34\n",
      "Fichiers modifi√©s: 4\n",
      "\n",
      "üìù D√©tail des modifications par fichier:\n",
      "\n",
      "enrich_with_ollama_fixed.py:\n",
      "  - Remplac√© '\"epaule\"' par '\"√©paule\"' (2 fois)\n",
      "\n",
      "exercises.json:\n",
      "  - Remplac√© '\"d√©to√Ødes\"' par '\"delto√Ødes\"' (1 fois)\n",
      "  - Remplac√© '\"genou\"' par '\"genou\"' (3 fois)\n",
      "  - Remplac√© '\"body_part\": \"Pectoraux\"' par '\"body_part\": \"chest\"' (21 fois)\n",
      "  - Remplac√© '\"body_part\": \"Trap√®zes\"' par '\"body_part\": \"back\"' (8 fois)\n",
      "  - Remplac√© '\"body_part\": \"Delto√Ødes\"' par '\"body_part\": \"shoulders\"' (14 fois)\n",
      "  - Remplac√© '\"body_part\": \"Biceps\"' par '\"body_part\": \"arms\"' (12 fois)\n",
      "  - Remplac√© '\"body_part\": \"Triceps\"' par '\"body_part\": \"arms\"' (10 fois)\n",
      "  - Remplac√© '\"body_part\": \"Avants-Bras\"' par '\"body_part\": \"arms\"' (6 fois)\n",
      "  - Remplac√© '\"body_part\": \"Abdominaux\"' par '\"body_part\": \"core\"' (31 fois)\n",
      "  - Remplac√© '\"body_part\": \"Quadriceps\"' par '\"body_part\": \"legs\"' (17 fois)\n",
      "  - Remplac√© '\"body_part\": \"Fessiers\"' par '\"body_part\": \"legs\"' (7 fois)\n",
      "  - Remplac√© '\"body_part\": \"Mollets\"' par '\"body_part\": \"legs\"' (6 fois)\n",
      "  - Remplac√© '\"pectoraux\"' par '\"chest\"' (21 fois)\n",
      "  - Remplac√© '\"trap√®zes\"' par '\"back\"' (8 fois)\n",
      "  - Remplac√© '\"delto√Ødes\"' par '\"shoulders\"' (14 fois)\n",
      "  - Remplac√© '\"biceps\"' par '\"arms\"' (12 fois)\n",
      "  - Remplac√© '\"triceps\"' par '\"arms\"' (10 fois)\n",
      "  - Remplac√© '\"avants-bras\"' par '\"arms\"' (6 fois)\n",
      "  - Remplac√© '\"abdominaux\"' par '\"core\"' (31 fois)\n",
      "  - Remplac√© '\"quadriceps\"' par '\"legs\"' (17 fois)\n",
      "  - Remplac√© '\"fessiers\"' par '\"legs\"' (7 fois)\n",
      "  - Remplac√© '\"mollets\"' par '\"legs\"' (6 fois)\n",
      "  - Remplac√© '\"√©paule\"' par '\"shoulder\"' (118 fois)\n",
      "  - Remplac√© '\"genou\"' par '\"knee\"' (3 fois)\n",
      "\n",
      "backend\\ml_engine.py:\n",
      "  - Remplac√© '\"Pectoraux/Triceps\": [\"Pectoraux\", \"Triceps\"]' par '\"Pectoraux/Triceps\": [\"chest\", \"arms\"]' (1 fois)\n",
      "  - Remplac√© '\"Jambes\": [\"Quadriceps\", \"Fessiers\"]' par '\"Jambes\": [\"legs\"]' (1 fois)\n",
      "  - Remplac√© '\"√âpaules/Abdos\": [\"Delto√Ødes\", \"Abdominaux\"]' par '\"√âpaules/Abdos\": [\"shoulders\", \"core\"]' (1 fois)\n",
      "  - Remplac√© '\"Haut du corps\": [\"Pectoraux\", \"Trap√®zes\", \"Delto√Ødes\"]' par '\"Haut du corps\": [\"chest\", \"back\", \"shoulders\"]' (1 fois)\n",
      "  - Remplac√© '\"Bas du corps\": [\"Quadriceps\", \"Fessiers\"]' par '\"Bas du corps\": [\"legs\"]' (1 fois)\n",
      "  - Remplac√© '\"Full body\": [\"Pectoraux\", \"Trap√®zes\", \"Quadriceps\", \"Delto√Ødes\"]' par '\"Full body\": [\"chest\", \"back\", \"legs\", \"shoulders\"]' (1 fois)\n",
      "  - Remplac√© '\"Bras\": [\"Biceps\", \"Triceps\", \"Avants-Bras\"]' par '\"Bras\": [\"arms\"]' (1 fois)\n",
      "  - Remplac√© 'if part in [\"Pectoraux\", \"Dos\", \"Quadriceps\"]:' par 'if part in [\"chest\", \"back\", \"legs\"]:' (1 fois)\n",
      "  - Supprim√© le bloc de mapping anglais->fran√ßais\n",
      "\n",
      "frontend\\app-config.js:\n",
      "  - Remplac√© ''Pectoraux': '#3b82f6'' par ''chest': '#3b82f6'' (1 fois)\n",
      "  - Remplac√© ''Biceps': '#8b5cf6'' par ''arms': '#8b5cf6'' (1 fois)\n",
      "  - Remplac√© ''Triceps': '#a855f7'' par ''arms': '#8b5cf6'' (1 fois)\n",
      "  - Remplac√© ''Delto√Ødes': '#ec4899'' par ''shoulders': '#ec4899'' (1 fois)\n",
      "  - Remplac√© ''Dos': '#ef4444'' par ''back': '#ef4444'' (1 fois)\n",
      "  - Remplac√© ''Abdominaux': '#f97316'' par ''core': '#f97316'' (1 fois)\n",
      "  - Remplac√© ''Quadriceps': '#eab308'' par ''legs': '#eab308'' (1 fois)\n",
      "  - Remplac√© ''Ischio-jambiers': '#84cc16'' par ''legs': '#eab308'' (1 fois)\n",
      "  - Remplac√© ''Mollets': '#22c55e'' par ''legs': '#eab308'' (1 fois)\n",
      "  - Remplac√© ''Fessiers': '#14b8a6'' par ''legs': '#eab308'' (1 fois)\n",
      "  - Remplac√© ''Trap√®zes': '#06b6d4'' par ''back': '#ef4444'' (1 fois)\n",
      "  - Remplac√© ''Avants-Bras': '#6366f1'' par ''arms': '#8b5cf6'' (1 fois)\n",
      "\n",
      "‚úÖ Corrections termin√©es!\n",
      "üíæ Sauvegarde disponible dans: C:\\Users\\Alex\\Python\\fitness-app_backup\n",
      "\n",
      "‚ö†Ô∏è  IMPORTANT:\n",
      "1. Testez l'application apr√®s ces modifications\n",
      "2. Si probl√®me, restaurez depuis la sauvegarde\n",
      "3. Commitez les changements si tout fonctionne\n"
     ]
    }
   ],
   "source": [
    "#!/usr/bin/env python3\n",
    "\"\"\"\n",
    "Script de correction automatique des mappings de muscles et √©quipements\n",
    "pour le projet fitness-app\n",
    "\"\"\"\n",
    "\n",
    "import os\n",
    "import re\n",
    "import json\n",
    "import shutil\n",
    "from datetime import datetime\n",
    "from pathlib import Path\n",
    "\n",
    "# Configuration\n",
    "PROJECT_ROOT = r\"C:\\Users\\Alex\\Python\\fitness-app\"\n",
    "BACKUP_DIR = r\"C:\\Users\\Alex\\Python\\fitness-app_backup\"\n",
    "FILE_EXTENSIONS = ['.py', '.js', '.html', '.css', '.json']\n",
    "\n",
    "# Dictionnaire des remplacements √† effectuer\n",
    "REPLACEMENTS = {\n",
    "    # === REMPLACEMENTS DANS TOUS LES FICHIERS ===\n",
    "    'all_files': {\n",
    "        # Correction des fautes d'orthographe dans exercises.json\n",
    "        '\"d√©velopp√©s\"': '\"delto√Ødes\"',\n",
    "        '\"d√©to√Ødes\"': '\"delto√Ødes\"', \n",
    "        '\"deltoides\"': '\"delto√Ødes\"',\n",
    "        \n",
    "        # Normalisation injury_risk_zones\n",
    "        '\"epaule\"': '\"√©paule\"',\n",
    "        '\"genou\"': '\"genou\"',\n",
    "    },\n",
    "    \n",
    "    # === REMPLACEMENTS SP√âCIFIQUES √Ä exercises.json ===\n",
    "    'exercises.json': {\n",
    "        # Conversion body_part en anglais\n",
    "        '\"body_part\": \"Pectoraux\"': '\"body_part\": \"chest\"',\n",
    "        '\"body_part\": \"Trap√®zes\"': '\"body_part\": \"back\"',\n",
    "        '\"body_part\": \"Delto√Ødes\"': '\"body_part\": \"shoulders\"',\n",
    "        '\"body_part\": \"Biceps\"': '\"body_part\": \"arms\"',\n",
    "        '\"body_part\": \"Triceps\"': '\"body_part\": \"arms\"',\n",
    "        '\"body_part\": \"Avants-Bras\"': '\"body_part\": \"arms\"',\n",
    "        '\"body_part\": \"Abdominaux\"': '\"body_part\": \"core\"',\n",
    "        '\"body_part\": \"Quadriceps\"': '\"body_part\": \"legs\"',\n",
    "        '\"body_part\": \"Fessiers\"': '\"body_part\": \"legs\"',\n",
    "        '\"body_part\": \"Ischio-jambiers\"': '\"body_part\": \"legs\"',\n",
    "        '\"body_part\": \"Mollets\"': '\"body_part\": \"legs\"',\n",
    "        \n",
    "        # Conversion muscle_groups en anglais\n",
    "        '\"pectoraux\"': '\"chest\"',\n",
    "        '\"trap√®zes\"': '\"back\"',\n",
    "        '\"delto√Ødes\"': '\"shoulders\"',\n",
    "        '\"biceps\"': '\"arms\"',\n",
    "        '\"triceps\"': '\"arms\"',\n",
    "        '\"avants-bras\"': '\"arms\"',\n",
    "        '\"abdominaux\"': '\"core\"',\n",
    "        '\"quadriceps\"': '\"legs\"',\n",
    "        '\"fessiers\"': '\"legs\"',\n",
    "        '\"ischio-jambiers\"': '\"legs\"',\n",
    "        '\"mollets\"': '\"legs\"',\n",
    "        \n",
    "        # Conversion injury_risk_zones en anglais\n",
    "        '\"√©paule\"': '\"shoulder\"',\n",
    "        '\"dos\"': '\"back\"',\n",
    "        '\"coude\"': '\"elbow\"',\n",
    "        '\"poignet\"': '\"wrist\"',\n",
    "        '\"genou\"': '\"knee\"',\n",
    "        '\"cheville\"': '\"ankle\"',\n",
    "        '\"hanche\"': '\"hip\"',\n",
    "    },\n",
    "    \n",
    "    # === REMPLACEMENTS DANS ml_engine.py ===\n",
    "    'ml_engine.py': {\n",
    "        # Mise √† jour du muscle_mapping\n",
    "        '\"Pectoraux/Triceps\": [\"Pectoraux\", \"Triceps\"]': '\"Pectoraux/Triceps\": [\"chest\", \"arms\"]',\n",
    "        '\"Dos/Biceps\": [\"Trap√®zes\", \"Biceps\"]': '\"Dos/Biceps\": [\"back\", \"arms\"]',\n",
    "        '\"Jambes\": [\"Quadriceps\", \"Fessiers\"]': '\"Jambes\": [\"legs\"]',\n",
    "        '\"√âpaules/Abdos\": [\"Delto√Ødes\", \"Abdominaux\"]': '\"√âpaules/Abdos\": [\"shoulders\", \"core\"]',\n",
    "        '\"Haut du corps\": [\"Pectoraux\", \"Trap√®zes\", \"Delto√Ødes\"]': '\"Haut du corps\": [\"chest\", \"back\", \"shoulders\"]',\n",
    "        '\"Bas du corps\": [\"Quadriceps\", \"Fessiers\"]': '\"Bas du corps\": [\"legs\"]',\n",
    "        '\"Full body\": [\"Pectoraux\", \"Trap√®zes\", \"Quadriceps\", \"Delto√Ødes\"]': '\"Full body\": [\"chest\", \"back\", \"legs\", \"shoulders\"]',\n",
    "        '\"Bras\": [\"Biceps\", \"Triceps\", \"Avants-Bras\"]': '\"Bras\": [\"arms\"]',\n",
    "        \n",
    "        # Simplification des conditions\n",
    "        'if part in [\"Pectoraux\", \"Dos\", \"Quadriceps\"]:': 'if part in [\"chest\", \"back\", \"legs\"]:',\n",
    "        'elif part in [\"Biceps\", \"Triceps\"]:': 'elif part in [\"arms\"]:',\n",
    "        'elif part in [\"Delto√Ødes\", \"Abdominaux\"]:': 'elif part in [\"shoulders\", \"core\"]:',\n",
    "    },\n",
    "    \n",
    "    # === REMPLACEMENTS DANS routes.py ===\n",
    "    'routes.py': {\n",
    "        # Les routes utilisent d√©j√† l'anglais, pas de changement n√©cessaire\n",
    "    },\n",
    "    \n",
    "    # === REMPLACEMENTS DANS frontend ===\n",
    "    'app-config.js': {\n",
    "        # Suppression ou mise √† jour de BODY_PART_COLORS\n",
    "        \"'Pectoraux': '#3b82f6'\": \"'chest': '#3b82f6'\",\n",
    "        \"'Biceps': '#8b5cf6'\": \"'arms': '#8b5cf6'\",\n",
    "        \"'Triceps': '#a855f7'\": \"'arms': '#8b5cf6'\",\n",
    "        \"'Delto√Ødes': '#ec4899'\": \"'shoulders': '#ec4899'\",\n",
    "        \"'Dos': '#ef4444'\": \"'back': '#ef4444'\",\n",
    "        \"'Abdominaux': '#f97316'\": \"'core': '#f97316'\",\n",
    "        \"'Quadriceps': '#eab308'\": \"'legs': '#eab308'\",\n",
    "        \"'Ischio-jambiers': '#84cc16'\": \"'legs': '#eab308'\",\n",
    "        \"'Mollets': '#22c55e'\": \"'legs': '#eab308'\",\n",
    "        \"'Fessiers': '#14b8a6'\": \"'legs': '#eab308'\",\n",
    "        \"'Trap√®zes': '#06b6d4'\": \"'back': '#ef4444'\",\n",
    "        \"'Avants-Bras': '#6366f1'\": \"'arms': '#8b5cf6'\",\n",
    "    }\n",
    "}\n",
    "\n",
    "def create_backup():\n",
    "    \"\"\"Cr√©er une sauvegarde du projet avant modification\"\"\"\n",
    "    print(f\"Cr√©ation de la sauvegarde dans {BACKUP_DIR}...\")\n",
    "    if os.path.exists(BACKUP_DIR):\n",
    "        backup_with_timestamp = f\"{BACKUP_DIR}_{datetime.now().strftime('%Y%m%d_%H%M%S')}\"\n",
    "        shutil.move(BACKUP_DIR, backup_with_timestamp)\n",
    "    shutil.copytree(PROJECT_ROOT, BACKUP_DIR)\n",
    "    print(\"‚úì Sauvegarde cr√©√©e\")\n",
    "\n",
    "def should_process_file(filepath):\n",
    "    \"\"\"V√©rifier si le fichier doit √™tre trait√©\"\"\"\n",
    "    # Ignorer les dossiers sp√©ciaux\n",
    "    ignore_dirs = ['node_modules', '__pycache__', '.git', 'venv', 'env', '.idea', 'backup']\n",
    "    path_parts = Path(filepath).parts\n",
    "    \n",
    "    for ignore_dir in ignore_dirs:\n",
    "        if ignore_dir in path_parts:\n",
    "            return False\n",
    "    \n",
    "    # V√©rifier l'extension\n",
    "    return any(filepath.endswith(ext) for ext in FILE_EXTENSIONS)\n",
    "\n",
    "def apply_replacements(content, filepath, replacements_made):\n",
    "    \"\"\"Appliquer les remplacements sur le contenu\"\"\"\n",
    "    filename = os.path.basename(filepath)\n",
    "    changes_count = 0\n",
    "    \n",
    "    # Remplacements globaux\n",
    "    for old, new in REPLACEMENTS.get('all_files', {}).items():\n",
    "        if old in content:\n",
    "            count = content.count(old)\n",
    "            content = content.replace(old, new)\n",
    "            changes_count += count\n",
    "            replacements_made.append(f\"  - Remplac√© '{old}' par '{new}' ({count} fois)\")\n",
    "    \n",
    "    # Remplacements sp√©cifiques au fichier\n",
    "    if filename in REPLACEMENTS:\n",
    "        for old, new in REPLACEMENTS[filename].items():\n",
    "            if old in content:\n",
    "                count = content.count(old)\n",
    "                content = content.replace(old, new)\n",
    "                changes_count += count\n",
    "                replacements_made.append(f\"  - Remplac√© '{old}' par '{new}' ({count} fois)\")\n",
    "    \n",
    "    # Cas sp√©cial pour ml_engine.py - supprimer le mapping inutile\n",
    "    if filename == 'ml_engine.py' and '# Mapping anglais -> fran√ßais pour les muscles' in content:\n",
    "        # Trouver et supprimer tout le bloc de mapping\n",
    "        pattern = r'# Mapping anglais -> fran√ßais.*?muscle_exercises = \\[.*?\\]'\n",
    "        match = re.search(pattern, content, re.DOTALL)\n",
    "        if match:\n",
    "            # Remplacer par une version simplifi√©e\n",
    "            simplified = '''# Plus besoin de mapping, tout est en anglais maintenant\n",
    "        muscle_exercises = [e for e in all_exercises if e.body_part in muscles]'''\n",
    "            content = content[:match.start()] + simplified + content[match.end():]\n",
    "            changes_count += 1\n",
    "            replacements_made.append(\"  - Supprim√© le bloc de mapping anglais->fran√ßais\")\n",
    "    \n",
    "    return content, changes_count\n",
    "\n",
    "def process_files():\n",
    "    \"\"\"Parcourir et traiter tous les fichiers\"\"\"\n",
    "    total_files = 0\n",
    "    modified_files = 0\n",
    "    all_replacements = {}\n",
    "    \n",
    "    print(f\"\\nAnalyse des fichiers dans {PROJECT_ROOT}...\")\n",
    "    \n",
    "    for root, dirs, files in os.walk(PROJECT_ROOT):\n",
    "        # Filtrer les dossiers √† ignorer\n",
    "        dirs[:] = [d for d in dirs if d not in ['node_modules', '__pycache__', '.git', 'venv', 'env', '.idea']]\n",
    "        \n",
    "        for file in files:\n",
    "            filepath = os.path.join(root, file)\n",
    "            \n",
    "            if should_process_file(filepath):\n",
    "                total_files += 1\n",
    "                \n",
    "                try:\n",
    "                    # Lire le fichier\n",
    "                    with open(filepath, 'r', encoding='utf-8') as f:\n",
    "                        original_content = f.read()\n",
    "                    \n",
    "                    # Appliquer les remplacements\n",
    "                    replacements_made = []\n",
    "                    new_content, changes = apply_replacements(original_content, filepath, replacements_made)\n",
    "                    \n",
    "                    # √âcrire si modifi√©\n",
    "                    if changes > 0:\n",
    "                        with open(filepath, 'w', encoding='utf-8') as f:\n",
    "                            f.write(new_content)\n",
    "                        \n",
    "                        modified_files += 1\n",
    "                        relative_path = os.path.relpath(filepath, PROJECT_ROOT)\n",
    "                        all_replacements[relative_path] = replacements_made\n",
    "                        print(f\"‚úì Modifi√©: {relative_path} ({changes} changements)\")\n",
    "                \n",
    "                except Exception as e:\n",
    "                    print(f\"‚úó Erreur avec {filepath}: {str(e)}\")\n",
    "    \n",
    "    return total_files, modified_files, all_replacements\n",
    "\n",
    "def print_summary(total_files, modified_files, all_replacements):\n",
    "    \"\"\"Afficher le r√©sum√© des modifications\"\"\"\n",
    "    print(\"\\n\" + \"=\"*60)\n",
    "    print(\"R√âSUM√â DES MODIFICATIONS\")\n",
    "    print(\"=\"*60)\n",
    "    print(f\"Total de fichiers analys√©s: {total_files}\")\n",
    "    print(f\"Fichiers modifi√©s: {modified_files}\")\n",
    "    \n",
    "    if all_replacements:\n",
    "        print(\"\\nüìù D√©tail des modifications par fichier:\")\n",
    "        for filepath, replacements in all_replacements.items():\n",
    "            print(f\"\\n{filepath}:\")\n",
    "            for replacement in replacements:\n",
    "                print(replacement)\n",
    "    \n",
    "    print(\"\\n‚úÖ Corrections termin√©es!\")\n",
    "    print(f\"üíæ Sauvegarde disponible dans: {BACKUP_DIR}\")\n",
    "\n",
    "def main():\n",
    "    \"\"\"Fonction principale\"\"\"\n",
    "    print(\"üîß Script de correction des mappings fitness-app\")\n",
    "    print(\"=\"*60)\n",
    "    \n",
    "    # V√©rifier que le dossier existe\n",
    "    if not os.path.exists(PROJECT_ROOT):\n",
    "        print(f\"‚ùå Erreur: Le dossier {PROJECT_ROOT} n'existe pas!\")\n",
    "        return\n",
    "    \n",
    "    # Cr√©er une sauvegarde\n",
    "    create_backup()\n",
    "    \n",
    "    # Traiter les fichiers\n",
    "    total, modified, replacements = process_files()\n",
    "    \n",
    "    # Afficher le r√©sum√©\n",
    "    print_summary(total, modified, replacements)\n",
    "    \n",
    "    # Rappel important\n",
    "    print(\"\\n‚ö†Ô∏è  IMPORTANT:\")\n",
    "    print(\"1. Testez l'application apr√®s ces modifications\")\n",
    "    print(\"2. Si probl√®me, restaurez depuis la sauvegarde\")\n",
    "    print(\"3. Commitez les changements si tout fonctionne\")\n",
    "\n",
    "if __name__ == \"__main__\":\n",
    "    main()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "0863d62a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "üîß Correction des cas sp√©ciaux...\n",
      "‚úÖ app-api.js\n",
      "‚úÖ app-dashboard.js\n",
      "‚úÖ app-program-generator.js\n",
      "‚úÖ app-stats.js\n",
      "‚úÖ schemas.py\n",
      "\n",
      "‚úÖ 5 fichiers corrig√©s\n",
      "\n",
      "üîç V√©rification finale...\n",
      "‚úÖ Aucun terme anglais restant d√©tect√©!\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "import re\n",
    "from pathlib import Path\n",
    "\n",
    "PROJECT_PATH = r\"C:\\Users\\Alex\\Python\\fitness-app\"\n",
    "\n",
    "# Mappings pour les cl√©s d'objets JS et attributs HTML\n",
    "OBJECT_KEYS_MAPPING = {\n",
    "    # Cl√©s d'objets JavaScript sans quotes\n",
    "    'chest:': 'Pectoraux:',\n",
    "    'back:': 'Dos:',\n",
    "    'shoulders:': 'Delto√Ødes:',\n",
    "    'legs:': 'Jambes:',\n",
    "    'arms:': 'Bras:',\n",
    "    'core:': 'Abdominaux:',\n",
    "    \n",
    "    # Attributs HTML name\n",
    "    'name=\"chest_priority\"': 'name=\"Pectoraux_priority\"',\n",
    "    'name=\"back_priority\"': 'name=\"Dos_priority\"',\n",
    "    'name=\"shoulders_priority\"': 'name=\"Delto√Ødes_priority\"',\n",
    "    'name=\"legs_priority\"': 'name=\"Jambes_priority\"',\n",
    "    'name=\"arms_priority\"': 'name=\"Bras_priority\"',\n",
    "    'name=\"core_priority\"': 'name=\"Abdominaux_priority\"',\n",
    "    \n",
    "    # Cas avec single quotes aussi\n",
    "    \"name='chest_priority'\": \"name='Pectoraux_priority'\",\n",
    "    \"name='back_priority'\": \"name='Dos_priority'\",\n",
    "    \"name='shoulders_priority'\": \"name='Delto√Ødes_priority'\",\n",
    "    \"name='legs_priority'\": \"name='Jambes_priority'\",\n",
    "    \"name='arms_priority'\": \"name='Bras_priority'\",\n",
    "    \"name='core_priority'\": \"name='Abdominaux_priority'\",\n",
    "}\n",
    "\n",
    "# Pour les objets JavaScript, on doit aussi g√©rer les acc√®s par cl√©\n",
    "OBJECT_ACCESS_MAPPING = {\n",
    "    # Acc√®s aux propri√©t√©s d'objets\n",
    "    '.chest': '.Pectoraux',\n",
    "    '.back': '.Dos',\n",
    "    '.shoulders': '.Delto√Ødes',\n",
    "    '.legs': '.Jambes',\n",
    "    '.arms': '.Bras',\n",
    "    '.core': '.Abdominaux',\n",
    "    \n",
    "    # Acc√®s par bracket notation\n",
    "    \"['chest']\": \"['Pectoraux']\",\n",
    "    \"['back']\": \"['Dos']\",\n",
    "    \"['shoulders']\": \"['Delto√Ødes']\",\n",
    "    \"['legs']\": \"['Jambes']\",\n",
    "    \"['arms']\": \"['Bras']\",\n",
    "    \"['core']\": \"['Abdominaux']\",\n",
    "    \n",
    "    '[\"chest\"]': '[\"Pectoraux\"]',\n",
    "    '[\"back\"]': '[\"Dos\"]',\n",
    "    '[\"shoulders\"]': '[\"Delto√Ødes\"]',\n",
    "    '[\"legs\"]': '[\"Jambes\"]',\n",
    "    '[\"arms\"]': '[\"Bras\"]',\n",
    "    '[\"core\"]': '[\"Abdominaux\"]',\n",
    "}\n",
    "\n",
    "def fix_javascript_objects(content):\n",
    "    \"\"\"Corrige les cl√©s d'objets JavaScript avec regex\"\"\"\n",
    "    # Pattern pour trouver les cl√©s d'objets (word: suivi d'un espace ou quote)\n",
    "    patterns = [\n",
    "        (r'\\bchest\\s*:', 'Pectoraux:'),\n",
    "        (r'\\bback\\s*:', 'Dos:'),\n",
    "        (r'\\bshoulders\\s*:', 'Delto√Ødes:'),\n",
    "        (r'\\blegs\\s*:', 'Jambes:'),\n",
    "        (r'\\barms\\s*:', 'Bras:'),\n",
    "        (r'\\bcore\\s*:', 'Abdominaux:'),\n",
    "    ]\n",
    "    \n",
    "    for pattern, replacement in patterns:\n",
    "        content = re.sub(pattern, replacement, content)\n",
    "    \n",
    "    return content\n",
    "\n",
    "def fix_form_names(content):\n",
    "    \"\"\"Corrige les noms de formulaires dans le HTML\"\"\"\n",
    "    # Pour les select avec muscle_priority\n",
    "    patterns = [\n",
    "        (r'name\\s*=\\s*[\"\\']chest_priority[\"\\']', 'name=\"Pectoraux_priority\"'),\n",
    "        (r'name\\s*=\\s*[\"\\']back_priority[\"\\']', 'name=\"Dos_priority\"'),\n",
    "        (r'name\\s*=\\s*[\"\\']shoulders_priority[\"\\']', 'name=\"Delto√Ødes_priority\"'),\n",
    "        (r'name\\s*=\\s*[\"\\']legs_priority[\"\\']', 'name=\"Jambes_priority\"'),\n",
    "        (r'name\\s*=\\s*[\"\\']arms_priority[\"\\']', 'name=\"Bras_priority\"'),\n",
    "        (r'name\\s*=\\s*[\"\\']core_priority[\"\\']', 'name=\"Abdominaux_priority\"'),\n",
    "    ]\n",
    "    \n",
    "    for pattern, replacement in patterns:\n",
    "        content = re.sub(pattern, replacement, content)\n",
    "    \n",
    "    return content\n",
    "\n",
    "def process_file(filepath):\n",
    "    \"\"\"Traite un fichier\"\"\"\n",
    "    try:\n",
    "        with open(filepath, 'r', encoding='utf-8') as f:\n",
    "            content = f.read()\n",
    "        \n",
    "        original_content = content\n",
    "        \n",
    "        # Appliquer tous les mappings simples\n",
    "        all_mappings = {}\n",
    "        all_mappings.update(OBJECT_KEYS_MAPPING)\n",
    "        all_mappings.update(OBJECT_ACCESS_MAPPING)\n",
    "        \n",
    "        for old, new in all_mappings.items():\n",
    "            content = content.replace(old, new)\n",
    "        \n",
    "        # Appliquer les corrections regex pour JS et HTML\n",
    "        if filepath.suffix in ['.js', '.html']:\n",
    "            content = fix_javascript_objects(content)\n",
    "            content = fix_form_names(content)\n",
    "        \n",
    "        # Sauvegarder si modifi√©\n",
    "        if content != original_content:\n",
    "            with open(filepath, 'w', encoding='utf-8') as f:\n",
    "                f.write(content)\n",
    "            return True\n",
    "        return False\n",
    "        \n",
    "    except Exception as e:\n",
    "        print(f\"‚ùå Erreur dans {filepath}: {e}\")\n",
    "        return False\n",
    "\n",
    "def main():\n",
    "    \"\"\"Fonction principale\"\"\"\n",
    "    project_dir = Path(PROJECT_PATH)\n",
    "    \n",
    "    # Extensions √† traiter\n",
    "    extensions = ['.js', '.html', '.py']\n",
    "    \n",
    "    # Dossiers √† ignorer\n",
    "    ignore_dirs = {'node_modules', '__pycache__', '.git', 'venv', 'env'}\n",
    "    \n",
    "    files_modified = 0\n",
    "    \n",
    "    print(\"üîß Correction des cas sp√©ciaux...\")\n",
    "    \n",
    "    # Parcourir tous les fichiers\n",
    "    for ext in extensions:\n",
    "        for filepath in project_dir.rglob(f'*{ext}'):\n",
    "            # Ignorer certains dossiers\n",
    "            if any(ignored in filepath.parts for ignored in ignore_dirs):\n",
    "                continue\n",
    "            \n",
    "            if process_file(filepath):\n",
    "                print(f\"‚úÖ {filepath.name}\")\n",
    "                files_modified += 1\n",
    "    \n",
    "    print(f\"\\n‚úÖ {files_modified} fichiers corrig√©s\")\n",
    "    \n",
    "    # Afficher les fichiers qui pourraient encore contenir des r√©f√©rences\n",
    "    print(\"\\nüîç V√©rification finale...\")\n",
    "    check_remaining_english_terms(project_dir)\n",
    "\n",
    "def check_remaining_english_terms(project_dir):\n",
    "    \"\"\"V√©rifie s'il reste des termes anglais\"\"\"\n",
    "    terms_to_check = ['chest', 'back', 'shoulders', 'legs', 'arms', 'core']\n",
    "    extensions = ['.js', '.html', '.py']\n",
    "    ignore_dirs = {'node_modules', '__pycache__', '.git', 'venv', 'env'}\n",
    "    \n",
    "    files_with_issues = []\n",
    "    \n",
    "    for ext in extensions:\n",
    "        for filepath in project_dir.rglob(f'*{ext}'):\n",
    "            if any(ignored in filepath.parts for ignored in ignore_dirs):\n",
    "                continue\n",
    "            \n",
    "            try:\n",
    "                with open(filepath, 'r', encoding='utf-8') as f:\n",
    "                    content = f.read()\n",
    "                \n",
    "                # Ignorer les commentaires et les cha√Ænes de traduction\n",
    "                lines = content.split('\\n')\n",
    "                for i, line in enumerate(lines):\n",
    "                    # Ignorer les commentaires\n",
    "                    if '//' in line or '#' in line or '/*' in line:\n",
    "                        continue\n",
    "                    \n",
    "                    # Chercher les termes\n",
    "                    for term in terms_to_check:\n",
    "                        # Patterns √† v√©rifier\n",
    "                        patterns = [\n",
    "                            f'{term}:',  # Cl√© d'objet\n",
    "                            f'{term}_priority',  # Attribut\n",
    "                            f'.{term}',  # Acc√®s propri√©t√©\n",
    "                            f\"['{term}']\",  # Acc√®s bracket\n",
    "                            f'\"{term}\"',  # String\n",
    "                        ]\n",
    "                        \n",
    "                        for pattern in patterns:\n",
    "                            if pattern in line.lower():\n",
    "                                files_with_issues.append((filepath.name, i+1, line.strip()))\n",
    "                                break\n",
    "                                \n",
    "            except:\n",
    "                pass\n",
    "    \n",
    "    if files_with_issues:\n",
    "        print(\"\\n‚ö†Ô∏è  Termes anglais potentiellement restants:\")\n",
    "        for filename, line_num, line in files_with_issues[:10]:  # Limiter √† 10\n",
    "            print(f\"  {filename}:{line_num} - {line[:80]}...\")\n",
    "    else:\n",
    "        print(\"‚úÖ Aucun terme anglais restant d√©tect√©!\")\n",
    "\n",
    "# Ex√©cuter\n",
    "main()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "cfae5970",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "üöÄ D√©but de la francisation compl√®te...\n",
      "üìÅ Dossier projet: C:\\Users\\Alex\\Python\\fitness-app\n",
      "\n",
      "üìù Mise √† jour de exercises.json...\n",
      "‚úÖ exercises.json: 132 exercices trait√©s, 241 modifications\n",
      "\n",
      "üìù Mise √† jour des fichiers source...\n",
      "‚úÖ enrich_with_ollama_fixed.py: 3 remplacements\n",
      "‚úÖ main.py: 17 remplacements\n",
      "‚úÖ ml_engine.py: 29 remplacements\n",
      "‚úÖ models.py: 4 remplacements\n",
      "‚úÖ routes.py: 6 remplacements\n",
      "‚úÖ app-config.js: 17 remplacements\n",
      "‚úÖ app-dashboard.js: 6 remplacements\n",
      "‚úÖ app-equipment.js: 8 remplacements\n",
      "‚úÖ app-onboarding.js: 4 remplacements\n",
      "‚úÖ app-program-generator.js: 6 remplacements\n",
      "‚úÖ app-rest.js: 1 remplacements\n",
      "‚úÖ app-sets.js: 3 remplacements\n",
      "‚úÖ index.html: 12 remplacements\n",
      "\n",
      "üìä R√©sum√©: 13/31 fichiers modifi√©s\n",
      "\n",
      "‚úÖ Francisation termin√©e!\n",
      "\n",
      "‚ö†Ô∏è  Prochaines √©tapes:\n",
      "1. V√©rifier les modifications avec 'git diff'\n",
      "2. Tester l'application localement\n",
      "3. Recr√©er la base de donn√©es sur Render\n",
      "4. Commiter les changements\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "import json\n",
    "import re\n",
    "from pathlib import Path\n",
    "\n",
    "# Chemin du projet\n",
    "PROJECT_PATH = r\"C:\\Users\\Alex\\Python\\fitness-app\"\n",
    "\n",
    "# ========== DICTIONNAIRES DE TRADUCTION ==========\n",
    "\n",
    "# Parties du corps (body_parts)\n",
    "BODY_PARTS_MAPPING = {\n",
    "    # Termes anglais vers fran√ßais\n",
    "    '\"chest\"': '\"Pectoraux\"',\n",
    "    \"'chest'\": \"'Pectoraux'\",\n",
    "    '\"back\"': '\"Dos\"',\n",
    "    \"'back'\": \"'Dos'\",\n",
    "    '\"shoulders\"': '\"Delto√Ødes\"',\n",
    "    \"'shoulders'\": \"'Delto√Ødes'\",\n",
    "    '\"arms\"': '\"Bras\"',\n",
    "    \"'arms'\": \"'Bras'\",\n",
    "    '\"legs\"': '\"Jambes\"',\n",
    "    \"'legs'\": \"'Jambes'\",\n",
    "    '\"core\"': '\"Abdominaux\"',\n",
    "    \"'core'\": \"'Abdominaux'\",\n",
    "    \n",
    "    # Cas sp√©cifiques dans le code\n",
    "    'body_part == \"chest\"': 'body_part == \"Pectoraux\"',\n",
    "    'body_part == \"back\"': 'body_part == \"Dos\"',\n",
    "    'body_part == \"shoulders\"': 'body_part == \"Delto√Ødes\"',\n",
    "    'body_part == \"arms\"': 'body_part == \"Bras\"',\n",
    "    'body_part == \"legs\"': 'body_part == \"Jambes\"',\n",
    "    'body_part == \"core\"': 'body_part == \"Abdominaux\"',\n",
    "    \n",
    "    # Dans les listes et mappings\n",
    "    '[\"chest\"': '[\"Pectoraux\"',\n",
    "    '[\"back\"': '[\"Dos\"',\n",
    "    '[\"shoulders\"': '[\"Delto√Ødes\"',\n",
    "    '[\"arms\"': '[\"Bras\"',\n",
    "    '[\"legs\"': '[\"Jambes\"',\n",
    "    '[\"core\"': '[\"Abdominaux\"',\n",
    "}\n",
    "\n",
    "# √âquipements\n",
    "EQUIPMENT_MAPPING = {\n",
    "    # Barres\n",
    "    '\"barbell_standard\"': '\"barre_olympique\"',\n",
    "    \"'barbell_standard'\": \"'barre_olympique'\",\n",
    "    '\"barbell_ez\"': '\"barre_ez\"',\n",
    "    \"'barbell_ez'\": \"'barre_ez'\",\n",
    "    '\"barbell_short\"': '\"barre_courte\"',\n",
    "    \"'barbell_short'\": \"'barre_courte'\",\n",
    "    \n",
    "    # Halt√®res\n",
    "    '\"dumbbells\"': '\"halteres\"',\n",
    "    \"'dumbbells'\": \"'halteres'\",\n",
    "    \n",
    "    # Bancs\n",
    "    '\"bench_plat\"': '\"banc_plat\"',\n",
    "    \"'bench_plat'\": \"'banc_plat'\",\n",
    "    '\"bench_incline\"': '\"banc_inclinable\"',\n",
    "    \"'bench_incline'\": \"'banc_inclinable'\",\n",
    "    '\"bench_decline\"': '\"banc_declinable\"',\n",
    "    \"'bench_decline'\": \"'banc_declinable'\",\n",
    "    \n",
    "    # Machines\n",
    "    '\"machine_convergente\"': '\"machine_convergente\"',\n",
    "    '\"machine_pectoraux\"': '\"machine_pectoraux\"',\n",
    "    '\"machine_√©paules\"': '\"machine_epaules\"',\n",
    "    '\"machine_rotation\"': '\"machine_rotation\"',\n",
    "    '\"machine_mollets_debout\"': '\"machine_mollets_debout\"',\n",
    "    \n",
    "    # Autres\n",
    "    '\"bodyweight\"': '\"poids_du_corps\"',\n",
    "    \"'bodyweight'\": \"'poids_du_corps'\",\n",
    "    '\"pull_up_bar\"': '\"barre_traction\"',\n",
    "    \"'pull_up_bar'\": \"'barre_traction'\",\n",
    "    '\"cables\"': '\"poulies\"',\n",
    "    \"'cables'\": \"'poulies'\",\n",
    "    '\"resistance_bands\"': '\"elastiques\"',\n",
    "    \"'resistance_bands'\": \"'elastiques'\",\n",
    "    '\"kettlebell\"': '\"kettlebell\"',\n",
    "    \"'kettlebell'\": \"'kettlebell'\",\n",
    "    '\"tapis\"': '\"tapis\"',\n",
    "    '\"roue_abdos\"': '\"roue_abdos\"',\n",
    "    \n",
    "    # Cas sp√©ciaux pour le code\n",
    "    'equipment == \"barbell_standard\"': 'equipment == \"barre_olympique\"',\n",
    "    'equipment == \"dumbbells\"': 'equipment == \"halteres\"',\n",
    "    'equipment == \"bodyweight\"': 'equipment == \"poids_du_corps\"',\n",
    "}\n",
    "\n",
    "# Niveaux d'exercices\n",
    "LEVELS_MAPPING = {\n",
    "    '\"basic\"': '\"basique\"',\n",
    "    \"'basic'\": \"'basique'\",\n",
    "    '\"advanced\"': '\"avanc√©\"',\n",
    "    \"'advanced'\": \"'avanc√©'\",\n",
    "    '\"isolation\"': '\"isolation\"',\n",
    "    \"'isolation'\": \"'isolation'\",\n",
    "    '\"finition\"': '\"finition\"',\n",
    "    \"'finition'\": \"'finition'\",\n",
    "    \n",
    "    # Dans les conditions\n",
    "    'level == \"basic\"': 'level == \"basique\"',\n",
    "    'level == \"advanced\"': 'level == \"avanc√©\"',\n",
    "    'level in [\"basic\"': 'level in [\"basique\"',\n",
    "    'level in [\"advanced\"': 'level in [\"avanc√©\"',\n",
    "}\n",
    "\n",
    "# Niveaux d'exp√©rience utilisateur\n",
    "EXPERIENCE_MAPPING = {\n",
    "    '\"beginner\"': '\"d√©butant\"',\n",
    "    \"'beginner'\": \"'d√©butant'\",\n",
    "    '\"intermediate\"': '\"interm√©diaire\"',\n",
    "    \"'intermediate'\": \"'interm√©diaire'\",\n",
    "    '\"advanced\"': '\"avanc√©\"',\n",
    "    \"'advanced'\": \"'avanc√©'\",\n",
    "    '\"elite\"': '\"√©lite\"',\n",
    "    \"'elite'\": \"'√©lite'\",\n",
    "    '\"extreme\"': '\"extr√™me\"',\n",
    "    \"'extreme'\": \"'extr√™me'\",\n",
    "}\n",
    "\n",
    "# Objectifs (goals)\n",
    "GOALS_MAPPING = {\n",
    "    '\"strength\"': '\"force\"',\n",
    "    \"'strength'\": \"'force'\",\n",
    "    '\"hypertrophy\"': '\"hypertrophie\"',\n",
    "    \"'hypertrophy'\": \"'hypertrophie'\",\n",
    "    '\"endurance\"': '\"endurance\"',\n",
    "    \"'endurance'\": \"'endurance'\",\n",
    "    '\"weight_loss\"': '\"perte_de_poids\"',\n",
    "    \"'weight_loss'\": \"'perte_de_poids'\",\n",
    "    '\"general_fitness\"': '\"forme_generale\"',\n",
    "    \"'general_fitness'\": \"'forme_generale'\",\n",
    "}\n",
    "\n",
    "# Couleurs dans app-config.js\n",
    "COLORS_CONFIG_MAPPING = {\n",
    "    # Remplacer les cl√©s anglaises par fran√ßaises\n",
    "    \"'chest':\": \"'Pectoraux':\",\n",
    "    \"'back':\": \"'Dos':\",\n",
    "    \"'shoulders':\": \"'Delto√Ødes':\",\n",
    "    \"'arms':\": \"'Bras':\",\n",
    "    \"'legs':\": \"'Jambes':\",\n",
    "    \"'core':\": \"'Abdominaux':\",\n",
    "}\n",
    "\n",
    "# ========== FONCTIONS ==========\n",
    "\n",
    "def replace_in_file(filepath, mappings):\n",
    "    \"\"\"Remplace les termes dans un fichier\"\"\"\n",
    "    try:\n",
    "        with open(filepath, 'r', encoding='utf-8') as f:\n",
    "            content = f.read()\n",
    "        \n",
    "        original_content = content\n",
    "        replacements = 0\n",
    "        \n",
    "        for old, new in mappings.items():\n",
    "            if old in content:\n",
    "                content = content.replace(old, new)\n",
    "                replacements += 1\n",
    "        \n",
    "        if replacements > 0:\n",
    "            with open(filepath, 'w', encoding='utf-8') as f:\n",
    "                f.write(content)\n",
    "            print(f\"‚úÖ {filepath.name}: {replacements} remplacements\")\n",
    "            return True\n",
    "        return False\n",
    "    except Exception as e:\n",
    "        print(f\"‚ùå Erreur dans {filepath}: {e}\")\n",
    "        return False\n",
    "\n",
    "def update_exercises_json():\n",
    "    \"\"\"Met √† jour sp√©cifiquement exercises.json\"\"\"\n",
    "    json_path = Path(PROJECT_PATH) / \"exercises.json\"\n",
    "    \n",
    "    try:\n",
    "        with open(json_path, 'r', encoding='utf-8') as f:\n",
    "            exercises = json.load(f)\n",
    "        \n",
    "        modifications = 0\n",
    "        \n",
    "        for exercise in exercises:\n",
    "            # Body parts\n",
    "            if exercise.get('body_part') in ['chest', 'back', 'shoulders', 'arms', 'legs', 'core']:\n",
    "                old_bp = exercise['body_part']\n",
    "                new_bp = {\n",
    "                    'chest': 'Pectoraux',\n",
    "                    'back': 'Dos',\n",
    "                    'shoulders': 'Delto√Ødes',\n",
    "                    'arms': 'Bras',\n",
    "                    'legs': 'Jambes',\n",
    "                    'core': 'Abdominaux'\n",
    "                }[old_bp]\n",
    "                exercise['body_part'] = new_bp\n",
    "                modifications += 1\n",
    "            \n",
    "            # Equipment\n",
    "            if 'equipment' in exercise:\n",
    "                new_equipment = []\n",
    "                equipment_map = {\n",
    "                    'barbell_standard': 'barre_olympique',\n",
    "                    'barbell_ez': 'barre_ez',\n",
    "                    'barbell_short': 'barre_courte',\n",
    "                    'dumbbells': 'halteres',\n",
    "                    'bench_plat': 'banc_plat',\n",
    "                    'bench_incline': 'banc_inclinable',\n",
    "                    'bench_decline': 'banc_declinable',\n",
    "                    'bodyweight': 'poids_du_corps',\n",
    "                    'pull_up_bar': 'barre_traction',\n",
    "                    'cables': 'poulies',\n",
    "                    'resistance_bands': 'elastiques',\n",
    "                    'kettlebell': 'kettlebell'\n",
    "                }\n",
    "                for eq in exercise['equipment']:\n",
    "                    new_equipment.append(equipment_map.get(eq, eq))\n",
    "                exercise['equipment'] = new_equipment\n",
    "            \n",
    "            # Level\n",
    "            if exercise.get('level') in ['basic', 'advanced']:\n",
    "                exercise['level'] = {\n",
    "                    'basic': 'basique',\n",
    "                    'advanced': 'avanc√©'\n",
    "                }.get(exercise['level'], exercise['level'])\n",
    "                modifications += 1\n",
    "            \n",
    "            # Muscle groups\n",
    "            if 'muscle_groups' in exercise:\n",
    "                for group_type in ['primary', 'secondary', 'stabilizers']:\n",
    "                    if group_type in exercise['muscle_groups']:\n",
    "                        new_muscles = []\n",
    "                        for muscle in exercise['muscle_groups'][group_type]:\n",
    "                            new_muscle = {\n",
    "                                'chest': 'Pectoraux',\n",
    "                                'back': 'Dos',\n",
    "                                'shoulders': 'Delto√Ødes',\n",
    "                                'arms': 'Bras',\n",
    "                                'legs': 'Jambes',\n",
    "                                'core': 'Abdominaux'\n",
    "                            }.get(muscle, muscle)\n",
    "                            new_muscles.append(new_muscle)\n",
    "                        exercise['muscle_groups'][group_type] = new_muscles\n",
    "        \n",
    "        with open(json_path, 'w', encoding='utf-8') as f:\n",
    "            json.dump(exercises, f, ensure_ascii=False, indent=2)\n",
    "        \n",
    "        print(f\"‚úÖ exercises.json: {len(exercises)} exercices trait√©s, {modifications} modifications\")\n",
    "        \n",
    "    except Exception as e:\n",
    "        print(f\"‚ùå Erreur exercises.json: {e}\")\n",
    "\n",
    "def process_all_files():\n",
    "    \"\"\"Traite tous les fichiers du projet\"\"\"\n",
    "    project_dir = Path(PROJECT_PATH)\n",
    "    \n",
    "    # Combiner tous les mappings\n",
    "    all_mappings = {}\n",
    "    all_mappings.update(BODY_PARTS_MAPPING)\n",
    "    all_mappings.update(EQUIPMENT_MAPPING)\n",
    "    all_mappings.update(LEVELS_MAPPING)\n",
    "    all_mappings.update(EXPERIENCE_MAPPING)\n",
    "    all_mappings.update(GOALS_MAPPING)\n",
    "    all_mappings.update(COLORS_CONFIG_MAPPING)\n",
    "    \n",
    "    # Extensions √† traiter\n",
    "    extensions = ['.py', '.js', '.html', '.css']\n",
    "    \n",
    "    # Dossiers √† ignorer\n",
    "    ignore_dirs = {'node_modules', '__pycache__', '.git', 'venv', 'env'}\n",
    "    \n",
    "    files_processed = 0\n",
    "    files_modified = 0\n",
    "    \n",
    "    # Parcourir tous les fichiers\n",
    "    for ext in extensions:\n",
    "        for filepath in project_dir.rglob(f'*{ext}'):\n",
    "            # Ignorer certains dossiers\n",
    "            if any(ignored in filepath.parts for ignored in ignore_dirs):\n",
    "                continue\n",
    "            \n",
    "            # Ignorer ce script lui-m√™me\n",
    "            if 'migration' in filepath.name or 'notebook' in filepath.name:\n",
    "                continue\n",
    "            \n",
    "            files_processed += 1\n",
    "            if replace_in_file(filepath, all_mappings):\n",
    "                files_modified += 1\n",
    "    \n",
    "    print(f\"\\nüìä R√©sum√©: {files_modified}/{files_processed} fichiers modifi√©s\")\n",
    "\n",
    "# ========== EXECUTION ==========\n",
    "\n",
    "print(\"üöÄ D√©but de la francisation compl√®te...\")\n",
    "print(f\"üìÅ Dossier projet: {PROJECT_PATH}\\n\")\n",
    "\n",
    "# 1. Traiter exercises.json en premier\n",
    "print(\"üìù Mise √† jour de exercises.json...\")\n",
    "update_exercises_json()\n",
    "\n",
    "# 2. Traiter tous les autres fichiers\n",
    "print(\"\\nüìù Mise √† jour des fichiers source...\")\n",
    "process_all_files()\n",
    "\n",
    "print(\"\\n‚úÖ Francisation termin√©e!\")\n",
    "print(\"\\n‚ö†Ô∏è  Prochaines √©tapes:\")\n",
    "print(\"1. V√©rifier les modifications avec 'git diff'\")\n",
    "print(\"2. Tester l'application localement\")\n",
    "print(\"3. Recr√©er la base de donn√©es sur Render\")\n",
    "print(\"4. Commiter les changements\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "pytorch_gpu",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.16"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\database.db ---
--- Nom du fichier: database.db ---
--- Contenu ---

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\enrich_with_ollama_fixed.py ---
--- Nom du fichier: enrich_with_ollama_fixed.py ---
--- Contenu ---
import json
import requests
from pathlib import Path
from typing import Dict, List
import time
import logging

# Configuration
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(message)s')
logger = logging.getLogger(__name__)

class OllamaExerciseEnricher:
    """Utilise Ollama pour enrichir les exercices avec des valeurs r√©alistes"""
    
    def __init__(self, model="llama3.1:8b", ollama_url="http://localhost:11434"):
        self.model = model
        self.api_url = f"{ollama_url}/api/generate"
        self.verify_ollama_connection()
        
    def verify_ollama_connection(self):
        """V√©rifie qu'Ollama est accessible"""
        try:
            response = requests.get(self.api_url.replace("/generate", "/tags"))
            if response.status_code == 200:
                models = response.json()
                logger.info("Connexion Ollama OK")
                logger.info(f"Modeles disponibles: {[m['name'] for m in models['models']]}")
                logger.info(f"Modele utilise: {self.model}")
            else:
                raise Exception("Ollama non accessible")
        except Exception as e:
            logger.error(f"Erreur connexion Ollama: {e}")
            exit(1)
    
    def create_prompt(self, exercise: Dict) -> str:
        """Cr√©e un prompt optimis√© pour Llama3"""
        return f"""Tu es un expert en science du sport. Analyse cet exercice et retourne UNIQUEMENT un JSON valide.

EXERCICE:
- Nom: {exercise['name_fr']}
- Equipement: {', '.join(exercise['equipment'])}
- Muscle: {exercise['body_part']}
- Niveau: {exercise['level']}

Retourne ce JSON EXACT (pas de texte avant ou apr√®s):
{{
  "progression_metadata": {{
    "min_weight_increment": 2.5,
    "typical_increment": 5.0,
    "plateau_threshold": 3,
    "deload_percentage": 0.85,
    "skill_complexity": 3
  }},
  "muscle_groups": {{
    "primary": ["{exercise['body_part'].lower()}"],
    "secondary": [],
    "stabilizers": ["Abdominaux"]
  }},
  "fatigue_profile": {{
    "systemic_impact": 3.0,
    "local_recovery_hours": 48,
    "weekly_frequency_max": 3,
    "compound_movement": true
  }},
  "recovery_hours": 48,
  "injury_risk_zones": ["√©paule"],
  "can_superset_with": []
}}

IMPORTANT: Ajuste les valeurs selon ces r√®gles:
- Squat/Soulev√© de terre: complexity=5, impact=5, recovery=72h
- D√©velopp√©/Rowing: complexity=3, impact=4, recovery=48h
- Curl/Extension: complexity=1, impact=2, recovery=24h
- Barbell: increment=2.5kg, Dumbbell: increment=2.0kg"""

    def query_ollama(self, prompt: str, max_retries: int = 3) -> Dict:
        """Interroge Ollama et parse la r√©ponse"""
        for attempt in range(max_retries):
            try:
                logger.debug(f"Tentative {attempt + 1}/{max_retries}")
                
                response = requests.post(
                    self.api_url,
                    json={
                        "model": self.model,
                        "prompt": prompt,
                        "stream": False,
                        "temperature": 0.1,  # Tr√®s bas pour coh√©rence
                        "system": "Tu es un assistant qui r√©pond UNIQUEMENT en JSON valide."
                    },
                    timeout=60  # Plus de temps
                )
                
                if response.status_code == 200:
                    result = response.json()
                    response_text = result.get('response', '')
                    
                    logger.debug(f"Reponse brute: {response_text[:200]}...")
                    
                    # Essayer plusieurs m√©thodes pour extraire le JSON
                    json_data = None
                    
                    # M√©thode 1: Essayer directement
                    try:
                        json_data = json.loads(response_text)
                    except:
                        pass
                    
                    # M√©thode 2: Chercher entre accolades
                    if not json_data:
                        start = response_text.find('{')
                        end = response_text.rfind('}') + 1
                        if start >= 0 and end > start:
                            try:
                                json_str = response_text[start:end]
                                json_data = json.loads(json_str)
                            except Exception as e:
                                logger.debug(f"Erreur parsing JSON: {e}")
                    
                    if json_data:
                        logger.debug("JSON parse avec succes")
                        return json_data
                    else:
                        raise ValueError("Impossible d'extraire le JSON")
                else:
                    logger.error(f"Erreur HTTP: {response.status_code}")
                    
            except requests.exceptions.Timeout:
                logger.warning(f"Timeout apres 60s")
            except Exception as e:
                logger.warning(f"Erreur: {type(e).__name__}: {e}")
                
            if attempt < max_retries - 1:
                time.sleep(2)
                    
        return None

    def enrich_exercise(self, exercise: Dict) -> Dict:
        """Enrichit un exercice via Ollama"""
        # Cr√©er le prompt
        prompt = self.create_prompt(exercise)
        
        # Interroger Ollama
        enrichment_data = self.query_ollama(prompt)
        
        if enrichment_data:
            # Fusionner avec l'exercice original
            enriched = exercise.copy()
            
            # Ajouter chaque champ s'il existe dans la r√©ponse
            for key in ['progression_metadata', 'muscle_groups', 'fatigue_profile', 
                        'recovery_hours', 'injury_risk_zones', 'can_superset_with']:
                if key in enrichment_data:
                    enriched[key] = enrichment_data[key]
            
            # Validation et corrections
            enriched = self.validate_and_fix(enriched, exercise)
            
            logger.info(f"Enrichi avec succes")
            return enriched
        else:
            logger.error(f"Echec - utilisation des valeurs par defaut")
            return self.add_smart_defaults(exercise)

    def validate_and_fix(self, enriched: Dict, original: Dict) -> Dict:
        """Valide et ajuste les valeurs selon le type d'exercice"""
        name = original['name_fr'].lower()
        
        # Ajustements sp√©cifiques selon l'exercice
        if any(word in name for word in ['squat', 'soulev√©']):
            enriched['progression_metadata']['skill_complexity'] = 5
            enriched['fatigue_profile']['systemic_impact'] = 5
            enriched['recovery_hours'] = 72
        elif any(word in name for word in ['d√©velopp√©', 'presse', 'rowing']):
            enriched['progression_metadata']['skill_complexity'] = 3
            enriched['fatigue_profile']['systemic_impact'] = 4
        elif any(word in name for word in ['curl', 'extension', '√©l√©vation']):
            enriched['progression_metadata']['skill_complexity'] = 1
            enriched['fatigue_profile']['systemic_impact'] = 2
            enriched['recovery_hours'] = 36
        
        return enriched

    def add_smart_defaults(self, exercise: Dict) -> Dict:
        """Ajoute des valeurs par d√©faut intelligentes selon l'exercice"""
        name = exercise['name_fr'].lower()
        body_part = exercise['body_part']
        
        # D√©terminer si c'est compos√©
        is_compound = any(word in name for word in 
                          ['squat', 'soulev√©', 'd√©velopp√©', 'rowing', 'presse', 'tractions'])
        
        # D√©terminer la complexit√©
        if any(word in name for word in ['soulev√© de terre', 'squat']):
            complexity = 5
            impact = 5
            recovery = 72
        elif is_compound:
            complexity = 3
            impact = 4
            recovery = 48
        else:
            complexity = 1
            impact = 2
            recovery = 36
        
        # Incr√©ment selon √©quipement
        increment = 2.5
        if 'halteres' in exercise['equipment']:
            increment = 2.0
        elif 'kettlebell' in exercise['equipment']:
            increment = 4.0
        
        # Muscles secondaires logiques
        secondary = []
        if body_part == "Pectoraux":
            secondary = ["triceps", "delto√Ødes"]
        elif body_part == "Dos":
            secondary = ["biceps", "trap√®zes"]
        elif body_part == "Quadriceps":
            secondary = ["fessiers", "mollets"]
        
        exercise['progression_metadata'] = {
            "min_weight_increment": increment,
            "typical_increment": increment * 2,
            "plateau_threshold": 3,
            "deload_percentage": 0.85,
            "skill_complexity": complexity
        }
        
        exercise['muscle_groups'] = {
            "primary": [body_part.lower()],
            "secondary": secondary,
            "stabilizers": ["Abdominaux"] if is_compound else []
        }
        
        exercise['fatigue_profile'] = {
            "systemic_impact": float(impact),
            "local_recovery_hours": recovery,
            "weekly_frequency_max": 2 if impact >= 4 else 3,
            "compound_movement": is_compound
        }
        
        exercise['recovery_hours'] = recovery
        exercise['injury_risk_zones'] = ["bas_du_dos"] if is_compound else ["√©paule"]
        exercise['can_superset_with'] = []
        
        return exercise

def main():
    """Fonction principale"""
    # Chemins
    input_file = Path("exercises.json")
    output_file = Path("exercises_enriched_ollama.json")
    
    if not input_file.exists():
        logger.error(f"Fichier non trouv√©: {input_file}")
        return
    
    try:
        # Chargement
        logger.info("Chargement des exercices...")
        with open(input_file, 'r', encoding='utf-8') as f:
            exercises = json.load(f)
        logger.info(f"{len(exercises)} exercices charges")
        
        # Initialisation Ollama avec le bon mod√®le
        logger.info("\nInitialisation d'Ollama...")
        enricher = OllamaExerciseEnricher(model="llama3.1:8b")  # Votre mod√®le
        
        # Enrichissement
        logger.info("\nEnrichissement via Ollama...")
        logger.info("(Cela peut prendre plusieurs minutes...)\n")
        
        enriched_exercises = []
        success_count = 0
        
        for i, exercise in enumerate(exercises):
            logger.info(f"[{i+1}/{len(exercises)}] {exercise['name_fr']}")
            
            try:
                enriched = enricher.enrich_exercise(exercise)
                enriched_exercises.append(enriched)
                
                # V√©rifier si vraiment enrichi
                if 'progression_metadata' in enriched:
                    success_count += 1
                
                # Pause pour ne pas surcharger
                if i < len(exercises) - 1:
                    time.sleep(0.5)
                    
            except Exception as e:
                logger.error(f"Erreur inattendue: {e}")
                enriched_exercises.append(enricher.add_smart_defaults(exercise))
        
        # Sauvegarde
        logger.info(f"\nSauvegarde...")
        with open(output_file, 'w', encoding='utf-8') as f:
            json.dump(enriched_exercises, f, indent=2, ensure_ascii=False)
        
        # Rapport
        logger.info(f"\nTermine!")
        logger.info(f"Resultats:")
        logger.info(f"- Exercices traites: {len(enriched_exercises)}")
        logger.info(f"- Enrichis via Ollama: {success_count}")
        logger.info(f"- Valeurs par defaut: {len(exercises) - success_count}")
        logger.info(f"- Fichier: {output_file}")
        
    except Exception as e:
        logger.error(f"Erreur fatale: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    print("ENRICHISSEMENT D'EXERCICES AVEC OLLAMA")
    print("=" * 50)
    print(f"Mod√®le: llama3.1:8b")
    print(f"Exercices √† traiter: 132")
    print(f"Temps estim√©: 5-10 minutes")
    print("=" * 50)
    
    input("\nAppuyez sur Entr√©e pour commencer...")
    main()
--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\exercises.json ---
--- Nom du fichier: exercises.json ---
--- Contenu ---
[
  {
    "name_fr": "D√©velopp√© assis √† la machine convergente",
    "name_eng": "Convergent Machine Seated Press",
    "equipment": [
      "machine_convergente"
    ],
    "level": "basique",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    },
    "progression_metadata": {
      "min_weight_increment": 2.0,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 3
    },
    "muscle_groups": {
      "primary": [
        "Pectoraux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 4,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "D√©velopp√© couch√© avec halt√®res",
    "name_eng": "Dumbbell Bench Press",
    "equipment": [
      "dumbbells",
      "banc_plat"
    ],
    "level": "basique",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    },
    "progression_metadata": {
      "min_weight_increment": 2.0,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 3
    },
    "muscle_groups": {
      "primary": [
        "Pectoraux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 4,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "D√©velopp√© couch√© √† la barre",
    "name_eng": "Barbell Bench Press",
    "equipment": [
      "barre_olympique",
      "banc_plat"
    ],
    "level": "basique",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 3
    },
    "muscle_groups": {
      "primary": [
        "Pectoraux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 4,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "D√©velopp√© couch√© √† la machine convergente",
    "name_eng": "Convergent Machine Bench Press",
    "equipment": [
      "machine_convergente"
    ],
    "level": "basique",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    },
    "progression_metadata": {
      "min_weight_increment": 2,
      "typical_increment": 5,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 3
    },
    "muscle_groups": {
      "primary": [
        "Pectoraux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 4,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "D√©velopp√© d√©clin√© avec halt√®res",
    "name_eng": "Decline Dumbbell Press",
    "equipment": [
      "dumbbells",
      "banc_declinable"
    ],
    "level": "basique",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2,
      "requires_decline": true
    },
    "progression_metadata": {
      "min_weight_increment": 2,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 3
    },
    "muscle_groups": {
      "primary": [
        "Pectoraux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 4,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "D√©velopp√© d√©clin√© √† la barre",
    "name_eng": "Decline Barbell Press",
    "equipment": [
      "barre_olympique",
      "banc_declinable"
    ],
    "level": "basique",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1,
      "requires_decline": true
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 3
    },
    "muscle_groups": {
      "primary": [
        "Pectoraux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 4,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "D√©velopp√© inclin√© avec halt√®res",
    "name_eng": "Incline Dumbbell Press",
    "equipment": [
      "dumbbells",
      "banc_inclinable"
    ],
    "level": "basique",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2,
      "requires_incline": true
    },
    "progression_metadata": {
      "min_weight_increment": 2.0,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 3
    },
    "muscle_groups": {
      "primary": [
        "Pectoraux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 4,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "D√©velopp√© inclin√© √† la barre",
    "name_eng": "Incline Barbell Press",
    "equipment": [
      "barre_olympique",
      "banc_inclinable"
    ],
    "level": "basique",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1,
      "requires_incline": true
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 3
    },
    "muscle_groups": {
      "primary": [
        "Pectoraux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 4,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "D√©velopp√© inclin√© √† la machine convergente",
    "name_eng": "Convergent Machine Incline Press",
    "equipment": [
      "machine_convergente"
    ],
    "level": "basique",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    },
    "progression_metadata": {
      "min_weight_increment": 2.0,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 3
    },
    "muscle_groups": {
      "primary": [
        "Pectoraux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 4,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Dips prise large buste pench√©",
    "name_eng": "Wide-Grip Dips",
    "equipment": [
      "dip_bars"
    ],
    "level": "basique",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Pectoraux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2.0,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Pull over avec barre ou halt√®re",
    "name_eng": "Barbell or Dumbbell Pullover",
    "equipment": [
      "barre_olympique",
      "dumbbells",
      "banc_plat"
    ],
    "level": "basique",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1,
      "dumbbell_count": 2
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 3
    },
    "muscle_groups": {
      "primary": [
        "Pectoraux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 4,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Pull over en travers d‚Äôun banc avec barre ou halt√®re",
    "name_eng": "Cross-Bench Barbell or Dumbbell Pullover",
    "equipment": [
      "barre_olympique",
      "dumbbells",
      "banc_plat"
    ],
    "level": "basique",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1,
      "dumbbell_count": 2
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Pectoraux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "√âcart√© couch√© avec halt√®res",
    "name_eng": "Dumbbell Fly",
    "equipment": [
      "dumbbells",
      "banc_plat"
    ],
    "level": "avanc√©",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    },
    "progression_metadata": {
      "min_weight_increment": 2.0,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 3
    },
    "muscle_groups": {
      "primary": [
        "Pectoraux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 3.0,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "√âcart√© d√©clin√© avec halt√®res",
    "name_eng": "Decline Dumbbell Fly",
    "equipment": [
      "dumbbells",
      "banc_declinable"
    ],
    "level": "avanc√©",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2,
      "requires_decline": true
    },
    "progression_metadata": {
      "min_weight_increment": 2.0,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 3
    },
    "muscle_groups": {
      "primary": [
        "Pectoraux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 4,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "√âcart√© inclin√© avec halt√®res",
    "name_eng": "Incline Dumbbell Fly",
    "equipment": [
      "dumbbells",
      "banc_inclinable"
    ],
    "level": "avanc√©",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2,
      "requires_incline": true
    },
    "progression_metadata": {
      "min_weight_increment": 2.0,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Pectoraux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2.0,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "√âcart√© pectoraux √† la machine",
    "name_eng": "Machine Pec Fly",
    "equipment": [
      "machine_pectoraux"
    ],
    "level": "avanc√©",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    },
    "progression_metadata": {
      "min_weight_increment": 2,
      "typical_increment": 5,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Pectoraux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Pompes prise large au sol",
    "name_eng": "Wide-Grip Push-Up",
    "equipment": [
      "poids_du_corps"
    ],
    "level": "avanc√©",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2,
      "typical_increment": 5,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Pectoraux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Pull over √† la poulie basse",
    "name_eng": "Low Cable Pullover",
    "equipment": [
      "poulies"
    ],
    "level": "avanc√©",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Pectoraux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "√âcart√© √† la poulie vis √† vis basse",
    "name_eng": "Low Cable Crossover",
    "equipment": [
      "poulies"
    ],
    "level": "finition",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Pectoraux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "√âcart√© √† la poulie vis √† vis haute",
    "name_eng": "High Cable Crossover",
    "equipment": [
      "poulies"
    ],
    "level": "finition",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Pectoraux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2.0,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "D√©velopp√© couch√© √† la machine",
    "name_eng": "Machine Bench Press",
    "equipment": [
      "machine_developpe"
    ],
    "level": "finition",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    },
    "progression_metadata": {
      "min_weight_increment": 2.0,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 3
    },
    "muscle_groups": {
      "primary": [
        "Pectoraux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 4,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Crunch abdominaux avec l‚ÄôAbmat",
    "name_eng": "Abmat Crunch",
    "equipment": [
      "abmat"
    ],
    "level": "basique",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 25,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 35,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Abdominaux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2.0,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Crunch √† la poulie haute",
    "name_eng": "Cable Crunch",
    "equipment": [
      "poulies"
    ],
    "level": "basique",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 25,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 35,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2,
      "typical_increment": 5,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Abdominaux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Enroulement de bassin au sol avec l‚ÄôAbmat",
    "name_eng": "Abmat Reverse Crunch",
    "equipment": [
      "abmat"
    ],
    "level": "basique",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 25,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 35,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2.0,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Abdominaux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2.0,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Enroulement de bassin suspendu √† la barre fixe",
    "name_eng": "Hanging Leg Raise",
    "equipment": [
      "barre_traction"
    ],
    "level": "basique",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 25,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {
      "pullup_bar_required": true
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Abdominaux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2.0,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 24,
    "injury_risk_zones": [],
    "can_superset_with": []
  },
  {
    "name_fr": "Obliques sur banc √† lombaires",
    "name_eng": "Back Extension Bench Side Crunch",
    "equipment": [
      "banc_lombaires"
    ],
    "level": "basique",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 25,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 35,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Abdominaux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2.0,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Crunch abdominaux au sol",
    "name_eng": "Floor Crunch",
    "equipment": [
      "poids_du_corps"
    ],
    "level": "avanc√©",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 25,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 35,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2,
      "typical_increment": null,
      "plateau_threshold": null,
      "deload_percentage": null,
      "skill_complexity": null
    },
    "muscle_groups": {
      "primary": [
        "Abdominaux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": null,
      "local_recovery_hours": null,
      "weekly_frequency_max": null,
      "compound_movement": false
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Crunch abdominaux √† la machine",
    "name_eng": "Machine Crunch",
    "equipment": [
      "machine_abdos"
    ],
    "level": "avanc√©",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 25,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 35,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {
      "machine_required": true
    },
    "progression_metadata": {
      "min_weight_increment": 2,
      "typical_increment": null,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": null
    },
    "muscle_groups": {
      "primary": [
        "Abdominaux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 3,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Crunch abdominaux sur la Swiss Ball",
    "name_eng": "Swiss Ball Crunch",
    "equipment": [
      "swiss_ball"
    ],
    "level": "avanc√©",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 25,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 35,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2.0,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Abdominaux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Crunch oblique au sol",
    "name_eng": "Oblique Floor Crunch",
    "equipment": [
      "poids_du_corps"
    ],
    "level": "avanc√©",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 25,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 35,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2,
      "typical_increment": 5,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Abdominaux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Enroulement de bassin au sol",
    "name_eng": "Reverse Crunch",
    "equipment": [
      "poids_du_corps"
    ],
    "level": "avanc√©",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 25,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 35,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 10.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Abdominaux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2.0,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Obliques avec l‚ÄôAbmat",
    "name_eng": "Abmat Oblique Crunch",
    "equipment": [
      "abmat"
    ],
    "level": "avanc√©",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 25,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 35,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2,
      "typical_increment": 5,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Abdominaux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 3,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Obliques sur la Swiss Ball",
    "name_eng": "Swiss Ball Oblique Crunch",
    "equipment": [
      "swiss_ball"
    ],
    "level": "avanc√©",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 25,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 35,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2,
      "typical_increment": 5,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Abdominaux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Obliques suspendu √† la barre fixe",
    "name_eng": "Hanging Oblique Raise",
    "equipment": [
      "barre_traction"
    ],
    "level": "avanc√©",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 25,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {
      "pullup_bar_required": true
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 3
    },
    "muscle_groups": {
      "primary": [
        "Abdominaux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Rotation √† la machine",
    "name_eng": "Machine Torso Rotation",
    "equipment": [
      "machine_rotation"
    ],
    "level": "avanc√©",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 25,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 35,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {
      "machine_required": true
    },
    "progression_metadata": {
      "min_weight_increment": 2,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Abdominaux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2.0,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Vacuum",
    "name_eng": "Stomach Vacuum",
    "equipment": [
      "poids_du_corps"
    ],
    "level": "avanc√©",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 25,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2.0,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Abdominaux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Crunch abdominaux avec rotation au sol",
    "name_eng": "Rotational Floor Crunch",
    "equipment": [
      "poids_du_corps"
    ],
    "level": "finition",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 25,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 35,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2,
      "typical_increment": 5,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Abdominaux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Drapeau du dragon",
    "name_eng": "Dragon Flag",
    "equipment": [
      "banc_plat"
    ],
    "level": "finition",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 3
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 10.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 4
    },
    "muscle_groups": {
      "primary": [
        "Abdominaux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 3.0,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Flexion lat√©rale avec halt√®re",
    "name_eng": "Dumbbell Side Bend",
    "equipment": [
      "dumbbells"
    ],
    "level": "finition",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    },
    "progression_metadata": {
      "min_weight_increment": 2.0,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Abdominaux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Gainage abdominal frontal",
    "name_eng": "Front Plank",
    "equipment": [
      "poids_du_corps"
    ],
    "level": "finition",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 45,
        "reps_tolerance": 5
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 60,
        "reps_tolerance": 5
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 75,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 90,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2.0,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Abdominaux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2.0,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Gainage abdominal oblique",
    "name_eng": "Side Plank",
    "equipment": [
      "poids_du_corps"
    ],
    "level": "finition",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 45,
        "reps_tolerance": 5
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 60,
        "reps_tolerance": 5
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 75,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 90,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2.0,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Abdominaux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2.0,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Rotation debout avec balais",
    "name_eng": "Standing Broomstick Twist",
    "equipment": [
      "balai"
    ],
    "level": "finition",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 25,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 35,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2.0,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Abdominaux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2.0,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Hack squat √† la machine",
    "name_eng": "Machine Hack Squat",
    "equipment": [
      "machine_hack_squat"
    ],
    "level": "basique",
    "body_part": "Jambes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 2.5,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 5
    },
    "muscle_groups": {
      "primary": [
        "Jambes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 5,
      "local_recovery_hours": 72,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 72,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Presse √† cuisses allong√©",
    "name_eng": "Lying Leg Press",
    "equipment": [
      "machine_jambes"
    ],
    "level": "basique",
    "body_part": "Jambes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 3
    },
    "muscle_groups": {
      "primary": [
        "Jambes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 4,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Presse √† cuisses assis",
    "name_eng": "Seated Leg Press",
    "equipment": [
      "machine_jambes"
    ],
    "level": "basique",
    "body_part": "Jambes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 2.5,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 3
    },
    "muscle_groups": {
      "primary": [
        "Jambes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 4,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Presse √† cuisses inclin√©",
    "name_eng": "Incline Leg Press",
    "equipment": [
      "machine_jambes"
    ],
    "level": "basique",
    "body_part": "Jambes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 2.5,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 3
    },
    "muscle_groups": {
      "primary": [
        "Jambes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 4,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Squat avant avec barre",
    "name_eng": "Front Squat",
    "equipment": [
      "barre_olympique",
      "squat_rack"
    ],
    "level": "basique",
    "body_part": "Jambes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 5
    },
    "muscle_groups": {
      "primary": [
        "Jambes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 5,
      "local_recovery_hours": 72,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 72,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Squat avec barre derri√®re la nuque",
    "name_eng": "Back Squat",
    "equipment": [
      "barre_olympique",
      "squat_rack"
    ],
    "level": "basique",
    "body_part": "Jambes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 2.5,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 5
    },
    "muscle_groups": {
      "primary": [
        "Jambes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 5,
      "local_recovery_hours": 72,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 72,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Squat sumo avec barre",
    "name_eng": "Sumo Squat",
    "equipment": [
      "barre_olympique",
      "squat_rack"
    ],
    "level": "basique",
    "body_part": "Jambes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 2.5,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 5
    },
    "muscle_groups": {
      "primary": [
        "Jambes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 5,
      "local_recovery_hours": 72,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 72,
    "injury_risk_zones": [
      "knee"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Fente lat√©rale avec barre",
    "name_eng": "Barbell Lateral Lunge",
    "equipment": [
      "barre_olympique"
    ],
    "level": "avanc√©",
    "body_part": "Jambes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Jambes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2.0,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Gobelet Squat avec halt√®re",
    "name_eng": "Goblet Squat",
    "equipment": [
      "dumbbells"
    ],
    "level": "avanc√©",
    "body_part": "Jambes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    },
    "progression_metadata": {
      "min_weight_increment": 2.0,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 5
    },
    "muscle_groups": {
      "primary": [
        "Jambes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 5,
      "local_recovery_hours": 72,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 72,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Hack squat avec une barre",
    "name_eng": "Barbell Hack Squat",
    "equipment": [
      "barre_olympique"
    ],
    "level": "avanc√©",
    "body_part": "Jambes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 5
    },
    "muscle_groups": {
      "primary": [
        "Jambes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 5,
      "local_recovery_hours": 72,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 72,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Mont√©e sur banc avec barre ou halt√®res",
    "name_eng": "Barbell or Dumbbell Step-Up",
    "equipment": [
      "barre_olympique",
      "dumbbells",
      "banc_plat"
    ],
    "level": "avanc√©",
    "body_part": "Jambes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1,
      "dumbbell_count": 2
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 2.5,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Jambes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2.0,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 24,
    "injury_risk_zones": [],
    "can_superset_with": []
  },
  {
    "name_fr": "Squat avec ceinture de lest",
    "name_eng": "Weighted Belt Squat",
    "equipment": [
      "ceinture_lest"
    ],
    "level": "avanc√©",
    "body_part": "Jambes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 10.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 5
    },
    "muscle_groups": {
      "primary": [
        "Jambes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 5,
      "local_recovery_hours": 72,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 72,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Squat √† la machine",
    "name_eng": "Machine Squat",
    "equipment": [
      "machine_squat"
    ],
    "level": "avanc√©",
    "body_part": "Jambes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 5
    },
    "muscle_groups": {
      "primary": [
        "Jambes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 5,
      "local_recovery_hours": 72,
      "weekly_frequency_max": 2,
      "compound_movement": true
    },
    "recovery_hours": 72,
    "injury_risk_zones": [
      "knee"
    ]
  },
  {
    "name_fr": "Squat bulgare avec halt√®res",
    "name_eng": "Bulgarian Split Squat",
    "equipment": [
      "dumbbells",
      "banc_plat"
    ],
    "level": "avanc√©",
    "body_part": "Jambes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    },
    "progression_metadata": {
      "min_weight_increment": 2.0,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 5
    },
    "muscle_groups": {
      "primary": [
        "Jambes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 5,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 72,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Fente avant avec barre ou halt√®res",
    "name_eng": "Barbell or Dumbbell Lunge",
    "equipment": [
      "barre_olympique",
      "dumbbells"
    ],
    "level": "finition",
    "body_part": "Jambes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1,
      "dumbbell_count": 2
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Jambes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2.0,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 24,
    "injury_risk_zones": [],
    "can_superset_with": []
  },
  {
    "name_fr": "Fente arri√®re avec barre ou halt√®res",
    "name_eng": "Reverse Barbell or Dumbbell Lunge",
    "equipment": [
      "barre_olympique",
      "dumbbells"
    ],
    "level": "finition",
    "body_part": "Jambes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1,
      "dumbbell_count": 2
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 4
    },
    "muscle_groups": {
      "primary": [
        "Jambes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 3.5,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 4,
      "compound_movement": false
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Squat saut√©",
    "name_eng": "Jump Squat",
    "equipment": [
      "poids_du_corps"
    ],
    "level": "finition",
    "body_part": "Jambes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 5
    },
    "muscle_groups": {
      "primary": [
        "Jambes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 5,
      "local_recovery_hours": 72,
      "weekly_frequency_max": 2,
      "compound_movement": true
    },
    "recovery_hours": 72,
    "injury_risk_zones": [
      "knee"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "D√©velopp√© militaire avec barre",
    "name_eng": "Barbell Military Press",
    "equipment": [
      "barre_olympique",
      "squat_rack"
    ],
    "level": "basique",
    "body_part": "Delto√Ødes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 3
    },
    "muscle_groups": {
      "primary": [
        "Delto√Ødes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 4,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "D√©velopp√© militaire avec halt√®res",
    "name_eng": "Dumbbell Military Press",
    "equipment": [
      "dumbbells"
    ],
    "level": "basique",
    "body_part": "Delto√Ødes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    },
    "progression_metadata": {
      "min_weight_increment": 2,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 3
    },
    "muscle_groups": {
      "primary": [
        "Delto√Ødes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 4,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "D√©velopp√© militaire √† la machine",
    "name_eng": "Machine Military Press",
    "equipment": [
      "machine_√©paules"
    ],
    "level": "basique",
    "body_part": "Delto√Ødes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 3
    },
    "muscle_groups": {
      "primary": [
        "Delto√Ødes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 4,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "D√©velopp√© militaire assis avec barre",
    "name_eng": "Seated Barbell Military Press",
    "equipment": [
      "barre_olympique",
      "banc_plat"
    ],
    "level": "basique",
    "body_part": "Delto√Ødes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 3
    },
    "muscle_groups": {
      "primary": [
        "Delto√Ødes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 4,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "D√©velopp√© militaire assis avec halt√®res",
    "name_eng": "Seated Dumbbell Military Press",
    "equipment": [
      "dumbbells",
      "banc_plat"
    ],
    "level": "basique",
    "body_part": "Delto√Ødes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    },
    "progression_metadata": {
      "min_weight_increment": 2.0,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 3
    },
    "muscle_groups": {
      "primary": [
        "Delto√Ødes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 4,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "D√©velopp√© Arnold avec halt√®res",
    "name_eng": "Arnold Press",
    "equipment": [
      "dumbbells"
    ],
    "level": "avanc√©",
    "body_part": "Delto√Ødes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    },
    "progression_metadata": {
      "min_weight_increment": 2.0,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 3
    },
    "muscle_groups": {
      "primary": [
        "Delto√Ødes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 4,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "√âl√©vation frontale √† la barre",
    "name_eng": "Barbell Front Raise",
    "equipment": [
      "barre_olympique"
    ],
    "level": "avanc√©",
    "body_part": "Delto√Ødes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1,
      "dumbbell_count": 2
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Delto√Ødes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 36,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "√âl√©vation frontale avec halt√®res",
    "name_eng": "Dumbbell Front Raise",
    "equipment": [
      "dumbbells"
    ],
    "level": "avanc√©",
    "body_part": "Delto√Ødes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    },
    "progression_metadata": {
      "min_weight_increment": 2.0,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Delto√Ødes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 36,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "√âl√©vation lat√©rale avec halt√®res",
    "name_eng": "Dumbbell Lateral Raise",
    "equipment": [
      "dumbbells"
    ],
    "level": "avanc√©",
    "body_part": "Delto√Ødes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    },
    "progression_metadata": {
      "min_weight_increment": 2.0,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Delto√Ødes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 36,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "√âl√©vation lat√©rale √† la poulie basse",
    "name_eng": "Low Cable Lateral Raise",
    "equipment": [
      "poulies"
    ],
    "level": "avanc√©",
    "body_part": "Delto√Ødes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Delto√Ødes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 36,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Oiseau avec halt√®res",
    "name_eng": "Dumbbell Rear Delt Fly",
    "equipment": [
      "dumbbells",
      "banc_plat"
    ],
    "level": "avanc√©",
    "body_part": "Delto√Ødes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    },
    "progression_metadata": {
      "min_weight_increment": 2.0,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Delto√Ødes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Oiseau √† la poulie basse",
    "name_eng": "Low Cable Rear Delt Fly",
    "equipment": [
      "poulies"
    ],
    "level": "avanc√©",
    "body_part": "Delto√Ødes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2,
      "typical_increment": 5,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Delto√Ødes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "√âl√©vation frontale √† la poulie basse",
    "name_eng": "Low Cable Front Raise",
    "equipment": [
      "poulies"
    ],
    "level": "finition",
    "body_part": "Delto√Ødes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Delto√Ødes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 36,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Oiseau √† la machine",
    "name_eng": "Machine Rear Delt Fly",
    "equipment": [
      "machine_oiseau"
    ],
    "level": "finition",
    "body_part": "Delto√Ødes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    },
    "progression_metadata": {
      "min_weight_increment": 2,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Delto√Ødes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2.0,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 24,
    "injury_risk_zones": [],
    "can_superset_with": []
  },
  {
    "name_fr": "Curl avec barre droite",
    "name_eng": "Barbell Curl",
    "equipment": [
      "barre_olympique"
    ],
    "level": "basique",
    "body_part": "Bras",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Bras"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 36,
    "injury_risk_zones": [],
    "can_superset_with": []
  },
  {
    "name_fr": "Curl avec barre EZ",
    "name_eng": "EZ Bar Curl",
    "equipment": [
      "barre_ez"
    ],
    "level": "basique",
    "body_part": "Bras",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 2.5,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Bras"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 36,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Curl avec halt√®res",
    "name_eng": "Dumbbell Curl",
    "equipment": [
      "dumbbells"
    ],
    "level": "basique",
    "body_part": "Bras",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    },
    "progression_metadata": {
      "min_weight_increment": 2.0,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Bras"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 36,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Curl inclin√© avec halt√®res",
    "name_eng": "Incline Dumbbell Curl",
    "equipment": [
      "dumbbells",
      "banc_inclinable"
    ],
    "level": "basique",
    "body_part": "Bras",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2,
      "requires_incline": true
    },
    "progression_metadata": {
      "min_weight_increment": 2.0,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Bras"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 36,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Curl marteau avec halt√®res",
    "name_eng": "Hammer Curl",
    "equipment": [
      "dumbbells"
    ],
    "level": "basique",
    "body_part": "Bras",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    },
    "progression_metadata": {
      "min_weight_increment": 2,
      "typical_increment": 5,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Bras"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 36,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Curl √† la poulie basse",
    "name_eng": "Low Cable Curl",
    "equipment": [
      "poulies"
    ],
    "level": "avanc√©",
    "body_part": "Bras",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Bras"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 36,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Curl √† la poulie haute",
    "name_eng": "High Cable Curl",
    "equipment": [
      "poulies"
    ],
    "level": "avanc√©",
    "body_part": "Bras",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 10.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Bras"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 36,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Curl concentr√© avec halt√®re",
    "name_eng": "Concentration Curl",
    "equipment": [
      "dumbbells",
      "banc_plat"
    ],
    "level": "avanc√©",
    "body_part": "Bras",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 1
    },
    "progression_metadata": {
      "min_weight_increment": 2,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Bras"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 36,
    "injury_risk_zones": [],
    "can_superset_with": []
  },
  {
    "name_fr": "Curl pr√™cheur avec barre droite",
    "name_eng": "Barbell Preacher Curl",
    "equipment": [
      "barre_olympique",
      "banc_preacher"
    ],
    "level": "avanc√©",
    "body_part": "Bras",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Bras"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 36,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Curl pr√™cheur avec barre EZ",
    "name_eng": "EZ Bar Preacher Curl",
    "equipment": [
      "barre_ez",
      "banc_preacher"
    ],
    "level": "avanc√©",
    "body_part": "Bras",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 2.5,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Bras"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 36,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Curl pr√™cheur avec halt√®res",
    "name_eng": "Dumbbell Preacher Curl",
    "equipment": [
      "dumbbells",
      "banc_preacher"
    ],
    "level": "avanc√©",
    "body_part": "Bras",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 1
    },
    "progression_metadata": {
      "min_weight_increment": 2,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Bras"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 36,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Curl √† la machine",
    "name_eng": "Machine Curl",
    "equipment": [
      "machine_biceps"
    ],
    "level": "finition",
    "body_part": "Bras",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    },
    "progression_metadata": {
      "min_weight_increment": 2.0,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Bras"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 36,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Curl invers√© avec barre",
    "name_eng": "Reverse Barbell Curl",
    "equipment": [
      "barre_olympique"
    ],
    "level": "avanc√©",
    "body_part": "Bras",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Bras"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 36,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Curl invers√© avec halt√®res",
    "name_eng": "Reverse Dumbbell Curl",
    "equipment": [
      "dumbbells"
    ],
    "level": "avanc√©",
    "body_part": "Bras",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    },
    "progression_metadata": {
      "min_weight_increment": 2.0,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Bras"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 36,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Curl poignet avec barre",
    "name_eng": "Barbell Wrist Curl",
    "equipment": [
      "barre_olympique",
      "banc_plat"
    ],
    "level": "avanc√©",
    "body_part": "Bras",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Bras"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 36,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Curl poignet avec halt√®res",
    "name_eng": "Dumbbell Wrist Curl",
    "equipment": [
      "dumbbells",
      "banc_plat"
    ],
    "level": "avanc√©",
    "body_part": "Bras",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    },
    "progression_metadata": {
      "min_weight_increment": 2.0,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Bras"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 36,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Curl invers√© √† la poulie basse",
    "name_eng": "Low Cable Reverse Curl",
    "equipment": [
      "poulies"
    ],
    "level": "finition",
    "body_part": "Bras",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2,
      "typical_increment": 5,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Bras"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 36,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Curl poignet √† la machine",
    "name_eng": "Machine Wrist Curl",
    "equipment": [
      "machine_poignets"
    ],
    "level": "finition",
    "body_part": "Bras",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    },
    "progression_metadata": {
      "min_weight_increment": 2,
      "typical_increment": 5,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Bras"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 36,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Rowing √† la T-bar",
    "name_eng": "T-Bar Row",
    "equipment": [
      "machine_t_bar",
      "barre_olympique"
    ],
    "level": "basique",
    "body_part": "Dos",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1,
      "machine_required": true
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 3
    },
    "muscle_groups": {
      "primary": [
        "Dos"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 4,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Shrug avec barre",
    "name_eng": "Barbell Shrug",
    "equipment": [
      "barre_olympique"
    ],
    "level": "basique",
    "body_part": "Dos",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 2.5,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 4
    },
    "muscle_groups": {
      "primary": [
        "Dos"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 3.0,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Shrug avec halt√®res",
    "name_eng": "Dumbbell Shrug",
    "equipment": [
      "dumbbells"
    ],
    "level": "basique",
    "body_part": "Dos",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    },
    "progression_metadata": {
      "min_weight_increment": 2.0,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 3
    },
    "muscle_groups": {
      "primary": [
        "Dos"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Shrug √† la machine",
    "name_eng": "Machine Shrug",
    "equipment": [
      "machine_shrug"
    ],
    "level": "basique",
    "body_part": "Dos",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    },
    "progression_metadata": {
      "min_weight_increment": 2.0,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Dos"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2.0,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Face pull √† la poulie",
    "name_eng": "Cable Face Pull",
    "equipment": [
      "poulies"
    ],
    "level": "avanc√©",
    "body_part": "Dos",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 3
    },
    "muscle_groups": {
      "primary": [
        "Dos"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 4,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Rowing vertical avec barre",
    "name_eng": "Barbell Upright Row",
    "equipment": [
      "barre_olympique"
    ],
    "level": "avanc√©",
    "body_part": "Dos",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 3
    },
    "muscle_groups": {
      "primary": [
        "Dos"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 4,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Rowing vertical avec halt√®res",
    "name_eng": "Dumbbell Upright Row",
    "equipment": [
      "dumbbells"
    ],
    "level": "avanc√©",
    "body_part": "Dos",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    },
    "progression_metadata": {
      "min_weight_increment": 2.0,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 3
    },
    "muscle_groups": {
      "primary": [
        "Dos"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 4,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Shrug √† la poulie basse",
    "name_eng": "Low Cable Shrug",
    "equipment": [
      "poulies"
    ],
    "level": "finition",
    "body_part": "Dos",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 5,
      "typical_increment": 10,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Dos"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Barre au front triceps avec barre ou halt√®res",
    "name_eng": "Skull Crusher",
    "equipment": [
      "barre_olympique",
      "dumbbells",
      "banc_plat"
    ],
    "level": "basique",
    "body_part": "Bras",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1,
      "dumbbell_count": 2
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 2.5,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Bras"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Dips prise √©troite",
    "name_eng": "Close-Grip Dips",
    "equipment": [
      "dip_bars"
    ],
    "level": "basique",
    "body_part": "Bras",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Bras"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2.0,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Extension triceps √† la poulie haute",
    "name_eng": "Cable Tricep Pushdown",
    "equipment": [
      "poulies"
    ],
    "level": "basique",
    "body_part": "Bras",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2,
      "typical_increment": 5,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Bras"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 36,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "D√©velopp√© couch√© prise serr√©e avec barre",
    "name_eng": "Close-Grip Barbell Bench Press",
    "equipment": [
      "barre_olympique",
      "banc_plat"
    ],
    "level": "avanc√©",
    "body_part": "Bras",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 3
    },
    "muscle_groups": {
      "primary": [
        "Bras"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 4,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Extension triceps avec halt√®re au-dessus de la t√™te",
    "name_eng": "Overhead Dumbbell Tricep Extension",
    "equipment": [
      "dumbbells"
    ],
    "level": "avanc√©",
    "body_part": "Bras",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 1
    },
    "progression_metadata": {
      "min_weight_increment": 2,
      "typical_increment": 5,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Bras"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 36,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Extension triceps couch√© avec barre EZ",
    "name_eng": "EZ Bar Lying Tricep Extension",
    "equipment": [
      "barre_ez",
      "banc_plat"
    ],
    "level": "avanc√©",
    "body_part": "Bras",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Bras"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 36,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Extension triceps √† la machine",
    "name_eng": "Machine Tricep Extension",
    "equipment": [
      "machine_triceps"
    ],
    "level": "avanc√©",
    "body_part": "Bras",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    },
    "progression_metadata": {
      "min_weight_increment": 2,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Bras"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 36,
    "injury_risk_zones": [],
    "can_superset_with": []
  },
  {
    "name_fr": "Kick back avec halt√®res",
    "name_eng": "Dumbbell Kickback",
    "equipment": [
      "dumbbells",
      "banc_plat"
    ],
    "level": "avanc√©",
    "body_part": "Bras",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    },
    "progression_metadata": {
      "min_weight_increment": 2.0,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Bras"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2.0,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Extension triceps √† la poulie avec corde",
    "name_eng": "Cable Tricep Pushdown with Rope",
    "equipment": [
      "poulies",
      "corde_triceps"
    ],
    "level": "finition",
    "body_part": "Bras",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2.0,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Bras"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 36,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Extension triceps √† la poulie invers√©e",
    "name_eng": "Reverse Cable Tricep Pushdown",
    "equipment": [
      "poulies"
    ],
    "level": "finition",
    "body_part": "Bras",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Bras"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 36,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Crunch au sol",
    "name_eng": "Floor Crunch",
    "equipment": [
      "poids_du_corps",
      "tapis"
    ],
    "level": "basique",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 5
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 5
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 2.5,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Abdominaux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Crunch √† la machine",
    "name_eng": "Machine Crunch",
    "equipment": [
      "machine_crunch"
    ],
    "level": "basique",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 5
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 5
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    },
    "progression_metadata": {
      "min_weight_increment": 2,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Abdominaux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2.0,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Relev√© de jambes suspendu",
    "name_eng": "Hanging Leg Raise",
    "equipment": [
      "barre_traction"
    ],
    "level": "avanc√©",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "pullup_bar_required": true
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 10.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 4
    },
    "muscle_groups": {
      "primary": [
        "Abdominaux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 3.0,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Relev√© de jambes au banc",
    "name_eng": "Bench Leg Raise",
    "equipment": [
      "banc_plat"
    ],
    "level": "avanc√©",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Abdominaux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Obliques √† la poulie",
    "name_eng": "Cable Oblique Twist",
    "equipment": [
      "poulies"
    ],
    "level": "avanc√©",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 4
    },
    "muscle_groups": {
      "primary": [
        "Abdominaux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 3,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Russian twist",
    "name_eng": "Russian Twist",
    "equipment": [
      "poids_du_corps",
      "tapis",
      "medicine_ball"
    ],
    "level": "avanc√©",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 5
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 5
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2.0,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Abdominaux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2.0,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Planche",
    "name_eng": "Plank",
    "equipment": [
      "poids_du_corps",
      "tapis"
    ],
    "level": "basique",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 10
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 45,
        "reps_tolerance": 15
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 60,
        "reps_tolerance": 15
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 75,
        "reps_tolerance": 15
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 90,
        "reps_tolerance": 15
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2.0,
      "typical_increment": 2.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Abdominaux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Planche lat√©rale",
    "name_eng": "Side Plank",
    "equipment": [
      "poids_du_corps",
      "tapis"
    ],
    "level": "avanc√©",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 5
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 10
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 45,
        "reps_tolerance": 10
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 60,
        "reps_tolerance": 10
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 75,
        "reps_tolerance": 10
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 3
    },
    "muscle_groups": {
      "primary": [
        "Abdominaux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2.0,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Abdominaux √† la roue",
    "name_eng": "Ab Wheel Rollout",
    "equipment": [
      "roue_abdos"
    ],
    "level": "avanc√©",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 5,
      "typical_increment": 10,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Abdominaux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Mountain climbers",
    "name_eng": "Mountain Climbers",
    "equipment": [
      "poids_du_corps",
      "tapis"
    ],
    "level": "finition",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 5
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 25,
        "reps_tolerance": 5
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 35,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 40,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 10.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Abdominaux"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2.0,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Pont fessier",
    "name_eng": "Glute Bridge",
    "equipment": [
      "poids_du_corps",
      "tapis"
    ],
    "level": "basique",
    "body_part": "Jambes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Jambes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2.0,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Hip thrust avec barre",
    "name_eng": "Barbell Hip Thrust",
    "equipment": [
      "barre_olympique",
      "banc_plat"
    ],
    "level": "basique",
    "body_part": "Jambes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 4
    },
    "muscle_groups": {
      "primary": [
        "Jambes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 4.0,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Fente arri√®re fessier avec halt√®res",
    "name_eng": "Dumbbell Reverse Lunge",
    "equipment": [
      "dumbbells"
    ],
    "level": "avanc√©",
    "body_part": "Jambes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    },
    "progression_metadata": {
      "min_weight_increment": 2,
      "typical_increment": 5,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Jambes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 24,
    "injury_risk_zones": [],
    "can_superset_with": []
  },
  {
    "name_fr": "Abduction fessier √† la machine",
    "name_eng": "Machine Hip Abduction",
    "equipment": [
      "machine_abduction"
    ],
    "level": "avanc√©",
    "body_part": "Jambes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Jambes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2.0,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Adduction fessier √† la machine",
    "name_eng": "Machine Hip Adduction",
    "equipment": [
      "machine_adduction"
    ],
    "level": "avanc√©",
    "body_part": "Jambes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 10.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Jambes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 4,
      "local_recovery_hours": 48,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 24,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Kick back fessier √† la poulie",
    "name_eng": "Cable Glute Kickback",
    "equipment": [
      "poulies"
    ],
    "level": "avanc√©",
    "body_part": "Jambes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": "7",
        "sets_tolerance": "1",
        "reps": "8",
        "reps_tolerance": "2"
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Jambes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2.0,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "√âl√©vation lat√©rale fessier au poids du corps",
    "name_eng": "Bodyweight Lateral Step-Up",
    "equipment": [
      "poids_du_corps",
      "banc_plat"
    ],
    "level": "finition",
    "body_part": "Jambes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    },
    "progression_metadata": {
      "min_weight_increment": 2,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Jambes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 36,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Mollets debout √† la machine",
    "name_eng": "Standing Machine Calf Raise",
    "equipment": [
      "machine_mollets_debout"
    ],
    "level": "basique",
    "body_part": "Jambes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 2.5,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Jambes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Mollets assis √† la machine",
    "name_eng": "Seated Machine Calf Raise",
    "equipment": [
      "machine_mollets_assis"
    ],
    "level": "basique",
    "body_part": "Jambes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    },
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Jambes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2.0,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 24,
    "injury_risk_zones": [],
    "can_superset_with": []
  },
  {
    "name_fr": "Mollets √† la presse √† cuisses",
    "name_eng": "Leg Press Calf Raise",
    "equipment": [
      "machine_jambes"
    ],
    "level": "basique",
    "body_part": "Jambes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    },
    "progression_metadata": {
      "min_weight_increment": 2.0,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 3
    },
    "muscle_groups": {
      "primary": [
        "Jambes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 4,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Mollets debout avec halt√®res",
    "name_eng": "Dumbbell Standing Calf Raise",
    "equipment": [
      "dumbbells"
    ],
    "level": "avanc√©",
    "body_part": "Jambes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    },
    "progression_metadata": {
      "min_weight_increment": 2.0,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Jambes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2.0,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 48,
    "injury_risk_zones": [
      "shoulder"
    ],
    "can_superset_with": []
  },
  {
    "name_fr": "Mollets √† la poulie",
    "name_eng": "Cable Calf Raise",
    "equipment": [
      "poulies"
    ],
    "level": "avanc√©",
    "body_part": "Jambes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2.5,
      "typical_increment": 5.0,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Jambes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2.0,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": true
    },
    "recovery_hours": 24,
    "injury_risk_zones": [],
    "can_superset_with": []
  },
  {
    "name_fr": "Saut √† la corde",
    "name_eng": "Jump Rope",
    "equipment": [
      "corde_sauter"
    ],
    "level": "finition",
    "body_part": "Jambes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 50,
        "reps_tolerance": 10
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 75,
        "reps_tolerance": 15
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 100,
        "reps_tolerance": 20
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 125,
        "reps_tolerance": 25
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 150,
        "reps_tolerance": 30
      }
    ],
    "equipment_specs": {},
    "progression_metadata": {
      "min_weight_increment": 2,
      "typical_increment": 5,
      "plateau_threshold": 3,
      "deload_percentage": 0.85,
      "skill_complexity": 1
    },
    "muscle_groups": {
      "primary": [
        "Jambes"
      ],
      "secondary": [],
      "stabilizers": [
        "Abdominaux"
      ]
    },
    "fatigue_profile": {
      "systemic_impact": 2,
      "local_recovery_hours": 24,
      "weekly_frequency_max": 3,
      "compound_movement": false
    },
    "recovery_hours": 24,
    "injury_risk_zones": [],
    "can_superset_with": []
  }
]
--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\exercises_old.json ---
--- Nom du fichier: exercises_old.json ---
--- Contenu ---
[
  {
    "name_fr": "D√©velopp√© assis √† la machine convergente",
    "name_eng": "Convergent Machine Seated Press",
    "equipment": [
      "machine_convergente"
    ],
    "level": "basic",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    }
  },
  {
    "name_fr": "D√©velopp√© couch√© avec halt√®res",
    "name_eng": "Dumbbell Bench Press",
    "equipment": [
      "dumbbells",
      "bench_plat"
    ],
    "level": "basic",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    }
  },
  {
    "name_fr": "D√©velopp√© couch√© √† la barre",
    "name_eng": "Barbell Bench Press",
    "equipment": [
      "barbell_standard",
      "bench_plat"
    ],
    "level": "basic",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    }
  },
  {
    "name_fr": "D√©velopp√© couch√© √† la machine convergente",
    "name_eng": "Convergent Machine Bench Press",
    "equipment": [
      "machine_convergente"
    ],
    "level": "basic",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    }
  },
  {
    "name_fr": "D√©velopp√© d√©clin√© avec halt√®res",
    "name_eng": "Decline Dumbbell Press",
    "equipment": [
      "dumbbells",
      "bench_declinable"
    ],
    "level": "basic",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2,
      "requires_decline": true
    }
  },
  {
    "name_fr": "D√©velopp√© d√©clin√© √† la barre",
    "name_eng": "Decline Barbell Press",
    "equipment": [
      "barbell_standard",
      "bench_declinable"
    ],
    "level": "basic",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1,
      "requires_decline": true
    }
  },
  {
    "name_fr": "D√©velopp√© inclin√© avec halt√®res",
    "name_eng": "Incline Dumbbell Press",
    "equipment": [
      "dumbbells",
      "bench_inclinable"
    ],
    "level": "basic",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2,
      "requires_incline": true
    }
  },
  {
    "name_fr": "D√©velopp√© inclin√© √† la barre",
    "name_eng": "Incline Barbell Press",
    "equipment": [
      "barbell_standard",
      "bench_inclinable"
    ],
    "level": "basic",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1,
      "requires_incline": true
    }
  },
  {
    "name_fr": "D√©velopp√© inclin√© √† la machine convergente",
    "name_eng": "Convergent Machine Incline Press",
    "equipment": [
      "machine_convergente"
    ],
    "level": "basic",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    }
  },
  {
    "name_fr": "Dips prise large buste pench√©",
    "name_eng": "Wide-Grip Dips",
    "equipment": [
      "dip_bars"
    ],
    "level": "basic",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "Pull over avec barre ou halt√®re",
    "name_eng": "Barbell or Dumbbell Pullover",
    "equipment": [
      "barbell_standard",
      "dumbbells",
      "bench_plat"
    ],
    "level": "basic",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1,
      "dumbbell_count": 2
    }
  },
  {
    "name_fr": "Pull over en travers d‚Äôun banc avec barre ou halt√®re",
    "name_eng": "Cross-Bench Barbell or Dumbbell Pullover",
    "equipment": [
      "barbell_standard",
      "dumbbells",
      "bench_plat"
    ],
    "level": "basic",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1,
      "dumbbell_count": 2
    }
  },
  {
    "name_fr": "√âcart√© couch√© avec halt√®res",
    "name_eng": "Dumbbell Fly",
    "equipment": [
      "dumbbells",
      "bench_plat"
    ],
    "level": "advanced",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    }
  },
  {
    "name_fr": "√âcart√© d√©clin√© avec halt√®res",
    "name_eng": "Decline Dumbbell Fly",
    "equipment": [
      "dumbbells",
      "bench_declinable"
    ],
    "level": "advanced",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2,
      "requires_decline": true
    }
  },
  {
    "name_fr": "√âcart√© inclin√© avec halt√®res",
    "name_eng": "Incline Dumbbell Fly",
    "equipment": [
      "dumbbells",
      "bench_inclinable"
    ],
    "level": "advanced",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2,
      "requires_incline": true
    }
  },
  {
    "name_fr": "√âcart√© pectoraux √† la machine",
    "name_eng": "Machine Pec Fly",
    "equipment": [
      "machine_pectoraux"
    ],
    "level": "advanced",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    }
  },
  {
    "name_fr": "Pompes prise large au sol",
    "name_eng": "Wide-Grip Push-Up",
    "equipment": [
      "bodyweight"
    ],
    "level": "advanced",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "Pull over √† la poulie basse",
    "name_eng": "Low Cable Pullover",
    "equipment": [
      "cables"
    ],
    "level": "advanced",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "√âcart√© √† la poulie vis √† vis basse",
    "name_eng": "Low Cable Crossover",
    "equipment": [
      "cables"
    ],
    "level": "finition",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "√âcart√© √† la poulie vis √† vis haute",
    "name_eng": "High Cable Crossover",
    "equipment": [
      "cables"
    ],
    "level": "finition",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "D√©velopp√© couch√© √† la machine",
    "name_eng": "Machine Bench Press",
    "equipment": [
      "machine_developpe"
    ],
    "level": "finition",
    "body_part": "Pectoraux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    }
  },
  {
    "name_fr": "Crunch abdominaux avec l‚ÄôAbmat",
    "name_eng": "Abmat Crunch",
    "equipment": [
      "abmat"
    ],
    "level": "basic",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 25,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 35,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "Crunch √† la poulie haute",
    "name_eng": "Cable Crunch",
    "equipment": [
      "cables"
    ],
    "level": "basic",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 25,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 35,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "Enroulement de bassin au sol avec l‚ÄôAbmat",
    "name_eng": "Abmat Reverse Crunch",
    "equipment": [
      "abmat"
    ],
    "level": "basic",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 25,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 35,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "Enroulement de bassin suspendu √† la barre fixe",
    "name_eng": "Hanging Leg Raise",
    "equipment": [
      "barre_traction"
    ],
    "level": "basic",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 25,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {
      "pullup_bar_required": true
    }
  },
  {
    "name_fr": "Obliques sur banc √† lombaires",
    "name_eng": "Back Extension Bench Side Crunch",
    "equipment": [
      "banc_lombaires"
    ],
    "level": "basic",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 25,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 35,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "Crunch abdominaux au sol",
    "name_eng": "Floor Crunch",
    "equipment": [
      "bodyweight"
    ],
    "level": "advanced",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 25,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 35,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "Crunch abdominaux √† la machine",
    "name_eng": "Machine Crunch",
    "equipment": [
      "machine_abdos"
    ],
    "level": "advanced",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 25,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 35,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {
      "machine_required": true
    }
  },
  {
    "name_fr": "Crunch abdominaux sur la Swiss Ball",
    "name_eng": "Swiss Ball Crunch",
    "equipment": [
      "swiss_ball"
    ],
    "level": "advanced",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 25,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 35,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "Crunch oblique au sol",
    "name_eng": "Oblique Floor Crunch",
    "equipment": [
      "bodyweight"
    ],
    "level": "advanced",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 25,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 35,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "Enroulement de bassin au sol",
    "name_eng": "Reverse Crunch",
    "equipment": [
      "bodyweight"
    ],
    "level": "advanced",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 25,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 35,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "Obliques avec l‚ÄôAbmat",
    "name_eng": "Abmat Oblique Crunch",
    "equipment": [
      "abmat"
    ],
    "level": "advanced",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 25,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 35,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "Obliques sur la Swiss Ball",
    "name_eng": "Swiss Ball Oblique Crunch",
    "equipment": [
      "swiss_ball"
    ],
    "level": "advanced",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 25,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 35,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "Obliques suspendu √† la barre fixe",
    "name_eng": "Hanging Oblique Raise",
    "equipment": [
      "barre_traction"
    ],
    "level": "advanced",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 25,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {
      "pullup_bar_required": true
    }
  },
  {
    "name_fr": "Rotation √† la machine",
    "name_eng": "Machine Torso Rotation",
    "equipment": [
      "machine_rotation"
    ],
    "level": "advanced",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 25,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 35,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {
      "machine_required": true
    }
  },
  {
    "name_fr": "Vacuum",
    "name_eng": "Stomach Vacuum",
    "equipment": [
      "bodyweight"
    ],
    "level": "advanced",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 25,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "Crunch abdominaux avec rotation au sol",
    "name_eng": "Rotational Floor Crunch",
    "equipment": [
      "bodyweight"
    ],
    "level": "finition",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 25,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 35,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "Drapeau du dragon",
    "name_eng": "Dragon Flag",
    "equipment": [
      "bench_plat"
    ],
    "level": "finition",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 3
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "Flexion lat√©rale avec halt√®re",
    "name_eng": "Dumbbell Side Bend",
    "equipment": [
      "dumbbells"
    ],
    "level": "finition",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    }
  },
  {
    "name_fr": "Gainage abdominal frontal",
    "name_eng": "Front Plank",
    "equipment": [
      "bodyweight"
    ],
    "level": "finition",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 45,
        "reps_tolerance": 5
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 60,
        "reps_tolerance": 5
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 75,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 90,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "Gainage abdominal oblique",
    "name_eng": "Side Plank",
    "equipment": [
      "bodyweight"
    ],
    "level": "finition",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 45,
        "reps_tolerance": 5
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 60,
        "reps_tolerance": 5
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 75,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 90,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "Rotation debout avec balais",
    "name_eng": "Standing Broomstick Twist",
    "equipment": [
      "balai"
    ],
    "level": "finition",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 25,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 35,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "Hack squat √† la machine",
    "name_eng": "Machine Hack Squat",
    "equipment": [
      "machine_hack_squat"
    ],
    "level": "basic",
    "body_part": "Quadriceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    }
  },
  {
    "name_fr": "Presse √† cuisses allong√©",
    "name_eng": "Lying Leg Press",
    "equipment": [
      "machine_jambes"
    ],
    "level": "basic",
    "body_part": "Quadriceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    }
  },
  {
    "name_fr": "Presse √† cuisses assis",
    "name_eng": "Seated Leg Press",
    "equipment": [
      "machine_jambes"
    ],
    "level": "basic",
    "body_part": "Quadriceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    }
  },
  {
    "name_fr": "Presse √† cuisses inclin√©",
    "name_eng": "Incline Leg Press",
    "equipment": [
      "machine_jambes"
    ],
    "level": "basic",
    "body_part": "Quadriceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    }
  },
  {
    "name_fr": "Squat avant avec barre",
    "name_eng": "Front Squat",
    "equipment": [
      "barbell_standard",
      "squat_rack"
    ],
    "level": "basic",
    "body_part": "Quadriceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    }
  },
  {
    "name_fr": "Squat avec barre derri√®re la nuque",
    "name_eng": "Back Squat",
    "equipment": [
      "barbell_standard",
      "squat_rack"
    ],
    "level": "basic",
    "body_part": "Quadriceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    }
  },
  {
    "name_fr": "Squat sumo avec barre",
    "name_eng": "Sumo Squat",
    "equipment": [
      "barbell_standard",
      "squat_rack"
    ],
    "level": "basic",
    "body_part": "Quadriceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    }
  },
  {
    "name_fr": "Fente lat√©rale avec barre",
    "name_eng": "Barbell Lateral Lunge",
    "equipment": [
      "barbell_standard"
    ],
    "level": "advanced",
    "body_part": "Quadriceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    }
  },
  {
    "name_fr": "Gobelet Squat avec halt√®re",
    "name_eng": "Goblet Squat",
    "equipment": [
      "dumbbells"
    ],
    "level": "advanced",
    "body_part": "Quadriceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    }
  },
  {
    "name_fr": "Hack squat avec une barre",
    "name_eng": "Barbell Hack Squat",
    "equipment": [
      "barbell_standard"
    ],
    "level": "advanced",
    "body_part": "Quadriceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    }
  },
  {
    "name_fr": "Mont√©e sur banc avec barre ou halt√®res",
    "name_eng": "Barbell or Dumbbell Step-Up",
    "equipment": [
      "barbell_standard",
      "dumbbells",
      "bench_plat"
    ],
    "level": "advanced",
    "body_part": "Quadriceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1,
      "dumbbell_count": 2
    }
  },
  {
    "name_fr": "Squat avec ceinture de lest",
    "name_eng": "Weighted Belt Squat",
    "equipment": [
      "ceinture_lest"
    ],
    "level": "advanced",
    "body_part": "Quadriceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "Squat √† la machine",
    "name_eng": "Machine Squat",
    "equipment": [
      "machine_squat"
    ],
    "level": "advanced",
    "body_part": "Quadriceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    }
  },
  {
    "name_fr": "Squat bulgare avec halt√®res",
    "name_eng": "Bulgarian Split Squat",
    "equipment": [
      "dumbbells",
      "bench_plat"
    ],
    "level": "advanced",
    "body_part": "Quadriceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    }
  },
  {
    "name_fr": "Fente avant avec barre ou halt√®res",
    "name_eng": "Barbell or Dumbbell Lunge",
    "equipment": [
      "barbell_standard",
      "dumbbells"
    ],
    "level": "finition",
    "body_part": "Quadriceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1,
      "dumbbell_count": 2
    }
  },
  {
    "name_fr": "Fente arri√®re avec barre ou halt√®res",
    "name_eng": "Reverse Barbell or Dumbbell Lunge",
    "equipment": [
      "barbell_standard",
      "dumbbells"
    ],
    "level": "finition",
    "body_part": "Quadriceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1,
      "dumbbell_count": 2
    }
  },
  {
    "name_fr": "Squat saut√©",
    "name_eng": "Jump Squat",
    "equipment": [
      "bodyweight"
    ],
    "level": "finition",
    "body_part": "Quadriceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "D√©velopp√© militaire avec barre",
    "name_eng": "Barbell Military Press",
    "equipment": [
      "barbell_standard",
      "squat_rack"
    ],
    "level": "basic",
    "body_part": "Delto√Ødes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    }
  },
  {
    "name_fr": "D√©velopp√© militaire avec halt√®res",
    "name_eng": "Dumbbell Military Press",
    "equipment": [
      "dumbbells"
    ],
    "level": "basic",
    "body_part": "Delto√Ødes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    }
  },
  {
    "name_fr": "D√©velopp√© militaire √† la machine",
    "name_eng": "Machine Military Press",
    "equipment": [
      "machine_epaules"
    ],
    "level": "basic",
    "body_part": "Delto√Ødes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    }
  },
  {
    "name_fr": "D√©velopp√© militaire assis avec barre",
    "name_eng": "Seated Barbell Military Press",
    "equipment": [
      "barbell_standard",
      "bench_plat"
    ],
    "level": "basic",
    "body_part": "Delto√Ødes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    }
  },
  {
    "name_fr": "D√©velopp√© militaire assis avec halt√®res",
    "name_eng": "Seated Dumbbell Military Press",
    "equipment": [
      "dumbbells",
      "bench_plat"
    ],
    "level": "basic",
    "body_part": "Delto√Ødes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    }
  },
  {
    "name_fr": "D√©velopp√© Arnold avec halt√®res",
    "name_eng": "Arnold Press",
    "equipment": [
      "dumbbells"
    ],
    "level": "advanced",
    "body_part": "Delto√Ødes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    }
  },
  {
    "name_fr": "√âl√©vation frontale √† la barre",
    "name_eng": "Barbell Front Raise",
    "equipment": [
      "barbell_standard"
    ],
    "level": "advanced",
    "body_part": "Delto√Ødes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1,
      "dumbbell_count": 2
    }
  },
  {
    "name_fr": "√âl√©vation frontale avec halt√®res",
    "name_eng": "Dumbbell Front Raise",
    "equipment": [
      "dumbbells"
    ],
    "level": "advanced",
    "body_part": "Delto√Ødes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    }
  },
  {
    "name_fr": "√âl√©vation lat√©rale avec halt√®res",
    "name_eng": "Dumbbell Lateral Raise",
    "equipment": [
      "dumbbells"
    ],
    "level": "advanced",
    "body_part": "Delto√Ødes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    }
  },
  {
    "name_fr": "√âl√©vation lat√©rale √† la poulie basse",
    "name_eng": "Low Cable Lateral Raise",
    "equipment": [
      "cables"
    ],
    "level": "advanced",
    "body_part": "Delto√Ødes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    }
  },
  {
    "name_fr": "Oiseau avec halt√®res",
    "name_eng": "Dumbbell Rear Delt Fly",
    "equipment": [
      "dumbbells",
      "bench_plat"
    ],
    "level": "advanced",
    "body_part": "Delto√Ødes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    }
  },
  {
    "name_fr": "Oiseau √† la poulie basse",
    "name_eng": "Low Cable Rear Delt Fly",
    "equipment": [
      "cables"
    ],
    "level": "advanced",
    "body_part": "Delto√Ødes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "√âl√©vation frontale √† la poulie basse",
    "name_eng": "Low Cable Front Raise",
    "equipment": [
      "cables"
    ],
    "level": "finition",
    "body_part": "Delto√Ødes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    }
  },
  {
    "name_fr": "Oiseau √† la machine",
    "name_eng": "Machine Rear Delt Fly",
    "equipment": [
      "machine_oiseau"
    ],
    "level": "finition",
    "body_part": "Delto√Ødes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    }
  },
  {
    "name_fr": "Curl avec barre droite",
    "name_eng": "Barbell Curl",
    "equipment": [
      "barbell_standard"
    ],
    "level": "basic",
    "body_part": "Biceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    }
  },
  {
    "name_fr": "Curl avec barre EZ",
    "name_eng": "EZ Bar Curl",
    "equipment": [
      "barbell_ez"
    ],
    "level": "basic",
    "body_part": "Biceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    }
  },
  {
    "name_fr": "Curl avec halt√®res",
    "name_eng": "Dumbbell Curl",
    "equipment": [
      "dumbbells"
    ],
    "level": "basic",
    "body_part": "Biceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    }
  },
  {
    "name_fr": "Curl inclin√© avec halt√®res",
    "name_eng": "Incline Dumbbell Curl",
    "equipment": [
      "dumbbells",
      "bench_inclinable"
    ],
    "level": "basic",
    "body_part": "Biceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2,
      "requires_incline": true
    }
  },
  {
    "name_fr": "Curl marteau avec halt√®res",
    "name_eng": "Hammer Curl",
    "equipment": [
      "dumbbells"
    ],
    "level": "basic",
    "body_part": "Biceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    }
  },
  {
    "name_fr": "Curl √† la poulie basse",
    "name_eng": "Low Cable Curl",
    "equipment": [
      "cables"
    ],
    "level": "advanced",
    "body_part": "Biceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "Curl √† la poulie haute",
    "name_eng": "High Cable Curl",
    "equipment": [
      "cables"
    ],
    "level": "advanced",
    "body_part": "Biceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "Curl concentr√© avec halt√®re",
    "name_eng": "Concentration Curl",
    "equipment": [
      "dumbbells",
      "bench_plat"
    ],
    "level": "advanced",
    "body_part": "Biceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 1
    }
  },
  {
    "name_fr": "Curl pr√™cheur avec barre droite",
    "name_eng": "Barbell Preacher Curl",
    "equipment": [
      "barbell_standard",
      "banc_preacher"
    ],
    "level": "advanced",
    "body_part": "Biceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    }
  },
  {
    "name_fr": "Curl pr√™cheur avec barre EZ",
    "name_eng": "EZ Bar Preacher Curl",
    "equipment": [
      "barbell_ez",
      "banc_preacher"
    ],
    "level": "advanced",
    "body_part": "Biceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    }
  },
  {
    "name_fr": "Curl pr√™cheur avec halt√®res",
    "name_eng": "Dumbbell Preacher Curl",
    "equipment": [
      "dumbbells",
      "banc_preacher"
    ],
    "level": "advanced",
    "body_part": "Biceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 1
    }
  },
  {
    "name_fr": "Curl √† la machine",
    "name_eng": "Machine Curl",
    "equipment": [
      "machine_biceps"
    ],
    "level": "finition",
    "body_part": "Biceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    }
  },
  {
    "name_fr": "Curl invers√© avec barre",
    "name_eng": "Reverse Barbell Curl",
    "equipment": [
      "barbell_standard"
    ],
    "level": "advanced",
    "body_part": "Avants-Bras",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    }
  },
  {
    "name_fr": "Curl invers√© avec halt√®res",
    "name_eng": "Reverse Dumbbell Curl",
    "equipment": [
      "dumbbells"
    ],
    "level": "advanced",
    "body_part": "Avants-Bras",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    }
  },
  {
    "name_fr": "Curl poignet avec barre",
    "name_eng": "Barbell Wrist Curl",
    "equipment": [
      "barbell_standard",
      "bench_plat"
    ],
    "level": "advanced",
    "body_part": "Avants-Bras",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    }
  },
  {
    "name_fr": "Curl poignet avec halt√®res",
    "name_eng": "Dumbbell Wrist Curl",
    "equipment": [
      "dumbbells",
      "bench_plat"
    ],
    "level": "advanced",
    "body_part": "Avants-Bras",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    }
  },
  {
    "name_fr": "Curl invers√© √† la poulie basse",
    "name_eng": "Low Cable Reverse Curl",
    "equipment": [
      "cables"
    ],
    "level": "finition",
    "body_part": "Avants-Bras",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "Curl poignet √† la machine",
    "name_eng": "Machine Wrist Curl",
    "equipment": [
      "machine_poignets"
    ],
    "level": "finition",
    "body_part": "Avants-Bras",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    }
  },
  {
    "name_fr": "Rowing √† la T-bar",
    "name_eng": "T-Bar Row",
    "equipment": [
      "machine_t_bar",
      "barbell_standard"
    ],
    "level": "basic",
    "body_part": "Trap√®zes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1,
      "machine_required": true
    }
  },
  {
    "name_fr": "Shrug avec barre",
    "name_eng": "Barbell Shrug",
    "equipment": [
      "barbell_standard"
    ],
    "level": "basic",
    "body_part": "Trap√®zes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    }
  },
  {
    "name_fr": "Shrug avec halt√®res",
    "name_eng": "Dumbbell Shrug",
    "equipment": [
      "dumbbells"
    ],
    "level": "basic",
    "body_part": "Trap√®zes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    }
  },
  {
    "name_fr": "Shrug √† la machine",
    "name_eng": "Machine Shrug",
    "equipment": [
      "machine_shrug"
    ],
    "level": "basic",
    "body_part": "Trap√®zes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 5,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    }
  },
  {
    "name_fr": "Face pull √† la poulie",
    "name_eng": "Cable Face Pull",
    "equipment": [
      "cables"
    ],
    "level": "advanced",
    "body_part": "Trap√®zes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "Rowing vertical avec barre",
    "name_eng": "Barbell Upright Row",
    "equipment": [
      "barbell_standard"
    ],
    "level": "advanced",
    "body_part": "Trap√®zes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    }
  },
  {
    "name_fr": "Rowing vertical avec halt√®res",
    "name_eng": "Dumbbell Upright Row",
    "equipment": [
      "dumbbells"
    ],
    "level": "advanced",
    "body_part": "Trap√®zes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    }
  },
  {
    "name_fr": "Shrug √† la poulie basse",
    "name_eng": "Low Cable Shrug",
    "equipment": [
      "cables"
    ],
    "level": "finition",
    "body_part": "Trap√®zes",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "Barre au front triceps avec barre ou halt√®res",
    "name_eng": "Skull Crusher",
    "equipment": [
      "barbell_standard",
      "dumbbells",
      "bench_plat"
    ],
    "level": "basic",
    "body_part": "Triceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1,
      "dumbbell_count": 2
    }
  },
  {
    "name_fr": "Dips prise √©troite",
    "name_eng": "Close-Grip Dips",
    "equipment": [
      "dip_bars"
    ],
    "level": "basic",
    "body_part": "Triceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "Extension triceps √† la poulie haute",
    "name_eng": "Cable Tricep Pushdown",
    "equipment": [
      "cables"
    ],
    "level": "basic",
    "body_part": "Triceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "D√©velopp√© couch√© prise serr√©e avec barre",
    "name_eng": "Close-Grip Barbell Bench Press",
    "equipment": [
      "barbell_standard",
      "bench_plat"
    ],
    "level": "advanced",
    "body_part": "Triceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    }
  },
  {
    "name_fr": "Extension triceps avec halt√®re au-dessus de la t√™te",
    "name_eng": "Overhead Dumbbell Tricep Extension",
    "equipment": [
      "dumbbells"
    ],
    "level": "advanced",
    "body_part": "Triceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 1
    }
  },
  {
    "name_fr": "Extension triceps couch√© avec barre EZ",
    "name_eng": "EZ Bar Lying Tricep Extension",
    "equipment": [
      "barbell_ez",
      "bench_plat"
    ],
    "level": "advanced",
    "body_part": "Triceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    }
  },
  {
    "name_fr": "Extension triceps √† la machine",
    "name_eng": "Machine Tricep Extension",
    "equipment": [
      "machine_triceps"
    ],
    "level": "advanced",
    "body_part": "Triceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    }
  },
  {
    "name_fr": "Kick back avec halt√®res",
    "name_eng": "Dumbbell Kickback",
    "equipment": [
      "dumbbells",
      "bench_plat"
    ],
    "level": "advanced",
    "body_part": "Triceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    }
  },
  {
    "name_fr": "Extension triceps √† la poulie avec corde",
    "name_eng": "Cable Tricep Pushdown with Rope",
    "equipment": [
      "cables",
      "corde_triceps"
    ],
    "level": "finition",
    "body_part": "Triceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "Extension triceps √† la poulie invers√©e",
    "name_eng": "Reverse Cable Tricep Pushdown",
    "equipment": [
      "cables"
    ],
    "level": "finition",
    "body_part": "Triceps",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "Crunch au sol",
    "name_eng": "Floor Crunch",
    "equipment": [
      "bodyweight",
      "tapis"
    ],
    "level": "basic",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 5
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 5
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "Crunch √† la machine",
    "name_eng": "Machine Crunch",
    "equipment": [
      "machine_crunch"
    ],
    "level": "basic",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 5
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 5
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    }
  },
  {
    "name_fr": "Relev√© de jambes suspendu",
    "name_eng": "Hanging Leg Raise",
    "equipment": [
      "barre_traction"
    ],
    "level": "advanced",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "pullup_bar_required": true
    }
  },
  {
    "name_fr": "Relev√© de jambes au banc",
    "name_eng": "Bench Leg Raise",
    "equipment": [
      "bench_plat"
    ],
    "level": "advanced",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "Obliques √† la poulie",
    "name_eng": "Cable Oblique Twist",
    "equipment": [
      "cables"
    ],
    "level": "advanced",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "Russian twist",
    "name_eng": "Russian Twist",
    "equipment": [
      "bodyweight",
      "tapis",
      "medicine_ball"
    ],
    "level": "advanced",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 5
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 5
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "Planche",
    "name_eng": "Plank",
    "equipment": [
      "bodyweight",
      "tapis"
    ],
    "level": "basic",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 10
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 45,
        "reps_tolerance": 15
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 60,
        "reps_tolerance": 15
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 75,
        "reps_tolerance": 15
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 90,
        "reps_tolerance": 15
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "Planche lat√©rale",
    "name_eng": "Side Plank",
    "equipment": [
      "bodyweight",
      "tapis"
    ],
    "level": "advanced",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 5
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 10
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 45,
        "reps_tolerance": 10
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 60,
        "reps_tolerance": 10
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 75,
        "reps_tolerance": 10
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "Abdominaux √† la roue",
    "name_eng": "Ab Wheel Rollout",
    "equipment": [
      "roue_abdos"
    ],
    "level": "advanced",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "Mountain climbers",
    "name_eng": "Mountain Climbers",
    "equipment": [
      "bodyweight",
      "tapis"
    ],
    "level": "finition",
    "body_part": "Abdominaux",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 20,
        "reps_tolerance": 5
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 25,
        "reps_tolerance": 5
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 30,
        "reps_tolerance": 5
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 35,
        "reps_tolerance": 5
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 40,
        "reps_tolerance": 5
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "Pont fessier",
    "name_eng": "Glute Bridge",
    "equipment": [
      "bodyweight",
      "tapis"
    ],
    "level": "basic",
    "body_part": "Fessiers",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "Hip thrust avec barre",
    "name_eng": "Barbell Hip Thrust",
    "equipment": [
      "barbell_standard",
      "bench_plat"
    ],
    "level": "basic",
    "body_part": "Fessiers",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 6,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "barbell_count": 1
    }
  },
  {
    "name_fr": "Fente arri√®re fessier avec halt√®res",
    "name_eng": "Dumbbell Reverse Lunge",
    "equipment": [
      "dumbbells"
    ],
    "level": "advanced",
    "body_part": "Fessiers",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    }
  },
  {
    "name_fr": "Abduction fessier √† la machine",
    "name_eng": "Machine Hip Abduction",
    "equipment": [
      "machine_abduction"
    ],
    "level": "advanced",
    "body_part": "Fessiers",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    }
  },
  {
    "name_fr": "Adduction fessier √† la machine",
    "name_eng": "Machine Hip Adduction",
    "equipment": [
      "machine_adduction"
    ],
    "level": "advanced",
    "body_part": "Fessiers",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 8,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    }
  },
  {
    "name_fr": "Kick back fessier √† la poulie",
    "name_eng": "Cable Glute Kickback",
    "equipment": [
      "cables"
    ],
    "level": "advanced",
    "body_part": "Fessiers",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": "7",
        "sets_tolerance": "1",
        "reps": "8",
        "reps_tolerance": "2"
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "√âl√©vation lat√©rale fessier au poids du corps",
    "name_eng": "Bodyweight Lateral Step-Up",
    "equipment": [
      "bodyweight",
      "bench_plat"
    ],
    "level": "finition",
    "body_part": "Fessiers",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    }
  },
  {
    "name_fr": "Mollets debout √† la machine",
    "name_eng": "Standing Machine Calf Raise",
    "equipment": [
      "machine_mollets_debout"
    ],
    "level": "basic",
    "body_part": "Mollets",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    }
  },
  {
    "name_fr": "Mollets assis √† la machine",
    "name_eng": "Seated Machine Calf Raise",
    "equipment": [
      "machine_mollets_assis"
    ],
    "level": "basic",
    "body_part": "Mollets",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    }
  },
  {
    "name_fr": "Mollets √† la presse √† cuisses",
    "name_eng": "Leg Press Calf Raise",
    "equipment": [
      "machine_jambes"
    ],
    "level": "basic",
    "body_part": "Mollets",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "machine_required": true
    }
  },
  {
    "name_fr": "Mollets debout avec halt√®res",
    "name_eng": "Dumbbell Standing Calf Raise",
    "equipment": [
      "dumbbells"
    ],
    "level": "advanced",
    "body_part": "Mollets",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {
      "dumbbell_count": 2
    }
  },
  {
    "name_fr": "Mollets √† la poulie",
    "name_eng": "Cable Calf Raise",
    "equipment": [
      "cables"
    ],
    "level": "advanced",
    "body_part": "Mollets",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 15,
        "reps_tolerance": 3
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 3
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 12,
        "reps_tolerance": 2
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 10,
        "reps_tolerance": 2
      }
    ],
    "equipment_specs": {}
  },
  {
    "name_fr": "Saut √† la corde",
    "name_eng": "Jump Rope",
    "equipment": [
      "corde_sauter"
    ],
    "level": "finition",
    "body_part": "Mollets",
    "sets_reps": [
      {
        "level": "beginner",
        "sets": 3,
        "sets_tolerance": 1,
        "reps": 50,
        "reps_tolerance": 10
      },
      {
        "level": "intermediate",
        "sets": 4,
        "sets_tolerance": 1,
        "reps": 75,
        "reps_tolerance": 15
      },
      {
        "level": "advanced",
        "sets": 5,
        "sets_tolerance": 1,
        "reps": 100,
        "reps_tolerance": 20
      },
      {
        "level": "elite",
        "sets": 6,
        "sets_tolerance": 1,
        "reps": 125,
        "reps_tolerance": 25
      },
      {
        "level": "extreme",
        "sets": 7,
        "sets_tolerance": 1,
        "reps": 150,
        "reps_tolerance": 30
      }
    ],
    "equipment_specs": {}
  }
]
--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\render.yaml ---
--- Nom du fichier: render.yaml ---
--- Contenu ---
services:
  - type: web
    name: gym-app
    env: python
    buildCommand: "pip install -r requirements.txt"
    startCommand: "gunicorn backend.main:app --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:$PORT"
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: fitness-db
          property: connectionString

databases:
  - name: fitness-db
    databaseName: fitness_db
    user: fitness_user
    plan: free
--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\requirements.txt ---
--- Nom du fichier: requirements.txt ---
--- Contenu ---
fastapi==0.104.1
uvicorn[standard]==0.24.0
sqlalchemy==2.0.23
pydantic==2.5.0
python-multipart==0.0.6
python-dotenv==1.0.0
psycopg2-binary==2.9.9
gunicorn==21.2.0
pytest ==8.3.2
--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\run.bat ---
--- Nom du fichier: run.bat ---
--- Contenu ---
@echo off
cd backend
python main.py
--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\COMMIT_EDITMSG ---
--- Nom du fichier: COMMIT_EDITMSG ---
--- Contenu ---
adaptativesession v1.1

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\config ---
--- Nom du fichier: config ---
--- Contenu ---
[core]
	repositoryformatversion = 0
	filemode = false
	bare = false
	logallrefupdates = true
	ignorecase = true
[remote "origin"]
	url = https://github.com/a-niva/gym_app.git
	fetch = +refs/heads/*:refs/remotes/origin/*
[branch "main"]
	vscode-merge-base = origin/main
	vscode-merge-base = origin/main

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\description ---
--- Nom du fichier: description ---
--- Contenu ---
Unnamed repository; edit this file 'description' to name the repository.

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\FETCH_HEAD ---
--- Nom du fichier: FETCH_HEAD ---
--- Contenu ---
4207dc66139a13313b89baa9762c4002486f655a		branch 'main' of https://github.com/a-niva/gym_app

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\HEAD ---
--- Nom du fichier: HEAD ---
--- Contenu ---
ref: refs/heads/main

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\index ---
--- Nom du fichier: index ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\ORIG_HEAD ---
--- Nom du fichier: ORIG_HEAD ---
--- Contenu ---
b3766da5f190f3f62367336985524e8beb1c0ec2

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\hooks\applypatch-msg.sample ---
--- Nom du fichier: applypatch-msg.sample ---
--- Contenu ---
#!/bin/sh
#
# An example hook script to check the commit log message taken by
# applypatch from an e-mail message.
#
# The hook should exit with non-zero status after issuing an
# appropriate message if it wants to stop the commit.  The hook is
# allowed to edit the commit message file.
#
# To enable this hook, rename this file to "applypatch-msg".

. git-sh-setup
commitmsg="$(git rev-parse --git-path hooks/commit-msg)"
test -x "$commitmsg" && exec "$commitmsg" ${1+"$@"}
:

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\hooks\commit-msg.sample ---
--- Nom du fichier: commit-msg.sample ---
--- Contenu ---
#!/bin/sh
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"

# This example catches duplicate Signed-off-by lines.

test "" = "$(grep '^Signed-off-by: ' "$1" |
	 sort | uniq -c | sed -e '/^[ 	]*1[ 	]/d')" || {
	echo >&2 Duplicate Signed-off-by lines.
	exit 1
}

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\hooks\fsmonitor-watchman.sample ---
--- Nom du fichier: fsmonitor-watchman.sample ---
--- Contenu ---
#!/usr/bin/perl

use strict;
use warnings;
use IPC::Open2;

# An example hook script to integrate Watchman
# (https://facebook.github.io/watchman/) with git to speed up detecting
# new and modified files.
#
# The hook is passed a version (currently 2) and last update token
# formatted as a string and outputs to stdout a new update token and
# all files that have been modified since the update token. Paths must
# be relative to the root of the working tree and separated by a single NUL.
#
# To enable this hook, rename this file to "query-watchman" and set
# 'git config core.fsmonitor .git/hooks/query-watchman'
#
my ($version, $last_update_token) = @ARGV;

# Uncomment for debugging
# print STDERR "$0 $version $last_update_token\n";

# Check the hook interface version
if ($version ne 2) {
	die "Unsupported query-fsmonitor hook version '$version'.\n" .
	    "Falling back to scanning...\n";
}

my $git_work_tree = get_working_dir();

my $retry = 1;

my $json_pkg;
eval {
	require JSON::XS;
	$json_pkg = "JSON::XS";
	1;
} or do {
	require JSON::PP;
	$json_pkg = "JSON::PP";
};

launch_watchman();

sub launch_watchman {
	my $o = watchman_query();
	if (is_work_tree_watched($o)) {
		output_result($o->{clock}, @{$o->{files}});
	}
}

sub output_result {
	my ($clockid, @files) = @_;

	# Uncomment for debugging watchman output
	# open (my $fh, ">", ".git/watchman-output.out");
	# binmode $fh, ":utf8";
	# print $fh "$clockid\n@files\n";
	# close $fh;

	binmode STDOUT, ":utf8";
	print $clockid;
	print "\0";
	local $, = "\0";
	print @files;
}

sub watchman_clock {
	my $response = qx/watchman clock "$git_work_tree"/;
	die "Failed to get clock id on '$git_work_tree'.\n" .
		"Falling back to scanning...\n" if $? != 0;

	return $json_pkg->new->utf8->decode($response);
}

sub watchman_query {
	my $pid = open2(\*CHLD_OUT, \*CHLD_IN, 'watchman -j --no-pretty')
	or die "open2() failed: $!\n" .
	"Falling back to scanning...\n";

	# In the query expression below we're asking for names of files that
	# changed since $last_update_token but not from the .git folder.
	#
	# To accomplish this, we're using the "since" generator to use the
	# recency index to select candidate nodes and "fields" to limit the
	# output to file names only. Then we're using the "expression" term to
	# further constrain the results.
	my $last_update_line = "";
	if (substr($last_update_token, 0, 1) eq "c") {
		$last_update_token = "\"$last_update_token\"";
		$last_update_line = qq[\n"since": $last_update_token,];
	}
	my $query = <<"	END";
		["query", "$git_work_tree", {$last_update_line
			"fields": ["name"],
			"expression": ["not", ["dirname", ".git"]]
		}]
	END

	# Uncomment for debugging the watchman query
	# open (my $fh, ">", ".git/watchman-query.json");
	# print $fh $query;
	# close $fh;

	print CHLD_IN $query;
	close CHLD_IN;
	my $response = do {local $/; <CHLD_OUT>};

	# Uncomment for debugging the watch response
	# open ($fh, ">", ".git/watchman-response.json");
	# print $fh $response;
	# close $fh;

	die "Watchman: command returned no output.\n" .
	"Falling back to scanning...\n" if $response eq "";
	die "Watchman: command returned invalid output: $response\n" .
	"Falling back to scanning...\n" unless $response =~ /^\{/;

	return $json_pkg->new->utf8->decode($response);
}

sub is_work_tree_watched {
	my ($output) = @_;
	my $error = $output->{error};
	if ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {
		$retry--;
		my $response = qx/watchman watch "$git_work_tree"/;
		die "Failed to make watchman watch '$git_work_tree'.\n" .
		    "Falling back to scanning...\n" if $? != 0;
		$output = $json_pkg->new->utf8->decode($response);
		$error = $output->{error};
		die "Watchman: $error.\n" .
		"Falling back to scanning...\n" if $error;

		# Uncomment for debugging watchman output
		# open (my $fh, ">", ".git/watchman-output.out");
		# close $fh;

		# Watchman will always return all files on the first query so
		# return the fast "everything is dirty" flag to git and do the
		# Watchman query just to get it over with now so we won't pay
		# the cost in git to look up each individual file.
		my $o = watchman_clock();
		$error = $output->{error};

		die "Watchman: $error.\n" .
		"Falling back to scanning...\n" if $error;

		output_result($o->{clock}, ("/"));
		$last_update_token = $o->{clock};

		eval { launch_watchman() };
		return 0;
	}

	die "Watchman: $error.\n" .
	"Falling back to scanning...\n" if $error;

	return 1;
}

sub get_working_dir {
	my $working_dir;
	if ($^O =~ 'msys' || $^O =~ 'cygwin') {
		$working_dir = Win32::GetCwd();
		$working_dir =~ tr/\\/\//;
	} else {
		require Cwd;
		$working_dir = Cwd::cwd();
	}

	return $working_dir;
}

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\hooks\post-update.sample ---
--- Nom du fichier: post-update.sample ---
--- Contenu ---
#!/bin/sh
#
# An example hook script to prepare a packed repository for use over
# dumb transports.
#
# To enable this hook, rename this file to "post-update".

exec git update-server-info

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\hooks\pre-applypatch.sample ---
--- Nom du fichier: pre-applypatch.sample ---
--- Contenu ---
#!/bin/sh
#
# An example hook script to verify what is about to be committed
# by applypatch from an e-mail message.
#
# The hook should exit with non-zero status after issuing an
# appropriate message if it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-applypatch".

. git-sh-setup
precommit="$(git rev-parse --git-path hooks/pre-commit)"
test -x "$precommit" && exec "$precommit" ${1+"$@"}
:

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\hooks\pre-commit.sample ---
--- Nom du fichier: pre-commit.sample ---
--- Contenu ---
#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=$(git hash-object -t tree /dev/null)
fi

# If you want to allow non-ASCII filenames set this variable to true.
allownonascii=$(git config --type=bool hooks.allownonascii)

# Redirect output to stderr.
exec 1>&2

# Cross platform projects tend to avoid non-ASCII filenames; prevent
# them from being added to the repository. We exploit the fact that the
# printable range starts at the space character and ends with tilde.
if [ "$allownonascii" != "true" ] &&
	# Note that the use of brackets around a tr range is ok here, (it's
	# even required, for portability to Solaris 10's /usr/bin/tr), since
	# the square bracket bytes happen to fall in the designated range.
	test $(git diff-index --cached --name-only --diff-filter=A -z $against |
	  LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
then
	cat <<\EOF
Error: Attempt to add a non-ASCII file name.

This can cause problems if you want to work with people on other platforms.

To be portable it is advisable to rename the file.

If you know what you are doing you can disable this check using:

  git config hooks.allownonascii true
EOF
	exit 1
fi

# If there are whitespace errors, print the offending file names and fail.
exec git diff-index --check --cached $against --

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\hooks\pre-merge-commit.sample ---
--- Nom du fichier: pre-merge-commit.sample ---
--- Contenu ---
#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git merge" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message to
# stderr if it wants to stop the merge commit.
#
# To enable this hook, rename this file to "pre-merge-commit".

. git-sh-setup
test -x "$GIT_DIR/hooks/pre-commit" &&
        exec "$GIT_DIR/hooks/pre-commit"
:

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\hooks\pre-push.sample ---
--- Nom du fichier: pre-push.sample ---
--- Contenu ---
#!/bin/sh

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local oid> <remote ref> <remote oid>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

remote="$1"
url="$2"

zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')

while read local_ref local_oid remote_ref remote_oid
do
	if test "$local_oid" = "$zero"
	then
		# Handle delete
		:
	else
		if test "$remote_oid" = "$zero"
		then
			# New branch, examine all commits
			range="$local_oid"
		else
			# Update to existing branch, examine new commits
			range="$remote_oid..$local_oid"
		fi

		# Check for WIP commit
		commit=$(git rev-list -n 1 --grep '^WIP' "$range")
		if test -n "$commit"
		then
			echo >&2 "Found WIP commit in $local_ref, not pushing"
			exit 1
		fi
	fi
done

exit 0

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\hooks\pre-rebase.sample ---
--- Nom du fichier: pre-rebase.sample ---
--- Contenu ---
#!/bin/sh
#
# Copyright (c) 2006, 2008 Junio C Hamano
#
# The "pre-rebase" hook is run just before "git rebase" starts doing
# its job, and can prevent the command from running by exiting with
# non-zero status.
#
# The hook is called with the following parameters:
#
# $1 -- the upstream the series was forked from.
# $2 -- the branch being rebased (or empty when rebasing the current branch).
#
# This sample shows how to prevent topic branches that are already
# merged to 'next' branch from getting rebased, because allowing it
# would result in rebasing already published history.

publish=next
basebranch="$1"
if test "$#" = 2
then
	topic="refs/heads/$2"
else
	topic=`git symbolic-ref HEAD` ||
	exit 0 ;# we do not interrupt rebasing detached HEAD
fi

case "$topic" in
refs/heads/??/*)
	;;
*)
	exit 0 ;# we do not interrupt others.
	;;
esac

# Now we are dealing with a topic branch being rebased
# on top of master.  Is it OK to rebase it?

# Does the topic really exist?
git show-ref -q "$topic" || {
	echo >&2 "No such branch $topic"
	exit 1
}

# Is topic fully merged to master?
not_in_master=`git rev-list --pretty=oneline ^master "$topic"`
if test -z "$not_in_master"
then
	echo >&2 "$topic is fully merged to master; better remove it."
	exit 1 ;# we could allow it, but there is no point.
fi

# Is topic ever merged to next?  If so you should not be rebasing it.
only_next_1=`git rev-list ^master "^$topic" ${publish} | sort`
only_next_2=`git rev-list ^master           ${publish} | sort`
if test "$only_next_1" = "$only_next_2"
then
	not_in_topic=`git rev-list "^$topic" master`
	if test -z "$not_in_topic"
	then
		echo >&2 "$topic is already up to date with master"
		exit 1 ;# we could allow it, but there is no point.
	else
		exit 0
	fi
else
	not_in_next=`git rev-list --pretty=oneline ^${publish} "$topic"`
	/usr/bin/perl -e '
		my $topic = $ARGV[0];
		my $msg = "* $topic has commits already merged to public branch:\n";
		my (%not_in_next) = map {
			/^([0-9a-f]+) /;
			($1 => 1);
		} split(/\n/, $ARGV[1]);
		for my $elem (map {
				/^([0-9a-f]+) (.*)$/;
				[$1 => $2];
			} split(/\n/, $ARGV[2])) {
			if (!exists $not_in_next{$elem->[0]}) {
				if ($msg) {
					print STDERR $msg;
					undef $msg;
				}
				print STDERR " $elem->[1]\n";
			}
		}
	' "$topic" "$not_in_next" "$not_in_master"
	exit 1
fi

<<\DOC_END

This sample hook safeguards topic branches that have been
published from being rewound.

The workflow assumed here is:

 * Once a topic branch forks from "master", "master" is never
   merged into it again (either directly or indirectly).

 * Once a topic branch is fully cooked and merged into "master",
   it is deleted.  If you need to build on top of it to correct
   earlier mistakes, a new topic branch is created by forking at
   the tip of the "master".  This is not strictly necessary, but
   it makes it easier to keep your history simple.

 * Whenever you need to test or publish your changes to topic
   branches, merge them into "next" branch.

The script, being an example, hardcodes the publish branch name
to be "next", but it is trivial to make it configurable via
$GIT_DIR/config mechanism.

With this workflow, you would want to know:

(1) ... if a topic branch has ever been merged to "next".  Young
    topic branches can have stupid mistakes you would rather
    clean up before publishing, and things that have not been
    merged into other branches can be easily rebased without
    affecting other people.  But once it is published, you would
    not want to rewind it.

(2) ... if a topic branch has been fully merged to "master".
    Then you can delete it.  More importantly, you should not
    build on top of it -- other people may already want to
    change things related to the topic as patches against your
    "master", so if you need further changes, it is better to
    fork the topic (perhaps with the same name) afresh from the
    tip of "master".

Let's look at this example:

		   o---o---o---o---o---o---o---o---o---o "next"
		  /       /           /           /
		 /   a---a---b A     /           /
		/   /               /           /
	       /   /   c---c---c---c B         /
	      /   /   /             \         /
	     /   /   /   b---b C     \       /
	    /   /   /   /             \     /
    ---o---o---o---o---o---o---o---o---o---o---o "master"


A, B and C are topic branches.

 * A has one fix since it was merged up to "next".

 * B has finished.  It has been fully merged up to "master" and "next",
   and is ready to be deleted.

 * C has not merged to "next" at all.

We would want to allow C to be rebased, refuse A, and encourage
B to be deleted.

To compute (1):

	git rev-list ^master ^topic next
	git rev-list ^master        next

	if these match, topic has not merged in next at all.

To compute (2):

	git rev-list master..topic

	if this is empty, it is fully merged to "master".

DOC_END

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\hooks\pre-receive.sample ---
--- Nom du fichier: pre-receive.sample ---
--- Contenu ---
#!/bin/sh
#
# An example hook script to make use of push options.
# The example simply echoes all push options that start with 'echoback='
# and rejects all pushes when the "reject" push option is used.
#
# To enable this hook, rename this file to "pre-receive".

if test -n "$GIT_PUSH_OPTION_COUNT"
then
	i=0
	while test "$i" -lt "$GIT_PUSH_OPTION_COUNT"
	do
		eval "value=\$GIT_PUSH_OPTION_$i"
		case "$value" in
		echoback=*)
			echo "echo from the pre-receive-hook: ${value#*=}" >&2
			;;
		reject)
			exit 1
		esac
		i=$((i + 1))
	done
fi

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\hooks\prepare-commit-msg.sample ---
--- Nom du fichier: prepare-commit-msg.sample ---
--- Contenu ---
#!/bin/sh
#
# An example hook script to prepare the commit log message.
# Called by "git commit" with the name of the file that has the
# commit message, followed by the description of the commit
# message's source.  The hook's purpose is to edit the commit
# message file.  If the hook fails with a non-zero status,
# the commit is aborted.
#
# To enable this hook, rename this file to "prepare-commit-msg".

# This hook includes three examples. The first one removes the
# "# Please enter the commit message..." help message.
#
# The second includes the output of "git diff --name-status -r"
# into the message, just before the "git status" output.  It is
# commented because it doesn't cope with --amend or with squashed
# commits.
#
# The third example adds a Signed-off-by line to the message, that can
# still be edited.  This is rarely a good idea.

COMMIT_MSG_FILE=$1
COMMIT_SOURCE=$2
SHA1=$3

/usr/bin/perl -i.bak -ne 'print unless(m/^. Please enter the commit message/..m/^#$/)' "$COMMIT_MSG_FILE"

# case "$COMMIT_SOURCE,$SHA1" in
#  ,|template,)
#    /usr/bin/perl -i.bak -pe '
#       print "\n" . `git diff --cached --name-status -r`
# 	 if /^#/ && $first++ == 0' "$COMMIT_MSG_FILE" ;;
#  *) ;;
# esac

# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# git interpret-trailers --in-place --trailer "$SOB" "$COMMIT_MSG_FILE"
# if test -z "$COMMIT_SOURCE"
# then
#   /usr/bin/perl -i.bak -pe 'print "\n" if !$first_line++' "$COMMIT_MSG_FILE"
# fi

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\hooks\push-to-checkout.sample ---
--- Nom du fichier: push-to-checkout.sample ---
--- Contenu ---
#!/bin/sh

# An example hook script to update a checked-out tree on a git push.
#
# This hook is invoked by git-receive-pack(1) when it reacts to git
# push and updates reference(s) in its repository, and when the push
# tries to update the branch that is currently checked out and the
# receive.denyCurrentBranch configuration variable is set to
# updateInstead.
#
# By default, such a push is refused if the working tree and the index
# of the remote repository has any difference from the currently
# checked out commit; when both the working tree and the index match
# the current commit, they are updated to match the newly pushed tip
# of the branch. This hook is to be used to override the default
# behaviour; however the code below reimplements the default behaviour
# as a starting point for convenient modification.
#
# The hook receives the commit with which the tip of the current
# branch is going to be updated:
commit=$1

# It can exit with a non-zero status to refuse the push (when it does
# so, it must not modify the index or the working tree).
die () {
	echo >&2 "$*"
	exit 1
}

# Or it can make any necessary changes to the working tree and to the
# index to bring them to the desired state when the tip of the current
# branch is updated to the new commit, and exit with a zero status.
#
# For example, the hook can simply run git read-tree -u -m HEAD "$1"
# in order to emulate git fetch that is run in the reverse direction
# with git push, as the two-tree form of git read-tree -u -m is
# essentially the same as git switch or git checkout that switches
# branches while keeping the local changes in the working tree that do
# not interfere with the difference between the branches.

# The below is a more-or-less exact translation to shell of the C code
# for the default behaviour for git's push-to-checkout hook defined in
# the push_to_deploy() function in builtin/receive-pack.c.
#
# Note that the hook will be executed from the repository directory,
# not from the working tree, so if you want to perform operations on
# the working tree, you will have to adapt your code accordingly, e.g.
# by adding "cd .." or using relative paths.

if ! git update-index -q --ignore-submodules --refresh
then
	die "Up-to-date check failed"
fi

if ! git diff-files --quiet --ignore-submodules --
then
	die "Working directory has unstaged changes"
fi

# This is a rough translation of:
#
#   head_has_history() ? "HEAD" : EMPTY_TREE_SHA1_HEX
if git cat-file -e HEAD 2>/dev/null
then
	head=HEAD
else
	head=$(git hash-object -t tree --stdin </dev/null)
fi

if ! git diff-index --quiet --cached --ignore-submodules $head --
then
	die "Working directory has staged changes"
fi

if ! git read-tree -u -m "$commit"
then
	die "Could not update working tree to new HEAD"
fi

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\hooks\sendemail-validate.sample ---
--- Nom du fichier: sendemail-validate.sample ---
--- Contenu ---
#!/bin/sh

# An example hook script to validate a patch (and/or patch series) before
# sending it via email.
#
# The hook should exit with non-zero status after issuing an appropriate
# message if it wants to prevent the email(s) from being sent.
#
# To enable this hook, rename this file to "sendemail-validate".
#
# By default, it will only check that the patch(es) can be applied on top of
# the default upstream branch without conflicts in a secondary worktree. After
# validation (successful or not) of the last patch of a series, the worktree
# will be deleted.
#
# The following config variables can be set to change the default remote and
# remote ref that are used to apply the patches against:
#
#   sendemail.validateRemote (default: origin)
#   sendemail.validateRemoteRef (default: HEAD)
#
# Replace the TODO placeholders with appropriate checks according to your
# needs.

validate_cover_letter () {
	file="$1"
	# TODO: Replace with appropriate checks (e.g. spell checking).
	true
}

validate_patch () {
	file="$1"
	# Ensure that the patch applies without conflicts.
	git am -3 "$file" || return
	# TODO: Replace with appropriate checks for this patch
	# (e.g. checkpatch.pl).
	true
}

validate_series () {
	# TODO: Replace with appropriate checks for the whole series
	# (e.g. quick build, coding style checks, etc.).
	true
}

# main -------------------------------------------------------------------------

if test "$GIT_SENDEMAIL_FILE_COUNTER" = 1
then
	remote=$(git config --default origin --get sendemail.validateRemote) &&
	ref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&
	worktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&
	git worktree add -fd --checkout "$worktree" "refs/remotes/$remote/$ref" &&
	git config --replace-all sendemail.validateWorktree "$worktree"
else
	worktree=$(git config --get sendemail.validateWorktree)
fi || {
	echo "sendemail-validate: error: failed to prepare worktree" >&2
	exit 1
}

unset GIT_DIR GIT_WORK_TREE
cd "$worktree" &&

if grep -q "^diff --git " "$1"
then
	validate_patch "$1"
else
	validate_cover_letter "$1"
fi &&

if test "$GIT_SENDEMAIL_FILE_COUNTER" = "$GIT_SENDEMAIL_FILE_TOTAL"
then
	git config --unset-all sendemail.validateWorktree &&
	trap 'git worktree remove -ff "$worktree"' EXIT &&
	validate_series
fi

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\hooks\update.sample ---
--- Nom du fichier: update.sample ---
--- Contenu ---
#!/bin/sh
#
# An example hook script to block unannotated tags from entering.
# Called by "git receive-pack" with arguments: refname sha1-old sha1-new
#
# To enable this hook, rename this file to "update".
#
# Config
# ------
# hooks.allowunannotated
#   This boolean sets whether unannotated tags will be allowed into the
#   repository.  By default they won't be.
# hooks.allowdeletetag
#   This boolean sets whether deleting tags will be allowed in the
#   repository.  By default they won't be.
# hooks.allowmodifytag
#   This boolean sets whether a tag may be modified after creation. By default
#   it won't be.
# hooks.allowdeletebranch
#   This boolean sets whether deleting branches will be allowed in the
#   repository.  By default they won't be.
# hooks.denycreatebranch
#   This boolean sets whether remotely creating branches will be denied
#   in the repository.  By default this is allowed.
#

# --- Command line
refname="$1"
oldrev="$2"
newrev="$3"

# --- Safety check
if [ -z "$GIT_DIR" ]; then
	echo "Don't run this script from the command line." >&2
	echo " (if you want, you could supply GIT_DIR then run" >&2
	echo "  $0 <ref> <oldrev> <newrev>)" >&2
	exit 1
fi

if [ -z "$refname" -o -z "$oldrev" -o -z "$newrev" ]; then
	echo "usage: $0 <ref> <oldrev> <newrev>" >&2
	exit 1
fi

# --- Config
allowunannotated=$(git config --type=bool hooks.allowunannotated)
allowdeletebranch=$(git config --type=bool hooks.allowdeletebranch)
denycreatebranch=$(git config --type=bool hooks.denycreatebranch)
allowdeletetag=$(git config --type=bool hooks.allowdeletetag)
allowmodifytag=$(git config --type=bool hooks.allowmodifytag)

# check for no description
projectdesc=$(sed -e '1q' "$GIT_DIR/description")
case "$projectdesc" in
"Unnamed repository"* | "")
	echo "*** Project description file hasn't been set" >&2
	exit 1
	;;
esac

# --- Check types
# if $newrev is 0000...0000, it's a commit to delete a ref.
zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')
if [ "$newrev" = "$zero" ]; then
	newrev_type=delete
else
	newrev_type=$(git cat-file -t $newrev)
fi

case "$refname","$newrev_type" in
	refs/tags/*,commit)
		# un-annotated tag
		short_refname=${refname##refs/tags/}
		if [ "$allowunannotated" != "true" ]; then
			echo "*** The un-annotated tag, $short_refname, is not allowed in this repository" >&2
			echo "*** Use 'git tag [ -a | -s ]' for tags you want to propagate." >&2
			exit 1
		fi
		;;
	refs/tags/*,delete)
		# delete tag
		if [ "$allowdeletetag" != "true" ]; then
			echo "*** Deleting a tag is not allowed in this repository" >&2
			exit 1
		fi
		;;
	refs/tags/*,tag)
		# annotated tag
		if [ "$allowmodifytag" != "true" ] && git rev-parse $refname > /dev/null 2>&1
		then
			echo "*** Tag '$refname' already exists." >&2
			echo "*** Modifying a tag is not allowed in this repository." >&2
			exit 1
		fi
		;;
	refs/heads/*,commit)
		# branch
		if [ "$oldrev" = "$zero" -a "$denycreatebranch" = "true" ]; then
			echo "*** Creating a branch is not allowed in this repository" >&2
			exit 1
		fi
		;;
	refs/heads/*,delete)
		# delete branch
		if [ "$allowdeletebranch" != "true" ]; then
			echo "*** Deleting a branch is not allowed in this repository" >&2
			exit 1
		fi
		;;
	refs/remotes/*,commit)
		# tracking branch
		;;
	refs/remotes/*,delete)
		# delete tracking branch
		if [ "$allowdeletebranch" != "true" ]; then
			echo "*** Deleting a tracking branch is not allowed in this repository" >&2
			exit 1
		fi
		;;
	*)
		# Anything else (is there anything else?)
		echo "*** Update hook: unknown type of update to ref $refname of type $newrev_type" >&2
		exit 1
		;;
esac

# --- Finished
exit 0

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\info\exclude ---
--- Nom du fichier: exclude ---
--- Contenu ---
# git ls-files --others --exclude-from=.git/info/exclude
# Lines that start with '#' are comments.
# For a project mostly in C, the following would be a good set of
# exclude patterns (uncomment them if you want to use them):
# *.[oa]
# *~

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\logs\HEAD ---
--- Nom du fichier: HEAD ---
--- Contenu ---
0000000000000000000000000000000000000000 58b0f2100d68f1aa85124ede1421e228d25fa9f0 a-niva <a-niva@laposte.net> 1749549473 +0200	commit (initial): Initial commit - Complete fitness app structure
58b0f2100d68f1aa85124ede1421e228d25fa9f0 82e350f5e4e261adbb28699f9210f2587e681355 a-niva <a-niva@laposte.net> 1749550525 +0200	commit: Fix database import for production deployment
82e350f5e4e261adbb28699f9210f2587e681355 b5a8227ecc1fdad64a7b7258fef7a72e350976c3 a-niva <a-niva@laposte.net> 1749551943 +0200	commit: UI and ML patches
b5a8227ecc1fdad64a7b7258fef7a72e350976c3 61636d5cadff17715032a5cbf8b29f89ccd79a29 a-niva <a-niva@laposte.net> 1749552940 +0200	commit: UI and ML patches v2
61636d5cadff17715032a5cbf8b29f89ccd79a29 e01f8c81d03c6d188c5e13d6f0430924a7a43602 a-niva <a-niva@laposte.net> 1749554659 +0200	commit: Fix equipment v1
e01f8c81d03c6d188c5e13d6f0430924a7a43602 0e1b71263a6e009328a57d7b1b570f6baed5883c a-niva <a-niva@laposte.net> 1749555332 +0200	commit: Fix equipment v2
0e1b71263a6e009328a57d7b1b570f6baed5883c 5bd735b0680d7e9fcb6c9b703cdcd6cbb6d312e7 a-niva <a-niva@laposte.net> 1749555790 +0200	commit: Fix equipment v3
5bd735b0680d7e9fcb6c9b703cdcd6cbb6d312e7 914e2535ad3aa2115451a383b3530780f640962c a-niva <a-niva@laposte.net> 1749556267 +0200	commit: Fix equipment v3.1
914e2535ad3aa2115451a383b3530780f640962c a96083cbb80309e70bf16d018baf9b81675efc75 a-niva <a-niva@laposte.net> 1749559174 +0200	commit: Fix equipment v3.2
a96083cbb80309e70bf16d018baf9b81675efc75 28b8030ac9b718227578f6d3e57c264c1140b4ea a-niva <a-niva@laposte.net> 1749560099 +0200	commit: Fix equipment v4
28b8030ac9b718227578f6d3e57c264c1140b4ea 1606610a71685a4d4b47c779c1e2e3863a0ee14d a-niva <a-niva@laposte.net> 1749562041 +0200	commit: Fix bdd v1
1606610a71685a4d4b47c779c1e2e3863a0ee14d 0b80c0a5abec422b00cabcaa284099b449c598c5 a-niva <a-niva@laposte.net> 1749634028 +0200	commit: Fix design 1
0b80c0a5abec422b00cabcaa284099b449c598c5 3fc1bf103f9550cf273186b8d1e171eb7c823453 a-niva <a-niva@laposte.net> 1749635112 +0200	commit: Fix design 2
3fc1bf103f9550cf273186b8d1e171eb7c823453 1be636b8c25c4c860feaa9ebaf577ff69bf58425 a-niva <a-niva@laposte.net> 1749636207 +0200	commit: Fix design 2.1
1be636b8c25c4c860feaa9ebaf577ff69bf58425 704445894f5a4ca7b22a8f3fe7d34d11077d60a3 a-niva <a-niva@laposte.net> 1749638022 +0200	commit: Fix design 2.2
704445894f5a4ca7b22a8f3fe7d34d11077d60a3 e100d8c63d8a6145bf2429109f2f2ac207839757 a-niva <a-niva@laposte.net> 1749639195 +0200	commit: Fix design 2.3
e100d8c63d8a6145bf2429109f2f2ac207839757 8d0fe08c04c44d205e29cc7e5cee928be8b0b33e a-niva <a-niva@laposte.net> 1749652269 +0200	commit: Fix design 2.4
8d0fe08c04c44d205e29cc7e5cee928be8b0b33e 92a1484084c8f277e6a7bb4699e112375625e685 a-niva <a-niva@laposte.net> 1749652988 +0200	commit: Fix design 2.5
92a1484084c8f277e6a7bb4699e112375625e685 4536ab4008a6c50efe3391e691b71f4945dc48b9 a-niva <a-niva@laposte.net> 1749654045 +0200	commit: Fix design 2.6
4536ab4008a6c50efe3391e691b71f4945dc48b9 a376d49a66c70c24ab6c2d76de83d8614f178f1b a-niva <a-niva@laposte.net> 1749655171 +0200	commit: Fix design 2.7
a376d49a66c70c24ab6c2d76de83d8614f178f1b 3201f653c082578e077b0f4609157fc006896881 a-niva <a-niva@laposte.net> 1749655599 +0200	commit: Fix design 2.8
3201f653c082578e077b0f4609157fc006896881 de231ae9f2eac5f847e4dad82a7b91cad3f4936e a-niva <a-niva@laposte.net> 1749655853 +0200	commit: Fix design 2.9
de231ae9f2eac5f847e4dad82a7b91cad3f4936e 64f3081165873323b5f23e922d63b6a83887b499 a-niva <a-niva@laposte.net> 1749656269 +0200	commit: Fix design 3.0
64f3081165873323b5f23e922d63b6a83887b499 06096a89a48ab72557e870063945f543a8ce4e9a a-niva <a-niva@laposte.net> 1749656639 +0200	commit: Fix design 3.1
06096a89a48ab72557e870063945f543a8ce4e9a 2ec7413213d2f661f39d06d44525ac30afd25556 a-niva <a-niva@laposte.net> 1749657821 +0200	commit: Fix design 3.2
2ec7413213d2f661f39d06d44525ac30afd25556 faf50d5a2c6b22bf880e29b5ae9e7af4be807dbd a-niva <a-niva@laposte.net> 1749658366 +0200	commit: Fix design 3.2
faf50d5a2c6b22bf880e29b5ae9e7af4be807dbd 34f316033f023adeb72534a1a26bbdceaeb2d655 a-niva <a-niva@laposte.net> 1749662849 +0200	commit: phase 1.1 v1.0
34f316033f023adeb72534a1a26bbdceaeb2d655 ca865f22cc7afac562303a597fcb806dd8f008d4 a-niva <a-niva@laposte.net> 1749663617 +0200	commit: phase 1.1 v1.1
ca865f22cc7afac562303a597fcb806dd8f008d4 f57e32156cfa15bd44e65f2a6fff0e7a58ce0448 a-niva <a-niva@laposte.net> 1749664206 +0200	commit: phase 1.2 v1
f57e32156cfa15bd44e65f2a6fff0e7a58ce0448 d81a6335d654069cd4c9883c688348db80877934 a-niva <a-niva@laposte.net> 1749665081 +0200	commit: phase 1.2 v2
d81a6335d654069cd4c9883c688348db80877934 6883cd3d016327b191c23cf23b7d59a69efa9206 a-niva <a-niva@laposte.net> 1749714273 +0200	commit: phase 1.2 v3
6883cd3d016327b191c23cf23b7d59a69efa9206 eb65f513dc055b498bb54226152fb6605aac6f2e a-niva <a-niva@laposte.net> 1749715246 +0200	commit: phase 1.2 v4
eb65f513dc055b498bb54226152fb6605aac6f2e ba7c77f5b45905397bdb99536f8a5faef2d98184 a-niva <a-niva@laposte.net> 1749715577 +0200	commit: phase 1.2 v5
ba7c77f5b45905397bdb99536f8a5faef2d98184 3c3036d7a243afa72612af3d54996e7d435df6f2 a-niva <a-niva@laposte.net> 1749716186 +0200	commit: phase 1.2 v6
3c3036d7a243afa72612af3d54996e7d435df6f2 030635031326d27cdfc3bd6dec6bcd540ee895a2 a-niva <a-niva@laposte.net> 1749717609 +0200	commit: phase 1.2 v7
030635031326d27cdfc3bd6dec6bcd540ee895a2 86d020cc135539e5b2badacbe48c893b3b7a92a0 a-niva <a-niva@laposte.net> 1749718610 +0200	commit: phase 1.3 v1
86d020cc135539e5b2badacbe48c893b3b7a92a0 8407165fa68b9e9d1b1dd2be1220ceb526b10bc8 a-niva <a-niva@laposte.net> 1749719816 +0200	commit: phase 1.3 v2
8407165fa68b9e9d1b1dd2be1220ceb526b10bc8 7ff5e336f7cb1a86f341c5a2cec15bbcc073cf4d a-niva <a-niva@laposte.net> 1749720656 +0200	commit: phase 1.3 v3
7ff5e336f7cb1a86f341c5a2cec15bbcc073cf4d 18ed14f3bc7968102148319b3f15e4da0af6bbd4 a-niva <a-niva@laposte.net> 1749721645 +0200	commit: phase 1.3 v4
18ed14f3bc7968102148319b3f15e4da0af6bbd4 9f19e46cf09712e3e14384f6963ad7abc3a76d44 a-niva <a-niva@laposte.net> 1749722070 +0200	commit: phase 1.3 v5
9f19e46cf09712e3e14384f6963ad7abc3a76d44 4a983f4f74c668bc4f2d35c31209a0b67ea5b0e3 a-niva <a-niva@laposte.net> 1749723122 +0200	commit: phase 1.3 v6
4a983f4f74c668bc4f2d35c31209a0b67ea5b0e3 12e8745b891c46a42bc388ff9d55c4091ef6dd58 a-niva <a-niva@laposte.net> 1749724618 +0200	commit: phase 1.3 v7
12e8745b891c46a42bc388ff9d55c4091ef6dd58 2d503adf4faf262d29497f876855c32e35048337 a-niva <a-niva@laposte.net> 1749726778 +0200	commit: phase 1.3 v8
2d503adf4faf262d29497f876855c32e35048337 b4a014aadfe9e09c7c11d9cdab8a0685c9c953d9 a-niva <a-niva@laposte.net> 1749728859 +0200	commit: phase 1.3 v9
b4a014aadfe9e09c7c11d9cdab8a0685c9c953d9 4a7b1ee4985cad6c3cdb14e91af8d19ee0026f3e a-niva <a-niva@laposte.net> 1749729597 +0200	commit: phase 1.3 v10
4a7b1ee4985cad6c3cdb14e91af8d19ee0026f3e fc6e2e40eeeae144c174445883d232e5ebc39802 a-niva <a-niva@laposte.net> 1749765045 +0200	commit: phase 1.3 v11
fc6e2e40eeeae144c174445883d232e5ebc39802 05d2f7d29c5b05f8423114e66a50ff1e73a4ae81 a-niva <a-niva@laposte.net> 1749766152 +0200	commit: phase 1.3 v12
05d2f7d29c5b05f8423114e66a50ff1e73a4ae81 0d3290a7f4ef3247f2c4342b5e523e0b195e043c a-niva <a-niva@laposte.net> 1749766953 +0200	commit: phase 1.3 v13
0d3290a7f4ef3247f2c4342b5e523e0b195e043c 2dcef4c18a896871f16a320a53355ee5246e319a a-niva <a-niva@laposte.net> 1749767698 +0200	commit: phase 1.3 v14
2dcef4c18a896871f16a320a53355ee5246e319a 0aebce21d36870fb424593f1da4a900be0f1d2ee a-niva <a-niva@laposte.net> 1749768656 +0200	commit: phase 1.3 v15
0aebce21d36870fb424593f1da4a900be0f1d2ee 70d052a9a877f65e54e315854114e9779868bfb1 a-niva <a-niva@laposte.net> 1749769443 +0200	commit: phase 1.3 v16
70d052a9a877f65e54e315854114e9779868bfb1 a4e5762ff99c37bd913681cf5d5b9906022dee40 a-niva <a-niva@laposte.net> 1749771059 +0200	commit: phase 2 v1
a4e5762ff99c37bd913681cf5d5b9906022dee40 1daf1b0341f7564d36854929db44d944e548f8f5 a-niva <a-niva@laposte.net> 1749771485 +0200	commit: phase 2 v1.1 rollback schemas
1daf1b0341f7564d36854929db44d944e548f8f5 57ee50b350ed1c6ad422574c537d7198173a31cc a-niva <a-niva@laposte.net> 1749808546 +0200	commit: phase 2 v1.2
57ee50b350ed1c6ad422574c537d7198173a31cc dbbfd55017b2775d8547e45da2d5a7f0dcd1e273 a-niva <a-niva@laposte.net> 1749809840 +0200	commit: phase 2 v1.3
dbbfd55017b2775d8547e45da2d5a7f0dcd1e273 287cf45f24b6339e20119f2f94b168e574e593ff a-niva <a-niva@laposte.net> 1749811564 +0200	commit: phase 2 v1.4
287cf45f24b6339e20119f2f94b168e574e593ff 9400a44312dd9abff835f0b1e0270308540fc39a a-niva <a-niva@laposte.net> 1749812536 +0200	commit: phase 2 v1.5
9400a44312dd9abff835f0b1e0270308540fc39a 2edd35413c42c62fafe3c7d07a15dcab34cdc10b a-niva <a-niva@laposte.net> 1749814906 +0200	commit: phase 2 v2 1.0
2edd35413c42c62fafe3c7d07a15dcab34cdc10b 044149e7244698b83a8a6790601b6584295294c3 a-niva <a-niva@laposte.net> 1749815822 +0200	commit: phase 2 v2 1.1
044149e7244698b83a8a6790601b6584295294c3 f0fa61d13e8503692b9b0637a831832dc00030a0 a-niva <a-niva@laposte.net> 1749816437 +0200	commit: phase 2 v2 1.2
f0fa61d13e8503692b9b0637a831832dc00030a0 d69aa91b708a7fe1ea1285a2e287544f371a7112 a-niva <a-niva@laposte.net> 1749817321 +0200	commit: phase 2 v2 1.3
d69aa91b708a7fe1ea1285a2e287544f371a7112 0348115d411ecb8613cfc0dd36e9cda3f522f493 a-niva <a-niva@laposte.net> 1749818315 +0200	commit: phase 2 v2 1.4
0348115d411ecb8613cfc0dd36e9cda3f522f493 644dc250e6789dd5bec706a10cf40e5cd549c6f4 a-niva <a-niva@laposte.net> 1749823586 +0200	commit: phase 2 v2 1.
644dc250e6789dd5bec706a10cf40e5cd549c6f4 8e49479a4ba10fcc8ea5ce2a8eb8d9500b1c52dd a-niva <a-niva@laposte.net> 1749825517 +0200	commit: phase 2 v2 2.0
8e49479a4ba10fcc8ea5ce2a8eb8d9500b1c52dd 206d359e0b6ebc14f228297d07544317f79475b5 a-niva <a-niva@laposte.net> 1749826647 +0200	commit: phase 2 v2 2.1
206d359e0b6ebc14f228297d07544317f79475b5 9c146148b56839c52527c3005ccf89ed6543958e a-niva <a-niva@laposte.net> 1749827377 +0200	commit: phase 2 v2 2.2
9c146148b56839c52527c3005ccf89ed6543958e 472f01d87988878f5574376d7148df2cb4f02f3d a-niva <a-niva@laposte.net> 1749827743 +0200	commit: phase 2 v2 2.2
472f01d87988878f5574376d7148df2cb4f02f3d 71a2887131a63b4c9ad8e7f70b46338e7d14eb57 a-niva <a-niva@laposte.net> 1749827769 +0200	commit: phase 2 v2 2.3
71a2887131a63b4c9ad8e7f70b46338e7d14eb57 ec80f480afe9d230452aa2c2d32c5f807cfb92d1 a-niva <a-niva@laposte.net> 1749827818 +0200	commit: phase 2 v2 2.4
ec80f480afe9d230452aa2c2d32c5f807cfb92d1 bb0fa3280e4a0e75ecb99aff20b932745be46154 a-niva <a-niva@laposte.net> 1749828235 +0200	commit: phase 2 v2 2.5
bb0fa3280e4a0e75ecb99aff20b932745be46154 6e16b9f03c40227c87c5ce5dd475cd5ef12cf6c2 a-niva <a-niva@laposte.net> 1749828478 +0200	commit: phase 2 v2 2.6
6e16b9f03c40227c87c5ce5dd475cd5ef12cf6c2 0f0a68e958732ecaaf58b75494658e87b0dbaabb a-niva <a-niva@laposte.net> 1749899711 +0200	commit: phase 2 v3 1.0
0f0a68e958732ecaaf58b75494658e87b0dbaabb 3de94b4831579b6ccd015145efe133288ba78cc5 a-niva <a-niva@laposte.net> 1749899774 +0200	commit: phase 2 v3 1.1
3de94b4831579b6ccd015145efe133288ba78cc5 d8f7837ffc0524a9b2b24007b00cd65bd9b74e26 a-niva <a-niva@laposte.net> 1749900537 +0200	commit: phase 2 v3 1.2
d8f7837ffc0524a9b2b24007b00cd65bd9b74e26 0196df65549c89c2ab7fa6f1d4f4ceda77a5537b a-niva <a-niva@laposte.net> 1749902269 +0200	commit: phase 2 v3 1.3
0196df65549c89c2ab7fa6f1d4f4ceda77a5537b a58870f54ee0dd84547af185b9313491399b689a a-niva <a-niva@laposte.net> 1750007473 +0200	commit: phase 2 v3 1.4
a58870f54ee0dd84547af185b9313491399b689a c385799e98765579ca27e688d585187fe9d2b0ad a-niva <a-niva@laposte.net> 1750008015 +0200	commit: phase 2 v3 1.6
c385799e98765579ca27e688d585187fe9d2b0ad b2e1595f6751dbf7e8df46a17b797cd859d8a9ab a-niva <a-niva@laposte.net> 1750008728 +0200	commit: phase 2 v3 1.7
b2e1595f6751dbf7e8df46a17b797cd859d8a9ab 21795b4bf1dc2b5ec4804b63abb0c6e07ffbf153 a-niva <a-niva@laposte.net> 1750010376 +0200	commit: phase 3 v1 1.0
21795b4bf1dc2b5ec4804b63abb0c6e07ffbf153 2f50befc65efcd24179f1c1b4a35b75b9a8b75d8 a-niva <a-niva@laposte.net> 1750011548 +0200	commit: phase 3 v1 1.1
2f50befc65efcd24179f1c1b4a35b75b9a8b75d8 692875fb63ff0b00b85fbc1ff3ce93a812cee3cf a-niva <a-niva@laposte.net> 1750012120 +0200	commit: phase 3 v1 1.2
692875fb63ff0b00b85fbc1ff3ce93a812cee3cf 10d0c4793526a9c2aeefaa6f9e48b27f667faace a-niva <a-niva@laposte.net> 1750014221 +0200	commit: phase 3 v2 1.0
10d0c4793526a9c2aeefaa6f9e48b27f667faace 18c0bf42089ba017dc42a57f5d36ad6e14204ed5 a-niva <a-niva@laposte.net> 1750014891 +0200	commit: phase 3 v2 1.1
18c0bf42089ba017dc42a57f5d36ad6e14204ed5 98f11e4dd6a4972b0aec1b2bc9c73019f7ad3c0a a-niva <a-niva@laposte.net> 1750015353 +0200	commit: phase 3 v2 1.2
98f11e4dd6a4972b0aec1b2bc9c73019f7ad3c0a 84f5ef4ca05c4811f2bff49f45f42d2ec8368430 a-niva <a-niva@laposte.net> 1750017340 +0200	commit: phase 3 v2 1.3
84f5ef4ca05c4811f2bff49f45f42d2ec8368430 50d4d093be71f89fbed1c76e5f0657d9221013d6 a-niva <a-niva@laposte.net> 1750018138 +0200	commit: phase 3 v2 1.4
50d4d093be71f89fbed1c76e5f0657d9221013d6 a0cb21d0fd4acf0e558f7c8e02c9df08d264fff6 a-niva <a-niva@laposte.net> 1750018776 +0200	commit: phase 3 v2 1.5
a0cb21d0fd4acf0e558f7c8e02c9df08d264fff6 b95acd106e229e60a142df1185009fa3f688e26f a-niva <a-niva@laposte.net> 1750021484 +0200	commit: phase 3 v2 1.
b95acd106e229e60a142df1185009fa3f688e26f b46371cb1fe8fe227b2a27cc69c6c081788d6bed a-niva <a-niva@laposte.net> 1750022182 +0200	commit: phase 3 v2 1.
b46371cb1fe8fe227b2a27cc69c6c081788d6bed 0e67d9c933d856ff9088366ad0ba7862981ceef3 a-niva <a-niva@laposte.net> 1750022783 +0200	commit: phase 3 v2 1.6
0e67d9c933d856ff9088366ad0ba7862981ceef3 1ba77afd7aadd8fd12a8b12ffcb0a703ccabe4f8 a-niva <a-niva@laposte.net> 1750023128 +0200	commit: phase 3 v2 1.7
1ba77afd7aadd8fd12a8b12ffcb0a703ccabe4f8 4f9a9663f3ccb2b970bfeb686c9e095ea35069a1 a-niva <a-niva@laposte.net> 1750023546 +0200	commit: phase 3 v2 1.8
4f9a9663f3ccb2b970bfeb686c9e095ea35069a1 f1336ba710dddbf186af861cd51468354e5b353c a-niva <a-niva@laposte.net> 1750023781 +0200	commit: phase 3 v2 1.9
f1336ba710dddbf186af861cd51468354e5b353c 2dd295c5bd27b6df1a840e8649ad98e341d3c98f a-niva <a-niva@laposte.net> 1750024580 +0200	commit: phase 3 v2 1.10
2dd295c5bd27b6df1a840e8649ad98e341d3c98f a90fc84b912425ba2a3608a091407deb6318ea1b a-niva <a-niva@laposte.net> 1750059549 +0200	commit: phase 3 v2 1.11
a90fc84b912425ba2a3608a091407deb6318ea1b 033441e61cfa91c629522481503f3d6d5718719a a-niva <a-niva@laposte.net> 1750060306 +0200	commit: phase 3 v2 1.12
033441e61cfa91c629522481503f3d6d5718719a 998a4dd95c38c6dda1c51554452270760b20f9bc a-niva <a-niva@laposte.net> 1750061083 +0200	commit: phase 3 v2 1.13
998a4dd95c38c6dda1c51554452270760b20f9bc f9ee1f467ef28e34c221b1725d9e378b8b949b33 a-niva <a-niva@laposte.net> 1750061984 +0200	commit: phase 3 v2 1.14
f9ee1f467ef28e34c221b1725d9e378b8b949b33 a397bdbd73a9bdca8566f5ae82f7724b8c6a6980 a-niva <a-niva@laposte.net> 1750062778 +0200	commit: phase 3 v2 1.15
a397bdbd73a9bdca8566f5ae82f7724b8c6a6980 fd45e53fc641e04fc68b4422064b625593a1ac71 a-niva <a-niva@laposte.net> 1750063781 +0200	commit: phase 3 v2 1.16
fd45e53fc641e04fc68b4422064b625593a1ac71 e5acf112710f8e69f1a0237ee2101fcbcba110ba a-niva <a-niva@laposte.net> 1750064867 +0200	commit: phase 3 v2 1.17
e5acf112710f8e69f1a0237ee2101fcbcba110ba 35abcc6d32e14d8876d75cf1117d11c5319ac7eb a-niva <a-niva@laposte.net> 1750065054 +0200	commit: phase 3 v2 1.18
35abcc6d32e14d8876d75cf1117d11c5319ac7eb 5514a186f6b5d5abf75dcac4efa3a4b867593d51 a-niva <a-niva@laposte.net> 1750066120 +0200	commit: phase 3 v2 1.19
5514a186f6b5d5abf75dcac4efa3a4b867593d51 1c7bb954e7d10105ccd2af5009e2dd55356b84de a-niva <a-niva@laposte.net> 1750066837 +0200	commit: phase 3 v2 1.20
1c7bb954e7d10105ccd2af5009e2dd55356b84de 09f5baa8c597d58f6fcc35d9f3a22282030c1c9e a-niva <a-niva@laposte.net> 1750067629 +0200	commit: phase 3 v2 1.21
09f5baa8c597d58f6fcc35d9f3a22282030c1c9e 8bf46857280daf7ed71bcba34ea571a3d1752ca6 a-niva <a-niva@laposte.net> 1750069078 +0200	commit: phase 3 v2 1.22
8bf46857280daf7ed71bcba34ea571a3d1752ca6 082555a30c80c52372adba832a0c0d550fa9b320 a-niva <a-niva@laposte.net> 1750069946 +0200	commit: phase 3 v2 1.23
082555a30c80c52372adba832a0c0d550fa9b320 48bd16afbfe5bd8cfd64327b3a7ecb14e55469fe a-niva <a-niva@laposte.net> 1750070482 +0200	commit: phase 3 v2 1.24
48bd16afbfe5bd8cfd64327b3a7ecb14e55469fe 3239c67414dfef235395833e5a5fa1deb1283076 a-niva <a-niva@laposte.net> 1750071516 +0200	commit: phase 3 v2 1.25
3239c67414dfef235395833e5a5fa1deb1283076 fe918fb7cd7a4e755e9074deb38723e4be8631fe a-niva <a-niva@laposte.net> 1750073654 +0200	commit: phase 3 v2 1.26
fe918fb7cd7a4e755e9074deb38723e4be8631fe e94a363746c5524b0018c9023fb99dbc18d08ddc a-niva <a-niva@laposte.net> 1750083781 +0200	commit: phase 3 v2 1.27
e94a363746c5524b0018c9023fb99dbc18d08ddc d3eef2d46aacfbcb32a54bf95082f458403c21dc a-niva <a-niva@laposte.net> 1750084307 +0200	commit: phase 3 v2 1.28
d3eef2d46aacfbcb32a54bf95082f458403c21dc 8f55f66346873872eaf8116508ac33cffccf51c3 a-niva <a-niva@laposte.net> 1750084517 +0200	commit: phase 3 v2 1.29
8f55f66346873872eaf8116508ac33cffccf51c3 92346874d26c9e3433c4179eb87b904b2fcfdacc a-niva <a-niva@laposte.net> 1750085066 +0200	commit: phase 3 v2 1.3
92346874d26c9e3433c4179eb87b904b2fcfdacc 219a243be128bf30e8fc6b4b940534e326d41037 a-niva <a-niva@laposte.net> 1750085699 +0200	commit: phase 3 v2 1.31
219a243be128bf30e8fc6b4b940534e326d41037 2d84e924bdd74a74eb4c925b334d5b7c992fac48 a-niva <a-niva@laposte.net> 1750086334 +0200	commit: phase 3 v2 1.33
2d84e924bdd74a74eb4c925b334d5b7c992fac48 00f5a50ba86b2c7990e89b2b25e5ad05bc3c0fb8 a-niva <a-niva@laposte.net> 1750086629 +0200	commit: phase 3 v2 1.34
00f5a50ba86b2c7990e89b2b25e5ad05bc3c0fb8 b3766da5f190f3f62367336985524e8beb1c0ec2 a-niva <a-niva@laposte.net> 1750092317 +0200	commit: phase 3 v3 1.
b3766da5f190f3f62367336985524e8beb1c0ec2 7d9be6e34bcb3fa7613514f24eb89240940aca68 a-niva <a-niva@laposte.net> 1750092339 +0200	pull origin main: Merge made by the 'ort' strategy.
7d9be6e34bcb3fa7613514f24eb89240940aca68 3dff3d7ced41b7c4301a8140205d5d2515f7cdfc a-niva <a-niva@laposte.net> 1750093054 +0200	commit: phase 4.21
3dff3d7ced41b7c4301a8140205d5d2515f7cdfc 880ed4a95c0ad70d5e330a2d4f0899661698667c a-niva <a-niva@laposte.net> 1750093437 +0200	commit: erase 1.1
880ed4a95c0ad70d5e330a2d4f0899661698667c 97ed1c2ce3df4d2d4be97032c92fe56ffcf6035e a-niva <a-niva@laposte.net> 1750093999 +0200	commit: version 4 1.0
97ed1c2ce3df4d2d4be97032c92fe56ffcf6035e e43c1425d4a602a5163777fdf2d73c3bedd03426 a-niva <a-niva@laposte.net> 1750094710 +0200	commit: version 4 1.1
e43c1425d4a602a5163777fdf2d73c3bedd03426 6ea4d13250366cd6828548d6bb55dae6be69aef5 a-niva <a-niva@laposte.net> 1750095126 +0200	commit: version 4 1.2
6ea4d13250366cd6828548d6bb55dae6be69aef5 f1a733d0accd2defa3a590cc33e11e4d3a084706 a-niva <a-niva@laposte.net> 1750142215 +0200	commit: backtograph v1.0
f1a733d0accd2defa3a590cc33e11e4d3a084706 0049bea1dc3f3490411d07107f515558dc957820 a-niva <a-niva@laposte.net> 1750143719 +0200	commit: backtograph v1.1
0049bea1dc3f3490411d07107f515558dc957820 5730139a79278717b2f08ca76c0840479b320f60 a-niva <a-niva@laposte.net> 1750144021 +0200	commit: backtograph v1.2
5730139a79278717b2f08ca76c0840479b320f60 e4e07d572d71afcb37f34a11f52ccb3274da27c3 a-niva <a-niva@laposte.net> 1750144371 +0200	commit: backtograph v1.3
e4e07d572d71afcb37f34a11f52ccb3274da27c3 8a758314027df2dc9c5c80887711a94b20c3851f a-niva <a-niva@laposte.net> 1750145065 +0200	commit: backtograph v1.4
8a758314027df2dc9c5c80887711a94b20c3851f f983b6b020f82096a0f9fb266e47639a53f5ab90 a-niva <a-niva@laposte.net> 1750145700 +0200	commit: backtograph v1.5
f983b6b020f82096a0f9fb266e47639a53f5ab90 28725b32c14a6c410400c58c8794bdb72a67bb34 a-niva <a-niva@laposte.net> 1750146289 +0200	commit: backtograph v1.6
28725b32c14a6c410400c58c8794bdb72a67bb34 265fc8c1f6584d5e83c229a97cb5a10e482501f6 a-niva <a-niva@laposte.net> 1750146631 +0200	commit: backtograph v1.7
265fc8c1f6584d5e83c229a97cb5a10e482501f6 42daf64e4b95b7e4a9554b99d082e0bdbd387c80 a-niva <a-niva@laposte.net> 1750146835 +0200	commit: backtograph v1.8
42daf64e4b95b7e4a9554b99d082e0bdbd387c80 74df75818964198aa6b6ee3fa2c962601fddf921 a-niva <a-niva@laposte.net> 1750147353 +0200	commit: backtograph v1.9
74df75818964198aa6b6ee3fa2c962601fddf921 a6e4b491d93ca67f9eacbdf45cb133fb2e051ae5 a-niva <a-niva@laposte.net> 1750150872 +0200	commit: backtograph v2.0
a6e4b491d93ca67f9eacbdf45cb133fb2e051ae5 a6396dbb6fd598ed3f02971e4fbaa0846bbf7f09 a-niva <a-niva@laposte.net> 1750151358 +0200	commit: backtograph v2.1
a6396dbb6fd598ed3f02971e4fbaa0846bbf7f09 79c5ab11d82dc7d60cbd2323c9c2bc58170e80bd a-niva <a-niva@laposte.net> 1750152704 +0200	commit: backtograph v2.2
79c5ab11d82dc7d60cbd2323c9c2bc58170e80bd bd27d2c434324235ad3728b6633f9db123ddb60d a-niva <a-niva@laposte.net> 1750160021 +0200	commit: backtograph v2.3
bd27d2c434324235ad3728b6633f9db123ddb60d b9aa662884946b207fa6641129a400d0288f917f a-niva <a-niva@laposte.net> 1750160882 +0200	commit: backtograph v2.4
b9aa662884946b207fa6641129a400d0288f917f 9f38e2414aad38879672a15ef3413550f4aa8ea2 a-niva <a-niva@laposte.net> 1750161540 +0200	commit: backtograph v2.5
9f38e2414aad38879672a15ef3413550f4aa8ea2 8308cb6969b86484d85b02a3f518604f27f7ff48 a-niva <a-niva@laposte.net> 1750162039 +0200	commit: backtograph v2.6
8308cb6969b86484d85b02a3f518604f27f7ff48 3955e6da2a98fdbf51d40a9e129666cd442d8432 a-niva <a-niva@laposte.net> 1750162804 +0200	commit: backtograph v2.6
3955e6da2a98fdbf51d40a9e129666cd442d8432 34332aa42289b52b49789cf07186ceb0f1a77478 a-niva <a-niva@laposte.net> 1750163056 +0200	commit: backtograph v2.7
34332aa42289b52b49789cf07186ceb0f1a77478 7ace600508d8a22c5cc0cd7e4fce9c389a796a90 a-niva <a-niva@laposte.net> 1750163660 +0200	commit: backtograph v2.7
7ace600508d8a22c5cc0cd7e4fce9c389a796a90 91760491aea100a5994413f257d1f9328f48fe95 a-niva <a-niva@laposte.net> 1750163855 +0200	commit: backtograph v2.7
91760491aea100a5994413f257d1f9328f48fe95 3c2a49aa754316d2bf78f6cfbd5a2e789f44fba4 a-niva <a-niva@laposte.net> 1750164228 +0200	commit: backtograph v2.7
3c2a49aa754316d2bf78f6cfbd5a2e789f44fba4 e266d7336c092e39f822caa333bea30794f7e04d a-niva <a-niva@laposte.net> 1750164489 +0200	commit: backtograph v2.7
e266d7336c092e39f822caa333bea30794f7e04d 8c81f0bdce28b67d3970f38af6982c667f953eec a-niva <a-niva@laposte.net> 1750164614 +0200	commit: backtograph v2.7
8c81f0bdce28b67d3970f38af6982c667f953eec c9cbe2cee498b4333c767e432b549fd2897d4cf1 a-niva <a-niva@laposte.net> 1750165178 +0200	commit: backtograph v2.8
c9cbe2cee498b4333c767e432b549fd2897d4cf1 de959adbd112c1e9ea2c7d1fbc593984fd3160b8 a-niva <a-niva@laposte.net> 1750166226 +0200	commit: backtograph v2.9
de959adbd112c1e9ea2c7d1fbc593984fd3160b8 92dd10a0388f8b53a9b6a96f9f4fe10b0dd56410 a-niva <a-niva@laposte.net> 1750169918 +0200	commit: backtograph v3.0
92dd10a0388f8b53a9b6a96f9f4fe10b0dd56410 524853b15d74770d1fa0c13e7bc0822ae4b2296c a-niva <a-niva@laposte.net> 1750170601 +0200	commit: backtograph v3.1
524853b15d74770d1fa0c13e7bc0822ae4b2296c 85f7f852910da6667c557926dde115fcd497e9ac a-niva <a-niva@laposte.net> 1750188773 +0200	commit: backtograph v3.2
85f7f852910da6667c557926dde115fcd497e9ac 2dbbd17486973533cc8eda9dc491a8e29eefbafa a-niva <a-niva@laposte.net> 1750189669 +0200	commit: backtograph v3.3
2dbbd17486973533cc8eda9dc491a8e29eefbafa 4ce5c6390eebad5fedabdf40f17390e98c808e7d a-niva <a-niva@laposte.net> 1750190195 +0200	commit: backtograph v3.4
4ce5c6390eebad5fedabdf40f17390e98c808e7d 21c41dcac6e16923187447c6b0d757185f32bfa1 a-niva <a-niva@laposte.net> 1750191125 +0200	commit: backtograph v3.5
21c41dcac6e16923187447c6b0d757185f32bfa1 ab832fac2fffb23a3480b37a91a42d7af878acc2 a-niva <a-niva@laposte.net> 1750191433 +0200	commit: backtograph v3.5
ab832fac2fffb23a3480b37a91a42d7af878acc2 e1d7e5fb8bc789799966d57b098b6ed00235c809 a-niva <a-niva@laposte.net> 1750238724 +0200	commit: programs v4.0
e1d7e5fb8bc789799966d57b098b6ed00235c809 bf09f0d5c1ec45493936ff331ce671a83d1b8ac9 a-niva <a-niva@laposte.net> 1750239178 +0200	commit: programs v4.0
bf09f0d5c1ec45493936ff331ce671a83d1b8ac9 0cc18c84e5e1aa5e1f52c0ff3df92fa382f8eb92 a-niva <a-niva@laposte.net> 1750240006 +0200	commit: programs v4.1
0cc18c84e5e1aa5e1f52c0ff3df92fa382f8eb92 3f151c67ba0246fdc7203cb2a25c25e3584e168b a-niva <a-niva@laposte.net> 1750240667 +0200	commit: programs v4.1
3f151c67ba0246fdc7203cb2a25c25e3584e168b 07c485d19be0dd428d478a4015ba4fdf87a085a1 a-niva <a-niva@laposte.net> 1750241153 +0200	commit: programs v4.1
07c485d19be0dd428d478a4015ba4fdf87a085a1 1b75e436d450d84527917c03e038ffe489389dd3 a-niva <a-niva@laposte.net> 1750256273 +0200	commit: programs v4.2
1b75e436d450d84527917c03e038ffe489389dd3 5cdfeb4ba9645b6e838d85fecf65520cedad9e7b a-niva <a-niva@laposte.net> 1750257214 +0200	commit: programs v4.2
5cdfeb4ba9645b6e838d85fecf65520cedad9e7b 29d107b8884b764f2eac31f43768a335b84b1652 a-niva <a-niva@laposte.net> 1750258444 +0200	commit: programs v4.3
29d107b8884b764f2eac31f43768a335b84b1652 a424f82e3f789c32a43d3539b8accb945a2c51a0 a-niva <a-niva@laposte.net> 1750259453 +0200	commit: programs v4.3
a424f82e3f789c32a43d3539b8accb945a2c51a0 f7deaa17fe69f0c5fc402994d0efec5f3b7d60aa a-niva <a-niva@laposte.net> 1750260413 +0200	commit: programs v4.3
f7deaa17fe69f0c5fc402994d0efec5f3b7d60aa 0c2024dbaf96aa5485b8837c29d153e7bbc13166 a-niva <a-niva@laposte.net> 1750260679 +0200	commit: programs v4.3
0c2024dbaf96aa5485b8837c29d153e7bbc13166 49befceffbbc1c804d69870fa2b5172dd3638883 a-niva <a-niva@laposte.net> 1750262288 +0200	commit: programs v4.4
49befceffbbc1c804d69870fa2b5172dd3638883 b49fbafbdc0ca62474655ba186df891882297cc6 a-niva <a-niva@laposte.net> 1750262733 +0200	commit: programs v4.5
b49fbafbdc0ca62474655ba186df891882297cc6 7347ad55fc7899d048b94f22d1137fb577e49cbb a-niva <a-niva@laposte.net> 1750263810 +0200	commit: programs v4.6
7347ad55fc7899d048b94f22d1137fb577e49cbb a2e99af357a8bc98d54e1eeb29bd7385e4bbb684 a-niva <a-niva@laposte.net> 1750263989 +0200	commit: programs v4.6
a2e99af357a8bc98d54e1eeb29bd7385e4bbb684 a2a617adfaef235c6437ef04be4f3b4e513477c1 a-niva <a-niva@laposte.net> 1750275717 +0200	commit: prio1 v1
a2a617adfaef235c6437ef04be4f3b4e513477c1 54c283eaf0adf72b0f1c42f7ae43e8b07ff15ab9 a-niva <a-niva@laposte.net> 1750275833 +0200	commit: prio2 v1
54c283eaf0adf72b0f1c42f7ae43e8b07ff15ab9 e0f854a8d0b1073f341a7669558f6f950bcace9a a-niva <a-niva@laposte.net> 1750278635 +0200	commit: phase1 r3 v1
e0f854a8d0b1073f341a7669558f6f950bcace9a 144093256cba1c8d51503c1f3525a9f7c252102b a-niva <a-niva@laposte.net> 1750279834 +0200	commit: phase1 r3 v1.1
144093256cba1c8d51503c1f3525a9f7c252102b 68acee46a9ba0b8f1571e150d8e376dc3f3fa7bc a-niva <a-niva@laposte.net> 1750280146 +0200	commit: phase1 r3 v1.2
68acee46a9ba0b8f1571e150d8e376dc3f3fa7bc 177a035a93deee169c0f672b68b359c1829793b2 a-niva <a-niva@laposte.net> 1750280385 +0200	commit: phase1 r3 v1.2
177a035a93deee169c0f672b68b359c1829793b2 8d9b976151a74e83a9a0a8a3dae1a3721c8a9c68 a-niva <a-niva@laposte.net> 1750280426 +0200	commit: phase1 r3 v1.2
8d9b976151a74e83a9a0a8a3dae1a3721c8a9c68 4d5aecd10bc52a6860188e9df596c660afa222fd a-niva <a-niva@laposte.net> 1750281364 +0200	commit: phase1 r3 v1.3 toggle
4d5aecd10bc52a6860188e9df596c660afa222fd 5c761c4338cb577168e8b53767d84b9458295dcc a-niva <a-niva@laposte.net> 1750282405 +0200	commit: phase1 r3 v1.3 toggle
5c761c4338cb577168e8b53767d84b9458295dcc 1a5429b8d9f6dd7207aaef7f6e84b06735bd2bdb a-niva <a-niva@laposte.net> 1750282874 +0200	commit: phase1 r3 v1.3 program
1a5429b8d9f6dd7207aaef7f6e84b06735bd2bdb 2ca8ad7d711db16e5253a9d935026a12a0374858 a-niva <a-niva@laposte.net> 1750283042 +0200	commit: phase1 r3 v1.3 program v1
2ca8ad7d711db16e5253a9d935026a12a0374858 bd5c0254ea12bdf0e067bb2f2bd387ded34cec9e a-niva <a-niva@laposte.net> 1750283942 +0200	commit: phase1 r3 v1.3 program v2
bd5c0254ea12bdf0e067bb2f2bd387ded34cec9e d2c09124355985065af2bdabe9f5c34d2216a5dc a-niva <a-niva@laposte.net> 1750320485 +0200	commit: phase1 r3 v1.3 program v3
d2c09124355985065af2bdabe9f5c34d2216a5dc afb232aceb53900315fdc80000405bb3661725f2 a-niva <a-niva@laposte.net> 1750321139 +0200	commit: phase1 r3 v1.3 program v4
afb232aceb53900315fdc80000405bb3661725f2 cc0e5770afaf5270bd5b0d3ce6779d64388e2d54 a-niva <a-niva@laposte.net> 1750321697 +0200	commit: phase1 r3 v1.3 program v4
cc0e5770afaf5270bd5b0d3ce6779d64388e2d54 91f0aa541f988a1214d8bb20776308ca23c475fe a-niva <a-niva@laposte.net> 1750322192 +0200	commit: phase1 r3 v1.3 program v5
91f0aa541f988a1214d8bb20776308ca23c475fe 7866b97077c93939922803421fe34ffaf147c768 a-niva <a-niva@laposte.net> 1750322710 +0200	commit: phase1 r3 v1.3 program v5.1
7866b97077c93939922803421fe34ffaf147c768 deb368b6a88e01e6c7580610cb44046819be918c a-niva <a-niva@laposte.net> 1750322748 +0200	commit: phase1 r3 v1.3 program v5.1
deb368b6a88e01e6c7580610cb44046819be918c 7deb05bda541dbb7cea292d539f9b25983d25055 a-niva <a-niva@laposte.net> 1750323889 +0200	commit: phase1 r3 v1.3 program v5.2
7deb05bda541dbb7cea292d539f9b25983d25055 549500426ab8191a68163ff30914be5f8032e482 a-niva <a-niva@laposte.net> 1750324533 +0200	commit: phase1 r3 v1.3 program v5.3
549500426ab8191a68163ff30914be5f8032e482 5fd266149fb50e70fa7b6685f51f3d0a11648aae a-niva <a-niva@laposte.net> 1750325077 +0200	commit: phase1 r3 v1.3 program v5.3
5fd266149fb50e70fa7b6685f51f3d0a11648aae 92b854778b580b6edf2290dbae0908ab553c9ea5 a-niva <a-niva@laposte.net> 1750329498 +0200	commit: phase1 r3 v1.3 program v5.3
92b854778b580b6edf2290dbae0908ab553c9ea5 4986dfaf2655fcf0b6e806ce0acec2cd353aa910 a-niva <a-niva@laposte.net> 1750329919 +0200	commit: phase1 r3 v1.3 program v5.3
4986dfaf2655fcf0b6e806ce0acec2cd353aa910 a0e352c02085876ccd9089bd9aa07854bf8966d5 a-niva <a-niva@laposte.net> 1750330441 +0200	commit: phase ML reps v1.0
a0e352c02085876ccd9089bd9aa07854bf8966d5 f797779dc2088c3452014141711aa6e9a9c8aaa6 a-niva <a-niva@laposte.net> 1750330808 +0200	commit: phase ML reps v1.0
f797779dc2088c3452014141711aa6e9a9c8aaa6 86ccd0ddb7bdb59edd52a9228f8ba4485da6cf3b a-niva <a-niva@laposte.net> 1750331615 +0200	commit: phase ML reps v1.1
86ccd0ddb7bdb59edd52a9228f8ba4485da6cf3b b612f388eaa1e58110810b16bcbbc7a23582abd8 a-niva <a-niva@laposte.net> 1750332135 +0200	commit: phase ML reps v1.1
b612f388eaa1e58110810b16bcbbc7a23582abd8 34cc63139ba891c75f40646778b178371320d168 a-niva <a-niva@laposte.net> 1750332992 +0200	commit: phase ML reps v1.1
34cc63139ba891c75f40646778b178371320d168 be73229a5acf861bf9b913d7262752139c692dba a-niva <a-niva@laposte.net> 1750333609 +0200	commit: phase ML reps v1.1
be73229a5acf861bf9b913d7262752139c692dba ede19d64bb245698d0cabdf56b3d5130a4b3d27c a-niva <a-niva@laposte.net> 1750334061 +0200	commit: phase ML reps v1.1
ede19d64bb245698d0cabdf56b3d5130a4b3d27c 726e91b558486778bd3a1a6dd36f1c63861928bc a-niva <a-niva@laposte.net> 1750334835 +0200	commit: phase ML reps v1.2
726e91b558486778bd3a1a6dd36f1c63861928bc 73a255ef36c3debd3e8ff4495474a7e5078021d4 a-niva <a-niva@laposte.net> 1750335312 +0200	commit: phase ML reps v1.2
73a255ef36c3debd3e8ff4495474a7e5078021d4 5bb056588f5d20ebf056574087a891cdb5b2e6b6 a-niva <a-niva@laposte.net> 1750361863 +0200	commit: phase ML reps v1.3
5bb056588f5d20ebf056574087a891cdb5b2e6b6 08d009aa8f512267f8c0e69ed56d101673abc9a6 a-niva <a-niva@laposte.net> 1750362149 +0200	commit: phase ML reps v1.3
08d009aa8f512267f8c0e69ed56d101673abc9a6 c10b3469f918cb3b69c16b086f5b8522a1d7777a a-niva <a-niva@laposte.net> 1750362718 +0200	commit: phase ML reps v1.3
c10b3469f918cb3b69c16b086f5b8522a1d7777a 994d93b62da8c1db08b964705e75331c82a168f9 a-niva <a-niva@laposte.net> 1750365013 +0200	commit: phase 2.2.0
994d93b62da8c1db08b964705e75331c82a168f9 4fc6fb06a3abfdd5e64003ffa01af492fb22d7e8 a-niva <a-niva@laposte.net> 1750365589 +0200	commit: phase 2.2.1
4fc6fb06a3abfdd5e64003ffa01af492fb22d7e8 71c7cce107d267a8478a72905682d579640678bd a-niva <a-niva@laposte.net> 1750366306 +0200	commit: phase 2.2.2
71c7cce107d267a8478a72905682d579640678bd 632ce3c1fa0afbdc39e580f28c11c611ae2048ea a-niva <a-niva@laposte.net> 1750366858 +0200	commit: phase 2.2.2
632ce3c1fa0afbdc39e580f28c11c611ae2048ea f6ef2009535cbea7ea9220f8230380886edff7dd a-niva <a-niva@laposte.net> 1750367216 +0200	commit: phase 2.2.2
f6ef2009535cbea7ea9220f8230380886edff7dd 84de269a375c55ee194c1920b8aa2b846741bbd2 a-niva <a-niva@laposte.net> 1750367619 +0200	commit: phase 2.2.3
84de269a375c55ee194c1920b8aa2b846741bbd2 f6a22a14ed3c5f0891b1e42b8c2198cda5e7d941 a-niva <a-niva@laposte.net> 1750367787 +0200	commit: phase 2.2.3
f6a22a14ed3c5f0891b1e42b8c2198cda5e7d941 ebc922de9007ff36797672688b9dffeeb7ce6199 a-niva <a-niva@laposte.net> 1750367853 +0200	commit: phase 2.2.3
ebc922de9007ff36797672688b9dffeeb7ce6199 a940a50125a1061ba44465c33c286cb59139001f a-niva <a-niva@laposte.net> 1750368082 +0200	commit: phase 2.2.3
a940a50125a1061ba44465c33c286cb59139001f af2f56eaa40245a93c1f3fc6f29873327c25564a a-niva <a-niva@laposte.net> 1750424351 +0200	commit: phase 2.2.3
af2f56eaa40245a93c1f3fc6f29873327c25564a a17695b19bf829f46b6e785bd031b456a5a2ff09 a-niva <a-niva@laposte.net> 1750424935 +0200	commit: phase 2.2.3
a17695b19bf829f46b6e785bd031b456a5a2ff09 b9caac1cf4f527625d45157bb11f822c07261674 a-niva <a-niva@laposte.net> 1750426017 +0200	commit: phase 2.2.3
b9caac1cf4f527625d45157bb11f822c07261674 a44c7f087be715e2f319adc8be9664b6d7bbecbe a-niva <a-niva@laposte.net> 1750427783 +0200	commit: phase 2.2.3
a44c7f087be715e2f319adc8be9664b6d7bbecbe 485360c3def30778c11e3e7ddeaaff839872ace4 a-niva <a-niva@laposte.net> 1750428562 +0200	commit: phase 2.3
485360c3def30778c11e3e7ddeaaff839872ace4 6653125dfc6f587745b128f039ebaa43c6497b7f a-niva <a-niva@laposte.net> 1750428943 +0200	commit: phase 2.3
6653125dfc6f587745b128f039ebaa43c6497b7f d5c55d559966048faad8492107662accaea17044 a-niva <a-niva@laposte.net> 1750429691 +0200	commit: phase 2.3
d5c55d559966048faad8492107662accaea17044 4a3c4ef49f70f76419dd1c8f7bae61cd7daf2b44 a-niva <a-niva@laposte.net> 1750430017 +0200	commit: phase 2.3
4a3c4ef49f70f76419dd1c8f7bae61cd7daf2b44 56ee98824993178ef7e9935c6639706784c285ab a-niva <a-niva@laposte.net> 1750430690 +0200	commit: phase 2.3
56ee98824993178ef7e9935c6639706784c285ab c13a17b8c4de522cf97d976ed85b9dc316114f80 a-niva <a-niva@laposte.net> 1750431280 +0200	commit: phase 2.3
c13a17b8c4de522cf97d976ed85b9dc316114f80 2cadcbb77c23b2dd0e45876cc1e4459da78a5b26 a-niva <a-niva@laposte.net> 1750431547 +0200	commit: phase 2.31
2cadcbb77c23b2dd0e45876cc1e4459da78a5b26 c3d839e68e0a670e947b78d5a7c91b3a295304f1 a-niva <a-niva@laposte.net> 1750432581 +0200	commit: phase 2.32
c3d839e68e0a670e947b78d5a7c91b3a295304f1 0dac602ccecd8c1c21c42c9a8f3fb86c743185f0 a-niva <a-niva@laposte.net> 1750433432 +0200	commit: phase 2.33
0dac602ccecd8c1c21c42c9a8f3fb86c743185f0 3d80acd23ec511b695354204dcd9374b7ccfd599 a-niva <a-niva@laposte.net> 1750433653 +0200	commit: phase 2.33
3d80acd23ec511b695354204dcd9374b7ccfd599 4217e0def6258580bdcb08a195f65e9b11b955b3 a-niva <a-niva@laposte.net> 1750593646 +0200	commit: phase 2.40
4217e0def6258580bdcb08a195f65e9b11b955b3 559c13cf294ebe6862bfcfa23b4f614f2953fc12 a-niva <a-niva@laposte.net> 1750593693 +0200	commit: phase 2.40
559c13cf294ebe6862bfcfa23b4f614f2953fc12 5aa5aa3561cc82cd47a3501e0f93d4a33adb18c5 a-niva <a-niva@laposte.net> 1750593925 +0200	commit: phase 2.40
5aa5aa3561cc82cd47a3501e0f93d4a33adb18c5 6c386a46a24de072fda5ab0220a263c11f2e8d7d a-niva <a-niva@laposte.net> 1750596360 +0200	commit: phase 2.40
6c386a46a24de072fda5ab0220a263c11f2e8d7d 383f649877b319aca4eac7905b6498d5afbff432 a-niva <a-niva@laposte.net> 1750597226 +0200	commit: phase 2.40
383f649877b319aca4eac7905b6498d5afbff432 7e8b369ea5ac4c4803345aab2187ce2fdacf6548 a-niva <a-niva@laposte.net> 1750598816 +0200	commit: phase 2.40
7e8b369ea5ac4c4803345aab2187ce2fdacf6548 ce79dcaafad149230525dd443ac45f37b194707e a-niva <a-niva@laposte.net> 1750599854 +0200	commit: phase 2.41
ce79dcaafad149230525dd443ac45f37b194707e 9683014668f093afd2797b5965567d195f4b7a8a a-niva <a-niva@laposte.net> 1750600739 +0200	commit: phase 2.41
9683014668f093afd2797b5965567d195f4b7a8a eba1a5af8cf7de07ff9e092a266de36e383bfb64 a-niva <a-niva@laposte.net> 1750601974 +0200	commit: phase 2.41
eba1a5af8cf7de07ff9e092a266de36e383bfb64 ce1d096352814ca30b39e26ab2d3c89275532068 a-niva <a-niva@laposte.net> 1750603282 +0200	commit: phase 2.41
ce1d096352814ca30b39e26ab2d3c89275532068 d85606f1608cbf13af853f49448ebe5c8a628047 a-niva <a-niva@laposte.net> 1750603632 +0200	commit: phase 2.41
d85606f1608cbf13af853f49448ebe5c8a628047 a294367e2e243cd3eb5af3e8f64b8e5ce564a7da a-niva <a-niva@laposte.net> 1750603921 +0200	commit: phase 2.41
a294367e2e243cd3eb5af3e8f64b8e5ce564a7da ca8025920350180b54daf02a0de6938b2deba72d a-niva <a-niva@laposte.net> 1750604310 +0200	commit: phase 2.41
ca8025920350180b54daf02a0de6938b2deba72d 30c9fbcb4364d59cd5edb09c31c373060000d2c7 a-niva <a-niva@laposte.net> 1750604613 +0200	commit: phase 2.41
30c9fbcb4364d59cd5edb09c31c373060000d2c7 23b9ee9e57a8f88361e910c7c505679b1bbd1a51 a-niva <a-niva@laposte.net> 1750605150 +0200	commit: phase 2.42
23b9ee9e57a8f88361e910c7c505679b1bbd1a51 cb55d06d980a5f516a121ade47a22bb6a5806e3c a-niva <a-niva@laposte.net> 1750605556 +0200	commit: phase 2.42
cb55d06d980a5f516a121ade47a22bb6a5806e3c cfbeac571053d3d657c49ff63ff7eeba7bb002fe a-niva <a-niva@laposte.net> 1750606727 +0200	commit: phase 2.43
cfbeac571053d3d657c49ff63ff7eeba7bb002fe 17f9b4ba7643411b0fa065ab6a4e0225ea8c026b a-niva <a-niva@laposte.net> 1750608687 +0200	commit: phase 2.44
17f9b4ba7643411b0fa065ab6a4e0225ea8c026b 527237393b8830f20f81ff493a3ac942d9aad282 a-niva <a-niva@laposte.net> 1750609501 +0200	commit: phase 2.44
527237393b8830f20f81ff493a3ac942d9aad282 63e7780c9708ab5933c110fb1324e830b5db64c1 a-niva <a-niva@laposte.net> 1750610730 +0200	commit: phase 2.44
63e7780c9708ab5933c110fb1324e830b5db64c1 46c3de05ec079215843e69cd5a31d583937ac04f a-niva <a-niva@laposte.net> 1750619017 +0200	commit: phase 2.45
46c3de05ec079215843e69cd5a31d583937ac04f 0b67534ce55d1a89d34412cc3b37ff03bd0c384a a-niva <a-niva@laposte.net> 1750620060 +0200	commit: phase 2.46
0b67534ce55d1a89d34412cc3b37ff03bd0c384a 0242237eddb215d2d26e8a60fdf484637f32a09a a-niva <a-niva@laposte.net> 1750620550 +0200	commit: phase 2.46
0242237eddb215d2d26e8a60fdf484637f32a09a a422348d06fbab87a71404d0090f5acc383469f3 a-niva <a-niva@laposte.net> 1750621478 +0200	commit: phase 2.46
a422348d06fbab87a71404d0090f5acc383469f3 4c05186cc6d36ed300e6ba2ba18e154eee106612 a-niva <a-niva@laposte.net> 1750622007 +0200	commit: phase 2.46
4c05186cc6d36ed300e6ba2ba18e154eee106612 55c95382201371ef5424cf4ee628c29cb859bbeb a-niva <a-niva@laposte.net> 1750622452 +0200	commit: phase 2.46
55c95382201371ef5424cf4ee628c29cb859bbeb 89761ba4bdd14a1e88443bdfd94c53ab69b6f885 a-niva <a-niva@laposte.net> 1750624523 +0200	commit: phase 2.47
89761ba4bdd14a1e88443bdfd94c53ab69b6f885 94fd75f0c31937d52803579834aaf688a240b628 a-niva <a-niva@laposte.net> 1750624955 +0200	commit: phase 2.47
94fd75f0c31937d52803579834aaf688a240b628 32b918363b0e5a0baa9bf6c2962059b0d8ed2cb6 a-niva <a-niva@laposte.net> 1750625448 +0200	commit: phase 2.47
32b918363b0e5a0baa9bf6c2962059b0d8ed2cb6 7f8ae592e5ae3139390e5afbc5702f397a9ed77b a-niva <a-niva@laposte.net> 1750626232 +0200	commit: phase 2.47
7f8ae592e5ae3139390e5afbc5702f397a9ed77b f24280c64de2e40c822fd05e6ef483de8bbb906a a-niva <a-niva@laposte.net> 1750626857 +0200	commit: phase 2.47
f24280c64de2e40c822fd05e6ef483de8bbb906a 30560db43e8707ee01b90523f27c4721c9ab7a08 a-niva <a-niva@laposte.net> 1750627256 +0200	commit: phase 2.47
30560db43e8707ee01b90523f27c4721c9ab7a08 9d4799a9c50fa4c648023dc583954317ddd36b59 a-niva <a-niva@laposte.net> 1750630819 +0200	commit: phase 2.47
9d4799a9c50fa4c648023dc583954317ddd36b59 f9584dfe9ef75a2c955d54c32ee867dbfedd1227 a-niva <a-niva@laposte.net> 1750631758 +0200	commit: phase 2.47
f9584dfe9ef75a2c955d54c32ee867dbfedd1227 915cd1097ffd0626cf7ad3be0afae7be3a635927 a-niva <a-niva@laposte.net> 1750632264 +0200	commit: phase 2.47
915cd1097ffd0626cf7ad3be0afae7be3a635927 04878ea031b8e9d9d7c8c284453602579d4120a7 a-niva <a-niva@laposte.net> 1750632875 +0200	commit: phase 2.47
04878ea031b8e9d9d7c8c284453602579d4120a7 c711fcdcb1be5ca321293e49b8a7ab5020f02958 a-niva <a-niva@laposte.net> 1750633025 +0200	commit: phase 2.47
c711fcdcb1be5ca321293e49b8a7ab5020f02958 0fc817facd668e69fc70b5d8551be83448be1142 a-niva <a-niva@laposte.net> 1750660366 +0200	commit: phase 2.48
0fc817facd668e69fc70b5d8551be83448be1142 392f42543cec9ae2ccd443e12e914231335f1f9f a-niva <a-niva@laposte.net> 1750661347 +0200	commit: phase 2.50
392f42543cec9ae2ccd443e12e914231335f1f9f c03dc3fde9db0a467f6488003a399c3e19652a2c a-niva <a-niva@laposte.net> 1750661608 +0200	commit: phase 2.50
c03dc3fde9db0a467f6488003a399c3e19652a2c 35dc828fc050c311c6c42724e8430cd0318f8b88 a-niva <a-niva@laposte.net> 1750662609 +0200	commit: phase 2.50
35dc828fc050c311c6c42724e8430cd0318f8b88 bee9699c26e3e25d32a5563194f4a0b10d3d79bf a-niva <a-niva@laposte.net> 1750662910 +0200	commit: phase 2.50
bee9699c26e3e25d32a5563194f4a0b10d3d79bf f944645ae354e727f32739008895e7743b8a9847 a-niva <a-niva@laposte.net> 1750664111 +0200	commit: phase 2.51
f944645ae354e727f32739008895e7743b8a9847 76d8cc5bd7c53ea8e7b750e75c4adfa2c561fa6e a-niva <a-niva@laposte.net> 1750665497 +0200	commit: phase 2.52
76d8cc5bd7c53ea8e7b750e75c4adfa2c561fa6e 806423c225adb20b35039263aeec6b6b8e66f02c a-niva <a-niva@laposte.net> 1750667106 +0200	commit: phase 2.52
806423c225adb20b35039263aeec6b6b8e66f02c 11c6d9290ed4d2043d0c41d133ed0924c06d1ed1 a-niva <a-niva@laposte.net> 1750668002 +0200	commit: phase 2.52
11c6d9290ed4d2043d0c41d133ed0924c06d1ed1 f5caf6712349e9902e705010f5046a15b0eee14a a-niva <a-niva@laposte.net> 1750668452 +0200	commit: phase 2.52
f5caf6712349e9902e705010f5046a15b0eee14a d3b6295688eb11f8f6dbda4cf92487ff853f75ce a-niva <a-niva@laposte.net> 1750669025 +0200	commit: phase 2.53
d3b6295688eb11f8f6dbda4cf92487ff853f75ce ade742e05200c3f18aad0b2bec16a39dfbfcb8d8 a-niva <a-niva@laposte.net> 1750669563 +0200	commit: phase 2.53
ade742e05200c3f18aad0b2bec16a39dfbfcb8d8 0fb4df7316ad8406bd1d7b365c74e8bbbe4bc22b a-niva <a-niva@laposte.net> 1750669787 +0200	commit: phase 2.53
0fb4df7316ad8406bd1d7b365c74e8bbbe4bc22b 0601d485df3e7ad608030bffedd25596b2b88b2f a-niva <a-niva@laposte.net> 1750670222 +0200	commit: phase 2.53
0601d485df3e7ad608030bffedd25596b2b88b2f fdf97b47f5ba4acf96e6669c90c9b4bec345c8e5 a-niva <a-niva@laposte.net> 1750670679 +0200	commit: phase 2.53
fdf97b47f5ba4acf96e6669c90c9b4bec345c8e5 20ba35504cabf1cc48fdb1d1054e024d844b067a a-niva <a-niva@laposte.net> 1750671107 +0200	commit: phase 2.53
20ba35504cabf1cc48fdb1d1054e024d844b067a a4aa2968f10dbb6a3ecae593ddbb4af1f03a1e65 a-niva <a-niva@laposte.net> 1750672034 +0200	commit: phase 2.53
a4aa2968f10dbb6a3ecae593ddbb4af1f03a1e65 c95742fdc51fdc876248acfe659ebca7521349c2 a-niva <a-niva@laposte.net> 1750672505 +0200	commit: phase 2.53
c95742fdc51fdc876248acfe659ebca7521349c2 7490fc57df540d6b9d610e8f848b1a65df7c7705 a-niva <a-niva@laposte.net> 1750673847 +0200	commit: phase 2.54
7490fc57df540d6b9d610e8f848b1a65df7c7705 0252b56d55e2778598eeb21ac8d839bd41c8a199 a-niva <a-niva@laposte.net> 1750674464 +0200	commit: phase 2.54
0252b56d55e2778598eeb21ac8d839bd41c8a199 df62f65ba7e52ed6921a091fb9801b4d633c965e a-niva <a-niva@laposte.net> 1750674567 +0200	commit: phase 2.54
df62f65ba7e52ed6921a091fb9801b4d633c965e 8daa7cd023bd873fb0a8a8dd76ed7fbb8def6772 a-niva <a-niva@laposte.net> 1750679196 +0200	commit: phase 2.54
8daa7cd023bd873fb0a8a8dd76ed7fbb8def6772 39bdf214918e020117ed789cbdc148eea75d0bc3 a-niva <a-niva@laposte.net> 1750680065 +0200	commit: phase 2.54
39bdf214918e020117ed789cbdc148eea75d0bc3 f1b281d01aff474dc54a32b2c6b7dd249a211d66 a-niva <a-niva@laposte.net> 1750680382 +0200	commit: phase 2.54
f1b281d01aff474dc54a32b2c6b7dd249a211d66 3621c0f5a4cafcf2787ef82a1f5586612be4635b a-niva <a-niva@laposte.net> 1750680969 +0200	commit: mapping v1.0
3621c0f5a4cafcf2787ef82a1f5586612be4635b 0391547331050c842518502ea7ac1894f3446a09 a-niva <a-niva@laposte.net> 1750682481 +0200	commit: mapping v1.1
0391547331050c842518502ea7ac1894f3446a09 c32a8f1545d10e5f84f4d142468bbf4d08c2ec58 a-niva <a-niva@laposte.net> 1750683267 +0200	commit: mapping v1.1
c32a8f1545d10e5f84f4d142468bbf4d08c2ec58 58198f5c7fe473e1ac455a828568635d768517da a-niva <a-niva@laposte.net> 1750683289 +0200	commit: mapping v1.1
58198f5c7fe473e1ac455a828568635d768517da 530b33bb3db108259959d5719de585d9dd9d3dc0 a-niva <a-niva@laposte.net> 1750685012 +0200	commit: mapping v1.1
530b33bb3db108259959d5719de585d9dd9d3dc0 d04fc92aff338470eb8a4859b058b349d3e9e426 a-niva <a-niva@laposte.net> 1750686633 +0200	commit: mapping v1.1
d04fc92aff338470eb8a4859b058b349d3e9e426 fda657f7c06f064febe4a921ba38da8214069af7 a-niva <a-niva@laposte.net> 1750687219 +0200	commit: mapping v1.2
fda657f7c06f064febe4a921ba38da8214069af7 673b4d81f730e1dbf9f96a1f21236cc1004f7aec a-niva <a-niva@laposte.net> 1750688825 +0200	commit: mapping v1.2
673b4d81f730e1dbf9f96a1f21236cc1004f7aec 8299f27e58eb9c1501d706cb7732b36bfc5eb809 a-niva <a-niva@laposte.net> 1750688864 +0200	commit: mapping v1.2
8299f27e58eb9c1501d706cb7732b36bfc5eb809 d6fce6e7ad7bbc34cf991e05cca71af5b6c4e246 a-niva <a-niva@laposte.net> 1750689634 +0200	commit: mapping v1.3
d6fce6e7ad7bbc34cf991e05cca71af5b6c4e246 dc97e96b53becd3ebc26640776f56af62c34bfef a-niva <a-niva@laposte.net> 1750690435 +0200	commit: mapping v1.4
dc97e96b53becd3ebc26640776f56af62c34bfef 31d57a8d9f0bb9f6673b40baf7fd1f6003ebc9f3 a-niva <a-niva@laposte.net> 1750691629 +0200	commit: mapping v1.5
31d57a8d9f0bb9f6673b40baf7fd1f6003ebc9f3 d02997c67871d7aceae1d1ee465589c6e9015b2f a-niva <a-niva@laposte.net> 1750692384 +0200	commit: mapping v1.5
d02997c67871d7aceae1d1ee465589c6e9015b2f edb7433d51e85305f4ed214376a634ae01f191db a-niva <a-niva@laposte.net> 1750693067 +0200	commit: mapping v1.6
edb7433d51e85305f4ed214376a634ae01f191db ec14ff1de7248b1515eab361306466b529f02234 a-niva <a-niva@laposte.net> 1750693364 +0200	commit: mapping v1.6
ec14ff1de7248b1515eab361306466b529f02234 b70e8ddcd8ce3195f2afdad07e1d2ddb4c6548de a-niva <a-niva@laposte.net> 1750694298 +0200	commit: mapping v1.6
b70e8ddcd8ce3195f2afdad07e1d2ddb4c6548de ab1d294be5c22106085a2ba1f19a450c145431de a-niva <a-niva@laposte.net> 1750694959 +0200	commit: mapping v1.7
ab1d294be5c22106085a2ba1f19a450c145431de 48d8f1e8a015210291b0151c0d5b7f400b8cb5e4 a-niva <a-niva@laposte.net> 1750695575 +0200	commit: mapping v1.8
48d8f1e8a015210291b0151c0d5b7f400b8cb5e4 1644f330d479f0824dde28b3574368ff207c74a5 a-niva <a-niva@laposte.net> 1750696029 +0200	commit: mapping v1.8
1644f330d479f0824dde28b3574368ff207c74a5 3f5fed690bea7f39293842a5a35d5e47b3cc4c01 a-niva <a-niva@laposte.net> 1750696474 +0200	commit: mapping v1.8
3f5fed690bea7f39293842a5a35d5e47b3cc4c01 b2e7cecbf71781aba8093c6fe2b13565d026d5af a-niva <a-niva@laposte.net> 1750703070 +0200	commit: mapping v1.8
b2e7cecbf71781aba8093c6fe2b13565d026d5af 2aeec9954953e5961bd6cc6d05ee78e5dd2046ab a-niva <a-niva@laposte.net> 1750703514 +0200	commit: mapping v1.8
2aeec9954953e5961bd6cc6d05ee78e5dd2046ab acd7a6b107813a5149887a3cedc1edfead7eba95 a-niva <a-niva@laposte.net> 1750703981 +0200	commit: mapping v1.8
acd7a6b107813a5149887a3cedc1edfead7eba95 1f7d9b0543e37144d17f8276f54565c433ea861c a-niva <a-niva@laposte.net> 1750704581 +0200	commit: mapping v1.9
1f7d9b0543e37144d17f8276f54565c433ea861c 5fdf094ad552ce9ee4a7eb72d1f4cd8a7ad23e7a a-niva <a-niva@laposte.net> 1750704668 +0200	commit: mapping v1.9
5fdf094ad552ce9ee4a7eb72d1f4cd8a7ad23e7a 0abe6bd0a70ee9150293bebe484c08f62be1890e a-niva <a-niva@laposte.net> 1750705117 +0200	commit: mapping v1.9
0abe6bd0a70ee9150293bebe484c08f62be1890e 58f1c8b31d276a8fe5b6fb2978be545cc19928d0 a-niva <a-niva@laposte.net> 1750705626 +0200	commit: mapping v1.9
58f1c8b31d276a8fe5b6fb2978be545cc19928d0 a7d49a6b30bf2ee06b264182d4ebe41f58f9d05b a-niva <a-niva@laposte.net> 1750706328 +0200	commit: mapping v1.9
a7d49a6b30bf2ee06b264182d4ebe41f58f9d05b dbd421a51a86a020ab9bf24f2f3ee00939363ee0 a-niva <a-niva@laposte.net> 1750763662 +0200	commit: adaptativesession v1.0
dbd421a51a86a020ab9bf24f2f3ee00939363ee0 a55c0d8385eaaa1d435f3f6e874e0380044d9286 a-niva <a-niva@laposte.net> 1750763684 +0200	commit: adaptativesession v1.0
a55c0d8385eaaa1d435f3f6e874e0380044d9286 a0205970385f59a472ec0c6723f71e92282b765f a-niva <a-niva@laposte.net> 1750764399 +0200	commit: adaptativesession v1.1
a0205970385f59a472ec0c6723f71e92282b765f c5d56f3b902b5075468a21bb953f845a6e2fd909 a-niva <a-niva@laposte.net> 1750764765 +0200	commit: adaptativesession v1.1

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\logs\refs\heads\main ---
--- Nom du fichier: main ---
--- Contenu ---
0000000000000000000000000000000000000000 58b0f2100d68f1aa85124ede1421e228d25fa9f0 a-niva <a-niva@laposte.net> 1749549473 +0200	commit (initial): Initial commit - Complete fitness app structure
58b0f2100d68f1aa85124ede1421e228d25fa9f0 82e350f5e4e261adbb28699f9210f2587e681355 a-niva <a-niva@laposte.net> 1749550525 +0200	commit: Fix database import for production deployment
82e350f5e4e261adbb28699f9210f2587e681355 b5a8227ecc1fdad64a7b7258fef7a72e350976c3 a-niva <a-niva@laposte.net> 1749551943 +0200	commit: UI and ML patches
b5a8227ecc1fdad64a7b7258fef7a72e350976c3 61636d5cadff17715032a5cbf8b29f89ccd79a29 a-niva <a-niva@laposte.net> 1749552940 +0200	commit: UI and ML patches v2
61636d5cadff17715032a5cbf8b29f89ccd79a29 e01f8c81d03c6d188c5e13d6f0430924a7a43602 a-niva <a-niva@laposte.net> 1749554659 +0200	commit: Fix equipment v1
e01f8c81d03c6d188c5e13d6f0430924a7a43602 0e1b71263a6e009328a57d7b1b570f6baed5883c a-niva <a-niva@laposte.net> 1749555332 +0200	commit: Fix equipment v2
0e1b71263a6e009328a57d7b1b570f6baed5883c 5bd735b0680d7e9fcb6c9b703cdcd6cbb6d312e7 a-niva <a-niva@laposte.net> 1749555790 +0200	commit: Fix equipment v3
5bd735b0680d7e9fcb6c9b703cdcd6cbb6d312e7 914e2535ad3aa2115451a383b3530780f640962c a-niva <a-niva@laposte.net> 1749556267 +0200	commit: Fix equipment v3.1
914e2535ad3aa2115451a383b3530780f640962c a96083cbb80309e70bf16d018baf9b81675efc75 a-niva <a-niva@laposte.net> 1749559174 +0200	commit: Fix equipment v3.2
a96083cbb80309e70bf16d018baf9b81675efc75 28b8030ac9b718227578f6d3e57c264c1140b4ea a-niva <a-niva@laposte.net> 1749560099 +0200	commit: Fix equipment v4
28b8030ac9b718227578f6d3e57c264c1140b4ea 1606610a71685a4d4b47c779c1e2e3863a0ee14d a-niva <a-niva@laposte.net> 1749562041 +0200	commit: Fix bdd v1
1606610a71685a4d4b47c779c1e2e3863a0ee14d 0b80c0a5abec422b00cabcaa284099b449c598c5 a-niva <a-niva@laposte.net> 1749634028 +0200	commit: Fix design 1
0b80c0a5abec422b00cabcaa284099b449c598c5 3fc1bf103f9550cf273186b8d1e171eb7c823453 a-niva <a-niva@laposte.net> 1749635112 +0200	commit: Fix design 2
3fc1bf103f9550cf273186b8d1e171eb7c823453 1be636b8c25c4c860feaa9ebaf577ff69bf58425 a-niva <a-niva@laposte.net> 1749636207 +0200	commit: Fix design 2.1
1be636b8c25c4c860feaa9ebaf577ff69bf58425 704445894f5a4ca7b22a8f3fe7d34d11077d60a3 a-niva <a-niva@laposte.net> 1749638022 +0200	commit: Fix design 2.2
704445894f5a4ca7b22a8f3fe7d34d11077d60a3 e100d8c63d8a6145bf2429109f2f2ac207839757 a-niva <a-niva@laposte.net> 1749639195 +0200	commit: Fix design 2.3
e100d8c63d8a6145bf2429109f2f2ac207839757 8d0fe08c04c44d205e29cc7e5cee928be8b0b33e a-niva <a-niva@laposte.net> 1749652269 +0200	commit: Fix design 2.4
8d0fe08c04c44d205e29cc7e5cee928be8b0b33e 92a1484084c8f277e6a7bb4699e112375625e685 a-niva <a-niva@laposte.net> 1749652988 +0200	commit: Fix design 2.5
92a1484084c8f277e6a7bb4699e112375625e685 4536ab4008a6c50efe3391e691b71f4945dc48b9 a-niva <a-niva@laposte.net> 1749654045 +0200	commit: Fix design 2.6
4536ab4008a6c50efe3391e691b71f4945dc48b9 a376d49a66c70c24ab6c2d76de83d8614f178f1b a-niva <a-niva@laposte.net> 1749655171 +0200	commit: Fix design 2.7
a376d49a66c70c24ab6c2d76de83d8614f178f1b 3201f653c082578e077b0f4609157fc006896881 a-niva <a-niva@laposte.net> 1749655599 +0200	commit: Fix design 2.8
3201f653c082578e077b0f4609157fc006896881 de231ae9f2eac5f847e4dad82a7b91cad3f4936e a-niva <a-niva@laposte.net> 1749655853 +0200	commit: Fix design 2.9
de231ae9f2eac5f847e4dad82a7b91cad3f4936e 64f3081165873323b5f23e922d63b6a83887b499 a-niva <a-niva@laposte.net> 1749656269 +0200	commit: Fix design 3.0
64f3081165873323b5f23e922d63b6a83887b499 06096a89a48ab72557e870063945f543a8ce4e9a a-niva <a-niva@laposte.net> 1749656639 +0200	commit: Fix design 3.1
06096a89a48ab72557e870063945f543a8ce4e9a 2ec7413213d2f661f39d06d44525ac30afd25556 a-niva <a-niva@laposte.net> 1749657821 +0200	commit: Fix design 3.2
2ec7413213d2f661f39d06d44525ac30afd25556 faf50d5a2c6b22bf880e29b5ae9e7af4be807dbd a-niva <a-niva@laposte.net> 1749658366 +0200	commit: Fix design 3.2
faf50d5a2c6b22bf880e29b5ae9e7af4be807dbd 34f316033f023adeb72534a1a26bbdceaeb2d655 a-niva <a-niva@laposte.net> 1749662849 +0200	commit: phase 1.1 v1.0
34f316033f023adeb72534a1a26bbdceaeb2d655 ca865f22cc7afac562303a597fcb806dd8f008d4 a-niva <a-niva@laposte.net> 1749663617 +0200	commit: phase 1.1 v1.1
ca865f22cc7afac562303a597fcb806dd8f008d4 f57e32156cfa15bd44e65f2a6fff0e7a58ce0448 a-niva <a-niva@laposte.net> 1749664206 +0200	commit: phase 1.2 v1
f57e32156cfa15bd44e65f2a6fff0e7a58ce0448 d81a6335d654069cd4c9883c688348db80877934 a-niva <a-niva@laposte.net> 1749665081 +0200	commit: phase 1.2 v2
d81a6335d654069cd4c9883c688348db80877934 6883cd3d016327b191c23cf23b7d59a69efa9206 a-niva <a-niva@laposte.net> 1749714273 +0200	commit: phase 1.2 v3
6883cd3d016327b191c23cf23b7d59a69efa9206 eb65f513dc055b498bb54226152fb6605aac6f2e a-niva <a-niva@laposte.net> 1749715246 +0200	commit: phase 1.2 v4
eb65f513dc055b498bb54226152fb6605aac6f2e ba7c77f5b45905397bdb99536f8a5faef2d98184 a-niva <a-niva@laposte.net> 1749715577 +0200	commit: phase 1.2 v5
ba7c77f5b45905397bdb99536f8a5faef2d98184 3c3036d7a243afa72612af3d54996e7d435df6f2 a-niva <a-niva@laposte.net> 1749716186 +0200	commit: phase 1.2 v6
3c3036d7a243afa72612af3d54996e7d435df6f2 030635031326d27cdfc3bd6dec6bcd540ee895a2 a-niva <a-niva@laposte.net> 1749717609 +0200	commit: phase 1.2 v7
030635031326d27cdfc3bd6dec6bcd540ee895a2 86d020cc135539e5b2badacbe48c893b3b7a92a0 a-niva <a-niva@laposte.net> 1749718610 +0200	commit: phase 1.3 v1
86d020cc135539e5b2badacbe48c893b3b7a92a0 8407165fa68b9e9d1b1dd2be1220ceb526b10bc8 a-niva <a-niva@laposte.net> 1749719816 +0200	commit: phase 1.3 v2
8407165fa68b9e9d1b1dd2be1220ceb526b10bc8 7ff5e336f7cb1a86f341c5a2cec15bbcc073cf4d a-niva <a-niva@laposte.net> 1749720656 +0200	commit: phase 1.3 v3
7ff5e336f7cb1a86f341c5a2cec15bbcc073cf4d 18ed14f3bc7968102148319b3f15e4da0af6bbd4 a-niva <a-niva@laposte.net> 1749721645 +0200	commit: phase 1.3 v4
18ed14f3bc7968102148319b3f15e4da0af6bbd4 9f19e46cf09712e3e14384f6963ad7abc3a76d44 a-niva <a-niva@laposte.net> 1749722070 +0200	commit: phase 1.3 v5
9f19e46cf09712e3e14384f6963ad7abc3a76d44 4a983f4f74c668bc4f2d35c31209a0b67ea5b0e3 a-niva <a-niva@laposte.net> 1749723122 +0200	commit: phase 1.3 v6
4a983f4f74c668bc4f2d35c31209a0b67ea5b0e3 12e8745b891c46a42bc388ff9d55c4091ef6dd58 a-niva <a-niva@laposte.net> 1749724618 +0200	commit: phase 1.3 v7
12e8745b891c46a42bc388ff9d55c4091ef6dd58 2d503adf4faf262d29497f876855c32e35048337 a-niva <a-niva@laposte.net> 1749726778 +0200	commit: phase 1.3 v8
2d503adf4faf262d29497f876855c32e35048337 b4a014aadfe9e09c7c11d9cdab8a0685c9c953d9 a-niva <a-niva@laposte.net> 1749728859 +0200	commit: phase 1.3 v9
b4a014aadfe9e09c7c11d9cdab8a0685c9c953d9 4a7b1ee4985cad6c3cdb14e91af8d19ee0026f3e a-niva <a-niva@laposte.net> 1749729597 +0200	commit: phase 1.3 v10
4a7b1ee4985cad6c3cdb14e91af8d19ee0026f3e fc6e2e40eeeae144c174445883d232e5ebc39802 a-niva <a-niva@laposte.net> 1749765045 +0200	commit: phase 1.3 v11
fc6e2e40eeeae144c174445883d232e5ebc39802 05d2f7d29c5b05f8423114e66a50ff1e73a4ae81 a-niva <a-niva@laposte.net> 1749766152 +0200	commit: phase 1.3 v12
05d2f7d29c5b05f8423114e66a50ff1e73a4ae81 0d3290a7f4ef3247f2c4342b5e523e0b195e043c a-niva <a-niva@laposte.net> 1749766953 +0200	commit: phase 1.3 v13
0d3290a7f4ef3247f2c4342b5e523e0b195e043c 2dcef4c18a896871f16a320a53355ee5246e319a a-niva <a-niva@laposte.net> 1749767698 +0200	commit: phase 1.3 v14
2dcef4c18a896871f16a320a53355ee5246e319a 0aebce21d36870fb424593f1da4a900be0f1d2ee a-niva <a-niva@laposte.net> 1749768656 +0200	commit: phase 1.3 v15
0aebce21d36870fb424593f1da4a900be0f1d2ee 70d052a9a877f65e54e315854114e9779868bfb1 a-niva <a-niva@laposte.net> 1749769443 +0200	commit: phase 1.3 v16
70d052a9a877f65e54e315854114e9779868bfb1 a4e5762ff99c37bd913681cf5d5b9906022dee40 a-niva <a-niva@laposte.net> 1749771059 +0200	commit: phase 2 v1
a4e5762ff99c37bd913681cf5d5b9906022dee40 1daf1b0341f7564d36854929db44d944e548f8f5 a-niva <a-niva@laposte.net> 1749771485 +0200	commit: phase 2 v1.1 rollback schemas
1daf1b0341f7564d36854929db44d944e548f8f5 57ee50b350ed1c6ad422574c537d7198173a31cc a-niva <a-niva@laposte.net> 1749808546 +0200	commit: phase 2 v1.2
57ee50b350ed1c6ad422574c537d7198173a31cc dbbfd55017b2775d8547e45da2d5a7f0dcd1e273 a-niva <a-niva@laposte.net> 1749809840 +0200	commit: phase 2 v1.3
dbbfd55017b2775d8547e45da2d5a7f0dcd1e273 287cf45f24b6339e20119f2f94b168e574e593ff a-niva <a-niva@laposte.net> 1749811564 +0200	commit: phase 2 v1.4
287cf45f24b6339e20119f2f94b168e574e593ff 9400a44312dd9abff835f0b1e0270308540fc39a a-niva <a-niva@laposte.net> 1749812536 +0200	commit: phase 2 v1.5
9400a44312dd9abff835f0b1e0270308540fc39a 2edd35413c42c62fafe3c7d07a15dcab34cdc10b a-niva <a-niva@laposte.net> 1749814906 +0200	commit: phase 2 v2 1.0
2edd35413c42c62fafe3c7d07a15dcab34cdc10b 044149e7244698b83a8a6790601b6584295294c3 a-niva <a-niva@laposte.net> 1749815822 +0200	commit: phase 2 v2 1.1
044149e7244698b83a8a6790601b6584295294c3 f0fa61d13e8503692b9b0637a831832dc00030a0 a-niva <a-niva@laposte.net> 1749816437 +0200	commit: phase 2 v2 1.2
f0fa61d13e8503692b9b0637a831832dc00030a0 d69aa91b708a7fe1ea1285a2e287544f371a7112 a-niva <a-niva@laposte.net> 1749817321 +0200	commit: phase 2 v2 1.3
d69aa91b708a7fe1ea1285a2e287544f371a7112 0348115d411ecb8613cfc0dd36e9cda3f522f493 a-niva <a-niva@laposte.net> 1749818315 +0200	commit: phase 2 v2 1.4
0348115d411ecb8613cfc0dd36e9cda3f522f493 644dc250e6789dd5bec706a10cf40e5cd549c6f4 a-niva <a-niva@laposte.net> 1749823586 +0200	commit: phase 2 v2 1.
644dc250e6789dd5bec706a10cf40e5cd549c6f4 8e49479a4ba10fcc8ea5ce2a8eb8d9500b1c52dd a-niva <a-niva@laposte.net> 1749825517 +0200	commit: phase 2 v2 2.0
8e49479a4ba10fcc8ea5ce2a8eb8d9500b1c52dd 206d359e0b6ebc14f228297d07544317f79475b5 a-niva <a-niva@laposte.net> 1749826647 +0200	commit: phase 2 v2 2.1
206d359e0b6ebc14f228297d07544317f79475b5 9c146148b56839c52527c3005ccf89ed6543958e a-niva <a-niva@laposte.net> 1749827377 +0200	commit: phase 2 v2 2.2
9c146148b56839c52527c3005ccf89ed6543958e 472f01d87988878f5574376d7148df2cb4f02f3d a-niva <a-niva@laposte.net> 1749827743 +0200	commit: phase 2 v2 2.2
472f01d87988878f5574376d7148df2cb4f02f3d 71a2887131a63b4c9ad8e7f70b46338e7d14eb57 a-niva <a-niva@laposte.net> 1749827769 +0200	commit: phase 2 v2 2.3
71a2887131a63b4c9ad8e7f70b46338e7d14eb57 ec80f480afe9d230452aa2c2d32c5f807cfb92d1 a-niva <a-niva@laposte.net> 1749827818 +0200	commit: phase 2 v2 2.4
ec80f480afe9d230452aa2c2d32c5f807cfb92d1 bb0fa3280e4a0e75ecb99aff20b932745be46154 a-niva <a-niva@laposte.net> 1749828235 +0200	commit: phase 2 v2 2.5
bb0fa3280e4a0e75ecb99aff20b932745be46154 6e16b9f03c40227c87c5ce5dd475cd5ef12cf6c2 a-niva <a-niva@laposte.net> 1749828478 +0200	commit: phase 2 v2 2.6
6e16b9f03c40227c87c5ce5dd475cd5ef12cf6c2 0f0a68e958732ecaaf58b75494658e87b0dbaabb a-niva <a-niva@laposte.net> 1749899711 +0200	commit: phase 2 v3 1.0
0f0a68e958732ecaaf58b75494658e87b0dbaabb 3de94b4831579b6ccd015145efe133288ba78cc5 a-niva <a-niva@laposte.net> 1749899774 +0200	commit: phase 2 v3 1.1
3de94b4831579b6ccd015145efe133288ba78cc5 d8f7837ffc0524a9b2b24007b00cd65bd9b74e26 a-niva <a-niva@laposte.net> 1749900537 +0200	commit: phase 2 v3 1.2
d8f7837ffc0524a9b2b24007b00cd65bd9b74e26 0196df65549c89c2ab7fa6f1d4f4ceda77a5537b a-niva <a-niva@laposte.net> 1749902269 +0200	commit: phase 2 v3 1.3
0196df65549c89c2ab7fa6f1d4f4ceda77a5537b a58870f54ee0dd84547af185b9313491399b689a a-niva <a-niva@laposte.net> 1750007473 +0200	commit: phase 2 v3 1.4
a58870f54ee0dd84547af185b9313491399b689a c385799e98765579ca27e688d585187fe9d2b0ad a-niva <a-niva@laposte.net> 1750008015 +0200	commit: phase 2 v3 1.6
c385799e98765579ca27e688d585187fe9d2b0ad b2e1595f6751dbf7e8df46a17b797cd859d8a9ab a-niva <a-niva@laposte.net> 1750008728 +0200	commit: phase 2 v3 1.7
b2e1595f6751dbf7e8df46a17b797cd859d8a9ab 21795b4bf1dc2b5ec4804b63abb0c6e07ffbf153 a-niva <a-niva@laposte.net> 1750010376 +0200	commit: phase 3 v1 1.0
21795b4bf1dc2b5ec4804b63abb0c6e07ffbf153 2f50befc65efcd24179f1c1b4a35b75b9a8b75d8 a-niva <a-niva@laposte.net> 1750011548 +0200	commit: phase 3 v1 1.1
2f50befc65efcd24179f1c1b4a35b75b9a8b75d8 692875fb63ff0b00b85fbc1ff3ce93a812cee3cf a-niva <a-niva@laposte.net> 1750012120 +0200	commit: phase 3 v1 1.2
692875fb63ff0b00b85fbc1ff3ce93a812cee3cf 10d0c4793526a9c2aeefaa6f9e48b27f667faace a-niva <a-niva@laposte.net> 1750014221 +0200	commit: phase 3 v2 1.0
10d0c4793526a9c2aeefaa6f9e48b27f667faace 18c0bf42089ba017dc42a57f5d36ad6e14204ed5 a-niva <a-niva@laposte.net> 1750014891 +0200	commit: phase 3 v2 1.1
18c0bf42089ba017dc42a57f5d36ad6e14204ed5 98f11e4dd6a4972b0aec1b2bc9c73019f7ad3c0a a-niva <a-niva@laposte.net> 1750015353 +0200	commit: phase 3 v2 1.2
98f11e4dd6a4972b0aec1b2bc9c73019f7ad3c0a 84f5ef4ca05c4811f2bff49f45f42d2ec8368430 a-niva <a-niva@laposte.net> 1750017340 +0200	commit: phase 3 v2 1.3
84f5ef4ca05c4811f2bff49f45f42d2ec8368430 50d4d093be71f89fbed1c76e5f0657d9221013d6 a-niva <a-niva@laposte.net> 1750018138 +0200	commit: phase 3 v2 1.4
50d4d093be71f89fbed1c76e5f0657d9221013d6 a0cb21d0fd4acf0e558f7c8e02c9df08d264fff6 a-niva <a-niva@laposte.net> 1750018776 +0200	commit: phase 3 v2 1.5
a0cb21d0fd4acf0e558f7c8e02c9df08d264fff6 b95acd106e229e60a142df1185009fa3f688e26f a-niva <a-niva@laposte.net> 1750021484 +0200	commit: phase 3 v2 1.
b95acd106e229e60a142df1185009fa3f688e26f b46371cb1fe8fe227b2a27cc69c6c081788d6bed a-niva <a-niva@laposte.net> 1750022182 +0200	commit: phase 3 v2 1.
b46371cb1fe8fe227b2a27cc69c6c081788d6bed 0e67d9c933d856ff9088366ad0ba7862981ceef3 a-niva <a-niva@laposte.net> 1750022783 +0200	commit: phase 3 v2 1.6
0e67d9c933d856ff9088366ad0ba7862981ceef3 1ba77afd7aadd8fd12a8b12ffcb0a703ccabe4f8 a-niva <a-niva@laposte.net> 1750023128 +0200	commit: phase 3 v2 1.7
1ba77afd7aadd8fd12a8b12ffcb0a703ccabe4f8 4f9a9663f3ccb2b970bfeb686c9e095ea35069a1 a-niva <a-niva@laposte.net> 1750023546 +0200	commit: phase 3 v2 1.8
4f9a9663f3ccb2b970bfeb686c9e095ea35069a1 f1336ba710dddbf186af861cd51468354e5b353c a-niva <a-niva@laposte.net> 1750023781 +0200	commit: phase 3 v2 1.9
f1336ba710dddbf186af861cd51468354e5b353c 2dd295c5bd27b6df1a840e8649ad98e341d3c98f a-niva <a-niva@laposte.net> 1750024580 +0200	commit: phase 3 v2 1.10
2dd295c5bd27b6df1a840e8649ad98e341d3c98f a90fc84b912425ba2a3608a091407deb6318ea1b a-niva <a-niva@laposte.net> 1750059549 +0200	commit: phase 3 v2 1.11
a90fc84b912425ba2a3608a091407deb6318ea1b 033441e61cfa91c629522481503f3d6d5718719a a-niva <a-niva@laposte.net> 1750060306 +0200	commit: phase 3 v2 1.12
033441e61cfa91c629522481503f3d6d5718719a 998a4dd95c38c6dda1c51554452270760b20f9bc a-niva <a-niva@laposte.net> 1750061083 +0200	commit: phase 3 v2 1.13
998a4dd95c38c6dda1c51554452270760b20f9bc f9ee1f467ef28e34c221b1725d9e378b8b949b33 a-niva <a-niva@laposte.net> 1750061984 +0200	commit: phase 3 v2 1.14
f9ee1f467ef28e34c221b1725d9e378b8b949b33 a397bdbd73a9bdca8566f5ae82f7724b8c6a6980 a-niva <a-niva@laposte.net> 1750062778 +0200	commit: phase 3 v2 1.15
a397bdbd73a9bdca8566f5ae82f7724b8c6a6980 fd45e53fc641e04fc68b4422064b625593a1ac71 a-niva <a-niva@laposte.net> 1750063781 +0200	commit: phase 3 v2 1.16
fd45e53fc641e04fc68b4422064b625593a1ac71 e5acf112710f8e69f1a0237ee2101fcbcba110ba a-niva <a-niva@laposte.net> 1750064867 +0200	commit: phase 3 v2 1.17
e5acf112710f8e69f1a0237ee2101fcbcba110ba 35abcc6d32e14d8876d75cf1117d11c5319ac7eb a-niva <a-niva@laposte.net> 1750065054 +0200	commit: phase 3 v2 1.18
35abcc6d32e14d8876d75cf1117d11c5319ac7eb 5514a186f6b5d5abf75dcac4efa3a4b867593d51 a-niva <a-niva@laposte.net> 1750066120 +0200	commit: phase 3 v2 1.19
5514a186f6b5d5abf75dcac4efa3a4b867593d51 1c7bb954e7d10105ccd2af5009e2dd55356b84de a-niva <a-niva@laposte.net> 1750066837 +0200	commit: phase 3 v2 1.20
1c7bb954e7d10105ccd2af5009e2dd55356b84de 09f5baa8c597d58f6fcc35d9f3a22282030c1c9e a-niva <a-niva@laposte.net> 1750067629 +0200	commit: phase 3 v2 1.21
09f5baa8c597d58f6fcc35d9f3a22282030c1c9e 8bf46857280daf7ed71bcba34ea571a3d1752ca6 a-niva <a-niva@laposte.net> 1750069078 +0200	commit: phase 3 v2 1.22
8bf46857280daf7ed71bcba34ea571a3d1752ca6 082555a30c80c52372adba832a0c0d550fa9b320 a-niva <a-niva@laposte.net> 1750069946 +0200	commit: phase 3 v2 1.23
082555a30c80c52372adba832a0c0d550fa9b320 48bd16afbfe5bd8cfd64327b3a7ecb14e55469fe a-niva <a-niva@laposte.net> 1750070482 +0200	commit: phase 3 v2 1.24
48bd16afbfe5bd8cfd64327b3a7ecb14e55469fe 3239c67414dfef235395833e5a5fa1deb1283076 a-niva <a-niva@laposte.net> 1750071516 +0200	commit: phase 3 v2 1.25
3239c67414dfef235395833e5a5fa1deb1283076 fe918fb7cd7a4e755e9074deb38723e4be8631fe a-niva <a-niva@laposte.net> 1750073654 +0200	commit: phase 3 v2 1.26
fe918fb7cd7a4e755e9074deb38723e4be8631fe e94a363746c5524b0018c9023fb99dbc18d08ddc a-niva <a-niva@laposte.net> 1750083781 +0200	commit: phase 3 v2 1.27
e94a363746c5524b0018c9023fb99dbc18d08ddc d3eef2d46aacfbcb32a54bf95082f458403c21dc a-niva <a-niva@laposte.net> 1750084307 +0200	commit: phase 3 v2 1.28
d3eef2d46aacfbcb32a54bf95082f458403c21dc 8f55f66346873872eaf8116508ac33cffccf51c3 a-niva <a-niva@laposte.net> 1750084517 +0200	commit: phase 3 v2 1.29
8f55f66346873872eaf8116508ac33cffccf51c3 92346874d26c9e3433c4179eb87b904b2fcfdacc a-niva <a-niva@laposte.net> 1750085066 +0200	commit: phase 3 v2 1.3
92346874d26c9e3433c4179eb87b904b2fcfdacc 219a243be128bf30e8fc6b4b940534e326d41037 a-niva <a-niva@laposte.net> 1750085699 +0200	commit: phase 3 v2 1.31
219a243be128bf30e8fc6b4b940534e326d41037 2d84e924bdd74a74eb4c925b334d5b7c992fac48 a-niva <a-niva@laposte.net> 1750086334 +0200	commit: phase 3 v2 1.33
2d84e924bdd74a74eb4c925b334d5b7c992fac48 00f5a50ba86b2c7990e89b2b25e5ad05bc3c0fb8 a-niva <a-niva@laposte.net> 1750086629 +0200	commit: phase 3 v2 1.34
00f5a50ba86b2c7990e89b2b25e5ad05bc3c0fb8 b3766da5f190f3f62367336985524e8beb1c0ec2 a-niva <a-niva@laposte.net> 1750092317 +0200	commit: phase 3 v3 1.
b3766da5f190f3f62367336985524e8beb1c0ec2 7d9be6e34bcb3fa7613514f24eb89240940aca68 a-niva <a-niva@laposte.net> 1750092339 +0200	pull origin main: Merge made by the 'ort' strategy.
7d9be6e34bcb3fa7613514f24eb89240940aca68 3dff3d7ced41b7c4301a8140205d5d2515f7cdfc a-niva <a-niva@laposte.net> 1750093054 +0200	commit: phase 4.21
3dff3d7ced41b7c4301a8140205d5d2515f7cdfc 880ed4a95c0ad70d5e330a2d4f0899661698667c a-niva <a-niva@laposte.net> 1750093437 +0200	commit: erase 1.1
880ed4a95c0ad70d5e330a2d4f0899661698667c 97ed1c2ce3df4d2d4be97032c92fe56ffcf6035e a-niva <a-niva@laposte.net> 1750093999 +0200	commit: version 4 1.0
97ed1c2ce3df4d2d4be97032c92fe56ffcf6035e e43c1425d4a602a5163777fdf2d73c3bedd03426 a-niva <a-niva@laposte.net> 1750094710 +0200	commit: version 4 1.1
e43c1425d4a602a5163777fdf2d73c3bedd03426 6ea4d13250366cd6828548d6bb55dae6be69aef5 a-niva <a-niva@laposte.net> 1750095126 +0200	commit: version 4 1.2
6ea4d13250366cd6828548d6bb55dae6be69aef5 f1a733d0accd2defa3a590cc33e11e4d3a084706 a-niva <a-niva@laposte.net> 1750142215 +0200	commit: backtograph v1.0
f1a733d0accd2defa3a590cc33e11e4d3a084706 0049bea1dc3f3490411d07107f515558dc957820 a-niva <a-niva@laposte.net> 1750143719 +0200	commit: backtograph v1.1
0049bea1dc3f3490411d07107f515558dc957820 5730139a79278717b2f08ca76c0840479b320f60 a-niva <a-niva@laposte.net> 1750144021 +0200	commit: backtograph v1.2
5730139a79278717b2f08ca76c0840479b320f60 e4e07d572d71afcb37f34a11f52ccb3274da27c3 a-niva <a-niva@laposte.net> 1750144371 +0200	commit: backtograph v1.3
e4e07d572d71afcb37f34a11f52ccb3274da27c3 8a758314027df2dc9c5c80887711a94b20c3851f a-niva <a-niva@laposte.net> 1750145065 +0200	commit: backtograph v1.4
8a758314027df2dc9c5c80887711a94b20c3851f f983b6b020f82096a0f9fb266e47639a53f5ab90 a-niva <a-niva@laposte.net> 1750145700 +0200	commit: backtograph v1.5
f983b6b020f82096a0f9fb266e47639a53f5ab90 28725b32c14a6c410400c58c8794bdb72a67bb34 a-niva <a-niva@laposte.net> 1750146289 +0200	commit: backtograph v1.6
28725b32c14a6c410400c58c8794bdb72a67bb34 265fc8c1f6584d5e83c229a97cb5a10e482501f6 a-niva <a-niva@laposte.net> 1750146631 +0200	commit: backtograph v1.7
265fc8c1f6584d5e83c229a97cb5a10e482501f6 42daf64e4b95b7e4a9554b99d082e0bdbd387c80 a-niva <a-niva@laposte.net> 1750146835 +0200	commit: backtograph v1.8
42daf64e4b95b7e4a9554b99d082e0bdbd387c80 74df75818964198aa6b6ee3fa2c962601fddf921 a-niva <a-niva@laposte.net> 1750147353 +0200	commit: backtograph v1.9
74df75818964198aa6b6ee3fa2c962601fddf921 a6e4b491d93ca67f9eacbdf45cb133fb2e051ae5 a-niva <a-niva@laposte.net> 1750150872 +0200	commit: backtograph v2.0
a6e4b491d93ca67f9eacbdf45cb133fb2e051ae5 a6396dbb6fd598ed3f02971e4fbaa0846bbf7f09 a-niva <a-niva@laposte.net> 1750151358 +0200	commit: backtograph v2.1
a6396dbb6fd598ed3f02971e4fbaa0846bbf7f09 79c5ab11d82dc7d60cbd2323c9c2bc58170e80bd a-niva <a-niva@laposte.net> 1750152704 +0200	commit: backtograph v2.2
79c5ab11d82dc7d60cbd2323c9c2bc58170e80bd bd27d2c434324235ad3728b6633f9db123ddb60d a-niva <a-niva@laposte.net> 1750160021 +0200	commit: backtograph v2.3
bd27d2c434324235ad3728b6633f9db123ddb60d b9aa662884946b207fa6641129a400d0288f917f a-niva <a-niva@laposte.net> 1750160882 +0200	commit: backtograph v2.4
b9aa662884946b207fa6641129a400d0288f917f 9f38e2414aad38879672a15ef3413550f4aa8ea2 a-niva <a-niva@laposte.net> 1750161540 +0200	commit: backtograph v2.5
9f38e2414aad38879672a15ef3413550f4aa8ea2 8308cb6969b86484d85b02a3f518604f27f7ff48 a-niva <a-niva@laposte.net> 1750162039 +0200	commit: backtograph v2.6
8308cb6969b86484d85b02a3f518604f27f7ff48 3955e6da2a98fdbf51d40a9e129666cd442d8432 a-niva <a-niva@laposte.net> 1750162804 +0200	commit: backtograph v2.6
3955e6da2a98fdbf51d40a9e129666cd442d8432 34332aa42289b52b49789cf07186ceb0f1a77478 a-niva <a-niva@laposte.net> 1750163056 +0200	commit: backtograph v2.7
34332aa42289b52b49789cf07186ceb0f1a77478 7ace600508d8a22c5cc0cd7e4fce9c389a796a90 a-niva <a-niva@laposte.net> 1750163660 +0200	commit: backtograph v2.7
7ace600508d8a22c5cc0cd7e4fce9c389a796a90 91760491aea100a5994413f257d1f9328f48fe95 a-niva <a-niva@laposte.net> 1750163855 +0200	commit: backtograph v2.7
91760491aea100a5994413f257d1f9328f48fe95 3c2a49aa754316d2bf78f6cfbd5a2e789f44fba4 a-niva <a-niva@laposte.net> 1750164228 +0200	commit: backtograph v2.7
3c2a49aa754316d2bf78f6cfbd5a2e789f44fba4 e266d7336c092e39f822caa333bea30794f7e04d a-niva <a-niva@laposte.net> 1750164489 +0200	commit: backtograph v2.7
e266d7336c092e39f822caa333bea30794f7e04d 8c81f0bdce28b67d3970f38af6982c667f953eec a-niva <a-niva@laposte.net> 1750164614 +0200	commit: backtograph v2.7
8c81f0bdce28b67d3970f38af6982c667f953eec c9cbe2cee498b4333c767e432b549fd2897d4cf1 a-niva <a-niva@laposte.net> 1750165178 +0200	commit: backtograph v2.8
c9cbe2cee498b4333c767e432b549fd2897d4cf1 de959adbd112c1e9ea2c7d1fbc593984fd3160b8 a-niva <a-niva@laposte.net> 1750166226 +0200	commit: backtograph v2.9
de959adbd112c1e9ea2c7d1fbc593984fd3160b8 92dd10a0388f8b53a9b6a96f9f4fe10b0dd56410 a-niva <a-niva@laposte.net> 1750169918 +0200	commit: backtograph v3.0
92dd10a0388f8b53a9b6a96f9f4fe10b0dd56410 524853b15d74770d1fa0c13e7bc0822ae4b2296c a-niva <a-niva@laposte.net> 1750170601 +0200	commit: backtograph v3.1
524853b15d74770d1fa0c13e7bc0822ae4b2296c 85f7f852910da6667c557926dde115fcd497e9ac a-niva <a-niva@laposte.net> 1750188773 +0200	commit: backtograph v3.2
85f7f852910da6667c557926dde115fcd497e9ac 2dbbd17486973533cc8eda9dc491a8e29eefbafa a-niva <a-niva@laposte.net> 1750189669 +0200	commit: backtograph v3.3
2dbbd17486973533cc8eda9dc491a8e29eefbafa 4ce5c6390eebad5fedabdf40f17390e98c808e7d a-niva <a-niva@laposte.net> 1750190195 +0200	commit: backtograph v3.4
4ce5c6390eebad5fedabdf40f17390e98c808e7d 21c41dcac6e16923187447c6b0d757185f32bfa1 a-niva <a-niva@laposte.net> 1750191125 +0200	commit: backtograph v3.5
21c41dcac6e16923187447c6b0d757185f32bfa1 ab832fac2fffb23a3480b37a91a42d7af878acc2 a-niva <a-niva@laposte.net> 1750191433 +0200	commit: backtograph v3.5
ab832fac2fffb23a3480b37a91a42d7af878acc2 e1d7e5fb8bc789799966d57b098b6ed00235c809 a-niva <a-niva@laposte.net> 1750238724 +0200	commit: programs v4.0
e1d7e5fb8bc789799966d57b098b6ed00235c809 bf09f0d5c1ec45493936ff331ce671a83d1b8ac9 a-niva <a-niva@laposte.net> 1750239178 +0200	commit: programs v4.0
bf09f0d5c1ec45493936ff331ce671a83d1b8ac9 0cc18c84e5e1aa5e1f52c0ff3df92fa382f8eb92 a-niva <a-niva@laposte.net> 1750240006 +0200	commit: programs v4.1
0cc18c84e5e1aa5e1f52c0ff3df92fa382f8eb92 3f151c67ba0246fdc7203cb2a25c25e3584e168b a-niva <a-niva@laposte.net> 1750240667 +0200	commit: programs v4.1
3f151c67ba0246fdc7203cb2a25c25e3584e168b 07c485d19be0dd428d478a4015ba4fdf87a085a1 a-niva <a-niva@laposte.net> 1750241153 +0200	commit: programs v4.1
07c485d19be0dd428d478a4015ba4fdf87a085a1 1b75e436d450d84527917c03e038ffe489389dd3 a-niva <a-niva@laposte.net> 1750256273 +0200	commit: programs v4.2
1b75e436d450d84527917c03e038ffe489389dd3 5cdfeb4ba9645b6e838d85fecf65520cedad9e7b a-niva <a-niva@laposte.net> 1750257214 +0200	commit: programs v4.2
5cdfeb4ba9645b6e838d85fecf65520cedad9e7b 29d107b8884b764f2eac31f43768a335b84b1652 a-niva <a-niva@laposte.net> 1750258444 +0200	commit: programs v4.3
29d107b8884b764f2eac31f43768a335b84b1652 a424f82e3f789c32a43d3539b8accb945a2c51a0 a-niva <a-niva@laposte.net> 1750259453 +0200	commit: programs v4.3
a424f82e3f789c32a43d3539b8accb945a2c51a0 f7deaa17fe69f0c5fc402994d0efec5f3b7d60aa a-niva <a-niva@laposte.net> 1750260413 +0200	commit: programs v4.3
f7deaa17fe69f0c5fc402994d0efec5f3b7d60aa 0c2024dbaf96aa5485b8837c29d153e7bbc13166 a-niva <a-niva@laposte.net> 1750260679 +0200	commit: programs v4.3
0c2024dbaf96aa5485b8837c29d153e7bbc13166 49befceffbbc1c804d69870fa2b5172dd3638883 a-niva <a-niva@laposte.net> 1750262288 +0200	commit: programs v4.4
49befceffbbc1c804d69870fa2b5172dd3638883 b49fbafbdc0ca62474655ba186df891882297cc6 a-niva <a-niva@laposte.net> 1750262733 +0200	commit: programs v4.5
b49fbafbdc0ca62474655ba186df891882297cc6 7347ad55fc7899d048b94f22d1137fb577e49cbb a-niva <a-niva@laposte.net> 1750263810 +0200	commit: programs v4.6
7347ad55fc7899d048b94f22d1137fb577e49cbb a2e99af357a8bc98d54e1eeb29bd7385e4bbb684 a-niva <a-niva@laposte.net> 1750263989 +0200	commit: programs v4.6
a2e99af357a8bc98d54e1eeb29bd7385e4bbb684 a2a617adfaef235c6437ef04be4f3b4e513477c1 a-niva <a-niva@laposte.net> 1750275717 +0200	commit: prio1 v1
a2a617adfaef235c6437ef04be4f3b4e513477c1 54c283eaf0adf72b0f1c42f7ae43e8b07ff15ab9 a-niva <a-niva@laposte.net> 1750275833 +0200	commit: prio2 v1
54c283eaf0adf72b0f1c42f7ae43e8b07ff15ab9 e0f854a8d0b1073f341a7669558f6f950bcace9a a-niva <a-niva@laposte.net> 1750278635 +0200	commit: phase1 r3 v1
e0f854a8d0b1073f341a7669558f6f950bcace9a 144093256cba1c8d51503c1f3525a9f7c252102b a-niva <a-niva@laposte.net> 1750279834 +0200	commit: phase1 r3 v1.1
144093256cba1c8d51503c1f3525a9f7c252102b 68acee46a9ba0b8f1571e150d8e376dc3f3fa7bc a-niva <a-niva@laposte.net> 1750280146 +0200	commit: phase1 r3 v1.2
68acee46a9ba0b8f1571e150d8e376dc3f3fa7bc 177a035a93deee169c0f672b68b359c1829793b2 a-niva <a-niva@laposte.net> 1750280385 +0200	commit: phase1 r3 v1.2
177a035a93deee169c0f672b68b359c1829793b2 8d9b976151a74e83a9a0a8a3dae1a3721c8a9c68 a-niva <a-niva@laposte.net> 1750280426 +0200	commit: phase1 r3 v1.2
8d9b976151a74e83a9a0a8a3dae1a3721c8a9c68 4d5aecd10bc52a6860188e9df596c660afa222fd a-niva <a-niva@laposte.net> 1750281364 +0200	commit: phase1 r3 v1.3 toggle
4d5aecd10bc52a6860188e9df596c660afa222fd 5c761c4338cb577168e8b53767d84b9458295dcc a-niva <a-niva@laposte.net> 1750282405 +0200	commit: phase1 r3 v1.3 toggle
5c761c4338cb577168e8b53767d84b9458295dcc 1a5429b8d9f6dd7207aaef7f6e84b06735bd2bdb a-niva <a-niva@laposte.net> 1750282874 +0200	commit: phase1 r3 v1.3 program
1a5429b8d9f6dd7207aaef7f6e84b06735bd2bdb 2ca8ad7d711db16e5253a9d935026a12a0374858 a-niva <a-niva@laposte.net> 1750283042 +0200	commit: phase1 r3 v1.3 program v1
2ca8ad7d711db16e5253a9d935026a12a0374858 bd5c0254ea12bdf0e067bb2f2bd387ded34cec9e a-niva <a-niva@laposte.net> 1750283942 +0200	commit: phase1 r3 v1.3 program v2
bd5c0254ea12bdf0e067bb2f2bd387ded34cec9e d2c09124355985065af2bdabe9f5c34d2216a5dc a-niva <a-niva@laposte.net> 1750320485 +0200	commit: phase1 r3 v1.3 program v3
d2c09124355985065af2bdabe9f5c34d2216a5dc afb232aceb53900315fdc80000405bb3661725f2 a-niva <a-niva@laposte.net> 1750321139 +0200	commit: phase1 r3 v1.3 program v4
afb232aceb53900315fdc80000405bb3661725f2 cc0e5770afaf5270bd5b0d3ce6779d64388e2d54 a-niva <a-niva@laposte.net> 1750321697 +0200	commit: phase1 r3 v1.3 program v4
cc0e5770afaf5270bd5b0d3ce6779d64388e2d54 91f0aa541f988a1214d8bb20776308ca23c475fe a-niva <a-niva@laposte.net> 1750322192 +0200	commit: phase1 r3 v1.3 program v5
91f0aa541f988a1214d8bb20776308ca23c475fe 7866b97077c93939922803421fe34ffaf147c768 a-niva <a-niva@laposte.net> 1750322710 +0200	commit: phase1 r3 v1.3 program v5.1
7866b97077c93939922803421fe34ffaf147c768 deb368b6a88e01e6c7580610cb44046819be918c a-niva <a-niva@laposte.net> 1750322748 +0200	commit: phase1 r3 v1.3 program v5.1
deb368b6a88e01e6c7580610cb44046819be918c 7deb05bda541dbb7cea292d539f9b25983d25055 a-niva <a-niva@laposte.net> 1750323889 +0200	commit: phase1 r3 v1.3 program v5.2
7deb05bda541dbb7cea292d539f9b25983d25055 549500426ab8191a68163ff30914be5f8032e482 a-niva <a-niva@laposte.net> 1750324533 +0200	commit: phase1 r3 v1.3 program v5.3
549500426ab8191a68163ff30914be5f8032e482 5fd266149fb50e70fa7b6685f51f3d0a11648aae a-niva <a-niva@laposte.net> 1750325077 +0200	commit: phase1 r3 v1.3 program v5.3
5fd266149fb50e70fa7b6685f51f3d0a11648aae 92b854778b580b6edf2290dbae0908ab553c9ea5 a-niva <a-niva@laposte.net> 1750329498 +0200	commit: phase1 r3 v1.3 program v5.3
92b854778b580b6edf2290dbae0908ab553c9ea5 4986dfaf2655fcf0b6e806ce0acec2cd353aa910 a-niva <a-niva@laposte.net> 1750329919 +0200	commit: phase1 r3 v1.3 program v5.3
4986dfaf2655fcf0b6e806ce0acec2cd353aa910 a0e352c02085876ccd9089bd9aa07854bf8966d5 a-niva <a-niva@laposte.net> 1750330441 +0200	commit: phase ML reps v1.0
a0e352c02085876ccd9089bd9aa07854bf8966d5 f797779dc2088c3452014141711aa6e9a9c8aaa6 a-niva <a-niva@laposte.net> 1750330808 +0200	commit: phase ML reps v1.0
f797779dc2088c3452014141711aa6e9a9c8aaa6 86ccd0ddb7bdb59edd52a9228f8ba4485da6cf3b a-niva <a-niva@laposte.net> 1750331615 +0200	commit: phase ML reps v1.1
86ccd0ddb7bdb59edd52a9228f8ba4485da6cf3b b612f388eaa1e58110810b16bcbbc7a23582abd8 a-niva <a-niva@laposte.net> 1750332135 +0200	commit: phase ML reps v1.1
b612f388eaa1e58110810b16bcbbc7a23582abd8 34cc63139ba891c75f40646778b178371320d168 a-niva <a-niva@laposte.net> 1750332992 +0200	commit: phase ML reps v1.1
34cc63139ba891c75f40646778b178371320d168 be73229a5acf861bf9b913d7262752139c692dba a-niva <a-niva@laposte.net> 1750333609 +0200	commit: phase ML reps v1.1
be73229a5acf861bf9b913d7262752139c692dba ede19d64bb245698d0cabdf56b3d5130a4b3d27c a-niva <a-niva@laposte.net> 1750334061 +0200	commit: phase ML reps v1.1
ede19d64bb245698d0cabdf56b3d5130a4b3d27c 726e91b558486778bd3a1a6dd36f1c63861928bc a-niva <a-niva@laposte.net> 1750334835 +0200	commit: phase ML reps v1.2
726e91b558486778bd3a1a6dd36f1c63861928bc 73a255ef36c3debd3e8ff4495474a7e5078021d4 a-niva <a-niva@laposte.net> 1750335312 +0200	commit: phase ML reps v1.2
73a255ef36c3debd3e8ff4495474a7e5078021d4 5bb056588f5d20ebf056574087a891cdb5b2e6b6 a-niva <a-niva@laposte.net> 1750361863 +0200	commit: phase ML reps v1.3
5bb056588f5d20ebf056574087a891cdb5b2e6b6 08d009aa8f512267f8c0e69ed56d101673abc9a6 a-niva <a-niva@laposte.net> 1750362149 +0200	commit: phase ML reps v1.3
08d009aa8f512267f8c0e69ed56d101673abc9a6 c10b3469f918cb3b69c16b086f5b8522a1d7777a a-niva <a-niva@laposte.net> 1750362718 +0200	commit: phase ML reps v1.3
c10b3469f918cb3b69c16b086f5b8522a1d7777a 994d93b62da8c1db08b964705e75331c82a168f9 a-niva <a-niva@laposte.net> 1750365013 +0200	commit: phase 2.2.0
994d93b62da8c1db08b964705e75331c82a168f9 4fc6fb06a3abfdd5e64003ffa01af492fb22d7e8 a-niva <a-niva@laposte.net> 1750365589 +0200	commit: phase 2.2.1
4fc6fb06a3abfdd5e64003ffa01af492fb22d7e8 71c7cce107d267a8478a72905682d579640678bd a-niva <a-niva@laposte.net> 1750366306 +0200	commit: phase 2.2.2
71c7cce107d267a8478a72905682d579640678bd 632ce3c1fa0afbdc39e580f28c11c611ae2048ea a-niva <a-niva@laposte.net> 1750366858 +0200	commit: phase 2.2.2
632ce3c1fa0afbdc39e580f28c11c611ae2048ea f6ef2009535cbea7ea9220f8230380886edff7dd a-niva <a-niva@laposte.net> 1750367216 +0200	commit: phase 2.2.2
f6ef2009535cbea7ea9220f8230380886edff7dd 84de269a375c55ee194c1920b8aa2b846741bbd2 a-niva <a-niva@laposte.net> 1750367619 +0200	commit: phase 2.2.3
84de269a375c55ee194c1920b8aa2b846741bbd2 f6a22a14ed3c5f0891b1e42b8c2198cda5e7d941 a-niva <a-niva@laposte.net> 1750367787 +0200	commit: phase 2.2.3
f6a22a14ed3c5f0891b1e42b8c2198cda5e7d941 ebc922de9007ff36797672688b9dffeeb7ce6199 a-niva <a-niva@laposte.net> 1750367853 +0200	commit: phase 2.2.3
ebc922de9007ff36797672688b9dffeeb7ce6199 a940a50125a1061ba44465c33c286cb59139001f a-niva <a-niva@laposte.net> 1750368082 +0200	commit: phase 2.2.3
a940a50125a1061ba44465c33c286cb59139001f af2f56eaa40245a93c1f3fc6f29873327c25564a a-niva <a-niva@laposte.net> 1750424351 +0200	commit: phase 2.2.3
af2f56eaa40245a93c1f3fc6f29873327c25564a a17695b19bf829f46b6e785bd031b456a5a2ff09 a-niva <a-niva@laposte.net> 1750424935 +0200	commit: phase 2.2.3
a17695b19bf829f46b6e785bd031b456a5a2ff09 b9caac1cf4f527625d45157bb11f822c07261674 a-niva <a-niva@laposte.net> 1750426017 +0200	commit: phase 2.2.3
b9caac1cf4f527625d45157bb11f822c07261674 a44c7f087be715e2f319adc8be9664b6d7bbecbe a-niva <a-niva@laposte.net> 1750427783 +0200	commit: phase 2.2.3
a44c7f087be715e2f319adc8be9664b6d7bbecbe 485360c3def30778c11e3e7ddeaaff839872ace4 a-niva <a-niva@laposte.net> 1750428562 +0200	commit: phase 2.3
485360c3def30778c11e3e7ddeaaff839872ace4 6653125dfc6f587745b128f039ebaa43c6497b7f a-niva <a-niva@laposte.net> 1750428943 +0200	commit: phase 2.3
6653125dfc6f587745b128f039ebaa43c6497b7f d5c55d559966048faad8492107662accaea17044 a-niva <a-niva@laposte.net> 1750429691 +0200	commit: phase 2.3
d5c55d559966048faad8492107662accaea17044 4a3c4ef49f70f76419dd1c8f7bae61cd7daf2b44 a-niva <a-niva@laposte.net> 1750430017 +0200	commit: phase 2.3
4a3c4ef49f70f76419dd1c8f7bae61cd7daf2b44 56ee98824993178ef7e9935c6639706784c285ab a-niva <a-niva@laposte.net> 1750430690 +0200	commit: phase 2.3
56ee98824993178ef7e9935c6639706784c285ab c13a17b8c4de522cf97d976ed85b9dc316114f80 a-niva <a-niva@laposte.net> 1750431280 +0200	commit: phase 2.3
c13a17b8c4de522cf97d976ed85b9dc316114f80 2cadcbb77c23b2dd0e45876cc1e4459da78a5b26 a-niva <a-niva@laposte.net> 1750431547 +0200	commit: phase 2.31
2cadcbb77c23b2dd0e45876cc1e4459da78a5b26 c3d839e68e0a670e947b78d5a7c91b3a295304f1 a-niva <a-niva@laposte.net> 1750432581 +0200	commit: phase 2.32
c3d839e68e0a670e947b78d5a7c91b3a295304f1 0dac602ccecd8c1c21c42c9a8f3fb86c743185f0 a-niva <a-niva@laposte.net> 1750433432 +0200	commit: phase 2.33
0dac602ccecd8c1c21c42c9a8f3fb86c743185f0 3d80acd23ec511b695354204dcd9374b7ccfd599 a-niva <a-niva@laposte.net> 1750433653 +0200	commit: phase 2.33
3d80acd23ec511b695354204dcd9374b7ccfd599 4217e0def6258580bdcb08a195f65e9b11b955b3 a-niva <a-niva@laposte.net> 1750593646 +0200	commit: phase 2.40
4217e0def6258580bdcb08a195f65e9b11b955b3 559c13cf294ebe6862bfcfa23b4f614f2953fc12 a-niva <a-niva@laposte.net> 1750593693 +0200	commit: phase 2.40
559c13cf294ebe6862bfcfa23b4f614f2953fc12 5aa5aa3561cc82cd47a3501e0f93d4a33adb18c5 a-niva <a-niva@laposte.net> 1750593925 +0200	commit: phase 2.40
5aa5aa3561cc82cd47a3501e0f93d4a33adb18c5 6c386a46a24de072fda5ab0220a263c11f2e8d7d a-niva <a-niva@laposte.net> 1750596360 +0200	commit: phase 2.40
6c386a46a24de072fda5ab0220a263c11f2e8d7d 383f649877b319aca4eac7905b6498d5afbff432 a-niva <a-niva@laposte.net> 1750597226 +0200	commit: phase 2.40
383f649877b319aca4eac7905b6498d5afbff432 7e8b369ea5ac4c4803345aab2187ce2fdacf6548 a-niva <a-niva@laposte.net> 1750598816 +0200	commit: phase 2.40
7e8b369ea5ac4c4803345aab2187ce2fdacf6548 ce79dcaafad149230525dd443ac45f37b194707e a-niva <a-niva@laposte.net> 1750599854 +0200	commit: phase 2.41
ce79dcaafad149230525dd443ac45f37b194707e 9683014668f093afd2797b5965567d195f4b7a8a a-niva <a-niva@laposte.net> 1750600739 +0200	commit: phase 2.41
9683014668f093afd2797b5965567d195f4b7a8a eba1a5af8cf7de07ff9e092a266de36e383bfb64 a-niva <a-niva@laposte.net> 1750601974 +0200	commit: phase 2.41
eba1a5af8cf7de07ff9e092a266de36e383bfb64 ce1d096352814ca30b39e26ab2d3c89275532068 a-niva <a-niva@laposte.net> 1750603282 +0200	commit: phase 2.41
ce1d096352814ca30b39e26ab2d3c89275532068 d85606f1608cbf13af853f49448ebe5c8a628047 a-niva <a-niva@laposte.net> 1750603632 +0200	commit: phase 2.41
d85606f1608cbf13af853f49448ebe5c8a628047 a294367e2e243cd3eb5af3e8f64b8e5ce564a7da a-niva <a-niva@laposte.net> 1750603921 +0200	commit: phase 2.41
a294367e2e243cd3eb5af3e8f64b8e5ce564a7da ca8025920350180b54daf02a0de6938b2deba72d a-niva <a-niva@laposte.net> 1750604310 +0200	commit: phase 2.41
ca8025920350180b54daf02a0de6938b2deba72d 30c9fbcb4364d59cd5edb09c31c373060000d2c7 a-niva <a-niva@laposte.net> 1750604613 +0200	commit: phase 2.41
30c9fbcb4364d59cd5edb09c31c373060000d2c7 23b9ee9e57a8f88361e910c7c505679b1bbd1a51 a-niva <a-niva@laposte.net> 1750605150 +0200	commit: phase 2.42
23b9ee9e57a8f88361e910c7c505679b1bbd1a51 cb55d06d980a5f516a121ade47a22bb6a5806e3c a-niva <a-niva@laposte.net> 1750605556 +0200	commit: phase 2.42
cb55d06d980a5f516a121ade47a22bb6a5806e3c cfbeac571053d3d657c49ff63ff7eeba7bb002fe a-niva <a-niva@laposte.net> 1750606727 +0200	commit: phase 2.43
cfbeac571053d3d657c49ff63ff7eeba7bb002fe 17f9b4ba7643411b0fa065ab6a4e0225ea8c026b a-niva <a-niva@laposte.net> 1750608687 +0200	commit: phase 2.44
17f9b4ba7643411b0fa065ab6a4e0225ea8c026b 527237393b8830f20f81ff493a3ac942d9aad282 a-niva <a-niva@laposte.net> 1750609501 +0200	commit: phase 2.44
527237393b8830f20f81ff493a3ac942d9aad282 63e7780c9708ab5933c110fb1324e830b5db64c1 a-niva <a-niva@laposte.net> 1750610730 +0200	commit: phase 2.44
63e7780c9708ab5933c110fb1324e830b5db64c1 46c3de05ec079215843e69cd5a31d583937ac04f a-niva <a-niva@laposte.net> 1750619017 +0200	commit: phase 2.45
46c3de05ec079215843e69cd5a31d583937ac04f 0b67534ce55d1a89d34412cc3b37ff03bd0c384a a-niva <a-niva@laposte.net> 1750620060 +0200	commit: phase 2.46
0b67534ce55d1a89d34412cc3b37ff03bd0c384a 0242237eddb215d2d26e8a60fdf484637f32a09a a-niva <a-niva@laposte.net> 1750620550 +0200	commit: phase 2.46
0242237eddb215d2d26e8a60fdf484637f32a09a a422348d06fbab87a71404d0090f5acc383469f3 a-niva <a-niva@laposte.net> 1750621478 +0200	commit: phase 2.46
a422348d06fbab87a71404d0090f5acc383469f3 4c05186cc6d36ed300e6ba2ba18e154eee106612 a-niva <a-niva@laposte.net> 1750622007 +0200	commit: phase 2.46
4c05186cc6d36ed300e6ba2ba18e154eee106612 55c95382201371ef5424cf4ee628c29cb859bbeb a-niva <a-niva@laposte.net> 1750622452 +0200	commit: phase 2.46
55c95382201371ef5424cf4ee628c29cb859bbeb 89761ba4bdd14a1e88443bdfd94c53ab69b6f885 a-niva <a-niva@laposte.net> 1750624523 +0200	commit: phase 2.47
89761ba4bdd14a1e88443bdfd94c53ab69b6f885 94fd75f0c31937d52803579834aaf688a240b628 a-niva <a-niva@laposte.net> 1750624955 +0200	commit: phase 2.47
94fd75f0c31937d52803579834aaf688a240b628 32b918363b0e5a0baa9bf6c2962059b0d8ed2cb6 a-niva <a-niva@laposte.net> 1750625448 +0200	commit: phase 2.47
32b918363b0e5a0baa9bf6c2962059b0d8ed2cb6 7f8ae592e5ae3139390e5afbc5702f397a9ed77b a-niva <a-niva@laposte.net> 1750626232 +0200	commit: phase 2.47
7f8ae592e5ae3139390e5afbc5702f397a9ed77b f24280c64de2e40c822fd05e6ef483de8bbb906a a-niva <a-niva@laposte.net> 1750626857 +0200	commit: phase 2.47
f24280c64de2e40c822fd05e6ef483de8bbb906a 30560db43e8707ee01b90523f27c4721c9ab7a08 a-niva <a-niva@laposte.net> 1750627256 +0200	commit: phase 2.47
30560db43e8707ee01b90523f27c4721c9ab7a08 9d4799a9c50fa4c648023dc583954317ddd36b59 a-niva <a-niva@laposte.net> 1750630819 +0200	commit: phase 2.47
9d4799a9c50fa4c648023dc583954317ddd36b59 f9584dfe9ef75a2c955d54c32ee867dbfedd1227 a-niva <a-niva@laposte.net> 1750631758 +0200	commit: phase 2.47
f9584dfe9ef75a2c955d54c32ee867dbfedd1227 915cd1097ffd0626cf7ad3be0afae7be3a635927 a-niva <a-niva@laposte.net> 1750632264 +0200	commit: phase 2.47
915cd1097ffd0626cf7ad3be0afae7be3a635927 04878ea031b8e9d9d7c8c284453602579d4120a7 a-niva <a-niva@laposte.net> 1750632875 +0200	commit: phase 2.47
04878ea031b8e9d9d7c8c284453602579d4120a7 c711fcdcb1be5ca321293e49b8a7ab5020f02958 a-niva <a-niva@laposte.net> 1750633025 +0200	commit: phase 2.47
c711fcdcb1be5ca321293e49b8a7ab5020f02958 0fc817facd668e69fc70b5d8551be83448be1142 a-niva <a-niva@laposte.net> 1750660366 +0200	commit: phase 2.48
0fc817facd668e69fc70b5d8551be83448be1142 392f42543cec9ae2ccd443e12e914231335f1f9f a-niva <a-niva@laposte.net> 1750661347 +0200	commit: phase 2.50
392f42543cec9ae2ccd443e12e914231335f1f9f c03dc3fde9db0a467f6488003a399c3e19652a2c a-niva <a-niva@laposte.net> 1750661608 +0200	commit: phase 2.50
c03dc3fde9db0a467f6488003a399c3e19652a2c 35dc828fc050c311c6c42724e8430cd0318f8b88 a-niva <a-niva@laposte.net> 1750662609 +0200	commit: phase 2.50
35dc828fc050c311c6c42724e8430cd0318f8b88 bee9699c26e3e25d32a5563194f4a0b10d3d79bf a-niva <a-niva@laposte.net> 1750662910 +0200	commit: phase 2.50
bee9699c26e3e25d32a5563194f4a0b10d3d79bf f944645ae354e727f32739008895e7743b8a9847 a-niva <a-niva@laposte.net> 1750664111 +0200	commit: phase 2.51
f944645ae354e727f32739008895e7743b8a9847 76d8cc5bd7c53ea8e7b750e75c4adfa2c561fa6e a-niva <a-niva@laposte.net> 1750665497 +0200	commit: phase 2.52
76d8cc5bd7c53ea8e7b750e75c4adfa2c561fa6e 806423c225adb20b35039263aeec6b6b8e66f02c a-niva <a-niva@laposte.net> 1750667106 +0200	commit: phase 2.52
806423c225adb20b35039263aeec6b6b8e66f02c 11c6d9290ed4d2043d0c41d133ed0924c06d1ed1 a-niva <a-niva@laposte.net> 1750668002 +0200	commit: phase 2.52
11c6d9290ed4d2043d0c41d133ed0924c06d1ed1 f5caf6712349e9902e705010f5046a15b0eee14a a-niva <a-niva@laposte.net> 1750668452 +0200	commit: phase 2.52
f5caf6712349e9902e705010f5046a15b0eee14a d3b6295688eb11f8f6dbda4cf92487ff853f75ce a-niva <a-niva@laposte.net> 1750669025 +0200	commit: phase 2.53
d3b6295688eb11f8f6dbda4cf92487ff853f75ce ade742e05200c3f18aad0b2bec16a39dfbfcb8d8 a-niva <a-niva@laposte.net> 1750669563 +0200	commit: phase 2.53
ade742e05200c3f18aad0b2bec16a39dfbfcb8d8 0fb4df7316ad8406bd1d7b365c74e8bbbe4bc22b a-niva <a-niva@laposte.net> 1750669787 +0200	commit: phase 2.53
0fb4df7316ad8406bd1d7b365c74e8bbbe4bc22b 0601d485df3e7ad608030bffedd25596b2b88b2f a-niva <a-niva@laposte.net> 1750670222 +0200	commit: phase 2.53
0601d485df3e7ad608030bffedd25596b2b88b2f fdf97b47f5ba4acf96e6669c90c9b4bec345c8e5 a-niva <a-niva@laposte.net> 1750670679 +0200	commit: phase 2.53
fdf97b47f5ba4acf96e6669c90c9b4bec345c8e5 20ba35504cabf1cc48fdb1d1054e024d844b067a a-niva <a-niva@laposte.net> 1750671107 +0200	commit: phase 2.53
20ba35504cabf1cc48fdb1d1054e024d844b067a a4aa2968f10dbb6a3ecae593ddbb4af1f03a1e65 a-niva <a-niva@laposte.net> 1750672034 +0200	commit: phase 2.53
a4aa2968f10dbb6a3ecae593ddbb4af1f03a1e65 c95742fdc51fdc876248acfe659ebca7521349c2 a-niva <a-niva@laposte.net> 1750672505 +0200	commit: phase 2.53
c95742fdc51fdc876248acfe659ebca7521349c2 7490fc57df540d6b9d610e8f848b1a65df7c7705 a-niva <a-niva@laposte.net> 1750673847 +0200	commit: phase 2.54
7490fc57df540d6b9d610e8f848b1a65df7c7705 0252b56d55e2778598eeb21ac8d839bd41c8a199 a-niva <a-niva@laposte.net> 1750674464 +0200	commit: phase 2.54
0252b56d55e2778598eeb21ac8d839bd41c8a199 df62f65ba7e52ed6921a091fb9801b4d633c965e a-niva <a-niva@laposte.net> 1750674567 +0200	commit: phase 2.54
df62f65ba7e52ed6921a091fb9801b4d633c965e 8daa7cd023bd873fb0a8a8dd76ed7fbb8def6772 a-niva <a-niva@laposte.net> 1750679196 +0200	commit: phase 2.54
8daa7cd023bd873fb0a8a8dd76ed7fbb8def6772 39bdf214918e020117ed789cbdc148eea75d0bc3 a-niva <a-niva@laposte.net> 1750680065 +0200	commit: phase 2.54
39bdf214918e020117ed789cbdc148eea75d0bc3 f1b281d01aff474dc54a32b2c6b7dd249a211d66 a-niva <a-niva@laposte.net> 1750680382 +0200	commit: phase 2.54
f1b281d01aff474dc54a32b2c6b7dd249a211d66 3621c0f5a4cafcf2787ef82a1f5586612be4635b a-niva <a-niva@laposte.net> 1750680969 +0200	commit: mapping v1.0
3621c0f5a4cafcf2787ef82a1f5586612be4635b 0391547331050c842518502ea7ac1894f3446a09 a-niva <a-niva@laposte.net> 1750682481 +0200	commit: mapping v1.1
0391547331050c842518502ea7ac1894f3446a09 c32a8f1545d10e5f84f4d142468bbf4d08c2ec58 a-niva <a-niva@laposte.net> 1750683267 +0200	commit: mapping v1.1
c32a8f1545d10e5f84f4d142468bbf4d08c2ec58 58198f5c7fe473e1ac455a828568635d768517da a-niva <a-niva@laposte.net> 1750683289 +0200	commit: mapping v1.1
58198f5c7fe473e1ac455a828568635d768517da 530b33bb3db108259959d5719de585d9dd9d3dc0 a-niva <a-niva@laposte.net> 1750685012 +0200	commit: mapping v1.1
530b33bb3db108259959d5719de585d9dd9d3dc0 d04fc92aff338470eb8a4859b058b349d3e9e426 a-niva <a-niva@laposte.net> 1750686633 +0200	commit: mapping v1.1
d04fc92aff338470eb8a4859b058b349d3e9e426 fda657f7c06f064febe4a921ba38da8214069af7 a-niva <a-niva@laposte.net> 1750687219 +0200	commit: mapping v1.2
fda657f7c06f064febe4a921ba38da8214069af7 673b4d81f730e1dbf9f96a1f21236cc1004f7aec a-niva <a-niva@laposte.net> 1750688825 +0200	commit: mapping v1.2
673b4d81f730e1dbf9f96a1f21236cc1004f7aec 8299f27e58eb9c1501d706cb7732b36bfc5eb809 a-niva <a-niva@laposte.net> 1750688864 +0200	commit: mapping v1.2
8299f27e58eb9c1501d706cb7732b36bfc5eb809 d6fce6e7ad7bbc34cf991e05cca71af5b6c4e246 a-niva <a-niva@laposte.net> 1750689634 +0200	commit: mapping v1.3
d6fce6e7ad7bbc34cf991e05cca71af5b6c4e246 dc97e96b53becd3ebc26640776f56af62c34bfef a-niva <a-niva@laposte.net> 1750690435 +0200	commit: mapping v1.4
dc97e96b53becd3ebc26640776f56af62c34bfef 31d57a8d9f0bb9f6673b40baf7fd1f6003ebc9f3 a-niva <a-niva@laposte.net> 1750691629 +0200	commit: mapping v1.5
31d57a8d9f0bb9f6673b40baf7fd1f6003ebc9f3 d02997c67871d7aceae1d1ee465589c6e9015b2f a-niva <a-niva@laposte.net> 1750692384 +0200	commit: mapping v1.5
d02997c67871d7aceae1d1ee465589c6e9015b2f edb7433d51e85305f4ed214376a634ae01f191db a-niva <a-niva@laposte.net> 1750693067 +0200	commit: mapping v1.6
edb7433d51e85305f4ed214376a634ae01f191db ec14ff1de7248b1515eab361306466b529f02234 a-niva <a-niva@laposte.net> 1750693364 +0200	commit: mapping v1.6
ec14ff1de7248b1515eab361306466b529f02234 b70e8ddcd8ce3195f2afdad07e1d2ddb4c6548de a-niva <a-niva@laposte.net> 1750694298 +0200	commit: mapping v1.6
b70e8ddcd8ce3195f2afdad07e1d2ddb4c6548de ab1d294be5c22106085a2ba1f19a450c145431de a-niva <a-niva@laposte.net> 1750694959 +0200	commit: mapping v1.7
ab1d294be5c22106085a2ba1f19a450c145431de 48d8f1e8a015210291b0151c0d5b7f400b8cb5e4 a-niva <a-niva@laposte.net> 1750695575 +0200	commit: mapping v1.8
48d8f1e8a015210291b0151c0d5b7f400b8cb5e4 1644f330d479f0824dde28b3574368ff207c74a5 a-niva <a-niva@laposte.net> 1750696029 +0200	commit: mapping v1.8
1644f330d479f0824dde28b3574368ff207c74a5 3f5fed690bea7f39293842a5a35d5e47b3cc4c01 a-niva <a-niva@laposte.net> 1750696474 +0200	commit: mapping v1.8
3f5fed690bea7f39293842a5a35d5e47b3cc4c01 b2e7cecbf71781aba8093c6fe2b13565d026d5af a-niva <a-niva@laposte.net> 1750703070 +0200	commit: mapping v1.8
b2e7cecbf71781aba8093c6fe2b13565d026d5af 2aeec9954953e5961bd6cc6d05ee78e5dd2046ab a-niva <a-niva@laposte.net> 1750703514 +0200	commit: mapping v1.8
2aeec9954953e5961bd6cc6d05ee78e5dd2046ab acd7a6b107813a5149887a3cedc1edfead7eba95 a-niva <a-niva@laposte.net> 1750703981 +0200	commit: mapping v1.8
acd7a6b107813a5149887a3cedc1edfead7eba95 1f7d9b0543e37144d17f8276f54565c433ea861c a-niva <a-niva@laposte.net> 1750704581 +0200	commit: mapping v1.9
1f7d9b0543e37144d17f8276f54565c433ea861c 5fdf094ad552ce9ee4a7eb72d1f4cd8a7ad23e7a a-niva <a-niva@laposte.net> 1750704668 +0200	commit: mapping v1.9
5fdf094ad552ce9ee4a7eb72d1f4cd8a7ad23e7a 0abe6bd0a70ee9150293bebe484c08f62be1890e a-niva <a-niva@laposte.net> 1750705117 +0200	commit: mapping v1.9
0abe6bd0a70ee9150293bebe484c08f62be1890e 58f1c8b31d276a8fe5b6fb2978be545cc19928d0 a-niva <a-niva@laposte.net> 1750705626 +0200	commit: mapping v1.9
58f1c8b31d276a8fe5b6fb2978be545cc19928d0 a7d49a6b30bf2ee06b264182d4ebe41f58f9d05b a-niva <a-niva@laposte.net> 1750706328 +0200	commit: mapping v1.9
a7d49a6b30bf2ee06b264182d4ebe41f58f9d05b dbd421a51a86a020ab9bf24f2f3ee00939363ee0 a-niva <a-niva@laposte.net> 1750763662 +0200	commit: adaptativesession v1.0
dbd421a51a86a020ab9bf24f2f3ee00939363ee0 a55c0d8385eaaa1d435f3f6e874e0380044d9286 a-niva <a-niva@laposte.net> 1750763684 +0200	commit: adaptativesession v1.0
a55c0d8385eaaa1d435f3f6e874e0380044d9286 a0205970385f59a472ec0c6723f71e92282b765f a-niva <a-niva@laposte.net> 1750764399 +0200	commit: adaptativesession v1.1
a0205970385f59a472ec0c6723f71e92282b765f c5d56f3b902b5075468a21bb953f845a6e2fd909 a-niva <a-niva@laposte.net> 1750764765 +0200	commit: adaptativesession v1.1

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\logs\refs\remotes\origin\HEAD ---
--- Nom du fichier: HEAD ---
--- Contenu ---
0000000000000000000000000000000000000000 4207dc66139a13313b89baa9762c4002486f655a a-niva <a-niva@laposte.net> 1750092335 +0200	fetch

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\logs\refs\remotes\origin\main ---
--- Nom du fichier: main ---
--- Contenu ---
0000000000000000000000000000000000000000 58b0f2100d68f1aa85124ede1421e228d25fa9f0 a-niva <a-niva@laposte.net> 1749549672 +0200	update by push
58b0f2100d68f1aa85124ede1421e228d25fa9f0 82e350f5e4e261adbb28699f9210f2587e681355 a-niva <a-niva@laposte.net> 1749550529 +0200	update by push
82e350f5e4e261adbb28699f9210f2587e681355 b5a8227ecc1fdad64a7b7258fef7a72e350976c3 a-niva <a-niva@laposte.net> 1749551951 +0200	update by push
b5a8227ecc1fdad64a7b7258fef7a72e350976c3 61636d5cadff17715032a5cbf8b29f89ccd79a29 a-niva <a-niva@laposte.net> 1749552943 +0200	update by push
61636d5cadff17715032a5cbf8b29f89ccd79a29 e01f8c81d03c6d188c5e13d6f0430924a7a43602 a-niva <a-niva@laposte.net> 1749554662 +0200	update by push
e01f8c81d03c6d188c5e13d6f0430924a7a43602 0e1b71263a6e009328a57d7b1b570f6baed5883c a-niva <a-niva@laposte.net> 1749555338 +0200	update by push
0e1b71263a6e009328a57d7b1b570f6baed5883c 5bd735b0680d7e9fcb6c9b703cdcd6cbb6d312e7 a-niva <a-niva@laposte.net> 1749555794 +0200	update by push
5bd735b0680d7e9fcb6c9b703cdcd6cbb6d312e7 914e2535ad3aa2115451a383b3530780f640962c a-niva <a-niva@laposte.net> 1749556271 +0200	update by push
914e2535ad3aa2115451a383b3530780f640962c a96083cbb80309e70bf16d018baf9b81675efc75 a-niva <a-niva@laposte.net> 1749559178 +0200	update by push
a96083cbb80309e70bf16d018baf9b81675efc75 28b8030ac9b718227578f6d3e57c264c1140b4ea a-niva <a-niva@laposte.net> 1749560102 +0200	update by push
28b8030ac9b718227578f6d3e57c264c1140b4ea 1606610a71685a4d4b47c779c1e2e3863a0ee14d a-niva <a-niva@laposte.net> 1749562044 +0200	update by push
1606610a71685a4d4b47c779c1e2e3863a0ee14d 0b80c0a5abec422b00cabcaa284099b449c598c5 a-niva <a-niva@laposte.net> 1749634032 +0200	update by push
0b80c0a5abec422b00cabcaa284099b449c598c5 3fc1bf103f9550cf273186b8d1e171eb7c823453 a-niva <a-niva@laposte.net> 1749635116 +0200	update by push
3fc1bf103f9550cf273186b8d1e171eb7c823453 1be636b8c25c4c860feaa9ebaf577ff69bf58425 a-niva <a-niva@laposte.net> 1749636210 +0200	update by push
1be636b8c25c4c860feaa9ebaf577ff69bf58425 704445894f5a4ca7b22a8f3fe7d34d11077d60a3 a-niva <a-niva@laposte.net> 1749638025 +0200	update by push
704445894f5a4ca7b22a8f3fe7d34d11077d60a3 e100d8c63d8a6145bf2429109f2f2ac207839757 a-niva <a-niva@laposte.net> 1749639198 +0200	update by push
e100d8c63d8a6145bf2429109f2f2ac207839757 8d0fe08c04c44d205e29cc7e5cee928be8b0b33e a-niva <a-niva@laposte.net> 1749652272 +0200	update by push
8d0fe08c04c44d205e29cc7e5cee928be8b0b33e 92a1484084c8f277e6a7bb4699e112375625e685 a-niva <a-niva@laposte.net> 1749652991 +0200	update by push
92a1484084c8f277e6a7bb4699e112375625e685 4536ab4008a6c50efe3391e691b71f4945dc48b9 a-niva <a-niva@laposte.net> 1749654048 +0200	update by push
4536ab4008a6c50efe3391e691b71f4945dc48b9 a376d49a66c70c24ab6c2d76de83d8614f178f1b a-niva <a-niva@laposte.net> 1749655173 +0200	update by push
a376d49a66c70c24ab6c2d76de83d8614f178f1b 3201f653c082578e077b0f4609157fc006896881 a-niva <a-niva@laposte.net> 1749655601 +0200	update by push
3201f653c082578e077b0f4609157fc006896881 de231ae9f2eac5f847e4dad82a7b91cad3f4936e a-niva <a-niva@laposte.net> 1749655856 +0200	update by push
de231ae9f2eac5f847e4dad82a7b91cad3f4936e 64f3081165873323b5f23e922d63b6a83887b499 a-niva <a-niva@laposte.net> 1749656272 +0200	update by push
64f3081165873323b5f23e922d63b6a83887b499 06096a89a48ab72557e870063945f543a8ce4e9a a-niva <a-niva@laposte.net> 1749656642 +0200	update by push
06096a89a48ab72557e870063945f543a8ce4e9a 2ec7413213d2f661f39d06d44525ac30afd25556 a-niva <a-niva@laposte.net> 1749657824 +0200	update by push
2ec7413213d2f661f39d06d44525ac30afd25556 faf50d5a2c6b22bf880e29b5ae9e7af4be807dbd a-niva <a-niva@laposte.net> 1749658384 +0200	update by push
faf50d5a2c6b22bf880e29b5ae9e7af4be807dbd 34f316033f023adeb72534a1a26bbdceaeb2d655 a-niva <a-niva@laposte.net> 1749662852 +0200	update by push
34f316033f023adeb72534a1a26bbdceaeb2d655 ca865f22cc7afac562303a597fcb806dd8f008d4 a-niva <a-niva@laposte.net> 1749663620 +0200	update by push
ca865f22cc7afac562303a597fcb806dd8f008d4 f57e32156cfa15bd44e65f2a6fff0e7a58ce0448 a-niva <a-niva@laposte.net> 1749664209 +0200	update by push
f57e32156cfa15bd44e65f2a6fff0e7a58ce0448 d81a6335d654069cd4c9883c688348db80877934 a-niva <a-niva@laposte.net> 1749665084 +0200	update by push
d81a6335d654069cd4c9883c688348db80877934 6883cd3d016327b191c23cf23b7d59a69efa9206 a-niva <a-niva@laposte.net> 1749714276 +0200	update by push
6883cd3d016327b191c23cf23b7d59a69efa9206 eb65f513dc055b498bb54226152fb6605aac6f2e a-niva <a-niva@laposte.net> 1749715248 +0200	update by push
eb65f513dc055b498bb54226152fb6605aac6f2e ba7c77f5b45905397bdb99536f8a5faef2d98184 a-niva <a-niva@laposte.net> 1749715580 +0200	update by push
ba7c77f5b45905397bdb99536f8a5faef2d98184 3c3036d7a243afa72612af3d54996e7d435df6f2 a-niva <a-niva@laposte.net> 1749716188 +0200	update by push
3c3036d7a243afa72612af3d54996e7d435df6f2 030635031326d27cdfc3bd6dec6bcd540ee895a2 a-niva <a-niva@laposte.net> 1749717611 +0200	update by push
030635031326d27cdfc3bd6dec6bcd540ee895a2 86d020cc135539e5b2badacbe48c893b3b7a92a0 a-niva <a-niva@laposte.net> 1749718613 +0200	update by push
86d020cc135539e5b2badacbe48c893b3b7a92a0 8407165fa68b9e9d1b1dd2be1220ceb526b10bc8 a-niva <a-niva@laposte.net> 1749719819 +0200	update by push
8407165fa68b9e9d1b1dd2be1220ceb526b10bc8 7ff5e336f7cb1a86f341c5a2cec15bbcc073cf4d a-niva <a-niva@laposte.net> 1749720659 +0200	update by push
7ff5e336f7cb1a86f341c5a2cec15bbcc073cf4d 18ed14f3bc7968102148319b3f15e4da0af6bbd4 a-niva <a-niva@laposte.net> 1749721648 +0200	update by push
18ed14f3bc7968102148319b3f15e4da0af6bbd4 9f19e46cf09712e3e14384f6963ad7abc3a76d44 a-niva <a-niva@laposte.net> 1749722073 +0200	update by push
9f19e46cf09712e3e14384f6963ad7abc3a76d44 4a983f4f74c668bc4f2d35c31209a0b67ea5b0e3 a-niva <a-niva@laposte.net> 1749723124 +0200	update by push
4a983f4f74c668bc4f2d35c31209a0b67ea5b0e3 12e8745b891c46a42bc388ff9d55c4091ef6dd58 a-niva <a-niva@laposte.net> 1749724621 +0200	update by push
12e8745b891c46a42bc388ff9d55c4091ef6dd58 2d503adf4faf262d29497f876855c32e35048337 a-niva <a-niva@laposte.net> 1749726780 +0200	update by push
2d503adf4faf262d29497f876855c32e35048337 b4a014aadfe9e09c7c11d9cdab8a0685c9c953d9 a-niva <a-niva@laposte.net> 1749728862 +0200	update by push
b4a014aadfe9e09c7c11d9cdab8a0685c9c953d9 4a7b1ee4985cad6c3cdb14e91af8d19ee0026f3e a-niva <a-niva@laposte.net> 1749729600 +0200	update by push
4a7b1ee4985cad6c3cdb14e91af8d19ee0026f3e fc6e2e40eeeae144c174445883d232e5ebc39802 a-niva <a-niva@laposte.net> 1749765048 +0200	update by push
fc6e2e40eeeae144c174445883d232e5ebc39802 05d2f7d29c5b05f8423114e66a50ff1e73a4ae81 a-niva <a-niva@laposte.net> 1749766154 +0200	update by push
05d2f7d29c5b05f8423114e66a50ff1e73a4ae81 0d3290a7f4ef3247f2c4342b5e523e0b195e043c a-niva <a-niva@laposte.net> 1749766956 +0200	update by push
0d3290a7f4ef3247f2c4342b5e523e0b195e043c 2dcef4c18a896871f16a320a53355ee5246e319a a-niva <a-niva@laposte.net> 1749767701 +0200	update by push
2dcef4c18a896871f16a320a53355ee5246e319a 0aebce21d36870fb424593f1da4a900be0f1d2ee a-niva <a-niva@laposte.net> 1749768659 +0200	update by push
0aebce21d36870fb424593f1da4a900be0f1d2ee 70d052a9a877f65e54e315854114e9779868bfb1 a-niva <a-niva@laposte.net> 1749769445 +0200	update by push
70d052a9a877f65e54e315854114e9779868bfb1 a4e5762ff99c37bd913681cf5d5b9906022dee40 a-niva <a-niva@laposte.net> 1749771063 +0200	update by push
a4e5762ff99c37bd913681cf5d5b9906022dee40 1daf1b0341f7564d36854929db44d944e548f8f5 a-niva <a-niva@laposte.net> 1749771488 +0200	update by push
1daf1b0341f7564d36854929db44d944e548f8f5 57ee50b350ed1c6ad422574c537d7198173a31cc a-niva <a-niva@laposte.net> 1749808551 +0200	update by push
57ee50b350ed1c6ad422574c537d7198173a31cc dbbfd55017b2775d8547e45da2d5a7f0dcd1e273 a-niva <a-niva@laposte.net> 1749809843 +0200	update by push
dbbfd55017b2775d8547e45da2d5a7f0dcd1e273 287cf45f24b6339e20119f2f94b168e574e593ff a-niva <a-niva@laposte.net> 1749811568 +0200	update by push
287cf45f24b6339e20119f2f94b168e574e593ff 9400a44312dd9abff835f0b1e0270308540fc39a a-niva <a-niva@laposte.net> 1749812539 +0200	update by push
9400a44312dd9abff835f0b1e0270308540fc39a 2edd35413c42c62fafe3c7d07a15dcab34cdc10b a-niva <a-niva@laposte.net> 1749814911 +0200	update by push
2edd35413c42c62fafe3c7d07a15dcab34cdc10b 044149e7244698b83a8a6790601b6584295294c3 a-niva <a-niva@laposte.net> 1749815825 +0200	update by push
044149e7244698b83a8a6790601b6584295294c3 f0fa61d13e8503692b9b0637a831832dc00030a0 a-niva <a-niva@laposte.net> 1749816445 +0200	update by push
f0fa61d13e8503692b9b0637a831832dc00030a0 d69aa91b708a7fe1ea1285a2e287544f371a7112 a-niva <a-niva@laposte.net> 1749817324 +0200	update by push
d69aa91b708a7fe1ea1285a2e287544f371a7112 0348115d411ecb8613cfc0dd36e9cda3f522f493 a-niva <a-niva@laposte.net> 1749818317 +0200	update by push
0348115d411ecb8613cfc0dd36e9cda3f522f493 644dc250e6789dd5bec706a10cf40e5cd549c6f4 a-niva <a-niva@laposte.net> 1749823590 +0200	update by push
644dc250e6789dd5bec706a10cf40e5cd549c6f4 8e49479a4ba10fcc8ea5ce2a8eb8d9500b1c52dd a-niva <a-niva@laposte.net> 1749825519 +0200	update by push
8e49479a4ba10fcc8ea5ce2a8eb8d9500b1c52dd 206d359e0b6ebc14f228297d07544317f79475b5 a-niva <a-niva@laposte.net> 1749826649 +0200	update by push
206d359e0b6ebc14f228297d07544317f79475b5 9c146148b56839c52527c3005ccf89ed6543958e a-niva <a-niva@laposte.net> 1749827380 +0200	update by push
9c146148b56839c52527c3005ccf89ed6543958e 71a2887131a63b4c9ad8e7f70b46338e7d14eb57 a-niva <a-niva@laposte.net> 1749827775 +0200	update by push
71a2887131a63b4c9ad8e7f70b46338e7d14eb57 ec80f480afe9d230452aa2c2d32c5f807cfb92d1 a-niva <a-niva@laposte.net> 1749827821 +0200	update by push
ec80f480afe9d230452aa2c2d32c5f807cfb92d1 bb0fa3280e4a0e75ecb99aff20b932745be46154 a-niva <a-niva@laposte.net> 1749828237 +0200	update by push
bb0fa3280e4a0e75ecb99aff20b932745be46154 6e16b9f03c40227c87c5ce5dd475cd5ef12cf6c2 a-niva <a-niva@laposte.net> 1749828481 +0200	update by push
6e16b9f03c40227c87c5ce5dd475cd5ef12cf6c2 0f0a68e958732ecaaf58b75494658e87b0dbaabb a-niva <a-niva@laposte.net> 1749899718 +0200	update by push
0f0a68e958732ecaaf58b75494658e87b0dbaabb 3de94b4831579b6ccd015145efe133288ba78cc5 a-niva <a-niva@laposte.net> 1749899777 +0200	update by push
3de94b4831579b6ccd015145efe133288ba78cc5 d8f7837ffc0524a9b2b24007b00cd65bd9b74e26 a-niva <a-niva@laposte.net> 1749900539 +0200	update by push
d8f7837ffc0524a9b2b24007b00cd65bd9b74e26 0196df65549c89c2ab7fa6f1d4f4ceda77a5537b a-niva <a-niva@laposte.net> 1749902272 +0200	update by push
0196df65549c89c2ab7fa6f1d4f4ceda77a5537b a58870f54ee0dd84547af185b9313491399b689a a-niva <a-niva@laposte.net> 1750007476 +0200	update by push
a58870f54ee0dd84547af185b9313491399b689a c385799e98765579ca27e688d585187fe9d2b0ad a-niva <a-niva@laposte.net> 1750008018 +0200	update by push
c385799e98765579ca27e688d585187fe9d2b0ad b2e1595f6751dbf7e8df46a17b797cd859d8a9ab a-niva <a-niva@laposte.net> 1750008730 +0200	update by push
b2e1595f6751dbf7e8df46a17b797cd859d8a9ab 21795b4bf1dc2b5ec4804b63abb0c6e07ffbf153 a-niva <a-niva@laposte.net> 1750010380 +0200	update by push
21795b4bf1dc2b5ec4804b63abb0c6e07ffbf153 2f50befc65efcd24179f1c1b4a35b75b9a8b75d8 a-niva <a-niva@laposte.net> 1750011551 +0200	update by push
2f50befc65efcd24179f1c1b4a35b75b9a8b75d8 692875fb63ff0b00b85fbc1ff3ce93a812cee3cf a-niva <a-niva@laposte.net> 1750012122 +0200	update by push
692875fb63ff0b00b85fbc1ff3ce93a812cee3cf 10d0c4793526a9c2aeefaa6f9e48b27f667faace a-niva <a-niva@laposte.net> 1750014226 +0200	update by push
10d0c4793526a9c2aeefaa6f9e48b27f667faace 18c0bf42089ba017dc42a57f5d36ad6e14204ed5 a-niva <a-niva@laposte.net> 1750014893 +0200	update by push
18c0bf42089ba017dc42a57f5d36ad6e14204ed5 98f11e4dd6a4972b0aec1b2bc9c73019f7ad3c0a a-niva <a-niva@laposte.net> 1750015357 +0200	update by push
98f11e4dd6a4972b0aec1b2bc9c73019f7ad3c0a 84f5ef4ca05c4811f2bff49f45f42d2ec8368430 a-niva <a-niva@laposte.net> 1750017342 +0200	update by push
84f5ef4ca05c4811f2bff49f45f42d2ec8368430 50d4d093be71f89fbed1c76e5f0657d9221013d6 a-niva <a-niva@laposte.net> 1750018141 +0200	update by push
50d4d093be71f89fbed1c76e5f0657d9221013d6 a0cb21d0fd4acf0e558f7c8e02c9df08d264fff6 a-niva <a-niva@laposte.net> 1750018778 +0200	update by push
a0cb21d0fd4acf0e558f7c8e02c9df08d264fff6 b95acd106e229e60a142df1185009fa3f688e26f a-niva <a-niva@laposte.net> 1750021490 +0200	update by push
b95acd106e229e60a142df1185009fa3f688e26f b46371cb1fe8fe227b2a27cc69c6c081788d6bed a-niva <a-niva@laposte.net> 1750022207 +0200	update by push
b46371cb1fe8fe227b2a27cc69c6c081788d6bed 0e67d9c933d856ff9088366ad0ba7862981ceef3 a-niva <a-niva@laposte.net> 1750022786 +0200	update by push
0e67d9c933d856ff9088366ad0ba7862981ceef3 1ba77afd7aadd8fd12a8b12ffcb0a703ccabe4f8 a-niva <a-niva@laposte.net> 1750023130 +0200	update by push
1ba77afd7aadd8fd12a8b12ffcb0a703ccabe4f8 4f9a9663f3ccb2b970bfeb686c9e095ea35069a1 a-niva <a-niva@laposte.net> 1750023549 +0200	update by push
4f9a9663f3ccb2b970bfeb686c9e095ea35069a1 f1336ba710dddbf186af861cd51468354e5b353c a-niva <a-niva@laposte.net> 1750023783 +0200	update by push
f1336ba710dddbf186af861cd51468354e5b353c 2dd295c5bd27b6df1a840e8649ad98e341d3c98f a-niva <a-niva@laposte.net> 1750024583 +0200	update by push
2dd295c5bd27b6df1a840e8649ad98e341d3c98f a90fc84b912425ba2a3608a091407deb6318ea1b a-niva <a-niva@laposte.net> 1750059551 +0200	update by push
a90fc84b912425ba2a3608a091407deb6318ea1b 033441e61cfa91c629522481503f3d6d5718719a a-niva <a-niva@laposte.net> 1750060309 +0200	update by push
033441e61cfa91c629522481503f3d6d5718719a 998a4dd95c38c6dda1c51554452270760b20f9bc a-niva <a-niva@laposte.net> 1750061086 +0200	update by push
998a4dd95c38c6dda1c51554452270760b20f9bc f9ee1f467ef28e34c221b1725d9e378b8b949b33 a-niva <a-niva@laposte.net> 1750061987 +0200	update by push
f9ee1f467ef28e34c221b1725d9e378b8b949b33 a397bdbd73a9bdca8566f5ae82f7724b8c6a6980 a-niva <a-niva@laposte.net> 1750062780 +0200	update by push
a397bdbd73a9bdca8566f5ae82f7724b8c6a6980 fd45e53fc641e04fc68b4422064b625593a1ac71 a-niva <a-niva@laposte.net> 1750063783 +0200	update by push
fd45e53fc641e04fc68b4422064b625593a1ac71 e5acf112710f8e69f1a0237ee2101fcbcba110ba a-niva <a-niva@laposte.net> 1750064869 +0200	update by push
e5acf112710f8e69f1a0237ee2101fcbcba110ba 35abcc6d32e14d8876d75cf1117d11c5319ac7eb a-niva <a-niva@laposte.net> 1750065059 +0200	update by push
35abcc6d32e14d8876d75cf1117d11c5319ac7eb 5514a186f6b5d5abf75dcac4efa3a4b867593d51 a-niva <a-niva@laposte.net> 1750066122 +0200	update by push
5514a186f6b5d5abf75dcac4efa3a4b867593d51 1c7bb954e7d10105ccd2af5009e2dd55356b84de a-niva <a-niva@laposte.net> 1750066840 +0200	update by push
1c7bb954e7d10105ccd2af5009e2dd55356b84de 09f5baa8c597d58f6fcc35d9f3a22282030c1c9e a-niva <a-niva@laposte.net> 1750067631 +0200	update by push
09f5baa8c597d58f6fcc35d9f3a22282030c1c9e 8bf46857280daf7ed71bcba34ea571a3d1752ca6 a-niva <a-niva@laposte.net> 1750069081 +0200	update by push
8bf46857280daf7ed71bcba34ea571a3d1752ca6 082555a30c80c52372adba832a0c0d550fa9b320 a-niva <a-niva@laposte.net> 1750069949 +0200	update by push
082555a30c80c52372adba832a0c0d550fa9b320 48bd16afbfe5bd8cfd64327b3a7ecb14e55469fe a-niva <a-niva@laposte.net> 1750070484 +0200	update by push
48bd16afbfe5bd8cfd64327b3a7ecb14e55469fe 3239c67414dfef235395833e5a5fa1deb1283076 a-niva <a-niva@laposte.net> 1750071519 +0200	update by push
3239c67414dfef235395833e5a5fa1deb1283076 fe918fb7cd7a4e755e9074deb38723e4be8631fe a-niva <a-niva@laposte.net> 1750073657 +0200	update by push
fe918fb7cd7a4e755e9074deb38723e4be8631fe e94a363746c5524b0018c9023fb99dbc18d08ddc a-niva <a-niva@laposte.net> 1750083784 +0200	update by push
e94a363746c5524b0018c9023fb99dbc18d08ddc d3eef2d46aacfbcb32a54bf95082f458403c21dc a-niva <a-niva@laposte.net> 1750084310 +0200	update by push
d3eef2d46aacfbcb32a54bf95082f458403c21dc 8f55f66346873872eaf8116508ac33cffccf51c3 a-niva <a-niva@laposte.net> 1750084519 +0200	update by push
8f55f66346873872eaf8116508ac33cffccf51c3 92346874d26c9e3433c4179eb87b904b2fcfdacc a-niva <a-niva@laposte.net> 1750085068 +0200	update by push
92346874d26c9e3433c4179eb87b904b2fcfdacc 219a243be128bf30e8fc6b4b940534e326d41037 a-niva <a-niva@laposte.net> 1750085702 +0200	update by push
219a243be128bf30e8fc6b4b940534e326d41037 2d84e924bdd74a74eb4c925b334d5b7c992fac48 a-niva <a-niva@laposte.net> 1750086336 +0200	update by push
2d84e924bdd74a74eb4c925b334d5b7c992fac48 00f5a50ba86b2c7990e89b2b25e5ad05bc3c0fb8 a-niva <a-niva@laposte.net> 1750086632 +0200	update by push
00f5a50ba86b2c7990e89b2b25e5ad05bc3c0fb8 4207dc66139a13313b89baa9762c4002486f655a a-niva <a-niva@laposte.net> 1750092335 +0200	pull: fast-forward
4207dc66139a13313b89baa9762c4002486f655a 7d9be6e34bcb3fa7613514f24eb89240940aca68 a-niva <a-niva@laposte.net> 1750092385 +0200	update by push
7d9be6e34bcb3fa7613514f24eb89240940aca68 3dff3d7ced41b7c4301a8140205d5d2515f7cdfc a-niva <a-niva@laposte.net> 1750093058 +0200	update by push
3dff3d7ced41b7c4301a8140205d5d2515f7cdfc 880ed4a95c0ad70d5e330a2d4f0899661698667c a-niva <a-niva@laposte.net> 1750093440 +0200	update by push
880ed4a95c0ad70d5e330a2d4f0899661698667c 97ed1c2ce3df4d2d4be97032c92fe56ffcf6035e a-niva <a-niva@laposte.net> 1750094003 +0200	update by push
97ed1c2ce3df4d2d4be97032c92fe56ffcf6035e e43c1425d4a602a5163777fdf2d73c3bedd03426 a-niva <a-niva@laposte.net> 1750094713 +0200	update by push
e43c1425d4a602a5163777fdf2d73c3bedd03426 6ea4d13250366cd6828548d6bb55dae6be69aef5 a-niva <a-niva@laposte.net> 1750095129 +0200	update by push
6ea4d13250366cd6828548d6bb55dae6be69aef5 f1a733d0accd2defa3a590cc33e11e4d3a084706 a-niva <a-niva@laposte.net> 1750142222 +0200	update by push
f1a733d0accd2defa3a590cc33e11e4d3a084706 0049bea1dc3f3490411d07107f515558dc957820 a-niva <a-niva@laposte.net> 1750143722 +0200	update by push
0049bea1dc3f3490411d07107f515558dc957820 5730139a79278717b2f08ca76c0840479b320f60 a-niva <a-niva@laposte.net> 1750144024 +0200	update by push
5730139a79278717b2f08ca76c0840479b320f60 e4e07d572d71afcb37f34a11f52ccb3274da27c3 a-niva <a-niva@laposte.net> 1750144374 +0200	update by push
e4e07d572d71afcb37f34a11f52ccb3274da27c3 8a758314027df2dc9c5c80887711a94b20c3851f a-niva <a-niva@laposte.net> 1750145068 +0200	update by push
8a758314027df2dc9c5c80887711a94b20c3851f f983b6b020f82096a0f9fb266e47639a53f5ab90 a-niva <a-niva@laposte.net> 1750145702 +0200	update by push
f983b6b020f82096a0f9fb266e47639a53f5ab90 28725b32c14a6c410400c58c8794bdb72a67bb34 a-niva <a-niva@laposte.net> 1750146291 +0200	update by push
28725b32c14a6c410400c58c8794bdb72a67bb34 265fc8c1f6584d5e83c229a97cb5a10e482501f6 a-niva <a-niva@laposte.net> 1750146634 +0200	update by push
265fc8c1f6584d5e83c229a97cb5a10e482501f6 42daf64e4b95b7e4a9554b99d082e0bdbd387c80 a-niva <a-niva@laposte.net> 1750146838 +0200	update by push
42daf64e4b95b7e4a9554b99d082e0bdbd387c80 74df75818964198aa6b6ee3fa2c962601fddf921 a-niva <a-niva@laposte.net> 1750147356 +0200	update by push
74df75818964198aa6b6ee3fa2c962601fddf921 a6e4b491d93ca67f9eacbdf45cb133fb2e051ae5 a-niva <a-niva@laposte.net> 1750150875 +0200	update by push
a6e4b491d93ca67f9eacbdf45cb133fb2e051ae5 a6396dbb6fd598ed3f02971e4fbaa0846bbf7f09 a-niva <a-niva@laposte.net> 1750151362 +0200	update by push
a6396dbb6fd598ed3f02971e4fbaa0846bbf7f09 79c5ab11d82dc7d60cbd2323c9c2bc58170e80bd a-niva <a-niva@laposte.net> 1750152707 +0200	update by push
79c5ab11d82dc7d60cbd2323c9c2bc58170e80bd bd27d2c434324235ad3728b6633f9db123ddb60d a-niva <a-niva@laposte.net> 1750160024 +0200	update by push
bd27d2c434324235ad3728b6633f9db123ddb60d b9aa662884946b207fa6641129a400d0288f917f a-niva <a-niva@laposte.net> 1750160885 +0200	update by push
b9aa662884946b207fa6641129a400d0288f917f 9f38e2414aad38879672a15ef3413550f4aa8ea2 a-niva <a-niva@laposte.net> 1750161542 +0200	update by push
9f38e2414aad38879672a15ef3413550f4aa8ea2 8308cb6969b86484d85b02a3f518604f27f7ff48 a-niva <a-niva@laposte.net> 1750162042 +0200	update by push
8308cb6969b86484d85b02a3f518604f27f7ff48 3955e6da2a98fdbf51d40a9e129666cd442d8432 a-niva <a-niva@laposte.net> 1750162808 +0200	update by push
3955e6da2a98fdbf51d40a9e129666cd442d8432 34332aa42289b52b49789cf07186ceb0f1a77478 a-niva <a-niva@laposte.net> 1750163059 +0200	update by push
34332aa42289b52b49789cf07186ceb0f1a77478 7ace600508d8a22c5cc0cd7e4fce9c389a796a90 a-niva <a-niva@laposte.net> 1750163663 +0200	update by push
7ace600508d8a22c5cc0cd7e4fce9c389a796a90 91760491aea100a5994413f257d1f9328f48fe95 a-niva <a-niva@laposte.net> 1750163857 +0200	update by push
91760491aea100a5994413f257d1f9328f48fe95 3c2a49aa754316d2bf78f6cfbd5a2e789f44fba4 a-niva <a-niva@laposte.net> 1750164230 +0200	update by push
3c2a49aa754316d2bf78f6cfbd5a2e789f44fba4 e266d7336c092e39f822caa333bea30794f7e04d a-niva <a-niva@laposte.net> 1750164492 +0200	update by push
e266d7336c092e39f822caa333bea30794f7e04d 8c81f0bdce28b67d3970f38af6982c667f953eec a-niva <a-niva@laposte.net> 1750164617 +0200	update by push
8c81f0bdce28b67d3970f38af6982c667f953eec c9cbe2cee498b4333c767e432b549fd2897d4cf1 a-niva <a-niva@laposte.net> 1750165182 +0200	update by push
c9cbe2cee498b4333c767e432b549fd2897d4cf1 de959adbd112c1e9ea2c7d1fbc593984fd3160b8 a-niva <a-niva@laposte.net> 1750166230 +0200	update by push
de959adbd112c1e9ea2c7d1fbc593984fd3160b8 92dd10a0388f8b53a9b6a96f9f4fe10b0dd56410 a-niva <a-niva@laposte.net> 1750169923 +0200	update by push
92dd10a0388f8b53a9b6a96f9f4fe10b0dd56410 524853b15d74770d1fa0c13e7bc0822ae4b2296c a-niva <a-niva@laposte.net> 1750170603 +0200	update by push
524853b15d74770d1fa0c13e7bc0822ae4b2296c 85f7f852910da6667c557926dde115fcd497e9ac a-niva <a-niva@laposte.net> 1750188792 +0200	update by push
85f7f852910da6667c557926dde115fcd497e9ac 2dbbd17486973533cc8eda9dc491a8e29eefbafa a-niva <a-niva@laposte.net> 1750189671 +0200	update by push
2dbbd17486973533cc8eda9dc491a8e29eefbafa 4ce5c6390eebad5fedabdf40f17390e98c808e7d a-niva <a-niva@laposte.net> 1750190199 +0200	update by push
4ce5c6390eebad5fedabdf40f17390e98c808e7d 21c41dcac6e16923187447c6b0d757185f32bfa1 a-niva <a-niva@laposte.net> 1750191128 +0200	update by push
21c41dcac6e16923187447c6b0d757185f32bfa1 ab832fac2fffb23a3480b37a91a42d7af878acc2 a-niva <a-niva@laposte.net> 1750191435 +0200	update by push
ab832fac2fffb23a3480b37a91a42d7af878acc2 e1d7e5fb8bc789799966d57b098b6ed00235c809 a-niva <a-niva@laposte.net> 1750238727 +0200	update by push
e1d7e5fb8bc789799966d57b098b6ed00235c809 bf09f0d5c1ec45493936ff331ce671a83d1b8ac9 a-niva <a-niva@laposte.net> 1750239180 +0200	update by push
bf09f0d5c1ec45493936ff331ce671a83d1b8ac9 0cc18c84e5e1aa5e1f52c0ff3df92fa382f8eb92 a-niva <a-niva@laposte.net> 1750240010 +0200	update by push
0cc18c84e5e1aa5e1f52c0ff3df92fa382f8eb92 3f151c67ba0246fdc7203cb2a25c25e3584e168b a-niva <a-niva@laposte.net> 1750240676 +0200	update by push
3f151c67ba0246fdc7203cb2a25c25e3584e168b 07c485d19be0dd428d478a4015ba4fdf87a085a1 a-niva <a-niva@laposte.net> 1750241155 +0200	update by push
07c485d19be0dd428d478a4015ba4fdf87a085a1 1b75e436d450d84527917c03e038ffe489389dd3 a-niva <a-niva@laposte.net> 1750256276 +0200	update by push
1b75e436d450d84527917c03e038ffe489389dd3 5cdfeb4ba9645b6e838d85fecf65520cedad9e7b a-niva <a-niva@laposte.net> 1750257217 +0200	update by push
5cdfeb4ba9645b6e838d85fecf65520cedad9e7b 29d107b8884b764f2eac31f43768a335b84b1652 a-niva <a-niva@laposte.net> 1750258447 +0200	update by push
29d107b8884b764f2eac31f43768a335b84b1652 a424f82e3f789c32a43d3539b8accb945a2c51a0 a-niva <a-niva@laposte.net> 1750259455 +0200	update by push
a424f82e3f789c32a43d3539b8accb945a2c51a0 f7deaa17fe69f0c5fc402994d0efec5f3b7d60aa a-niva <a-niva@laposte.net> 1750260415 +0200	update by push
f7deaa17fe69f0c5fc402994d0efec5f3b7d60aa 0c2024dbaf96aa5485b8837c29d153e7bbc13166 a-niva <a-niva@laposte.net> 1750260681 +0200	update by push
0c2024dbaf96aa5485b8837c29d153e7bbc13166 49befceffbbc1c804d69870fa2b5172dd3638883 a-niva <a-niva@laposte.net> 1750262290 +0200	update by push
49befceffbbc1c804d69870fa2b5172dd3638883 b49fbafbdc0ca62474655ba186df891882297cc6 a-niva <a-niva@laposte.net> 1750262736 +0200	update by push
b49fbafbdc0ca62474655ba186df891882297cc6 7347ad55fc7899d048b94f22d1137fb577e49cbb a-niva <a-niva@laposte.net> 1750263812 +0200	update by push
7347ad55fc7899d048b94f22d1137fb577e49cbb a2e99af357a8bc98d54e1eeb29bd7385e4bbb684 a-niva <a-niva@laposte.net> 1750263992 +0200	update by push
a2e99af357a8bc98d54e1eeb29bd7385e4bbb684 a2a617adfaef235c6437ef04be4f3b4e513477c1 a-niva <a-niva@laposte.net> 1750275721 +0200	update by push
a2a617adfaef235c6437ef04be4f3b4e513477c1 54c283eaf0adf72b0f1c42f7ae43e8b07ff15ab9 a-niva <a-niva@laposte.net> 1750275835 +0200	update by push
54c283eaf0adf72b0f1c42f7ae43e8b07ff15ab9 e0f854a8d0b1073f341a7669558f6f950bcace9a a-niva <a-niva@laposte.net> 1750278659 +0200	update by push
e0f854a8d0b1073f341a7669558f6f950bcace9a 144093256cba1c8d51503c1f3525a9f7c252102b a-niva <a-niva@laposte.net> 1750279836 +0200	update by push
144093256cba1c8d51503c1f3525a9f7c252102b 68acee46a9ba0b8f1571e150d8e376dc3f3fa7bc a-niva <a-niva@laposte.net> 1750280148 +0200	update by push
68acee46a9ba0b8f1571e150d8e376dc3f3fa7bc 177a035a93deee169c0f672b68b359c1829793b2 a-niva <a-niva@laposte.net> 1750280388 +0200	update by push
177a035a93deee169c0f672b68b359c1829793b2 8d9b976151a74e83a9a0a8a3dae1a3721c8a9c68 a-niva <a-niva@laposte.net> 1750280429 +0200	update by push
8d9b976151a74e83a9a0a8a3dae1a3721c8a9c68 4d5aecd10bc52a6860188e9df596c660afa222fd a-niva <a-niva@laposte.net> 1750281367 +0200	update by push
4d5aecd10bc52a6860188e9df596c660afa222fd 5c761c4338cb577168e8b53767d84b9458295dcc a-niva <a-niva@laposte.net> 1750282408 +0200	update by push
5c761c4338cb577168e8b53767d84b9458295dcc 1a5429b8d9f6dd7207aaef7f6e84b06735bd2bdb a-niva <a-niva@laposte.net> 1750282877 +0200	update by push
1a5429b8d9f6dd7207aaef7f6e84b06735bd2bdb 2ca8ad7d711db16e5253a9d935026a12a0374858 a-niva <a-niva@laposte.net> 1750283045 +0200	update by push
2ca8ad7d711db16e5253a9d935026a12a0374858 bd5c0254ea12bdf0e067bb2f2bd387ded34cec9e a-niva <a-niva@laposte.net> 1750283944 +0200	update by push
bd5c0254ea12bdf0e067bb2f2bd387ded34cec9e d2c09124355985065af2bdabe9f5c34d2216a5dc a-niva <a-niva@laposte.net> 1750320489 +0200	update by push
d2c09124355985065af2bdabe9f5c34d2216a5dc afb232aceb53900315fdc80000405bb3661725f2 a-niva <a-niva@laposte.net> 1750321142 +0200	update by push
afb232aceb53900315fdc80000405bb3661725f2 cc0e5770afaf5270bd5b0d3ce6779d64388e2d54 a-niva <a-niva@laposte.net> 1750321700 +0200	update by push
cc0e5770afaf5270bd5b0d3ce6779d64388e2d54 91f0aa541f988a1214d8bb20776308ca23c475fe a-niva <a-niva@laposte.net> 1750322194 +0200	update by push
91f0aa541f988a1214d8bb20776308ca23c475fe 7866b97077c93939922803421fe34ffaf147c768 a-niva <a-niva@laposte.net> 1750322712 +0200	update by push
7866b97077c93939922803421fe34ffaf147c768 deb368b6a88e01e6c7580610cb44046819be918c a-niva <a-niva@laposte.net> 1750322750 +0200	update by push
deb368b6a88e01e6c7580610cb44046819be918c 7deb05bda541dbb7cea292d539f9b25983d25055 a-niva <a-niva@laposte.net> 1750323891 +0200	update by push
7deb05bda541dbb7cea292d539f9b25983d25055 549500426ab8191a68163ff30914be5f8032e482 a-niva <a-niva@laposte.net> 1750324535 +0200	update by push
549500426ab8191a68163ff30914be5f8032e482 5fd266149fb50e70fa7b6685f51f3d0a11648aae a-niva <a-niva@laposte.net> 1750325079 +0200	update by push
5fd266149fb50e70fa7b6685f51f3d0a11648aae 92b854778b580b6edf2290dbae0908ab553c9ea5 a-niva <a-niva@laposte.net> 1750329500 +0200	update by push
92b854778b580b6edf2290dbae0908ab553c9ea5 4986dfaf2655fcf0b6e806ce0acec2cd353aa910 a-niva <a-niva@laposte.net> 1750329921 +0200	update by push
4986dfaf2655fcf0b6e806ce0acec2cd353aa910 a0e352c02085876ccd9089bd9aa07854bf8966d5 a-niva <a-niva@laposte.net> 1750330443 +0200	update by push
a0e352c02085876ccd9089bd9aa07854bf8966d5 f797779dc2088c3452014141711aa6e9a9c8aaa6 a-niva <a-niva@laposte.net> 1750330810 +0200	update by push
f797779dc2088c3452014141711aa6e9a9c8aaa6 86ccd0ddb7bdb59edd52a9228f8ba4485da6cf3b a-niva <a-niva@laposte.net> 1750331617 +0200	update by push
86ccd0ddb7bdb59edd52a9228f8ba4485da6cf3b b612f388eaa1e58110810b16bcbbc7a23582abd8 a-niva <a-niva@laposte.net> 1750332137 +0200	update by push
b612f388eaa1e58110810b16bcbbc7a23582abd8 34cc63139ba891c75f40646778b178371320d168 a-niva <a-niva@laposte.net> 1750332995 +0200	update by push
34cc63139ba891c75f40646778b178371320d168 be73229a5acf861bf9b913d7262752139c692dba a-niva <a-niva@laposte.net> 1750333612 +0200	update by push
be73229a5acf861bf9b913d7262752139c692dba ede19d64bb245698d0cabdf56b3d5130a4b3d27c a-niva <a-niva@laposte.net> 1750334063 +0200	update by push
ede19d64bb245698d0cabdf56b3d5130a4b3d27c 726e91b558486778bd3a1a6dd36f1c63861928bc a-niva <a-niva@laposte.net> 1750334838 +0200	update by push
726e91b558486778bd3a1a6dd36f1c63861928bc 73a255ef36c3debd3e8ff4495474a7e5078021d4 a-niva <a-niva@laposte.net> 1750335314 +0200	update by push
73a255ef36c3debd3e8ff4495474a7e5078021d4 5bb056588f5d20ebf056574087a891cdb5b2e6b6 a-niva <a-niva@laposte.net> 1750361865 +0200	update by push
5bb056588f5d20ebf056574087a891cdb5b2e6b6 08d009aa8f512267f8c0e69ed56d101673abc9a6 a-niva <a-niva@laposte.net> 1750362152 +0200	update by push
08d009aa8f512267f8c0e69ed56d101673abc9a6 c10b3469f918cb3b69c16b086f5b8522a1d7777a a-niva <a-niva@laposte.net> 1750362720 +0200	update by push
c10b3469f918cb3b69c16b086f5b8522a1d7777a 994d93b62da8c1db08b964705e75331c82a168f9 a-niva <a-niva@laposte.net> 1750365015 +0200	update by push
994d93b62da8c1db08b964705e75331c82a168f9 4fc6fb06a3abfdd5e64003ffa01af492fb22d7e8 a-niva <a-niva@laposte.net> 1750365591 +0200	update by push
4fc6fb06a3abfdd5e64003ffa01af492fb22d7e8 71c7cce107d267a8478a72905682d579640678bd a-niva <a-niva@laposte.net> 1750366309 +0200	update by push
71c7cce107d267a8478a72905682d579640678bd 632ce3c1fa0afbdc39e580f28c11c611ae2048ea a-niva <a-niva@laposte.net> 1750366860 +0200	update by push
632ce3c1fa0afbdc39e580f28c11c611ae2048ea f6ef2009535cbea7ea9220f8230380886edff7dd a-niva <a-niva@laposte.net> 1750367219 +0200	update by push
f6ef2009535cbea7ea9220f8230380886edff7dd 84de269a375c55ee194c1920b8aa2b846741bbd2 a-niva <a-niva@laposte.net> 1750367621 +0200	update by push
84de269a375c55ee194c1920b8aa2b846741bbd2 f6a22a14ed3c5f0891b1e42b8c2198cda5e7d941 a-niva <a-niva@laposte.net> 1750367789 +0200	update by push
f6a22a14ed3c5f0891b1e42b8c2198cda5e7d941 ebc922de9007ff36797672688b9dffeeb7ce6199 a-niva <a-niva@laposte.net> 1750367855 +0200	update by push
ebc922de9007ff36797672688b9dffeeb7ce6199 a940a50125a1061ba44465c33c286cb59139001f a-niva <a-niva@laposte.net> 1750368084 +0200	update by push
a940a50125a1061ba44465c33c286cb59139001f af2f56eaa40245a93c1f3fc6f29873327c25564a a-niva <a-niva@laposte.net> 1750424353 +0200	update by push
af2f56eaa40245a93c1f3fc6f29873327c25564a a17695b19bf829f46b6e785bd031b456a5a2ff09 a-niva <a-niva@laposte.net> 1750424937 +0200	update by push
a17695b19bf829f46b6e785bd031b456a5a2ff09 b9caac1cf4f527625d45157bb11f822c07261674 a-niva <a-niva@laposte.net> 1750426019 +0200	update by push
b9caac1cf4f527625d45157bb11f822c07261674 a44c7f087be715e2f319adc8be9664b6d7bbecbe a-niva <a-niva@laposte.net> 1750427785 +0200	update by push
a44c7f087be715e2f319adc8be9664b6d7bbecbe 485360c3def30778c11e3e7ddeaaff839872ace4 a-niva <a-niva@laposte.net> 1750428566 +0200	update by push
485360c3def30778c11e3e7ddeaaff839872ace4 6653125dfc6f587745b128f039ebaa43c6497b7f a-niva <a-niva@laposte.net> 1750428946 +0200	update by push
6653125dfc6f587745b128f039ebaa43c6497b7f d5c55d559966048faad8492107662accaea17044 a-niva <a-niva@laposte.net> 1750429694 +0200	update by push
d5c55d559966048faad8492107662accaea17044 4a3c4ef49f70f76419dd1c8f7bae61cd7daf2b44 a-niva <a-niva@laposte.net> 1750430019 +0200	update by push
4a3c4ef49f70f76419dd1c8f7bae61cd7daf2b44 56ee98824993178ef7e9935c6639706784c285ab a-niva <a-niva@laposte.net> 1750430692 +0200	update by push
56ee98824993178ef7e9935c6639706784c285ab c13a17b8c4de522cf97d976ed85b9dc316114f80 a-niva <a-niva@laposte.net> 1750431282 +0200	update by push
c13a17b8c4de522cf97d976ed85b9dc316114f80 2cadcbb77c23b2dd0e45876cc1e4459da78a5b26 a-niva <a-niva@laposte.net> 1750431549 +0200	update by push
2cadcbb77c23b2dd0e45876cc1e4459da78a5b26 c3d839e68e0a670e947b78d5a7c91b3a295304f1 a-niva <a-niva@laposte.net> 1750432583 +0200	update by push
c3d839e68e0a670e947b78d5a7c91b3a295304f1 0dac602ccecd8c1c21c42c9a8f3fb86c743185f0 a-niva <a-niva@laposte.net> 1750433436 +0200	update by push
0dac602ccecd8c1c21c42c9a8f3fb86c743185f0 3d80acd23ec511b695354204dcd9374b7ccfd599 a-niva <a-niva@laposte.net> 1750433655 +0200	update by push
3d80acd23ec511b695354204dcd9374b7ccfd599 4217e0def6258580bdcb08a195f65e9b11b955b3 a-niva <a-niva@laposte.net> 1750593648 +0200	update by push
4217e0def6258580bdcb08a195f65e9b11b955b3 559c13cf294ebe6862bfcfa23b4f614f2953fc12 a-niva <a-niva@laposte.net> 1750593695 +0200	update by push
559c13cf294ebe6862bfcfa23b4f614f2953fc12 5aa5aa3561cc82cd47a3501e0f93d4a33adb18c5 a-niva <a-niva@laposte.net> 1750593927 +0200	update by push
5aa5aa3561cc82cd47a3501e0f93d4a33adb18c5 6c386a46a24de072fda5ab0220a263c11f2e8d7d a-niva <a-niva@laposte.net> 1750596362 +0200	update by push
6c386a46a24de072fda5ab0220a263c11f2e8d7d 383f649877b319aca4eac7905b6498d5afbff432 a-niva <a-niva@laposte.net> 1750597228 +0200	update by push
383f649877b319aca4eac7905b6498d5afbff432 7e8b369ea5ac4c4803345aab2187ce2fdacf6548 a-niva <a-niva@laposte.net> 1750598818 +0200	update by push
7e8b369ea5ac4c4803345aab2187ce2fdacf6548 ce79dcaafad149230525dd443ac45f37b194707e a-niva <a-niva@laposte.net> 1750599856 +0200	update by push
ce79dcaafad149230525dd443ac45f37b194707e 9683014668f093afd2797b5965567d195f4b7a8a a-niva <a-niva@laposte.net> 1750600741 +0200	update by push
9683014668f093afd2797b5965567d195f4b7a8a eba1a5af8cf7de07ff9e092a266de36e383bfb64 a-niva <a-niva@laposte.net> 1750601976 +0200	update by push
eba1a5af8cf7de07ff9e092a266de36e383bfb64 ce1d096352814ca30b39e26ab2d3c89275532068 a-niva <a-niva@laposte.net> 1750603284 +0200	update by push
ce1d096352814ca30b39e26ab2d3c89275532068 d85606f1608cbf13af853f49448ebe5c8a628047 a-niva <a-niva@laposte.net> 1750603635 +0200	update by push
d85606f1608cbf13af853f49448ebe5c8a628047 a294367e2e243cd3eb5af3e8f64b8e5ce564a7da a-niva <a-niva@laposte.net> 1750603923 +0200	update by push
a294367e2e243cd3eb5af3e8f64b8e5ce564a7da ca8025920350180b54daf02a0de6938b2deba72d a-niva <a-niva@laposte.net> 1750604312 +0200	update by push
ca8025920350180b54daf02a0de6938b2deba72d 30c9fbcb4364d59cd5edb09c31c373060000d2c7 a-niva <a-niva@laposte.net> 1750604615 +0200	update by push
30c9fbcb4364d59cd5edb09c31c373060000d2c7 23b9ee9e57a8f88361e910c7c505679b1bbd1a51 a-niva <a-niva@laposte.net> 1750605152 +0200	update by push
23b9ee9e57a8f88361e910c7c505679b1bbd1a51 cb55d06d980a5f516a121ade47a22bb6a5806e3c a-niva <a-niva@laposte.net> 1750605558 +0200	update by push
cb55d06d980a5f516a121ade47a22bb6a5806e3c cfbeac571053d3d657c49ff63ff7eeba7bb002fe a-niva <a-niva@laposte.net> 1750606730 +0200	update by push
cfbeac571053d3d657c49ff63ff7eeba7bb002fe 17f9b4ba7643411b0fa065ab6a4e0225ea8c026b a-niva <a-niva@laposte.net> 1750608689 +0200	update by push
17f9b4ba7643411b0fa065ab6a4e0225ea8c026b 527237393b8830f20f81ff493a3ac942d9aad282 a-niva <a-niva@laposte.net> 1750609503 +0200	update by push
527237393b8830f20f81ff493a3ac942d9aad282 63e7780c9708ab5933c110fb1324e830b5db64c1 a-niva <a-niva@laposte.net> 1750610732 +0200	update by push
63e7780c9708ab5933c110fb1324e830b5db64c1 46c3de05ec079215843e69cd5a31d583937ac04f a-niva <a-niva@laposte.net> 1750619020 +0200	update by push
46c3de05ec079215843e69cd5a31d583937ac04f 0b67534ce55d1a89d34412cc3b37ff03bd0c384a a-niva <a-niva@laposte.net> 1750620062 +0200	update by push
0b67534ce55d1a89d34412cc3b37ff03bd0c384a 0242237eddb215d2d26e8a60fdf484637f32a09a a-niva <a-niva@laposte.net> 1750620552 +0200	update by push
0242237eddb215d2d26e8a60fdf484637f32a09a a422348d06fbab87a71404d0090f5acc383469f3 a-niva <a-niva@laposte.net> 1750621480 +0200	update by push
a422348d06fbab87a71404d0090f5acc383469f3 4c05186cc6d36ed300e6ba2ba18e154eee106612 a-niva <a-niva@laposte.net> 1750622009 +0200	update by push
4c05186cc6d36ed300e6ba2ba18e154eee106612 55c95382201371ef5424cf4ee628c29cb859bbeb a-niva <a-niva@laposte.net> 1750622453 +0200	update by push
55c95382201371ef5424cf4ee628c29cb859bbeb 89761ba4bdd14a1e88443bdfd94c53ab69b6f885 a-niva <a-niva@laposte.net> 1750624525 +0200	update by push
89761ba4bdd14a1e88443bdfd94c53ab69b6f885 94fd75f0c31937d52803579834aaf688a240b628 a-niva <a-niva@laposte.net> 1750624957 +0200	update by push
94fd75f0c31937d52803579834aaf688a240b628 32b918363b0e5a0baa9bf6c2962059b0d8ed2cb6 a-niva <a-niva@laposte.net> 1750625450 +0200	update by push
32b918363b0e5a0baa9bf6c2962059b0d8ed2cb6 7f8ae592e5ae3139390e5afbc5702f397a9ed77b a-niva <a-niva@laposte.net> 1750626233 +0200	update by push
7f8ae592e5ae3139390e5afbc5702f397a9ed77b f24280c64de2e40c822fd05e6ef483de8bbb906a a-niva <a-niva@laposte.net> 1750626859 +0200	update by push
f24280c64de2e40c822fd05e6ef483de8bbb906a 30560db43e8707ee01b90523f27c4721c9ab7a08 a-niva <a-niva@laposte.net> 1750627258 +0200	update by push
30560db43e8707ee01b90523f27c4721c9ab7a08 9d4799a9c50fa4c648023dc583954317ddd36b59 a-niva <a-niva@laposte.net> 1750630821 +0200	update by push
9d4799a9c50fa4c648023dc583954317ddd36b59 f9584dfe9ef75a2c955d54c32ee867dbfedd1227 a-niva <a-niva@laposte.net> 1750631760 +0200	update by push
f9584dfe9ef75a2c955d54c32ee867dbfedd1227 915cd1097ffd0626cf7ad3be0afae7be3a635927 a-niva <a-niva@laposte.net> 1750632267 +0200	update by push
915cd1097ffd0626cf7ad3be0afae7be3a635927 04878ea031b8e9d9d7c8c284453602579d4120a7 a-niva <a-niva@laposte.net> 1750632877 +0200	update by push
04878ea031b8e9d9d7c8c284453602579d4120a7 c711fcdcb1be5ca321293e49b8a7ab5020f02958 a-niva <a-niva@laposte.net> 1750633027 +0200	update by push
c711fcdcb1be5ca321293e49b8a7ab5020f02958 0fc817facd668e69fc70b5d8551be83448be1142 a-niva <a-niva@laposte.net> 1750660369 +0200	update by push
0fc817facd668e69fc70b5d8551be83448be1142 392f42543cec9ae2ccd443e12e914231335f1f9f a-niva <a-niva@laposte.net> 1750661355 +0200	update by push
392f42543cec9ae2ccd443e12e914231335f1f9f c03dc3fde9db0a467f6488003a399c3e19652a2c a-niva <a-niva@laposte.net> 1750661610 +0200	update by push
c03dc3fde9db0a467f6488003a399c3e19652a2c 35dc828fc050c311c6c42724e8430cd0318f8b88 a-niva <a-niva@laposte.net> 1750662612 +0200	update by push
35dc828fc050c311c6c42724e8430cd0318f8b88 bee9699c26e3e25d32a5563194f4a0b10d3d79bf a-niva <a-niva@laposte.net> 1750662912 +0200	update by push
bee9699c26e3e25d32a5563194f4a0b10d3d79bf f944645ae354e727f32739008895e7743b8a9847 a-niva <a-niva@laposte.net> 1750664114 +0200	update by push
f944645ae354e727f32739008895e7743b8a9847 76d8cc5bd7c53ea8e7b750e75c4adfa2c561fa6e a-niva <a-niva@laposte.net> 1750665500 +0200	update by push
76d8cc5bd7c53ea8e7b750e75c4adfa2c561fa6e 806423c225adb20b35039263aeec6b6b8e66f02c a-niva <a-niva@laposte.net> 1750667108 +0200	update by push
806423c225adb20b35039263aeec6b6b8e66f02c 11c6d9290ed4d2043d0c41d133ed0924c06d1ed1 a-niva <a-niva@laposte.net> 1750668004 +0200	update by push
11c6d9290ed4d2043d0c41d133ed0924c06d1ed1 f5caf6712349e9902e705010f5046a15b0eee14a a-niva <a-niva@laposte.net> 1750668454 +0200	update by push
f5caf6712349e9902e705010f5046a15b0eee14a d3b6295688eb11f8f6dbda4cf92487ff853f75ce a-niva <a-niva@laposte.net> 1750669028 +0200	update by push
d3b6295688eb11f8f6dbda4cf92487ff853f75ce ade742e05200c3f18aad0b2bec16a39dfbfcb8d8 a-niva <a-niva@laposte.net> 1750669566 +0200	update by push
ade742e05200c3f18aad0b2bec16a39dfbfcb8d8 0fb4df7316ad8406bd1d7b365c74e8bbbe4bc22b a-niva <a-niva@laposte.net> 1750669789 +0200	update by push
0fb4df7316ad8406bd1d7b365c74e8bbbe4bc22b 0601d485df3e7ad608030bffedd25596b2b88b2f a-niva <a-niva@laposte.net> 1750670224 +0200	update by push
0601d485df3e7ad608030bffedd25596b2b88b2f fdf97b47f5ba4acf96e6669c90c9b4bec345c8e5 a-niva <a-niva@laposte.net> 1750670681 +0200	update by push
fdf97b47f5ba4acf96e6669c90c9b4bec345c8e5 20ba35504cabf1cc48fdb1d1054e024d844b067a a-niva <a-niva@laposte.net> 1750671108 +0200	update by push
20ba35504cabf1cc48fdb1d1054e024d844b067a a4aa2968f10dbb6a3ecae593ddbb4af1f03a1e65 a-niva <a-niva@laposte.net> 1750672036 +0200	update by push
a4aa2968f10dbb6a3ecae593ddbb4af1f03a1e65 c95742fdc51fdc876248acfe659ebca7521349c2 a-niva <a-niva@laposte.net> 1750672507 +0200	update by push
c95742fdc51fdc876248acfe659ebca7521349c2 7490fc57df540d6b9d610e8f848b1a65df7c7705 a-niva <a-niva@laposte.net> 1750673849 +0200	update by push
7490fc57df540d6b9d610e8f848b1a65df7c7705 0252b56d55e2778598eeb21ac8d839bd41c8a199 a-niva <a-niva@laposte.net> 1750674466 +0200	update by push
0252b56d55e2778598eeb21ac8d839bd41c8a199 df62f65ba7e52ed6921a091fb9801b4d633c965e a-niva <a-niva@laposte.net> 1750674569 +0200	update by push
df62f65ba7e52ed6921a091fb9801b4d633c965e 8daa7cd023bd873fb0a8a8dd76ed7fbb8def6772 a-niva <a-niva@laposte.net> 1750679198 +0200	update by push
8daa7cd023bd873fb0a8a8dd76ed7fbb8def6772 39bdf214918e020117ed789cbdc148eea75d0bc3 a-niva <a-niva@laposte.net> 1750680067 +0200	update by push
39bdf214918e020117ed789cbdc148eea75d0bc3 f1b281d01aff474dc54a32b2c6b7dd249a211d66 a-niva <a-niva@laposte.net> 1750680385 +0200	update by push
f1b281d01aff474dc54a32b2c6b7dd249a211d66 3621c0f5a4cafcf2787ef82a1f5586612be4635b a-niva <a-niva@laposte.net> 1750680973 +0200	update by push
3621c0f5a4cafcf2787ef82a1f5586612be4635b 0391547331050c842518502ea7ac1894f3446a09 a-niva <a-niva@laposte.net> 1750682498 +0200	update by push
0391547331050c842518502ea7ac1894f3446a09 c32a8f1545d10e5f84f4d142468bbf4d08c2ec58 a-niva <a-niva@laposte.net> 1750683269 +0200	update by push
c32a8f1545d10e5f84f4d142468bbf4d08c2ec58 58198f5c7fe473e1ac455a828568635d768517da a-niva <a-niva@laposte.net> 1750683291 +0200	update by push
58198f5c7fe473e1ac455a828568635d768517da 530b33bb3db108259959d5719de585d9dd9d3dc0 a-niva <a-niva@laposte.net> 1750685015 +0200	update by push
530b33bb3db108259959d5719de585d9dd9d3dc0 d04fc92aff338470eb8a4859b058b349d3e9e426 a-niva <a-niva@laposte.net> 1750686635 +0200	update by push
d04fc92aff338470eb8a4859b058b349d3e9e426 fda657f7c06f064febe4a921ba38da8214069af7 a-niva <a-niva@laposte.net> 1750687222 +0200	update by push
fda657f7c06f064febe4a921ba38da8214069af7 673b4d81f730e1dbf9f96a1f21236cc1004f7aec a-niva <a-niva@laposte.net> 1750688827 +0200	update by push
673b4d81f730e1dbf9f96a1f21236cc1004f7aec 8299f27e58eb9c1501d706cb7732b36bfc5eb809 a-niva <a-niva@laposte.net> 1750688866 +0200	update by push
8299f27e58eb9c1501d706cb7732b36bfc5eb809 d6fce6e7ad7bbc34cf991e05cca71af5b6c4e246 a-niva <a-niva@laposte.net> 1750689637 +0200	update by push
d6fce6e7ad7bbc34cf991e05cca71af5b6c4e246 dc97e96b53becd3ebc26640776f56af62c34bfef a-niva <a-niva@laposte.net> 1750690438 +0200	update by push
dc97e96b53becd3ebc26640776f56af62c34bfef 31d57a8d9f0bb9f6673b40baf7fd1f6003ebc9f3 a-niva <a-niva@laposte.net> 1750691631 +0200	update by push
31d57a8d9f0bb9f6673b40baf7fd1f6003ebc9f3 d02997c67871d7aceae1d1ee465589c6e9015b2f a-niva <a-niva@laposte.net> 1750692386 +0200	update by push
d02997c67871d7aceae1d1ee465589c6e9015b2f edb7433d51e85305f4ed214376a634ae01f191db a-niva <a-niva@laposte.net> 1750693069 +0200	update by push
edb7433d51e85305f4ed214376a634ae01f191db ec14ff1de7248b1515eab361306466b529f02234 a-niva <a-niva@laposte.net> 1750693367 +0200	update by push
ec14ff1de7248b1515eab361306466b529f02234 b70e8ddcd8ce3195f2afdad07e1d2ddb4c6548de a-niva <a-niva@laposte.net> 1750694301 +0200	update by push
b70e8ddcd8ce3195f2afdad07e1d2ddb4c6548de ab1d294be5c22106085a2ba1f19a450c145431de a-niva <a-niva@laposte.net> 1750694961 +0200	update by push
ab1d294be5c22106085a2ba1f19a450c145431de 48d8f1e8a015210291b0151c0d5b7f400b8cb5e4 a-niva <a-niva@laposte.net> 1750695577 +0200	update by push
48d8f1e8a015210291b0151c0d5b7f400b8cb5e4 1644f330d479f0824dde28b3574368ff207c74a5 a-niva <a-niva@laposte.net> 1750696031 +0200	update by push
1644f330d479f0824dde28b3574368ff207c74a5 3f5fed690bea7f39293842a5a35d5e47b3cc4c01 a-niva <a-niva@laposte.net> 1750696476 +0200	update by push
3f5fed690bea7f39293842a5a35d5e47b3cc4c01 b2e7cecbf71781aba8093c6fe2b13565d026d5af a-niva <a-niva@laposte.net> 1750703072 +0200	update by push
b2e7cecbf71781aba8093c6fe2b13565d026d5af 2aeec9954953e5961bd6cc6d05ee78e5dd2046ab a-niva <a-niva@laposte.net> 1750703516 +0200	update by push
2aeec9954953e5961bd6cc6d05ee78e5dd2046ab acd7a6b107813a5149887a3cedc1edfead7eba95 a-niva <a-niva@laposte.net> 1750703983 +0200	update by push
acd7a6b107813a5149887a3cedc1edfead7eba95 1f7d9b0543e37144d17f8276f54565c433ea861c a-niva <a-niva@laposte.net> 1750704585 +0200	update by push
1f7d9b0543e37144d17f8276f54565c433ea861c 5fdf094ad552ce9ee4a7eb72d1f4cd8a7ad23e7a a-niva <a-niva@laposte.net> 1750704670 +0200	update by push
5fdf094ad552ce9ee4a7eb72d1f4cd8a7ad23e7a 0abe6bd0a70ee9150293bebe484c08f62be1890e a-niva <a-niva@laposte.net> 1750705119 +0200	update by push
0abe6bd0a70ee9150293bebe484c08f62be1890e 58f1c8b31d276a8fe5b6fb2978be545cc19928d0 a-niva <a-niva@laposte.net> 1750705628 +0200	update by push
58f1c8b31d276a8fe5b6fb2978be545cc19928d0 a7d49a6b30bf2ee06b264182d4ebe41f58f9d05b a-niva <a-niva@laposte.net> 1750706330 +0200	update by push
a7d49a6b30bf2ee06b264182d4ebe41f58f9d05b a55c0d8385eaaa1d435f3f6e874e0380044d9286 a-niva <a-niva@laposte.net> 1750763689 +0200	update by push
a55c0d8385eaaa1d435f3f6e874e0380044d9286 a0205970385f59a472ec0c6723f71e92282b765f a-niva <a-niva@laposte.net> 1750764404 +0200	update by push
a0205970385f59a472ec0c6723f71e92282b765f c5d56f3b902b5075468a21bb953f845a6e2fd909 a-niva <a-niva@laposte.net> 1750764769 +0200	update by push

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\00\1bf2a4678de311e59f05d5b3bd0b50f6ec89b6 ---
--- Nom du fichier: 1bf2a4678de311e59f05d5b3bd0b50f6ec89b6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\00\3a1c4682ded97e7da893602ba7ae177a1073c9 ---
--- Nom du fichier: 3a1c4682ded97e7da893602ba7ae177a1073c9 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\00\44fb103f42b2f10aa0885eced2a0ac6b59bd71 ---
--- Nom du fichier: 44fb103f42b2f10aa0885eced2a0ac6b59bd71 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\00\49bea1dc3f3490411d07107f515558dc957820 ---
--- Nom du fichier: 49bea1dc3f3490411d07107f515558dc957820 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\00\943a32c9990c73abb26c685a1351eb3686e85f ---
--- Nom du fichier: 943a32c9990c73abb26c685a1351eb3686e85f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\00\e062f6abba12adf464379007e746155a665679 ---
--- Nom du fichier: e062f6abba12adf464379007e746155a665679 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\00\f5a50ba86b2c7990e89b2b25e5ad05bc3c0fb8 ---
--- Nom du fichier: f5a50ba86b2c7990e89b2b25e5ad05bc3c0fb8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\01\18854ed1a09f945b69d8b95051fe725fbac3e2 ---
--- Nom du fichier: 18854ed1a09f945b69d8b95051fe725fbac3e2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\01\4ce05193c0a5c42f7392475ae5d402d2159158 ---
--- Nom du fichier: 4ce05193c0a5c42f7392475ae5d402d2159158 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\01\5f68ec47b8ae37550e940a8b5975204138d0c6 ---
--- Nom du fichier: 5f68ec47b8ae37550e940a8b5975204138d0c6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\01\6ced489824b4e44884767ec3d65810811f7bf9 ---
--- Nom du fichier: 6ced489824b4e44884767ec3d65810811f7bf9 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\01\96df65549c89c2ab7fa6f1d4f4ceda77a5537b ---
--- Nom du fichier: 96df65549c89c2ab7fa6f1d4f4ceda77a5537b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\01\d92740b247d1b67d09089793cc17adc84bb761 ---
--- Nom du fichier: d92740b247d1b67d09089793cc17adc84bb761 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\02\2096afed18a9b33eb2566218425f1935a6ced4 ---
--- Nom du fichier: 2096afed18a9b33eb2566218425f1935a6ced4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\02\2477e5a17d98bf9d7608b695269d3f5d421cf8 ---
--- Nom du fichier: 2477e5a17d98bf9d7608b695269d3f5d421cf8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\02\42237eddb215d2d26e8a60fdf484637f32a09a ---
--- Nom du fichier: 42237eddb215d2d26e8a60fdf484637f32a09a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\02\52b56d55e2778598eeb21ac8d839bd41c8a199 ---
--- Nom du fichier: 52b56d55e2778598eeb21ac8d839bd41c8a199 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\02\580d1eeadd957ffe1f067775bce8b6fac86ac8 ---
--- Nom du fichier: 580d1eeadd957ffe1f067775bce8b6fac86ac8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\02\79eddd4c0c12706953ad8e3445b9d3ad22c017 ---
--- Nom du fichier: 79eddd4c0c12706953ad8e3445b9d3ad22c017 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\03\0635031326d27cdfc3bd6dec6bcd540ee895a2 ---
--- Nom du fichier: 0635031326d27cdfc3bd6dec6bcd540ee895a2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\03\1458e905c5252b50d818dd449f450338f5ab8f ---
--- Nom du fichier: 1458e905c5252b50d818dd449f450338f5ab8f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\03\3441e61cfa91c629522481503f3d6d5718719a ---
--- Nom du fichier: 3441e61cfa91c629522481503f3d6d5718719a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\03\48115d411ecb8613cfc0dd36e9cda3f522f493 ---
--- Nom du fichier: 48115d411ecb8613cfc0dd36e9cda3f522f493 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\03\8bc5b720382210ceb0d81ef5e2cf778b82ff72 ---
--- Nom du fichier: 8bc5b720382210ceb0d81ef5e2cf778b82ff72 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\03\91547331050c842518502ea7ac1894f3446a09 ---
--- Nom du fichier: 91547331050c842518502ea7ac1894f3446a09 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\03\cafe554b9b1a2f0be5a416bbee2b948e11eb93 ---
--- Nom du fichier: cafe554b9b1a2f0be5a416bbee2b948e11eb93 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\03\d5db6999d2f3a44f8499b53be00ef0164d6f16 ---
--- Nom du fichier: d5db6999d2f3a44f8499b53be00ef0164d6f16 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\03\eb8bea50b3c4b1f13f3a02e0d7128910b9d654 ---
--- Nom du fichier: eb8bea50b3c4b1f13f3a02e0d7128910b9d654 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\04\11d488bf557a5f57d1e3ebe2658e11f63628c0 ---
--- Nom du fichier: 11d488bf557a5f57d1e3ebe2658e11f63628c0 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\04\4149e7244698b83a8a6790601b6584295294c3 ---
--- Nom du fichier: 4149e7244698b83a8a6790601b6584295294c3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\04\878ea031b8e9d9d7c8c284453602579d4120a7 ---
--- Nom du fichier: 878ea031b8e9d9d7c8c284453602579d4120a7 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\04\ff36e47f25e8b62fe02bb669f6f67c27cb9714 ---
--- Nom du fichier: ff36e47f25e8b62fe02bb669f6f67c27cb9714 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\05\141ff814b9e627682a9ddc0ba5a915f421df4f ---
--- Nom du fichier: 141ff814b9e627682a9ddc0ba5a915f421df4f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\05\2ff044392c209f1cf208ac9b2be4b96ec66075 ---
--- Nom du fichier: 2ff044392c209f1cf208ac9b2be4b96ec66075 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\05\44ffb381c9cf8b3c6eb684fe432efa074955d2 ---
--- Nom du fichier: 44ffb381c9cf8b3c6eb684fe432efa074955d2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\05\4afb08424b982c49e5bef8a3a3acfb4dd2ee69 ---
--- Nom du fichier: 4afb08424b982c49e5bef8a3a3acfb4dd2ee69 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\05\69dff5659f871f6990eb1dec550b46158f6c4d ---
--- Nom du fichier: 69dff5659f871f6990eb1dec550b46158f6c4d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\05\d2f7d29c5b05f8423114e66a50ff1e73a4ae81 ---
--- Nom du fichier: d2f7d29c5b05f8423114e66a50ff1e73a4ae81 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\06\01d485df3e7ad608030bffedd25596b2b88b2f ---
--- Nom du fichier: 01d485df3e7ad608030bffedd25596b2b88b2f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\06\069f6ea39a472608a2ea44564a02d135563f72 ---
--- Nom du fichier: 069f6ea39a472608a2ea44564a02d135563f72 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\06\096a89a48ab72557e870063945f543a8ce4e9a ---
--- Nom du fichier: 096a89a48ab72557e870063945f543a8ce4e9a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\06\39593f7d262346df3e350b33e238cee225b5cc ---
--- Nom du fichier: 39593f7d262346df3e350b33e238cee225b5cc ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\06\43c9dcc3e8d20ab0e39d30e4989c8a3302269e ---
--- Nom du fichier: 43c9dcc3e8d20ab0e39d30e4989c8a3302269e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\06\77ee788e2ad8ffa84366577752127069110d94 ---
--- Nom du fichier: 77ee788e2ad8ffa84366577752127069110d94 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\06\e162b4e28840e52d9274d77a8d8c646578e5e1 ---
--- Nom du fichier: e162b4e28840e52d9274d77a8d8c646578e5e1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\07\0db13c18ae41317a0ae32cfb9be52b5541829b ---
--- Nom du fichier: 0db13c18ae41317a0ae32cfb9be52b5541829b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\07\1119d5978bd34ea5b3481632910686f822ce1c ---
--- Nom du fichier: 1119d5978bd34ea5b3481632910686f822ce1c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\07\aa67b38939480b60614c630584ffa4e5a2b8b9 ---
--- Nom du fichier: aa67b38939480b60614c630584ffa4e5a2b8b9 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\07\b2b0a9152b98886c266bdce136075b4df0e1ce ---
--- Nom du fichier: b2b0a9152b98886c266bdce136075b4df0e1ce ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\07\b99e755172d0e4e8fddba4e5cdbba1f38c6803 ---
--- Nom du fichier: b99e755172d0e4e8fddba4e5cdbba1f38c6803 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\07\c485d19be0dd428d478a4015ba4fdf87a085a1 ---
--- Nom du fichier: c485d19be0dd428d478a4015ba4fdf87a085a1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\07\deb36adc21379a1f16c2020b5d4fe1aa266c1e ---
--- Nom du fichier: deb36adc21379a1f16c2020b5d4fe1aa266c1e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\08\1c259eefe15d09158d7227d2b71e6f0a504042 ---
--- Nom du fichier: 1c259eefe15d09158d7227d2b71e6f0a504042 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\08\2555a30c80c52372adba832a0c0d550fa9b320 ---
--- Nom du fichier: 2555a30c80c52372adba832a0c0d550fa9b320 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\08\52c0a6ceba9351a7a24ce31a52bd1891ca934e ---
--- Nom du fichier: 52c0a6ceba9351a7a24ce31a52bd1891ca934e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\08\61550922d63a45e13659481532bf60d9df23b7 ---
--- Nom du fichier: 61550922d63a45e13659481532bf60d9df23b7 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\08\717fa6a0351617a18bc1cad7bc8d40ece10149 ---
--- Nom du fichier: 717fa6a0351617a18bc1cad7bc8d40ece10149 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\08\7b6e1bacde90cfe77242e398fda5738439dda4 ---
--- Nom du fichier: 7b6e1bacde90cfe77242e398fda5738439dda4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\08\9f99cdf88fb16d3b7a0704e40c49ffa99e681f ---
--- Nom du fichier: 9f99cdf88fb16d3b7a0704e40c49ffa99e681f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\08\ac7794f93016e1810ad2f0f5e91729f93f16c4 ---
--- Nom du fichier: ac7794f93016e1810ad2f0f5e91729f93f16c4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\08\ae3f00be91a5031957509db508ed34951a114b ---
--- Nom du fichier: ae3f00be91a5031957509db508ed34951a114b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\08\bf2c9b1148cf0f41c1725f08e39f5585199f0e ---
--- Nom du fichier: bf2c9b1148cf0f41c1725f08e39f5585199f0e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\08\d009aa8f512267f8c0e69ed56d101673abc9a6 ---
--- Nom du fichier: d009aa8f512267f8c0e69ed56d101673abc9a6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\09\0dfb367b28cf6bbba23cd231f7385e0f2d5579 ---
--- Nom du fichier: 0dfb367b28cf6bbba23cd231f7385e0f2d5579 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\09\1d13cbc3ad1f24f8eed7bd1367bb8ad544c68e ---
--- Nom du fichier: 1d13cbc3ad1f24f8eed7bd1367bb8ad544c68e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\09\25f4383cc58c128807c6155e61ce60cc3e35ed ---
--- Nom du fichier: 25f4383cc58c128807c6155e61ce60cc3e35ed ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\09\4d2fb69cd1119c0aa55834ea577e4bc7e99750 ---
--- Nom du fichier: 4d2fb69cd1119c0aa55834ea577e4bc7e99750 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\09\6f39cbd83a5c40f74c2c955b496d28d1113df1 ---
--- Nom du fichier: 6f39cbd83a5c40f74c2c955b496d28d1113df1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\09\84d3900a18eab7d1c900fcac1c50e1f58b4949 ---
--- Nom du fichier: 84d3900a18eab7d1c900fcac1c50e1f58b4949 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\09\eebf8d53ee62b8bf0064545599a0d396143d50 ---
--- Nom du fichier: eebf8d53ee62b8bf0064545599a0d396143d50 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\09\f3326ae40f811be93e6cfa0dea5435a1955b85 ---
--- Nom du fichier: f3326ae40f811be93e6cfa0dea5435a1955b85 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\09\f5baa8c597d58f6fcc35d9f3a22282030c1c9e ---
--- Nom du fichier: f5baa8c597d58f6fcc35d9f3a22282030c1c9e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0a\1f39bce0d196a3d304d3dd12e2a3209ade4265 ---
--- Nom du fichier: 1f39bce0d196a3d304d3dd12e2a3209ade4265 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0a\4ee3573cab0b1f1460863645e1669e6e978d84 ---
--- Nom du fichier: 4ee3573cab0b1f1460863645e1669e6e978d84 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0a\be6bd0a70ee9150293bebe484c08f62be1890e ---
--- Nom du fichier: be6bd0a70ee9150293bebe484c08f62be1890e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0a\ebce21d36870fb424593f1da4a900be0f1d2ee ---
--- Nom du fichier: ebce21d36870fb424593f1da4a900be0f1d2ee ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0b\59d9fbf661b6e96616d4e089d989ebc57adb4b ---
--- Nom du fichier: 59d9fbf661b6e96616d4e089d989ebc57adb4b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0b\67534ce55d1a89d34412cc3b37ff03bd0c384a ---
--- Nom du fichier: 67534ce55d1a89d34412cc3b37ff03bd0c384a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0b\80c0a5abec422b00cabcaa284099b449c598c5 ---
--- Nom du fichier: 80c0a5abec422b00cabcaa284099b449c598c5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0b\8747711fb9b8e3cb6a598d62bbb8f7ce3d927c ---
--- Nom du fichier: 8747711fb9b8e3cb6a598d62bbb8f7ce3d927c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0b\92a5e94266d0a031c351aa1cce4e66b8d3b3a5 ---
--- Nom du fichier: 92a5e94266d0a031c351aa1cce4e66b8d3b3a5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0b\a43edb5b77328acc4199b1539c3041e7c1c74e ---
--- Nom du fichier: a43edb5b77328acc4199b1539c3041e7c1c74e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0b\b1d5db22e6a88648cef855b691ab0b3d1ce96f ---
--- Nom du fichier: b1d5db22e6a88648cef855b691ab0b3d1ce96f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0b\c410cde0ad3d51f7009157034c957643cfd853 ---
--- Nom du fichier: c410cde0ad3d51f7009157034c957643cfd853 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0b\df20a9a848fe3547f38deea6a9e0266099a4f1 ---
--- Nom du fichier: df20a9a848fe3547f38deea6a9e0266099a4f1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0b\fe000b0c2273e0eb16867e725a6dcd9eff97a4 ---
--- Nom du fichier: fe000b0c2273e0eb16867e725a6dcd9eff97a4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0c\2024dbaf96aa5485b8837c29d153e7bbc13166 ---
--- Nom du fichier: 2024dbaf96aa5485b8837c29d153e7bbc13166 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0c\228e310d1a2244a543ca20033b296e4c202b07 ---
--- Nom du fichier: 228e310d1a2244a543ca20033b296e4c202b07 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0c\6d141286406b193e3b795b9b34c35dff14d447 ---
--- Nom du fichier: 6d141286406b193e3b795b9b34c35dff14d447 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0c\6e2e8f82f617b4944da84a27739ba012a14ac8 ---
--- Nom du fichier: 6e2e8f82f617b4944da84a27739ba012a14ac8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0c\a7793e4dbfd454e88ea8043913e709d4266c7a ---
--- Nom du fichier: a7793e4dbfd454e88ea8043913e709d4266c7a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0c\b53ba8eb079b145198ed8f953108673f7aed25 ---
--- Nom du fichier: b53ba8eb079b145198ed8f953108673f7aed25 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0c\c18c84e5e1aa5e1f52c0ff3df92fa382f8eb92 ---
--- Nom du fichier: c18c84e5e1aa5e1f52c0ff3df92fa382f8eb92 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0c\d1f4c7b8e9239037e701dc460b5643bd24dee4 ---
--- Nom du fichier: d1f4c7b8e9239037e701dc460b5643bd24dee4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0c\d36057337f71ac5b725601b49f324edf1e096d ---
--- Nom du fichier: d36057337f71ac5b725601b49f324edf1e096d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0c\eeafe2a3179a2a4762247a5452236f56c05728 ---
--- Nom du fichier: eeafe2a3179a2a4762247a5452236f56c05728 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0d\108d12e0bb989af0e2b7cb097f6fc46bd0e602 ---
--- Nom du fichier: 108d12e0bb989af0e2b7cb097f6fc46bd0e602 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0d\3290a7f4ef3247f2c4342b5e523e0b195e043c ---
--- Nom du fichier: 3290a7f4ef3247f2c4342b5e523e0b195e043c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0d\723cc4ead6e8f723648494f14c45a76de1d529 ---
--- Nom du fichier: 723cc4ead6e8f723648494f14c45a76de1d529 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0d\770112aac818c27b7aaee8681b855f7ff50cfd ---
--- Nom du fichier: 770112aac818c27b7aaee8681b855f7ff50cfd ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0d\8185e131b6f8ba3a44e4d378f864eba5583499 ---
--- Nom du fichier: 8185e131b6f8ba3a44e4d378f864eba5583499 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0d\ac602ccecd8c1c21c42c9a8f3fb86c743185f0 ---
--- Nom du fichier: ac602ccecd8c1c21c42c9a8f3fb86c743185f0 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0d\e53408223bd0281c2e80bbb1bffded60e3d735 ---
--- Nom du fichier: e53408223bd0281c2e80bbb1bffded60e3d735 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0d\e963819533bba9644bf3ccf6c9c8ac08e4e8b2 ---
--- Nom du fichier: e963819533bba9644bf3ccf6c9c8ac08e4e8b2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0d\f0ce566b060ff900bb4a2cbd0cb862f20d80d5 ---
--- Nom du fichier: f0ce566b060ff900bb4a2cbd0cb862f20d80d5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0e\04b4f14fba28faf7c6859374deb943ae58a742 ---
--- Nom du fichier: 04b4f14fba28faf7c6859374deb943ae58a742 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0e\1b71263a6e009328a57d7b1b570f6baed5883c ---
--- Nom du fichier: 1b71263a6e009328a57d7b1b570f6baed5883c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0e\1f06f213c3a88b3d957477a87e8adb24329a4e ---
--- Nom du fichier: 1f06f213c3a88b3d957477a87e8adb24329a4e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0e\1f9a8b52bfe0eef88c75b3235e464c08ded84a ---
--- Nom du fichier: 1f9a8b52bfe0eef88c75b3235e464c08ded84a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0e\67d9c933d856ff9088366ad0ba7862981ceef3 ---
--- Nom du fichier: 67d9c933d856ff9088366ad0ba7862981ceef3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0e\71c57e8ba647c26dcf07922bfcafc74988e86e ---
--- Nom du fichier: 71c57e8ba647c26dcf07922bfcafc74988e86e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0e\c7c86fb8c74f07204467c20f18d9c4800bed81 ---
--- Nom du fichier: c7c86fb8c74f07204467c20f18d9c4800bed81 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0e\da6487db8c8b753a1f9569307a32a44d7ccfbf ---
--- Nom du fichier: da6487db8c8b753a1f9569307a32a44d7ccfbf ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0f\07b230287210019f8ca54ba12ce24229e062e9 ---
--- Nom du fichier: 07b230287210019f8ca54ba12ce24229e062e9 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0f\0a68e958732ecaaf58b75494658e87b0dbaabb ---
--- Nom du fichier: 0a68e958732ecaaf58b75494658e87b0dbaabb ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0f\584d316041418545cc75eb826874c59ef05d51 ---
--- Nom du fichier: 584d316041418545cc75eb826874c59ef05d51 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0f\61d6bef69891364a5605ad1ed8cdb6b40ff43c ---
--- Nom du fichier: 61d6bef69891364a5605ad1ed8cdb6b40ff43c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0f\6475ffed32072be43e26eab0b7a3258188bb1d ---
--- Nom du fichier: 6475ffed32072be43e26eab0b7a3258188bb1d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0f\857e5349e030ba1d94e4be1512accd241c37dc ---
--- Nom du fichier: 857e5349e030ba1d94e4be1512accd241c37dc ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0f\9141dea71887d3f71c52f9b7a99ee34f7a26b7 ---
--- Nom du fichier: 9141dea71887d3f71c52f9b7a99ee34f7a26b7 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0f\b2bedcca6566fabee6656643dcaa6271fae83e ---
--- Nom du fichier: b2bedcca6566fabee6656643dcaa6271fae83e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0f\b4df7316ad8406bd1d7b365c74e8bbbe4bc22b ---
--- Nom du fichier: b4df7316ad8406bd1d7b365c74e8bbbe4bc22b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0f\b4fc00fb637632e3bc3859a943c2179b265940 ---
--- Nom du fichier: b4fc00fb637632e3bc3859a943c2179b265940 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0f\c817facd668e69fc70b5d8551be83448be1142 ---
--- Nom du fichier: c817facd668e69fc70b5d8551be83448be1142 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0f\d71ca5f3d184755a435c11ab26d77f4fc18fd5 ---
--- Nom du fichier: d71ca5f3d184755a435c11ab26d77f4fc18fd5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\0f\e183b2bba21630e83accfdabf4590d08f1af86 ---
--- Nom du fichier: e183b2bba21630e83accfdabf4590d08f1af86 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\10\0f79c0b727701f699e564831c57fb1fb5245eb ---
--- Nom du fichier: 0f79c0b727701f699e564831c57fb1fb5245eb ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\10\6599f5a5369763f7d5e1c4b83b4236c40a27ec ---
--- Nom du fichier: 6599f5a5369763f7d5e1c4b83b4236c40a27ec ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\10\97fe963d96ec6e3ac728e09caf67675c2fe773 ---
--- Nom du fichier: 97fe963d96ec6e3ac728e09caf67675c2fe773 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\10\c62e379c5f8c02d8a1c3423346a03864960de0 ---
--- Nom du fichier: c62e379c5f8c02d8a1c3423346a03864960de0 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\10\d0c4793526a9c2aeefaa6f9e48b27f667faace ---
--- Nom du fichier: d0c4793526a9c2aeefaa6f9e48b27f667faace ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\10\e571842d043c1eca2c950fbb7944ee0062ddcf ---
--- Nom du fichier: e571842d043c1eca2c950fbb7944ee0062ddcf ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\10\ec4c620c166e075690a62fa180f7352bd3bfd6 ---
--- Nom du fichier: ec4c620c166e075690a62fa180f7352bd3bfd6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\11\04e25fe9d26919ad41ef150c11fd746064771f ---
--- Nom du fichier: 04e25fe9d26919ad41ef150c11fd746064771f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\11\36f8f7992946dc87abb290a6423e51a1560676 ---
--- Nom du fichier: 36f8f7992946dc87abb290a6423e51a1560676 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\11\a45daff795fd189994b198bf6e190168068446 ---
--- Nom du fichier: a45daff795fd189994b198bf6e190168068446 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\11\c6d9290ed4d2043d0c41d133ed0924c06d1ed1 ---
--- Nom du fichier: c6d9290ed4d2043d0c41d133ed0924c06d1ed1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\11\d846e8e7b888d35652d53889fe8dce338d137a ---
--- Nom du fichier: d846e8e7b888d35652d53889fe8dce338d137a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\11\d86a41881b2548402ef188cfaa4ac3bb8ee0e5 ---
--- Nom du fichier: d86a41881b2548402ef188cfaa4ac3bb8ee0e5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\12\2f11a7681dc0cc814d20a6cb4d0ff17bcfc60d ---
--- Nom du fichier: 2f11a7681dc0cc814d20a6cb4d0ff17bcfc60d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\12\5511b8c16220465dd18d58d91042c51608152d ---
--- Nom du fichier: 5511b8c16220465dd18d58d91042c51608152d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\12\56d9a95b335e79d15fa3211b0fe3e9b4c99748 ---
--- Nom du fichier: 56d9a95b335e79d15fa3211b0fe3e9b4c99748 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\12\68e66c645276f194cee7779cdbc33d4a24a397 ---
--- Nom du fichier: 68e66c645276f194cee7779cdbc33d4a24a397 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\12\70a5d44d0757d5751474843da7cfdcb6249617 ---
--- Nom du fichier: 70a5d44d0757d5751474843da7cfdcb6249617 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\12\990cc581a34210138690b880b8705bb0b18b9b ---
--- Nom du fichier: 990cc581a34210138690b880b8705bb0b18b9b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\12\c1e60639f08afaa7f351c563ef4dc37581f0ac ---
--- Nom du fichier: c1e60639f08afaa7f351c563ef4dc37581f0ac ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\12\e8745b891c46a42bc388ff9d55c4091ef6dd58 ---
--- Nom du fichier: e8745b891c46a42bc388ff9d55c4091ef6dd58 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\13\0609b900ce89c6243c59b7f414a2c7c61d5ace ---
--- Nom du fichier: 0609b900ce89c6243c59b7f414a2c7c61d5ace ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\13\06b42f69de740a8932dcd27fa400fcbb418105 ---
--- Nom du fichier: 06b42f69de740a8932dcd27fa400fcbb418105 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\13\12e51461ec3d7d8f7472b6557febcaf7d537c5 ---
--- Nom du fichier: 12e51461ec3d7d8f7472b6557febcaf7d537c5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\13\1f812a69708af61213c55832303ba1ec63dabe ---
--- Nom du fichier: 1f812a69708af61213c55832303ba1ec63dabe ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\13\4f13d040b495352e724a12c53698b123ffd3e5 ---
--- Nom du fichier: 4f13d040b495352e724a12c53698b123ffd3e5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\13\713c44b3a9df5977ef32d884246425816e4f3b ---
--- Nom du fichier: 713c44b3a9df5977ef32d884246425816e4f3b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\13\8c1af7a2fd18cbd0a6b089372d6718f9953a85 ---
--- Nom du fichier: 8c1af7a2fd18cbd0a6b089372d6718f9953a85 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\13\d0cda08d88529def07a0945b57e3c0b8f25420 ---
--- Nom du fichier: d0cda08d88529def07a0945b57e3c0b8f25420 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\13\f6fdc1c205224a8798863a1375da69ca93fb9c ---
--- Nom du fichier: f6fdc1c205224a8798863a1375da69ca93fb9c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\14\183b93a27c6ea73e6dbec56332f8e4fef44528 ---
--- Nom du fichier: 183b93a27c6ea73e6dbec56332f8e4fef44528 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\14\3004340409115023dc4c4068a55f068f412cb8 ---
--- Nom du fichier: 3004340409115023dc4c4068a55f068f412cb8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\14\4093256cba1c8d51503c1f3525a9f7c252102b ---
--- Nom du fichier: 4093256cba1c8d51503c1f3525a9f7c252102b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\14\5a1b4083e48531dff19c151dd2aa0912467670 ---
--- Nom du fichier: 5a1b4083e48531dff19c151dd2aa0912467670 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\14\7c867f343c1e34a62d0a6452e980f6e12bea2d ---
--- Nom du fichier: 7c867f343c1e34a62d0a6452e980f6e12bea2d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\14\a8ed2cdd61c2c2f4a21956dada3ee89d2327d4 ---
--- Nom du fichier: a8ed2cdd61c2c2f4a21956dada3ee89d2327d4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\14\dc128af33fe7476c7f72ef6e6130618e39364b ---
--- Nom du fichier: dc128af33fe7476c7f72ef6e6130618e39364b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\14\eb23935a237b1e1db152413c0ecfefaa072739 ---
--- Nom du fichier: eb23935a237b1e1db152413c0ecfefaa072739 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\14\ec1521a3c241e40ba31f3e76a18114b08d2dd4 ---
--- Nom du fichier: ec1521a3c241e40ba31f3e76a18114b08d2dd4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\15\5548a1478ee07b814dd8cf8b4b04b9d88e682b ---
--- Nom du fichier: 5548a1478ee07b814dd8cf8b4b04b9d88e682b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\15\56e4680244a6ce8a8de375129a5e518a97572a ---
--- Nom du fichier: 56e4680244a6ce8a8de375129a5e518a97572a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\15\70a1458350682012462acecf7d9a69c5e00f02 ---
--- Nom du fichier: 70a1458350682012462acecf7d9a69c5e00f02 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\15\bafc0159532167dc7a94d74531b14935c8d701 ---
--- Nom du fichier: bafc0159532167dc7a94d74531b14935c8d701 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\16\06610a71685a4d4b47c779c1e2e3863a0ee14d ---
--- Nom du fichier: 06610a71685a4d4b47c779c1e2e3863a0ee14d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\16\1d3edf3be5868e93941d555afd83c3edb19404 ---
--- Nom du fichier: 1d3edf3be5868e93941d555afd83c3edb19404 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\16\41cb41c8104db00d45489ad333a2eb5f38201b ---
--- Nom du fichier: 41cb41c8104db00d45489ad333a2eb5f38201b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\16\42cdffbb626bb1f83125783e94f73506cf18b5 ---
--- Nom du fichier: 42cdffbb626bb1f83125783e94f73506cf18b5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\16\44f330d479f0824dde28b3574368ff207c74a5 ---
--- Nom du fichier: 44f330d479f0824dde28b3574368ff207c74a5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\16\7331fc416cfe88da1795d8cd478845a93734be ---
--- Nom du fichier: 7331fc416cfe88da1795d8cd478845a93734be ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\16\7af2a33f201fe555d1a0b5161ea463693201ab ---
--- Nom du fichier: 7af2a33f201fe555d1a0b5161ea463693201ab ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\16\cef8cb68a7e7d29def82e76dcddec4e949ea31 ---
--- Nom du fichier: cef8cb68a7e7d29def82e76dcddec4e949ea31 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\16\e92e445697fcaed51b18938f8011adf02cda6d ---
--- Nom du fichier: e92e445697fcaed51b18938f8011adf02cda6d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\16\f5801903a8249ebc393fe354c98cd29101ab12 ---
--- Nom du fichier: f5801903a8249ebc393fe354c98cd29101ab12 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\17\53736bcf58a6e06015b9713e47965373b083d5 ---
--- Nom du fichier: 53736bcf58a6e06015b9713e47965373b083d5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\17\569b4c4a9b4b73fcab0d29871c7b4d3f081155 ---
--- Nom du fichier: 569b4c4a9b4b73fcab0d29871c7b4d3f081155 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\17\7a035a93deee169c0f672b68b359c1829793b2 ---
--- Nom du fichier: 7a035a93deee169c0f672b68b359c1829793b2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\17\ed939db53eb497ad7606ceb7e0c6d2019a5198 ---
--- Nom du fichier: ed939db53eb497ad7606ceb7e0c6d2019a5198 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\17\f9b4ba7643411b0fa065ab6a4e0225ea8c026b ---
--- Nom du fichier: f9b4ba7643411b0fa065ab6a4e0225ea8c026b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\18\092a64e6cac42de76e8bd5fa19826b9a9efbd4 ---
--- Nom du fichier: 092a64e6cac42de76e8bd5fa19826b9a9efbd4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\18\1e5aad7d0a481b18f895c1ee5af3654309c45a ---
--- Nom du fichier: 1e5aad7d0a481b18f895c1ee5af3654309c45a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\18\292143330ddd3bfa1ceb568c341eb1a65ae72a ---
--- Nom du fichier: 292143330ddd3bfa1ceb568c341eb1a65ae72a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\18\2981363258e8a13b174d8f72f20e2442123b25 ---
--- Nom du fichier: 2981363258e8a13b174d8f72f20e2442123b25 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\18\50f93b8ee44f9e8fa0246c4c924d176ebea7c3 ---
--- Nom du fichier: 50f93b8ee44f9e8fa0246c4c924d176ebea7c3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\18\67f872a14839ebf7122cfc1df27f4b62baac90 ---
--- Nom du fichier: 67f872a14839ebf7122cfc1df27f4b62baac90 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\18\6ed9164377f9b98a46cb3a450c599dfaae8e78 ---
--- Nom du fichier: 6ed9164377f9b98a46cb3a450c599dfaae8e78 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\18\7fb010b64ec656788d6a4f2e8e6283780ea602 ---
--- Nom du fichier: 7fb010b64ec656788d6a4f2e8e6283780ea602 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\18\82bb25ecf594da74f78d53f2d343ac3f459899 ---
--- Nom du fichier: 82bb25ecf594da74f78d53f2d343ac3f459899 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\18\c0bf42089ba017dc42a57f5d36ad6e14204ed5 ---
--- Nom du fichier: c0bf42089ba017dc42a57f5d36ad6e14204ed5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\18\cb96ac1929bdce8105c45bf7f0bc30a73b01e3 ---
--- Nom du fichier: cb96ac1929bdce8105c45bf7f0bc30a73b01e3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\18\ed14f3bc7968102148319b3f15e4da0af6bbd4 ---
--- Nom du fichier: ed14f3bc7968102148319b3f15e4da0af6bbd4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\19\08d6521a332d3274813dc0347bd446ddb98bb5 ---
--- Nom du fichier: 08d6521a332d3274813dc0347bd446ddb98bb5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\19\3d01447cc9a5c3c90b6f2d3788228cfe73462c ---
--- Nom du fichier: 3d01447cc9a5c3c90b6f2d3788228cfe73462c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\19\737fd4d58b99884c4c10f5fe4cbffd7cb5532b ---
--- Nom du fichier: 737fd4d58b99884c4c10f5fe4cbffd7cb5532b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\19\73ed8282996748d0dc38603d9b503fa9522d51 ---
--- Nom du fichier: 73ed8282996748d0dc38603d9b503fa9522d51 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\19\856de51cef87b7d72a1202257c584a660c15f4 ---
--- Nom du fichier: 856de51cef87b7d72a1202257c584a660c15f4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\19\89b7ddd07f6bad562daa9eff7235078790f7dc ---
--- Nom du fichier: 89b7ddd07f6bad562daa9eff7235078790f7dc ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\19\9090a67b450af38b5aa10c16f18a1f32303350 ---
--- Nom du fichier: 9090a67b450af38b5aa10c16f18a1f32303350 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\19\929a408dcb5735460f90c81339f903cc3e4937 ---
--- Nom du fichier: 929a408dcb5735460f90c81339f903cc3e4937 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\19\a2cb471574f86f79ef0d1c5c4a2111f95c6d68 ---
--- Nom du fichier: a2cb471574f86f79ef0d1c5c4a2111f95c6d68 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\19\b68524e08dbc675f85877cf98faa954a008db6 ---
--- Nom du fichier: b68524e08dbc675f85877cf98faa954a008db6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1a\5429b8d9f6dd7207aaef7f6e84b06735bd2bdb ---
--- Nom du fichier: 5429b8d9f6dd7207aaef7f6e84b06735bd2bdb ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1a\59cd1b6f7d778bd7df497d92d239b1ae1bdc3f ---
--- Nom du fichier: 59cd1b6f7d778bd7df497d92d239b1ae1bdc3f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1a\656fa654e600e918fac3799095751aa520e8ca ---
--- Nom du fichier: 656fa654e600e918fac3799095751aa520e8ca ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1a\bab60d32ee4423bc623d85fac35243b4acedfc ---
--- Nom du fichier: bab60d32ee4423bc623d85fac35243b4acedfc ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1a\cd99eb019adde761c65e9ae590d29c352e8352 ---
--- Nom du fichier: cd99eb019adde761c65e9ae590d29c352e8352 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1a\d10f748f8c88773fcebc1aeb9a2981fe378320 ---
--- Nom du fichier: d10f748f8c88773fcebc1aeb9a2981fe378320 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1b\16d923def52962aa269c1dfac041cd9e382334 ---
--- Nom du fichier: 16d923def52962aa269c1dfac041cd9e382334 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1b\1b205462f6903fe4eaf1935f4512e58427daa8 ---
--- Nom du fichier: 1b205462f6903fe4eaf1935f4512e58427daa8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1b\75e436d450d84527917c03e038ffe489389dd3 ---
--- Nom du fichier: 75e436d450d84527917c03e038ffe489389dd3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1b\797952b25ed033b93462d7e29f33254ece9595 ---
--- Nom du fichier: 797952b25ed033b93462d7e29f33254ece9595 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1b\a77afd7aadd8fd12a8b12ffcb0a703ccabe4f8 ---
--- Nom du fichier: a77afd7aadd8fd12a8b12ffcb0a703ccabe4f8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1b\caf3d87c2443cd0285be781d14f7734e4408eb ---
--- Nom du fichier: caf3d87c2443cd0285be781d14f7734e4408eb ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1b\e36b19f594649201090a864e63ab71b2abb66e ---
--- Nom du fichier: e36b19f594649201090a864e63ab71b2abb66e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1b\e636b8c25c4c860feaa9ebaf577ff69bf58425 ---
--- Nom du fichier: e636b8c25c4c860feaa9ebaf577ff69bf58425 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1b\f9b594309d48a2d985856235d92336b2470d31 ---
--- Nom du fichier: f9b594309d48a2d985856235d92336b2470d31 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1c\0c79e7a091d172f097888dd03b0ad7d9ab48c1 ---
--- Nom du fichier: 0c79e7a091d172f097888dd03b0ad7d9ab48c1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1c\1504ebf453039476dc65d3b560d4a9052d4bd1 ---
--- Nom du fichier: 1504ebf453039476dc65d3b560d4a9052d4bd1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1c\7bb954e7d10105ccd2af5009e2dd55356b84de ---
--- Nom du fichier: 7bb954e7d10105ccd2af5009e2dd55356b84de ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1c\c90b1e076206ad3d65d519e13ea89d032a122a ---
--- Nom du fichier: c90b1e076206ad3d65d519e13ea89d032a122a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1c\ebf435abf34a8498a6a817f9503ef203587b1c ---
--- Nom du fichier: ebf435abf34a8498a6a817f9503ef203587b1c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1d\73a3be32655219ead3801736e3010d2c417b20 ---
--- Nom du fichier: 73a3be32655219ead3801736e3010d2c417b20 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1d\7e17f6467734044d437e4d41e5c9a4efb0fc98 ---
--- Nom du fichier: 7e17f6467734044d437e4d41e5c9a4efb0fc98 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1d\91a1dc7a7814e43dc1d6f653f56f05986b045e ---
--- Nom du fichier: 91a1dc7a7814e43dc1d6f653f56f05986b045e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1d\9c9d07faeb477b627e4bc70839b766aa66f2a9 ---
--- Nom du fichier: 9c9d07faeb477b627e4bc70839b766aa66f2a9 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1d\af1b0341f7564d36854929db44d944e548f8f5 ---
--- Nom du fichier: af1b0341f7564d36854929db44d944e548f8f5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1d\bd4cd731990b456c88fe9da82a8bad90b55a89 ---
--- Nom du fichier: bd4cd731990b456c88fe9da82a8bad90b55a89 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1d\fbdb28978a31f0b885ad804678331cb409e585 ---
--- Nom du fichier: fbdb28978a31f0b885ad804678331cb409e585 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1e\36d88542b89e452e4223a6ed06effde12ab379 ---
--- Nom du fichier: 36d88542b89e452e4223a6ed06effde12ab379 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1e\87564546fde6b4340d7f84f3ea85c726f9fe32 ---
--- Nom du fichier: 87564546fde6b4340d7f84f3ea85c726f9fe32 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1e\b5c0fd50ebf5a25426579cac7869f7dd52ad9a ---
--- Nom du fichier: b5c0fd50ebf5a25426579cac7869f7dd52ad9a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1e\bdbacbcf55955a64e55a8b2e9c7766cbdbcc55 ---
--- Nom du fichier: bdbacbcf55955a64e55a8b2e9c7766cbdbcc55 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1e\c35cb2b6d3b2f0b1b86e1b3daa2ffdc94fa018 ---
--- Nom du fichier: c35cb2b6d3b2f0b1b86e1b3daa2ffdc94fa018 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1f\0ad0815a8a85100ea0ee5d006a877d10fa794e ---
--- Nom du fichier: 0ad0815a8a85100ea0ee5d006a877d10fa794e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1f\467faeefd8b1375ef60d741831790659399549 ---
--- Nom du fichier: 467faeefd8b1375ef60d741831790659399549 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1f\7d9b0543e37144d17f8276f54565c433ea861c ---
--- Nom du fichier: 7d9b0543e37144d17f8276f54565c433ea861c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1f\95d8a048d2455c5dcd75d6e02e03194f113850 ---
--- Nom du fichier: 95d8a048d2455c5dcd75d6e02e03194f113850 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1f\9b8d62e0cd27434ee4f057fe038d6a380388e1 ---
--- Nom du fichier: 9b8d62e0cd27434ee4f057fe038d6a380388e1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1f\9e4d0015689f550fe9c40c6b0f87fb6453fd25 ---
--- Nom du fichier: 9e4d0015689f550fe9c40c6b0f87fb6453fd25 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1f\ac0f14c91c0a00c6bcff07bc59879f48e0f4c8 ---
--- Nom du fichier: ac0f14c91c0a00c6bcff07bc59879f48e0f4c8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1f\b445bf54428c6004924b00e4e48acd6e335f52 ---
--- Nom du fichier: b445bf54428c6004924b00e4e48acd6e335f52 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1f\d77bdb31820ea955b5668e124330d911ffbf40 ---
--- Nom du fichier: d77bdb31820ea955b5668e124330d911ffbf40 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1f\e95775126ee9335829a4554db1c94004a30635 ---
--- Nom du fichier: e95775126ee9335829a4554db1c94004a30635 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\1f\f4e58da4d950dfd309e30b104b57671ad0a796 ---
--- Nom du fichier: f4e58da4d950dfd309e30b104b57671ad0a796 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\20\11452c7ce25edd6be88b4aa2f3179ad2555acd ---
--- Nom du fichier: 11452c7ce25edd6be88b4aa2f3179ad2555acd ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\20\181ffe500345434c36f4dcb529ce0916521362 ---
--- Nom du fichier: 181ffe500345434c36f4dcb529ce0916521362 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\20\5a9a71559685abd55df1eb2365866f05dd56b5 ---
--- Nom du fichier: 5a9a71559685abd55df1eb2365866f05dd56b5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\20\5cfe978952487510ac6acb0ee9c214f5ba0d08 ---
--- Nom du fichier: 5cfe978952487510ac6acb0ee9c214f5ba0d08 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\20\6d359e0b6ebc14f228297d07544317f79475b5 ---
--- Nom du fichier: 6d359e0b6ebc14f228297d07544317f79475b5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\20\ba35504cabf1cc48fdb1d1054e024d844b067a ---
--- Nom du fichier: ba35504cabf1cc48fdb1d1054e024d844b067a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\20\f34f6faba856ff87a4c0626497581f8e0a7283 ---
--- Nom du fichier: f34f6faba856ff87a4c0626497581f8e0a7283 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\21\30b712fa4e24c945ab53b358e1bb0da235df47 ---
--- Nom du fichier: 30b712fa4e24c945ab53b358e1bb0da235df47 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\21\5ab1ef40096e45c591829f799b33e35849915f ---
--- Nom du fichier: 5ab1ef40096e45c591829f799b33e35849915f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\21\795b4bf1dc2b5ec4804b63abb0c6e07ffbf153 ---
--- Nom du fichier: 795b4bf1dc2b5ec4804b63abb0c6e07ffbf153 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\21\9a243be128bf30e8fc6b4b940534e326d41037 ---
--- Nom du fichier: 9a243be128bf30e8fc6b4b940534e326d41037 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\21\bb78970e44ccf680d076c2a329fcb12ffb96a7 ---
--- Nom du fichier: bb78970e44ccf680d076c2a329fcb12ffb96a7 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\21\c41dcac6e16923187447c6b0d757185f32bfa1 ---
--- Nom du fichier: c41dcac6e16923187447c6b0d757185f32bfa1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\21\ed1d1e5fad602be90bbda3cc2779b8d0e1fe80 ---
--- Nom du fichier: ed1d1e5fad602be90bbda3cc2779b8d0e1fe80 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\21\f223c91ab78bf96580e0a3b1f23843607b3e08 ---
--- Nom du fichier: f223c91ab78bf96580e0a3b1f23843607b3e08 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\22\04980269bbf3f37e81b7f988f79d92d134359b ---
--- Nom du fichier: 04980269bbf3f37e81b7f988f79d92d134359b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\22\55ceff38ba0035872ffc292bedd1e7bb0117ea ---
--- Nom du fichier: 55ceff38ba0035872ffc292bedd1e7bb0117ea ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\22\9618c3892a010a7944a206382fbc5baa092da8 ---
--- Nom du fichier: 9618c3892a010a7944a206382fbc5baa092da8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\22\b6329e5b45560a1b5d3fda42422f18c58711c1 ---
--- Nom du fichier: b6329e5b45560a1b5d3fda42422f18c58711c1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\22\bfbb5d4aa3ab65303a63cf09d0a8556859010e ---
--- Nom du fichier: bfbb5d4aa3ab65303a63cf09d0a8556859010e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\22\c0ffd0ad742d7f30e91938cc993a3cee81d1fc ---
--- Nom du fichier: c0ffd0ad742d7f30e91938cc993a3cee81d1fc ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\22\fdb1ac48290ddf3ca2e39de30ae74c8c024428 ---
--- Nom du fichier: fdb1ac48290ddf3ca2e39de30ae74c8c024428 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\23\3404f07ce03d354efb3dd673bcda6fcce03135 ---
--- Nom du fichier: 3404f07ce03d354efb3dd673bcda6fcce03135 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\23\454aee5a89fb32eee821a8718139b65c527b8c ---
--- Nom du fichier: 454aee5a89fb32eee821a8718139b65c527b8c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\23\8a687d677695507204b1a0db594c20ff6980d9 ---
--- Nom du fichier: 8a687d677695507204b1a0db594c20ff6980d9 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\23\b9ee9e57a8f88361e910c7c505679b1bbd1a51 ---
--- Nom du fichier: b9ee9e57a8f88361e910c7c505679b1bbd1a51 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\23\b9f94dd2a587e6f1466ff769ca8d98410dccd9 ---
--- Nom du fichier: b9f94dd2a587e6f1466ff769ca8d98410dccd9 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\23\cb0ca4dd698f2b3c5b2bb84f7cc7e9a3be019a ---
--- Nom du fichier: cb0ca4dd698f2b3c5b2bb84f7cc7e9a3be019a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\23\d2efc626a277ce1b7fb16f96a9b3e5fb107d08 ---
--- Nom du fichier: d2efc626a277ce1b7fb16f96a9b3e5fb107d08 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\24\10af06d034f30c2646b89e144d2c9a3740eecc ---
--- Nom du fichier: 10af06d034f30c2646b89e144d2c9a3740eecc ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\24\25f6d6691171a158a5d997c8665ce2a46ae5bf ---
--- Nom du fichier: 25f6d6691171a158a5d997c8665ce2a46ae5bf ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\24\50eef22edd8ac0e7a9d0d5a9818617505b06a3 ---
--- Nom du fichier: 50eef22edd8ac0e7a9d0d5a9818617505b06a3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\24\684f68666a968b1ce8626f3904e87903c7e259 ---
--- Nom du fichier: 684f68666a968b1ce8626f3904e87903c7e259 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\24\9180719e8eaa5944db0c74ae3868b86346160b ---
--- Nom du fichier: 9180719e8eaa5944db0c74ae3868b86346160b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\24\9623afae73cd4d1b2222339275e7814481e38b ---
--- Nom du fichier: 9623afae73cd4d1b2222339275e7814481e38b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\24\a366fdc3ec453bd5941c93b8d5813dbea8ef1f ---
--- Nom du fichier: a366fdc3ec453bd5941c93b8d5813dbea8ef1f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\24\d953cfb5758253aeed427c63dab8b582809cb4 ---
--- Nom du fichier: d953cfb5758253aeed427c63dab8b582809cb4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\24\e0ee14978b3f82b59a2bd15e8f6e8b87784493 ---
--- Nom du fichier: e0ee14978b3f82b59a2bd15e8f6e8b87784493 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\25\9435f70811361eb25e6c42e7a4a9d3c42a3b4d ---
--- Nom du fichier: 9435f70811361eb25e6c42e7a4a9d3c42a3b4d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\25\9c177ba5bb4258487445e403eb0df6b348fb3a ---
--- Nom du fichier: 9c177ba5bb4258487445e403eb0df6b348fb3a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\25\bb6f344360c1f121b2f652ccb19f5804ba27ba ---
--- Nom du fichier: bb6f344360c1f121b2f652ccb19f5804ba27ba ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\25\c7cc0941fc4233552c2fd20c562b6c11eb277c ---
--- Nom du fichier: c7cc0941fc4233552c2fd20c562b6c11eb277c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\25\dc4cf429703412aa546e786705d712c1492a90 ---
--- Nom du fichier: dc4cf429703412aa546e786705d712c1492a90 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\26\140988346d0f96c7d13e5c32c0ac94c04a54e4 ---
--- Nom du fichier: 140988346d0f96c7d13e5c32c0ac94c04a54e4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\26\4c61e3f35e9d1de3afd990877ba83b59d0c35d ---
--- Nom du fichier: 4c61e3f35e9d1de3afd990877ba83b59d0c35d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\26\5fc8c1f6584d5e83c229a97cb5a10e482501f6 ---
--- Nom du fichier: 5fc8c1f6584d5e83c229a97cb5a10e482501f6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\26\80868025db26ac75ae40930d5d030a9d1f9740 ---
--- Nom du fichier: 80868025db26ac75ae40930d5d030a9d1f9740 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\26\a8355c2e2bb9be25452614c5d4924816654462 ---
--- Nom du fichier: a8355c2e2bb9be25452614c5d4924816654462 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\26\af83c1ffd2ca32449b41530d3770c352d48022 ---
--- Nom du fichier: af83c1ffd2ca32449b41530d3770c352d48022 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\26\b9e59f9855a7341b5f6c1a50914e4ffee5a446 ---
--- Nom du fichier: b9e59f9855a7341b5f6c1a50914e4ffee5a446 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\26\e01a57a7a4948b12742f01cda62e98b90d8e65 ---
--- Nom du fichier: e01a57a7a4948b12742f01cda62e98b90d8e65 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\26\e83be69546f6ba487ccf8ee0bb2ba30e8bb529 ---
--- Nom du fichier: e83be69546f6ba487ccf8ee0bb2ba30e8bb529 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\27\0038125d45d74054ed3da581d55335cf3bc6ed ---
--- Nom du fichier: 0038125d45d74054ed3da581d55335cf3bc6ed ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\27\696847768ae00fda7cf57ec09fb7fd26ebd785 ---
--- Nom du fichier: 696847768ae00fda7cf57ec09fb7fd26ebd785 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\27\987c4888ea53b93c05878ed28714000f576019 ---
--- Nom du fichier: 987c4888ea53b93c05878ed28714000f576019 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\27\b0f4942fc275f28539445f9244ac647dd00f09 ---
--- Nom du fichier: b0f4942fc275f28539445f9244ac647dd00f09 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\27\c228605f67f8b56ed146d3824e5e5e7334b364 ---
--- Nom du fichier: c228605f67f8b56ed146d3824e5e5e7334b364 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\27\da93ce30b9894ddde3a6fed04d3fc8464eb262 ---
--- Nom du fichier: da93ce30b9894ddde3a6fed04d3fc8464eb262 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\28\41456c4ecd7bead060147c33202311ad827bc0 ---
--- Nom du fichier: 41456c4ecd7bead060147c33202311ad827bc0 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\28\725b32c14a6c410400c58c8794bdb72a67bb34 ---
--- Nom du fichier: 725b32c14a6c410400c58c8794bdb72a67bb34 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\28\7cf45f24b6339e20119f2f94b168e574e593ff ---
--- Nom du fichier: 7cf45f24b6339e20119f2f94b168e574e593ff ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\28\96922485cca5b9bc0cc5094206ca668bf47aae ---
--- Nom du fichier: 96922485cca5b9bc0cc5094206ca668bf47aae ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\28\9830561457fcd966fd6a387405254265882d64 ---
--- Nom du fichier: 9830561457fcd966fd6a387405254265882d64 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\28\b8030ac9b718227578f6d3e57c264c1140b4ea ---
--- Nom du fichier: b8030ac9b718227578f6d3e57c264c1140b4ea ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\28\d3bd766a8aff362cf81d045be9b9a1691adc3c ---
--- Nom du fichier: d3bd766a8aff362cf81d045be9b9a1691adc3c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\29\1d3289dde5839aea7843e6c91fa6fb5932cbf8 ---
--- Nom du fichier: 1d3289dde5839aea7843e6c91fa6fb5932cbf8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\29\1dab24954a2302ffd6dd06fb58efdc9339acd3 ---
--- Nom du fichier: 1dab24954a2302ffd6dd06fb58efdc9339acd3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\29\28687e09ba3bd0dd11efc37a69b02b65708fd4 ---
--- Nom du fichier: 28687e09ba3bd0dd11efc37a69b02b65708fd4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\29\31ab12b7a11ade67d2a50294bbf6514815d06f ---
--- Nom du fichier: 31ab12b7a11ade67d2a50294bbf6514815d06f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\29\4b04efa7dd940bdb5f19b9abb87abd0d0f9495 ---
--- Nom du fichier: 4b04efa7dd940bdb5f19b9abb87abd0d0f9495 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\29\7409aa0f0f81870e1c36e4425a2370f43e86c9 ---
--- Nom du fichier: 7409aa0f0f81870e1c36e4425a2370f43e86c9 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\29\beb7a02e536277ec42a72c46988d4e2bb2f91e ---
--- Nom du fichier: beb7a02e536277ec42a72c46988d4e2bb2f91e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\29\d107b8884b764f2eac31f43768a335b84b1652 ---
--- Nom du fichier: d107b8884b764f2eac31f43768a335b84b1652 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\29\d1e8e9871341d8a8d1baaf636282ad4e3c140f ---
--- Nom du fichier: d1e8e9871341d8a8d1baaf636282ad4e3c140f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2a\0e36a676428450c25fd26758855d9a08894c48 ---
--- Nom du fichier: 0e36a676428450c25fd26758855d9a08894c48 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2a\20aafceacbfe27ca449fd201b695e119fe961b ---
--- Nom du fichier: 20aafceacbfe27ca449fd201b695e119fe961b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2a\5267182a822bf186a2e0faff2f08f586a42def ---
--- Nom du fichier: 5267182a822bf186a2e0faff2f08f586a42def ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2a\869291600235b495c6e7c604d6e8fdb33fd1f3 ---
--- Nom du fichier: 869291600235b495c6e7c604d6e8fdb33fd1f3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2a\a3e893b45c014fadd9d76a745a0d6c95f7719d ---
--- Nom du fichier: a3e893b45c014fadd9d76a745a0d6c95f7719d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2a\ab2e16122ad4999311fe1b55498e618572dce1 ---
--- Nom du fichier: ab2e16122ad4999311fe1b55498e618572dce1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2a\ac301311f9a434e8a22463a6cf7bfdc6ba67ea ---
--- Nom du fichier: ac301311f9a434e8a22463a6cf7bfdc6ba67ea ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2a\d04e259a7d18fbc8ecb4273e4cd752731c2c3c ---
--- Nom du fichier: d04e259a7d18fbc8ecb4273e4cd752731c2c3c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2a\d106f1265d65ca4148b0721509bf52c3decee0 ---
--- Nom du fichier: d106f1265d65ca4148b0721509bf52c3decee0 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2a\eec9954953e5961bd6cc6d05ee78e5dd2046ab ---
--- Nom du fichier: eec9954953e5961bd6cc6d05ee78e5dd2046ab ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2a\f832e75f158447f67e61f54c2202b57b4ac3bd ---
--- Nom du fichier: f832e75f158447f67e61f54c2202b57b4ac3bd ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2b\16a8a8c39aaff7cce821db027dbfc37555e178 ---
--- Nom du fichier: 16a8a8c39aaff7cce821db027dbfc37555e178 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2b\21f420b291af9e4c0233e0386dcd39b750e44c ---
--- Nom du fichier: 21f420b291af9e4c0233e0386dcd39b750e44c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2b\28facd30c1715362e57061366fe2254ed10841 ---
--- Nom du fichier: 28facd30c1715362e57061366fe2254ed10841 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2b\4b6c86cc7917739817e85bf51c45399a7ed683 ---
--- Nom du fichier: 4b6c86cc7917739817e85bf51c45399a7ed683 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2b\4ef1d492d4fa56af16f5027bdb6c436b97168b ---
--- Nom du fichier: 4ef1d492d4fa56af16f5027bdb6c436b97168b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2b\c048ee40da11e26b9d3149fafa9dcfeff3baff ---
--- Nom du fichier: c048ee40da11e26b9d3149fafa9dcfeff3baff ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2b\ce6c9b6feb6b720cb139edf2267683f9fc19d8 ---
--- Nom du fichier: ce6c9b6feb6b720cb139edf2267683f9fc19d8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2b\de3ed05d1c756fb63426307193d79dfc4368b5 ---
--- Nom du fichier: de3ed05d1c756fb63426307193d79dfc4368b5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2b\f8390755421e6831958b2df47203d252121683 ---
--- Nom du fichier: f8390755421e6831958b2df47203d252121683 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2c\22f9c0519093243e6418540f5c385127b0715f ---
--- Nom du fichier: 22f9c0519093243e6418540f5c385127b0715f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2c\6ec29348c9dd3e551188186f6af5fbf61dc93a ---
--- Nom du fichier: 6ec29348c9dd3e551188186f6af5fbf61dc93a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2c\7687011fd2fa7495cb2db41c273fad05a8a5b6 ---
--- Nom du fichier: 7687011fd2fa7495cb2db41c273fad05a8a5b6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2c\a8ad7d711db16e5253a9d935026a12a0374858 ---
--- Nom du fichier: a8ad7d711db16e5253a9d935026a12a0374858 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2c\adcbb77c23b2dd0e45876cc1e4459da78a5b26 ---
--- Nom du fichier: adcbb77c23b2dd0e45876cc1e4459da78a5b26 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2c\d28d4bfe87268575fb3dcf3edd8fab07fc01c4 ---
--- Nom du fichier: d28d4bfe87268575fb3dcf3edd8fab07fc01c4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2c\e3c18122083ca2ae3185cc51dbba6a7d029e40 ---
--- Nom du fichier: e3c18122083ca2ae3185cc51dbba6a7d029e40 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2c\fbc30e2466c317b4936b8105a12994f55a54fa ---
--- Nom du fichier: fbc30e2466c317b4936b8105a12994f55a54fa ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2d\0509acec56e5d17590a66905f1a91843424593 ---
--- Nom du fichier: 0509acec56e5d17590a66905f1a91843424593 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2d\503adf4faf262d29497f876855c32e35048337 ---
--- Nom du fichier: 503adf4faf262d29497f876855c32e35048337 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2d\52290a4e8e607afd073e3310f71305cb14503b ---
--- Nom du fichier: 52290a4e8e607afd073e3310f71305cb14503b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2d\5427508bed1a8ae092c2a172e5f43f51a5e262 ---
--- Nom du fichier: 5427508bed1a8ae092c2a172e5f43f51a5e262 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2d\61c68339127a164bfae0abb54707efb2bf9e68 ---
--- Nom du fichier: 61c68339127a164bfae0abb54707efb2bf9e68 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2d\67cc033d93660bc1f080956dd0f7f30038e028 ---
--- Nom du fichier: 67cc033d93660bc1f080956dd0f7f30038e028 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2d\84e924bdd74a74eb4c925b334d5b7c992fac48 ---
--- Nom du fichier: 84e924bdd74a74eb4c925b334d5b7c992fac48 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2d\bbd17486973533cc8eda9dc491a8e29eefbafa ---
--- Nom du fichier: bbd17486973533cc8eda9dc491a8e29eefbafa ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2d\cef4c18a896871f16a320a53355ee5246e319a ---
--- Nom du fichier: cef4c18a896871f16a320a53355ee5246e319a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2d\d295c5bd27b6df1a840e8649ad98e341d3c98f ---
--- Nom du fichier: d295c5bd27b6df1a840e8649ad98e341d3c98f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2e\5b8fe926687ba97dd28ede3fc6c088a85e3678 ---
--- Nom du fichier: 5b8fe926687ba97dd28ede3fc6c088a85e3678 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2e\5e4cb3ec3fb572253be7e243ab17036fabf83a ---
--- Nom du fichier: 5e4cb3ec3fb572253be7e243ab17036fabf83a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2e\73d15887f98f88068138cf37b5d06edfc6ba96 ---
--- Nom du fichier: 73d15887f98f88068138cf37b5d06edfc6ba96 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2e\922f748ea9bd9a528d5005f8df44852c63b275 ---
--- Nom du fichier: 922f748ea9bd9a528d5005f8df44852c63b275 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2e\93a080f265a27d02f810fb995c72fe252de05c ---
--- Nom du fichier: 93a080f265a27d02f810fb995c72fe252de05c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2e\b0c1f97a3e67e5489027e46e1451026db22aac ---
--- Nom du fichier: b0c1f97a3e67e5489027e46e1451026db22aac ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2e\c7413213d2f661f39d06d44525ac30afd25556 ---
--- Nom du fichier: c7413213d2f661f39d06d44525ac30afd25556 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2e\c8f876a661a8490faeb9e14d09e368deb0867d ---
--- Nom du fichier: c8f876a661a8490faeb9e14d09e368deb0867d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2e\dd35413c42c62fafe3c7d07a15dcab34cdc10b ---
--- Nom du fichier: dd35413c42c62fafe3c7d07a15dcab34cdc10b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2f\09040d463a88405d2063357cbda732c2117d51 ---
--- Nom du fichier: 09040d463a88405d2063357cbda732c2117d51 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2f\50befc65efcd24179f1c1b4a35b75b9a8b75d8 ---
--- Nom du fichier: 50befc65efcd24179f1c1b4a35b75b9a8b75d8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2f\5e6d832788175424a58ac322e134b699ca181f ---
--- Nom du fichier: 5e6d832788175424a58ac322e134b699ca181f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2f\6e944bcbcb26e4674ef6cf015154cb204946db ---
--- Nom du fichier: 6e944bcbcb26e4674ef6cf015154cb204946db ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2f\b8fab0d28ee8abe3b0b6e55d9eff8201855ae6 ---
--- Nom du fichier: b8fab0d28ee8abe3b0b6e55d9eff8201855ae6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2f\b97fdbbcfdb58276118147a1b02a41ef6342bc ---
--- Nom du fichier: b97fdbbcfdb58276118147a1b02a41ef6342bc ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\2f\d606703c5548492ee2f44e0d906a39f8906df1 ---
--- Nom du fichier: d606703c5548492ee2f44e0d906a39f8906df1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\30\0b11e3850cc5707b1db35ab0ccd294039fbb66 ---
--- Nom du fichier: 0b11e3850cc5707b1db35ab0ccd294039fbb66 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\30\149c8ca983cba8d39f566f1db20c5e8461b58f ---
--- Nom du fichier: 149c8ca983cba8d39f566f1db20c5e8461b58f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\30\24e39f3c0101cb9dad1663e718d009e376bbc2 ---
--- Nom du fichier: 24e39f3c0101cb9dad1663e718d009e376bbc2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\30\24ead81a5c3b75cb5452a3c638bb6ae39fd91b ---
--- Nom du fichier: 24ead81a5c3b75cb5452a3c638bb6ae39fd91b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\30\258cb9cdc16c8ad038a9d4697980d362104d2c ---
--- Nom du fichier: 258cb9cdc16c8ad038a9d4697980d362104d2c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\30\465d44681db347621ede3d262985821ae9516f ---
--- Nom du fichier: 465d44681db347621ede3d262985821ae9516f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\30\560db43e8707ee01b90523f27c4721c9ab7a08 ---
--- Nom du fichier: 560db43e8707ee01b90523f27c4721c9ab7a08 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\30\97b3df11c811a2541d060a0228b35ba8741bca ---
--- Nom du fichier: 97b3df11c811a2541d060a0228b35ba8741bca ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\30\c9fbcb4364d59cd5edb09c31c373060000d2c7 ---
--- Nom du fichier: c9fbcb4364d59cd5edb09c31c373060000d2c7 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\30\e4b8ca51abbd3931e5f5adee28f632e348e095 ---
--- Nom du fichier: e4b8ca51abbd3931e5f5adee28f632e348e095 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\31\19c9a96de12afabfcf08d6b15525b21a5f870f ---
--- Nom du fichier: 19c9a96de12afabfcf08d6b15525b21a5f870f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\31\33f9d52f4d7997a7a8da61674d549d4fc386d6 ---
--- Nom du fichier: 33f9d52f4d7997a7a8da61674d549d4fc386d6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\31\3a939a9141f6559272bdbfe27d595caa0e1d15 ---
--- Nom du fichier: 3a939a9141f6559272bdbfe27d595caa0e1d15 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\31\6874f0ad78c1f643d4308e12ab27b49d37097c ---
--- Nom du fichier: 6874f0ad78c1f643d4308e12ab27b49d37097c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\31\b32d225267b578528807c639f831b99808b248 ---
--- Nom du fichier: b32d225267b578528807c639f831b99808b248 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\31\bb7916750f45d63c67e1828a2303d600a2ed02 ---
--- Nom du fichier: bb7916750f45d63c67e1828a2303d600a2ed02 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\31\c5b15d11c6e25b038816eef365ed1a9418df43 ---
--- Nom du fichier: c5b15d11c6e25b038816eef365ed1a9418df43 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\31\d57a8d9f0bb9f6673b40baf7fd1f6003ebc9f3 ---
--- Nom du fichier: d57a8d9f0bb9f6673b40baf7fd1f6003ebc9f3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\31\dd98297faa399b22ff46c83b1e47ea9fc3c6d9 ---
--- Nom du fichier: dd98297faa399b22ff46c83b1e47ea9fc3c6d9 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\31\fd720cd385a2e3d4b144fef638bc611b00ab23 ---
--- Nom du fichier: fd720cd385a2e3d4b144fef638bc611b00ab23 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\32\01f653c082578e077b0f4609157fc006896881 ---
--- Nom du fichier: 01f653c082578e077b0f4609157fc006896881 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\32\2cd8aa394e3000364fd738833de99a771a2298 ---
--- Nom du fichier: 2cd8aa394e3000364fd738833de99a771a2298 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\32\39c67414dfef235395833e5a5fa1deb1283076 ---
--- Nom du fichier: 39c67414dfef235395833e5a5fa1deb1283076 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\32\804ba075342f6658744a6438b78f573d180997 ---
--- Nom du fichier: 804ba075342f6658744a6438b78f573d180997 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\32\b918363b0e5a0baa9bf6c2962059b0d8ed2cb6 ---
--- Nom du fichier: b918363b0e5a0baa9bf6c2962059b0d8ed2cb6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\33\4067241768a4ba336f82427a5da49c902157a7 ---
--- Nom du fichier: 4067241768a4ba336f82427a5da49c902157a7 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\33\9a222967e576f1d1da6abf089c815f89f01048 ---
--- Nom du fichier: 9a222967e576f1d1da6abf089c815f89f01048 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\33\abae0a50b2728ba11efebd09327450143e7000 ---
--- Nom du fichier: abae0a50b2728ba11efebd09327450143e7000 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\33\b14ab43f29d896c3af52c295c8cafcf0afb2de ---
--- Nom du fichier: b14ab43f29d896c3af52c295c8cafcf0afb2de ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\33\b4b391922ff9f65acbb5dea5ac4e71b7e58c7b ---
--- Nom du fichier: b4b391922ff9f65acbb5dea5ac4e71b7e58c7b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\34\332aa42289b52b49789cf07186ceb0f1a77478 ---
--- Nom du fichier: 332aa42289b52b49789cf07186ceb0f1a77478 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\34\5b62dc75afad0ac4a66df87738ffb69a2695b5 ---
--- Nom du fichier: 5b62dc75afad0ac4a66df87738ffb69a2695b5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\34\64c16afe9c69da65beb3fc596083b9887194fe ---
--- Nom du fichier: 64c16afe9c69da65beb3fc596083b9887194fe ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\34\c1876e9f953407fc403687fbb66851a0e2c107 ---
--- Nom du fichier: c1876e9f953407fc403687fbb66851a0e2c107 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\34\cbc8d64fc995b03faffa01fb1b6b49ec05261d ---
--- Nom du fichier: cbc8d64fc995b03faffa01fb1b6b49ec05261d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\34\cc63139ba891c75f40646778b178371320d168 ---
--- Nom du fichier: cc63139ba891c75f40646778b178371320d168 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\34\f316033f023adeb72534a1a26bbdceaeb2d655 ---
--- Nom du fichier: f316033f023adeb72534a1a26bbdceaeb2d655 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\34\fd29b5e8d4f564b52f26d77d06d8ef87bbc5d7 ---
--- Nom du fichier: fd29b5e8d4f564b52f26d77d06d8ef87bbc5d7 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\34\ffb52b39811833fcfff61ee7b0d1fda23fe031 ---
--- Nom du fichier: ffb52b39811833fcfff61ee7b0d1fda23fe031 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\35\2a7eaba46b40c6c5f4d42e340d055b17a29f87 ---
--- Nom du fichier: 2a7eaba46b40c6c5f4d42e340d055b17a29f87 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\35\41bf2c75084446d35bc4b4e90a5d2eece786b3 ---
--- Nom du fichier: 41bf2c75084446d35bc4b4e90a5d2eece786b3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\35\708de420322954bd144a551f1dbb994a053498 ---
--- Nom du fichier: 708de420322954bd144a551f1dbb994a053498 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\35\7dad51dea6a877c20fb0bf305b56693a4f53e1 ---
--- Nom du fichier: 7dad51dea6a877c20fb0bf305b56693a4f53e1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\35\90c8f6d4f60299e6ac6a49c173a01cc4084c63 ---
--- Nom du fichier: 90c8f6d4f60299e6ac6a49c173a01cc4084c63 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\35\9bd55f289c255a472a6c28c197ec95498547fd ---
--- Nom du fichier: 9bd55f289c255a472a6c28c197ec95498547fd ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\35\a4bbb800473d84ee12a9590adc38500c8e4b49 ---
--- Nom du fichier: a4bbb800473d84ee12a9590adc38500c8e4b49 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\35\abcc6d32e14d8876d75cf1117d11c5319ac7eb ---
--- Nom du fichier: abcc6d32e14d8876d75cf1117d11c5319ac7eb ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\35\b2f3569ab9d2b505303987c29cbb583662fb15 ---
--- Nom du fichier: b2f3569ab9d2b505303987c29cbb583662fb15 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\35\b489be9c348bc297446cecd61d3a013e31f05e ---
--- Nom du fichier: b489be9c348bc297446cecd61d3a013e31f05e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\35\dc828fc050c311c6c42724e8430cd0318f8b88 ---
--- Nom du fichier: dc828fc050c311c6c42724e8430cd0318f8b88 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\36\21c0f5a4cafcf2787ef82a1f5586612be4635b ---
--- Nom du fichier: 21c0f5a4cafcf2787ef82a1f5586612be4635b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\36\38a56e579aef4be6d3a0efa7938aaa22dd6b7f ---
--- Nom du fichier: 38a56e579aef4be6d3a0efa7938aaa22dd6b7f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\36\641992dc60f39208a859d51baafe6f736df8e9 ---
--- Nom du fichier: 641992dc60f39208a859d51baafe6f736df8e9 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\36\685ff835b84728e3d08e9b12e321674243c451 ---
--- Nom du fichier: 685ff835b84728e3d08e9b12e321674243c451 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\36\d665f08e8e5e1b378520ecdcb0ae1d01b1c09c ---
--- Nom du fichier: d665f08e8e5e1b378520ecdcb0ae1d01b1c09c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\36\f590d94c1e905a1ed97e6d3c77978e4d87067e ---
--- Nom du fichier: f590d94c1e905a1ed97e6d3c77978e4d87067e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\36\f786cb2473e1b6178cab1583ed2d1be8cfaec9 ---
--- Nom du fichier: f786cb2473e1b6178cab1583ed2d1be8cfaec9 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\36\fb0077c0496d4aa45dc180799500162ce3a8cb ---
--- Nom du fichier: fb0077c0496d4aa45dc180799500162ce3a8cb ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\37\094c99e9ac992e394dfa0b7ecdcc1c0e4fc0b5 ---
--- Nom du fichier: 094c99e9ac992e394dfa0b7ecdcc1c0e4fc0b5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\37\11d1d005f88392d9116edfc6b389b076201045 ---
--- Nom du fichier: 11d1d005f88392d9116edfc6b389b076201045 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\37\300eae7e250a08d01fcc275fff3d49eaa649bf ---
--- Nom du fichier: 300eae7e250a08d01fcc275fff3d49eaa649bf ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\37\65de035f8325293acfea1e42b88efdec17b93f ---
--- Nom du fichier: 65de035f8325293acfea1e42b88efdec17b93f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\37\67037390cc551a0d19be26b4a358949cfc3c3b ---
--- Nom du fichier: 67037390cc551a0d19be26b4a358949cfc3c3b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\37\7f3db499e2406431cb48c480781e95eff555ff ---
--- Nom du fichier: 7f3db499e2406431cb48c480781e95eff555ff ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\37\7f553b5c0a91f325dec41eb859fe1e94e49a3b ---
--- Nom du fichier: 7f553b5c0a91f325dec41eb859fe1e94e49a3b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\37\9b04e84786bdff15fd82f5a64b950b7d837154 ---
--- Nom du fichier: 9b04e84786bdff15fd82f5a64b950b7d837154 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\37\af44a95282840f62b3dfd3986954e3165534b8 ---
--- Nom du fichier: af44a95282840f62b3dfd3986954e3165534b8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\37\ee24ce64cd2830840c10c13d995d2f6b65c40b ---
--- Nom du fichier: ee24ce64cd2830840c10c13d995d2f6b65c40b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\37\fb262d8e534d5349f3fdab6f26d28bc00b950c ---
--- Nom du fichier: fb262d8e534d5349f3fdab6f26d28bc00b950c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\38\3f649877b319aca4eac7905b6498d5afbff432 ---
--- Nom du fichier: 3f649877b319aca4eac7905b6498d5afbff432 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\38\7d6f0633980fe89923ff6e3a81ccef55ed4bbe ---
--- Nom du fichier: 7d6f0633980fe89923ff6e3a81ccef55ed4bbe ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\38\8cdcfe39392e582d0fbf38bb8555bf32dc1a48 ---
--- Nom du fichier: 8cdcfe39392e582d0fbf38bb8555bf32dc1a48 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\38\c2a14f22abe265f0c645c7a33d3a93108e52e6 ---
--- Nom du fichier: c2a14f22abe265f0c645c7a33d3a93108e52e6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\38\f5a9ddeea98d3cfc12c7950867bbe0f6538343 ---
--- Nom du fichier: f5a9ddeea98d3cfc12c7950867bbe0f6538343 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\38\ff519355c351ab748970ceae7d18fb22322fca ---
--- Nom du fichier: ff519355c351ab748970ceae7d18fb22322fca ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\39\05cbdc46ae497a5ae0b1cf351c4a86cb3038c9 ---
--- Nom du fichier: 05cbdc46ae497a5ae0b1cf351c4a86cb3038c9 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\39\07695569604ba449dc4b80db2006650e286b45 ---
--- Nom du fichier: 07695569604ba449dc4b80db2006650e286b45 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\39\2f42543cec9ae2ccd443e12e914231335f1f9f ---
--- Nom du fichier: 2f42543cec9ae2ccd443e12e914231335f1f9f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\39\31f426848e386c23eac47e144384adf8224e4a ---
--- Nom du fichier: 31f426848e386c23eac47e144384adf8224e4a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\39\3adabfaad8758c4632cbb3009f762bb86bde83 ---
--- Nom du fichier: 3adabfaad8758c4632cbb3009f762bb86bde83 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\39\55e6da2a98fdbf51d40a9e129666cd442d8432 ---
--- Nom du fichier: 55e6da2a98fdbf51d40a9e129666cd442d8432 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\39\58a79aabff29ee973153b6442e9fd5bbfb9249 ---
--- Nom du fichier: 58a79aabff29ee973153b6442e9fd5bbfb9249 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\39\a72bc9d3cc3b2439141f397c8fdd4cb69e537f ---
--- Nom du fichier: a72bc9d3cc3b2439141f397c8fdd4cb69e537f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\39\b0818da3b385443fa0bb1bb8451724badeb4a8 ---
--- Nom du fichier: b0818da3b385443fa0bb1bb8451724badeb4a8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\39\bdf214918e020117ed789cbdc148eea75d0bc3 ---
--- Nom du fichier: bdf214918e020117ed789cbdc148eea75d0bc3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\39\daffdd0e5c9e089951c8377cdc65213651d0e9 ---
--- Nom du fichier: daffdd0e5c9e089951c8377cdc65213651d0e9 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3a\1235681942822917403dfe69805906e9ef1b6b ---
--- Nom du fichier: 1235681942822917403dfe69805906e9ef1b6b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3a\35f436698d6acbde1c2dda2305ee675b6fd28c ---
--- Nom du fichier: 35f436698d6acbde1c2dda2305ee675b6fd28c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3a\3f99160cdd93717fa58d3af875aae90524eeb0 ---
--- Nom du fichier: 3f99160cdd93717fa58d3af875aae90524eeb0 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3a\d9ba9267dfc0efd3b2c069601da6d8d6052e51 ---
--- Nom du fichier: d9ba9267dfc0efd3b2c069601da6d8d6052e51 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3a\dfa7cf38b1016731e5dd6d525953867e249f2b ---
--- Nom du fichier: dfa7cf38b1016731e5dd6d525953867e249f2b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3b\2b9e22c9b48792e13aa64e9b07bcb5265c5cca ---
--- Nom du fichier: 2b9e22c9b48792e13aa64e9b07bcb5265c5cca ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3b\31722b3edf39879022c339b90f821723958b22 ---
--- Nom du fichier: 31722b3edf39879022c339b90f821723958b22 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3b\36fe6506742b1723d379c903bd57871783e020 ---
--- Nom du fichier: 36fe6506742b1723d379c903bd57871783e020 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3b\6715b576d8679af06b24a3b89fb9dbd2b0b6fe ---
--- Nom du fichier: 6715b576d8679af06b24a3b89fb9dbd2b0b6fe ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3b\79e2c8eaf533da45fa215fc87f904a3e825fad ---
--- Nom du fichier: 79e2c8eaf533da45fa215fc87f904a3e825fad ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3b\9dba77e51220c9b6956d2ab0822d77ce41429c ---
--- Nom du fichier: 9dba77e51220c9b6956d2ab0822d77ce41429c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3b\b48ebc1020c2d26cd764d64f51e401c5780c68 ---
--- Nom du fichier: b48ebc1020c2d26cd764d64f51e401c5780c68 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3b\bfb2f9e56e7d4fb018222d49d7b8ff4ef3d266 ---
--- Nom du fichier: bfb2f9e56e7d4fb018222d49d7b8ff4ef3d266 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3b\f03a37d830ae22beaec093a32892ab2b3c54e1 ---
--- Nom du fichier: f03a37d830ae22beaec093a32892ab2b3c54e1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3c\0a705c13d1a348b7db46f394499df99bfcaeb2 ---
--- Nom du fichier: 0a705c13d1a348b7db46f394499df99bfcaeb2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3c\1be8c850c33a4e0bcf173b27a2ad22ee4f42f9 ---
--- Nom du fichier: 1be8c850c33a4e0bcf173b27a2ad22ee4f42f9 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3c\2a49aa754316d2bf78f6cfbd5a2e789f44fba4 ---
--- Nom du fichier: 2a49aa754316d2bf78f6cfbd5a2e789f44fba4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3c\3036d7a243afa72612af3d54996e7d435df6f2 ---
--- Nom du fichier: 3036d7a243afa72612af3d54996e7d435df6f2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3c\5d680d350cf1bfa427ae92e646e221303f58b2 ---
--- Nom du fichier: 5d680d350cf1bfa427ae92e646e221303f58b2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3c\fca8a8f7d35b26c4923d9d15b3ffb47b95b8c3 ---
--- Nom du fichier: fca8a8f7d35b26c4923d9d15b3ffb47b95b8c3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3d\1890bd714233d2640b43de7cdef676c4659fa8 ---
--- Nom du fichier: 1890bd714233d2640b43de7cdef676c4659fa8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3d\5caf770c20104a09a6b559a48af3ed7a833dc7 ---
--- Nom du fichier: 5caf770c20104a09a6b559a48af3ed7a833dc7 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3d\696a23f349c1d3c77882d3fc9d40f542cf739a ---
--- Nom du fichier: 696a23f349c1d3c77882d3fc9d40f542cf739a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3d\80acd23ec511b695354204dcd9374b7ccfd599 ---
--- Nom du fichier: 80acd23ec511b695354204dcd9374b7ccfd599 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3d\82d76a2cbaadc215fae9b7a1ec1372560b8adf ---
--- Nom du fichier: 82d76a2cbaadc215fae9b7a1ec1372560b8adf ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3d\ab2641c3567880ef14426f693d54fdb1d4f837 ---
--- Nom du fichier: ab2641c3567880ef14426f693d54fdb1d4f837 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3d\b5f1a8402f27f7c9cec78474034fbf4c5cc400 ---
--- Nom du fichier: b5f1a8402f27f7c9cec78474034fbf4c5cc400 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3d\c76fb3d1daaf4b43c26d4fc2a2935fba32ac27 ---
--- Nom du fichier: c76fb3d1daaf4b43c26d4fc2a2935fba32ac27 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3d\e183589d6cb3ec7b53e48cd1cdc3d7095f1537 ---
--- Nom du fichier: e183589d6cb3ec7b53e48cd1cdc3d7095f1537 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3d\e94b4831579b6ccd015145efe133288ba78cc5 ---
--- Nom du fichier: e94b4831579b6ccd015145efe133288ba78cc5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3d\f552b5e3e8a23029ab5f9ed3465459ef075e6c ---
--- Nom du fichier: f552b5e3e8a23029ab5f9ed3465459ef075e6c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3d\ff3d7ced41b7c4301a8140205d5d2515f7cdfc ---
--- Nom du fichier: ff3d7ced41b7c4301a8140205d5d2515f7cdfc ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3e\13c4db58f70ed8b58fcc1c4d7c8f17e0abe8bf ---
--- Nom du fichier: 13c4db58f70ed8b58fcc1c4d7c8f17e0abe8bf ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3e\4997a1d1dba021d0de32a548315c8da2f60e7f ---
--- Nom du fichier: 4997a1d1dba021d0de32a548315c8da2f60e7f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3e\827ecd5487692b24d79c12685c14904a311972 ---
--- Nom du fichier: 827ecd5487692b24d79c12685c14904a311972 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3e\8af9d3b354542103ebae9d6e1f0cee1245b515 ---
--- Nom du fichier: 8af9d3b354542103ebae9d6e1f0cee1245b515 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3e\aa69efd5b98508a509328f7987c33d2af5ca6c ---
--- Nom du fichier: aa69efd5b98508a509328f7987c33d2af5ca6c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3f\151c67ba0246fdc7203cb2a25c25e3584e168b ---
--- Nom du fichier: 151c67ba0246fdc7203cb2a25c25e3584e168b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3f\2925f962354a672d053dc294158b3c5a8b5c65 ---
--- Nom du fichier: 2925f962354a672d053dc294158b3c5a8b5c65 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3f\37504461a6728d60263243e6d833ee07c11b34 ---
--- Nom du fichier: 37504461a6728d60263243e6d833ee07c11b34 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3f\53724e46657a63a7adb2fc80e11eb52f394463 ---
--- Nom du fichier: 53724e46657a63a7adb2fc80e11eb52f394463 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3f\5fed690bea7f39293842a5a35d5e47b3cc4c01 ---
--- Nom du fichier: 5fed690bea7f39293842a5a35d5e47b3cc4c01 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3f\66b5ee0fc35ebeaa775404e1814fdc72c8cad4 ---
--- Nom du fichier: 66b5ee0fc35ebeaa775404e1814fdc72c8cad4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3f\bd8cd67191dbcb3b9dfc3abea93f838a6df82e ---
--- Nom du fichier: bd8cd67191dbcb3b9dfc3abea93f838a6df82e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3f\bdf6ca9fbe45e4ef85a54e5012030ff6d8c97f ---
--- Nom du fichier: bdf6ca9fbe45e4ef85a54e5012030ff6d8c97f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3f\c1bf103f9550cf273186b8d1e171eb7c823453 ---
--- Nom du fichier: c1bf103f9550cf273186b8d1e171eb7c823453 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3f\f59022e6c8fdeb1d0e4e7bc231e992f6e33fc2 ---
--- Nom du fichier: f59022e6c8fdeb1d0e4e7bc231e992f6e33fc2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\3f\fe0b4525a79dedde777bc7c24dde89ce512cab ---
--- Nom du fichier: fe0b4525a79dedde777bc7c24dde89ce512cab ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\40\8e88388952742f25abd414e17781a15ad7bd41 ---
--- Nom du fichier: 8e88388952742f25abd414e17781a15ad7bd41 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\40\fb3b40445a1d0118cb8d601d08beb19064079d ---
--- Nom du fichier: fb3b40445a1d0118cb8d601d08beb19064079d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\41\041c14e2f1adf1a522d6b8a8eb4943db251a23 ---
--- Nom du fichier: 041c14e2f1adf1a522d6b8a8eb4943db251a23 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\41\0f71eadcb13b81d74a706e55dbc7d46b7a7206 ---
--- Nom du fichier: 0f71eadcb13b81d74a706e55dbc7d46b7a7206 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\41\574e82005f4e53b365612176af547e2f9e9051 ---
--- Nom du fichier: 574e82005f4e53b365612176af547e2f9e9051 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\41\b2ad4396b56e4dc9a03352fbeafffe3947066c ---
--- Nom du fichier: b2ad4396b56e4dc9a03352fbeafffe3947066c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\42\07dc66139a13313b89baa9762c4002486f655a ---
--- Nom du fichier: 07dc66139a13313b89baa9762c4002486f655a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\42\17e0def6258580bdcb08a195f65e9b11b955b3 ---
--- Nom du fichier: 17e0def6258580bdcb08a195f65e9b11b955b3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\42\3c234ab54cccb4e317164fcab0de5a03915e6e ---
--- Nom du fichier: 3c234ab54cccb4e317164fcab0de5a03915e6e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\42\483f1a26cd7c5386151ef4626bc0d09c83edb2 ---
--- Nom du fichier: 483f1a26cd7c5386151ef4626bc0d09c83edb2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\42\5b9d96023047757f286782c57bc0992668d498 ---
--- Nom du fichier: 5b9d96023047757f286782c57bc0992668d498 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\42\daf64e4b95b7e4a9554b99d082e0bdbd387c80 ---
--- Nom du fichier: daf64e4b95b7e4a9554b99d082e0bdbd387c80 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\42\db42f033fefdaa2d9173349cc2af041ce052a9 ---
--- Nom du fichier: db42f033fefdaa2d9173349cc2af041ce052a9 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\42\dd6543ec817697ae35004be97040fd1db5a2f5 ---
--- Nom du fichier: dd6543ec817697ae35004be97040fd1db5a2f5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\42\f3438cbbf4c5b0ffe2adec80b38a80cad816d8 ---
--- Nom du fichier: f3438cbbf4c5b0ffe2adec80b38a80cad816d8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\43\0bffdef96a709a703ef9903a21c04cb56adc0d ---
--- Nom du fichier: 0bffdef96a709a703ef9903a21c04cb56adc0d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\43\33662bb4d319d6231c7598ece584c1d0ad8b6b ---
--- Nom du fichier: 33662bb4d319d6231c7598ece584c1d0ad8b6b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\43\7346a9745664c8a86e4ced94c0d6517dda7b48 ---
--- Nom du fichier: 7346a9745664c8a86e4ced94c0d6517dda7b48 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\43\c1b263f1318a684999a4a05ca419dce2e447af ---
--- Nom du fichier: c1b263f1318a684999a4a05ca419dce2e447af ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\43\cee2405f87f5af35add7708820ec0b8aaf1229 ---
--- Nom du fichier: cee2405f87f5af35add7708820ec0b8aaf1229 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\43\e228adca606a3642bd5d99fa218e082c3dcb2a ---
--- Nom du fichier: e228adca606a3642bd5d99fa218e082c3dcb2a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\43\e2ca6509735f78aeb03db68d0cfc1c27ad2e59 ---
--- Nom du fichier: e2ca6509735f78aeb03db68d0cfc1c27ad2e59 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\44\c8d93287426e408e1dde7cc3635e129386ec3b ---
--- Nom du fichier: c8d93287426e408e1dde7cc3635e129386ec3b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\44\dab70a8775fc4964571266d42d939afe3e9f50 ---
--- Nom du fichier: dab70a8775fc4964571266d42d939afe3e9f50 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\45\14d7db53eb10a3ce637c2cf7f966dcdeb27ac4 ---
--- Nom du fichier: 14d7db53eb10a3ce637c2cf7f966dcdeb27ac4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\45\36ab4008a6c50efe3391e691b71f4945dc48b9 ---
--- Nom du fichier: 36ab4008a6c50efe3391e691b71f4945dc48b9 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\45\43dfdca83d1dae30768ddee26073c81a57285b ---
--- Nom du fichier: 43dfdca83d1dae30768ddee26073c81a57285b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\45\82be84de3571bc4a5557321f877b0987917f17 ---
--- Nom du fichier: 82be84de3571bc4a5557321f877b0987917f17 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\45\b80fe6ee9549ab0caac8143aebe2dac479093d ---
--- Nom du fichier: b80fe6ee9549ab0caac8143aebe2dac479093d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\45\ea40eac44a7c6adf5ec4e1e0a39b497a53b66d ---
--- Nom du fichier: ea40eac44a7c6adf5ec4e1e0a39b497a53b66d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\45\f8e720ddd1ca9cf199b89ce14f3fe49906ef79 ---
--- Nom du fichier: f8e720ddd1ca9cf199b89ce14f3fe49906ef79 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\45\fe7ef1e6f60019bcc92950e61858d115244742 ---
--- Nom du fichier: fe7ef1e6f60019bcc92950e61858d115244742 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\46\2f1460e578bdd27839df0145e94889c8ae1766 ---
--- Nom du fichier: 2f1460e578bdd27839df0145e94889c8ae1766 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\46\6151032c9b61c6b6ec8e3a55b01453dead7c16 ---
--- Nom du fichier: 6151032c9b61c6b6ec8e3a55b01453dead7c16 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\46\9f98821a606ebeb9583901108d917847bbef5f ---
--- Nom du fichier: 9f98821a606ebeb9583901108d917847bbef5f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\46\c3de05ec079215843e69cd5a31d583937ac04f ---
--- Nom du fichier: c3de05ec079215843e69cd5a31d583937ac04f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\46\f7ed3743419dc3449867c16ed81f0dde493c13 ---
--- Nom du fichier: f7ed3743419dc3449867c16ed81f0dde493c13 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\47\10e7bbc4e39fd3f2049b2d38e4b6f419212f07 ---
--- Nom du fichier: 10e7bbc4e39fd3f2049b2d38e4b6f419212f07 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\47\2f01d87988878f5574376d7148df2cb4f02f3d ---
--- Nom du fichier: 2f01d87988878f5574376d7148df2cb4f02f3d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\47\4a3e57aa3e7abd5b47ecb63f7bb26d1495a846 ---
--- Nom du fichier: 4a3e57aa3e7abd5b47ecb63f7bb26d1495a846 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\47\a07e0776165db802f61e6d3c7b2e57bbbe15a1 ---
--- Nom du fichier: a07e0776165db802f61e6d3c7b2e57bbbe15a1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\47\b2bc0693cb6b5ca60fa42b10c3504be97c4072 ---
--- Nom du fichier: b2bc0693cb6b5ca60fa42b10c3504be97c4072 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\48\1152a5e68372f766b98d603529a01f76723980 ---
--- Nom du fichier: 1152a5e68372f766b98d603529a01f76723980 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\48\128c427254b6daa6a7e5f9fa7b800fab82171f ---
--- Nom du fichier: 128c427254b6daa6a7e5f9fa7b800fab82171f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\48\15a2b4ccb10513998ebff0626c2d6be539ec15 ---
--- Nom du fichier: 15a2b4ccb10513998ebff0626c2d6be539ec15 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\48\17e8fb7330bc91aba9d73ce41790b1ddf35876 ---
--- Nom du fichier: 17e8fb7330bc91aba9d73ce41790b1ddf35876 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\48\3c4472cde87d2be7b14632fd0948df64a52d5e ---
--- Nom du fichier: 3c4472cde87d2be7b14632fd0948df64a52d5e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\48\5360c3def30778c11e3e7ddeaaff839872ace4 ---
--- Nom du fichier: 5360c3def30778c11e3e7ddeaaff839872ace4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\48\881d4d93270b0f8f8e48c6117de7d48e078857 ---
--- Nom du fichier: 881d4d93270b0f8f8e48c6117de7d48e078857 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\48\bd16afbfe5bd8cfd64327b3a7ecb14e55469fe ---
--- Nom du fichier: bd16afbfe5bd8cfd64327b3a7ecb14e55469fe ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\48\d8f1e8a015210291b0151c0d5b7f400b8cb5e4 ---
--- Nom du fichier: d8f1e8a015210291b0151c0d5b7f400b8cb5e4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\48\fbbce0223d8a3eeb19295795cf8cffc28056be ---
--- Nom du fichier: fbbce0223d8a3eeb19295795cf8cffc28056be ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\48\fc5f2982e5a19bbadeee2ca3ae8343b5b3cab6 ---
--- Nom du fichier: fc5f2982e5a19bbadeee2ca3ae8343b5b3cab6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\49\0fd5ceab8bd32181956cc6d712b05272949e85 ---
--- Nom du fichier: 0fd5ceab8bd32181956cc6d712b05272949e85 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\49\86dfaf2655fcf0b6e806ce0acec2cd353aa910 ---
--- Nom du fichier: 86dfaf2655fcf0b6e806ce0acec2cd353aa910 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\49\b094b44379d3c4f32ba6ae10d14270da891b6c ---
--- Nom du fichier: b094b44379d3c4f32ba6ae10d14270da891b6c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\49\befceffbbc1c804d69870fa2b5172dd3638883 ---
--- Nom du fichier: befceffbbc1c804d69870fa2b5172dd3638883 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4a\3c4ef49f70f76419dd1c8f7bae61cd7daf2b44 ---
--- Nom du fichier: 3c4ef49f70f76419dd1c8f7bae61cd7daf2b44 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4a\4767e5c5f264a907535533f98fb1e64231a13c ---
--- Nom du fichier: 4767e5c5f264a907535533f98fb1e64231a13c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4a\602b34446276000c79bdb729f6352c463ee57c ---
--- Nom du fichier: 602b34446276000c79bdb729f6352c463ee57c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4a\7b1ee4985cad6c3cdb14e91af8d19ee0026f3e ---
--- Nom du fichier: 7b1ee4985cad6c3cdb14e91af8d19ee0026f3e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4a\983f4f74c668bc4f2d35c31209a0b67ea5b0e3 ---
--- Nom du fichier: 983f4f74c668bc4f2d35c31209a0b67ea5b0e3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4a\b11f1843f9d98fe2f25012af35837a95abe00e ---
--- Nom du fichier: b11f1843f9d98fe2f25012af35837a95abe00e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4a\cc79eaafc6257cfd1665bcde9ddf57b0741112 ---
--- Nom du fichier: cc79eaafc6257cfd1665bcde9ddf57b0741112 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4a\e52c90e09a975ad4c771fe8a9aaffdec2234b3 ---
--- Nom du fichier: e52c90e09a975ad4c771fe8a9aaffdec2234b3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4a\ee9d7a36983b9063209f694b19e0a9ccccea33 ---
--- Nom du fichier: ee9d7a36983b9063209f694b19e0a9ccccea33 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4b\0d4c33208e31192d5a28355417efaf3e580e6d ---
--- Nom du fichier: 0d4c33208e31192d5a28355417efaf3e580e6d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4b\264f7e6fec07ea65330a3e76b60bbe1391583d ---
--- Nom du fichier: 264f7e6fec07ea65330a3e76b60bbe1391583d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4b\a7996920e93fab3ba1a2ad6ab5a4a44b2105b4 ---
--- Nom du fichier: a7996920e93fab3ba1a2ad6ab5a4a44b2105b4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4b\e37c8d6de4b7804d9c3201c41cdd43f3b7da84 ---
--- Nom du fichier: e37c8d6de4b7804d9c3201c41cdd43f3b7da84 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4c\05186cc6d36ed300e6ba2ba18e154eee106612 ---
--- Nom du fichier: 05186cc6d36ed300e6ba2ba18e154eee106612 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4c\0cb90e6130216865752521a86dc64ce0cd62c5 ---
--- Nom du fichier: 0cb90e6130216865752521a86dc64ce0cd62c5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4c\2432982766713373de7b3f043a52adbcfb1b67 ---
--- Nom du fichier: 2432982766713373de7b3f043a52adbcfb1b67 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4c\5869463f636027f0058679bf9766903fc69a4b ---
--- Nom du fichier: 5869463f636027f0058679bf9766903fc69a4b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4c\78b5f441eb571c62a8ce542317702fbc0deffb ---
--- Nom du fichier: 78b5f441eb571c62a8ce542317702fbc0deffb ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4c\abd43bf25f47effff550d5a1987b041035fa82 ---
--- Nom du fichier: abd43bf25f47effff550d5a1987b041035fa82 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4c\e5c6390eebad5fedabdf40f17390e98c808e7d ---
--- Nom du fichier: e5c6390eebad5fedabdf40f17390e98c808e7d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4c\f7ce6a46caf756320474cecfa6c22574560675 ---
--- Nom du fichier: f7ce6a46caf756320474cecfa6c22574560675 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4d\0742ffcb0b15e404c9c599ca611aee0d3d933f ---
--- Nom du fichier: 0742ffcb0b15e404c9c599ca611aee0d3d933f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4d\110c09a057a0260015a309f69b92d2a8e162a6 ---
--- Nom du fichier: 110c09a057a0260015a309f69b92d2a8e162a6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4d\2e300435e6c113159958a8f41a613ac22be454 ---
--- Nom du fichier: 2e300435e6c113159958a8f41a613ac22be454 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4d\5aecd10bc52a6860188e9df596c660afa222fd ---
--- Nom du fichier: 5aecd10bc52a6860188e9df596c660afa222fd ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4d\5df455e3e4e16f422773e1e3bfd767b8dccd06 ---
--- Nom du fichier: 5df455e3e4e16f422773e1e3bfd767b8dccd06 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4d\9944a036d21c386988575fb80fd0b0f415c0f8 ---
--- Nom du fichier: 9944a036d21c386988575fb80fd0b0f415c0f8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4d\b7e863c1c4b16a86ca48aea101f3bca1b1da5f ---
--- Nom du fichier: b7e863c1c4b16a86ca48aea101f3bca1b1da5f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4d\d15dcb00200541e4ec3ae41e3c5f5c47a61fc3 ---
--- Nom du fichier: d15dcb00200541e4ec3ae41e3c5f5c47a61fc3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4d\e19030e1b360a8bdba203d1533c160f617b2ab ---
--- Nom du fichier: e19030e1b360a8bdba203d1533c160f617b2ab ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4d\eeb3a94ee03cc9d336f5a33463c650fe547efe ---
--- Nom du fichier: eeb3a94ee03cc9d336f5a33463c650fe547efe ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4e\21dc46b64674fb2c28b6735a91c42cc5262597 ---
--- Nom du fichier: 21dc46b64674fb2c28b6735a91c42cc5262597 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4e\45d9eb1b6cdcdc52a457777b6938dafc1906ae ---
--- Nom du fichier: 45d9eb1b6cdcdc52a457777b6938dafc1906ae ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4e\585216226a6d10dd26fb263b32c86025aa0d57 ---
--- Nom du fichier: 585216226a6d10dd26fb263b32c86025aa0d57 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4e\65d2fef8a4b193921e7f0c29dc0b0a68847a70 ---
--- Nom du fichier: 65d2fef8a4b193921e7f0c29dc0b0a68847a70 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4e\87920510854625951cc82d24796b521b299602 ---
--- Nom du fichier: 87920510854625951cc82d24796b521b299602 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4e\aa548191705b0bf68dad9ef973c037d15d13b5 ---
--- Nom du fichier: aa548191705b0bf68dad9ef973c037d15d13b5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4e\afcb5a6c2b4d5d0acbaf72b4cd6363c2e82cc6 ---
--- Nom du fichier: afcb5a6c2b4d5d0acbaf72b4cd6363c2e82cc6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4e\f74fdf9d99102f2320535991ed27a042f013c5 ---
--- Nom du fichier: f74fdf9d99102f2320535991ed27a042f013c5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4f\7c8eea88b4b96711815ce4e96ad85e2ce35a88 ---
--- Nom du fichier: 7c8eea88b4b96711815ce4e96ad85e2ce35a88 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4f\9a9663f3ccb2b970bfeb686c9e095ea35069a1 ---
--- Nom du fichier: 9a9663f3ccb2b970bfeb686c9e095ea35069a1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4f\b36fc1955ce70838a0833ceaccb7eb6e5d2817 ---
--- Nom du fichier: b36fc1955ce70838a0833ceaccb7eb6e5d2817 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4f\b7f15f9b48a850d069ad494b5f08e4f21c3dbd ---
--- Nom du fichier: b7f15f9b48a850d069ad494b5f08e4f21c3dbd ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4f\bc79759d258a42dc5cf11d6fdbb2a64cc72f42 ---
--- Nom du fichier: bc79759d258a42dc5cf11d6fdbb2a64cc72f42 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4f\c6fb06a3abfdd5e64003ffa01af492fb22d7e8 ---
--- Nom du fichier: c6fb06a3abfdd5e64003ffa01af492fb22d7e8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\4f\fdfb1787df592baeb1582c78d9dd11798fd2a3 ---
--- Nom du fichier: fdfb1787df592baeb1582c78d9dd11798fd2a3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\50\2022ec87909321f339d0b7fb1fb22e680dfaf4 ---
--- Nom du fichier: 2022ec87909321f339d0b7fb1fb22e680dfaf4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\50\97c27ccfc9c4b88f27b167f32dbe072fdc9a48 ---
--- Nom du fichier: 97c27ccfc9c4b88f27b167f32dbe072fdc9a48 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\50\d4d093be71f89fbed1c76e5f0657d9221013d6 ---
--- Nom du fichier: d4d093be71f89fbed1c76e5f0657d9221013d6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\51\22fa7d904ad0bc917265ed4816a56cbe238c80 ---
--- Nom du fichier: 22fa7d904ad0bc917265ed4816a56cbe238c80 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\51\57ee19bd819e10adde091356671481dc8a14af ---
--- Nom du fichier: 57ee19bd819e10adde091356671481dc8a14af ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\51\c6b94156c9d99f6c5f7e994366603d87626a7a ---
--- Nom du fichier: c6b94156c9d99f6c5f7e994366603d87626a7a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\51\c7f689afea48672fed1fbfac203a5fb64aea48 ---
--- Nom du fichier: c7f689afea48672fed1fbfac203a5fb64aea48 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\51\fe2e49d430ed2c8f879677dcb7a135024e7d46 ---
--- Nom du fichier: fe2e49d430ed2c8f879677dcb7a135024e7d46 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\52\1fbe915cd8d71af94b78d6e41704527b825cd3 ---
--- Nom du fichier: 1fbe915cd8d71af94b78d6e41704527b825cd3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\52\21cf87d4c3ea8eb93e49e2ae921c3c35d06d40 ---
--- Nom du fichier: 21cf87d4c3ea8eb93e49e2ae921c3c35d06d40 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\52\4853b15d74770d1fa0c13e7bc0822ae4b2296c ---
--- Nom du fichier: 4853b15d74770d1fa0c13e7bc0822ae4b2296c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\52\6a4840725a4e3c6bac3b6d05d98bb74070af98 ---
--- Nom du fichier: 6a4840725a4e3c6bac3b6d05d98bb74070af98 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\52\6bba9301c4e4bcce2a4721e69d4e97134711f1 ---
--- Nom du fichier: 6bba9301c4e4bcce2a4721e69d4e97134711f1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\52\7237393b8830f20f81ff493a3ac942d9aad282 ---
--- Nom du fichier: 7237393b8830f20f81ff493a3ac942d9aad282 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\52\7d65ba850a7c38c99c5739a67e26bbf556c931 ---
--- Nom du fichier: 7d65ba850a7c38c99c5739a67e26bbf556c931 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\52\7e1f74f00508c783e5de914de71f31c00bb326 ---
--- Nom du fichier: 7e1f74f00508c783e5de914de71f31c00bb326 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\52\a46ad6d6dad667c4e805b4b04a8a5684adca4c ---
--- Nom du fichier: a46ad6d6dad667c4e805b4b04a8a5684adca4c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\52\bc8f939e8675ef1ea667911be211901ce3b40a ---
--- Nom du fichier: bc8f939e8675ef1ea667911be211901ce3b40a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\52\dab01c0a8dbafa075faa7ddaeba6e1d16c753e ---
--- Nom du fichier: dab01c0a8dbafa075faa7ddaeba6e1d16c753e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\53\0b33bb3db108259959d5719de585d9dd9d3dc0 ---
--- Nom du fichier: 0b33bb3db108259959d5719de585d9dd9d3dc0 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\53\5af9f9211b998be4bb439adbaab8b703d59d21 ---
--- Nom du fichier: 5af9f9211b998be4bb439adbaab8b703d59d21 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\53\65f3c3a74601393d4326e3e53b7d87884c0feb ---
--- Nom du fichier: 65f3c3a74601393d4326e3e53b7d87884c0feb ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\53\6f4c869b2d137444f8320ec1fb1c81ec5bb793 ---
--- Nom du fichier: 6f4c869b2d137444f8320ec1fb1c81ec5bb793 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\53\8940bfa277f5f75ec0c203d53f8abdd379f276 ---
--- Nom du fichier: 8940bfa277f5f75ec0c203d53f8abdd379f276 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\53\9575e6ba653414380c8c3fcce6956981f1be45 ---
--- Nom du fichier: 9575e6ba653414380c8c3fcce6956981f1be45 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\53\b5fb06f370fc99000b5aec9b759feaea44a8c5 ---
--- Nom du fichier: b5fb06f370fc99000b5aec9b759feaea44a8c5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\53\ec8ce86ce6d8d6a08c8302c742fee51a9a67c3 ---
--- Nom du fichier: ec8ce86ce6d8d6a08c8302c742fee51a9a67c3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\54\00c5d71d2c683778c614eee5320c4c0230be7d ---
--- Nom du fichier: 00c5d71d2c683778c614eee5320c4c0230be7d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\54\1d6474e45749940e7f3c277392746fc818b4df ---
--- Nom du fichier: 1d6474e45749940e7f3c277392746fc818b4df ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\54\4464c5ec619ff02e38e9dc9a30eb45286c861a ---
--- Nom du fichier: 4464c5ec619ff02e38e9dc9a30eb45286c861a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\54\82369f1b3c820221fddcbc9aac4b419cabe6ae ---
--- Nom du fichier: 82369f1b3c820221fddcbc9aac4b419cabe6ae ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\54\9500426ab8191a68163ff30914be5f8032e482 ---
--- Nom du fichier: 9500426ab8191a68163ff30914be5f8032e482 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\54\c283eaf0adf72b0f1c42f7ae43e8b07ff15ab9 ---
--- Nom du fichier: c283eaf0adf72b0f1c42f7ae43e8b07ff15ab9 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\54\e180c14847e332c018475608a9b5875a05bc2c ---
--- Nom du fichier: e180c14847e332c018475608a9b5875a05bc2c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\55\14a186f6b5d5abf75dcac4efa3a4b867593d51 ---
--- Nom du fichier: 14a186f6b5d5abf75dcac4efa3a4b867593d51 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\55\21b8f4877422ba9996880e940b67cdba7a907c ---
--- Nom du fichier: 21b8f4877422ba9996880e940b67cdba7a907c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\55\9c13cf294ebe6862bfcfa23b4f614f2953fc12 ---
--- Nom du fichier: 9c13cf294ebe6862bfcfa23b4f614f2953fc12 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\55\c95382201371ef5424cf4ee628c29cb859bbeb ---
--- Nom du fichier: c95382201371ef5424cf4ee628c29cb859bbeb ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\56\213c9d0d951b7045370c2bc1182cb136136ff9 ---
--- Nom du fichier: 213c9d0d951b7045370c2bc1182cb136136ff9 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\56\30f12430ce8d0460d7e121563bfcd748ae025e ---
--- Nom du fichier: 30f12430ce8d0460d7e121563bfcd748ae025e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\56\43fe72bd7bb4fca7504a856e6d0d175e77f2a7 ---
--- Nom du fichier: 43fe72bd7bb4fca7504a856e6d0d175e77f2a7 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\56\4b5f42ccc53824e97290e198b6f283626b2ce4 ---
--- Nom du fichier: 4b5f42ccc53824e97290e198b6f283626b2ce4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\56\8443552e08bd0a55631d308ce4af075b5432d8 ---
--- Nom du fichier: 8443552e08bd0a55631d308ce4af075b5432d8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\56\ee98824993178ef7e9935c6639706784c285ab ---
--- Nom du fichier: ee98824993178ef7e9935c6639706784c285ab ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\57\0606ea9f7451ecad0305a1907c3d930b37891f ---
--- Nom du fichier: 0606ea9f7451ecad0305a1907c3d930b37891f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\57\0b30f67cc437b922136cea1e5a323f02581541 ---
--- Nom du fichier: 0b30f67cc437b922136cea1e5a323f02581541 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\57\1f80612ea5e0d2d6867e9234ddf6a607bab804 ---
--- Nom du fichier: 1f80612ea5e0d2d6867e9234ddf6a607bab804 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\57\30139a79278717b2f08ca76c0840479b320f60 ---
--- Nom du fichier: 30139a79278717b2f08ca76c0840479b320f60 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\57\5f3e688e15f1d38ae16da94d00b25210c23d1d ---
--- Nom du fichier: 5f3e688e15f1d38ae16da94d00b25210c23d1d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\57\6a84ac220f45da716324f10a679d0fc2193c3d ---
--- Nom du fichier: 6a84ac220f45da716324f10a679d0fc2193c3d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\57\9bcb0ac73041c802db34dd37206bc4919dcc26 ---
--- Nom du fichier: 9bcb0ac73041c802db34dd37206bc4919dcc26 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\57\e51ced435c035f672847d2c7262206a8e6aac1 ---
--- Nom du fichier: e51ced435c035f672847d2c7262206a8e6aac1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\57\ee50b350ed1c6ad422574c537d7198173a31cc ---
--- Nom du fichier: ee50b350ed1c6ad422574c537d7198173a31cc ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\58\198f5c7fe473e1ac455a828568635d768517da ---
--- Nom du fichier: 198f5c7fe473e1ac455a828568635d768517da ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\58\6ae3bef09074924b44cfcb8773fa912a61426e ---
--- Nom du fichier: 6ae3bef09074924b44cfcb8773fa912a61426e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\58\7e9293b0795da79c2afc55adbd51fffe62707b ---
--- Nom du fichier: 7e9293b0795da79c2afc55adbd51fffe62707b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\58\b0f2100d68f1aa85124ede1421e228d25fa9f0 ---
--- Nom du fichier: b0f2100d68f1aa85124ede1421e228d25fa9f0 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\58\eb2d027de952ea2703b2bd8390e11ca5279922 ---
--- Nom du fichier: eb2d027de952ea2703b2bd8390e11ca5279922 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\58\f1c8b31d276a8fe5b6fb2978be545cc19928d0 ---
--- Nom du fichier: f1c8b31d276a8fe5b6fb2978be545cc19928d0 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\59\c038ff3b7f8b7ecdd9c68e36bb6fd3552a231b ---
--- Nom du fichier: c038ff3b7f8b7ecdd9c68e36bb6fd3552a231b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\59\cc3415c5d222d39e98b960d467cea3a30435ea ---
--- Nom du fichier: cc3415c5d222d39e98b960d467cea3a30435ea ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\59\f5840092d2723a53637a6311672230b9659d02 ---
--- Nom du fichier: f5840092d2723a53637a6311672230b9659d02 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5a\29eb6c227e3e58c74a63cbf86d654e0f75a3e7 ---
--- Nom du fichier: 29eb6c227e3e58c74a63cbf86d654e0f75a3e7 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5a\33e8183a5996954a4a979b2c41eec6ed5aa826 ---
--- Nom du fichier: 33e8183a5996954a4a979b2c41eec6ed5aa826 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5a\a5aa3561cc82cd47a3501e0f93d4a33adb18c5 ---
--- Nom du fichier: a5aa3561cc82cd47a3501e0f93d4a33adb18c5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5b\41ad45121bbc89fcd45edc44c286568cbaacff ---
--- Nom du fichier: 41ad45121bbc89fcd45edc44c286568cbaacff ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5b\4a1ed4ac2f25b9c5a34326b1ff5765fd533881 ---
--- Nom du fichier: 4a1ed4ac2f25b9c5a34326b1ff5765fd533881 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5b\6490ff93261960419384bfc17f6aba7e793c64 ---
--- Nom du fichier: 6490ff93261960419384bfc17f6aba7e793c64 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5b\85367ced0848e328e6b1274c08720b6201f1d0 ---
--- Nom du fichier: 85367ced0848e328e6b1274c08720b6201f1d0 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5b\b056588f5d20ebf056574087a891cdb5b2e6b6 ---
--- Nom du fichier: b056588f5d20ebf056574087a891cdb5b2e6b6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5b\c0deb49f20bc38d4acc45317455d876f8a097e ---
--- Nom du fichier: c0deb49f20bc38d4acc45317455d876f8a097e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5b\d735b0680d7e9fcb6c9b703cdcd6cbb6d312e7 ---
--- Nom du fichier: d735b0680d7e9fcb6c9b703cdcd6cbb6d312e7 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5b\d80ab9b479cc916cc370a7ff8e6c4fe791b313 ---
--- Nom du fichier: d80ab9b479cc916cc370a7ff8e6c4fe791b313 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5c\40a7f5ad1134be461ce3d48c887afeb7cfa32b ---
--- Nom du fichier: 40a7f5ad1134be461ce3d48c887afeb7cfa32b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5c\53de0c816e4b258e661fc8e0a95f1155e9c1a2 ---
--- Nom du fichier: 53de0c816e4b258e661fc8e0a95f1155e9c1a2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5c\54c2a7ab4b7d82424de849c8a75dfc663152f8 ---
--- Nom du fichier: 54c2a7ab4b7d82424de849c8a75dfc663152f8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5c\761c4338cb577168e8b53767d84b9458295dcc ---
--- Nom du fichier: 761c4338cb577168e8b53767d84b9458295dcc ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5c\b56558d8275d230dba647b0ab5aa3b6c988de8 ---
--- Nom du fichier: b56558d8275d230dba647b0ab5aa3b6c988de8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5c\dfeb4ba9645b6e838d85fecf65520cedad9e7b ---
--- Nom du fichier: dfeb4ba9645b6e838d85fecf65520cedad9e7b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5d\16eb4bedb46ed43567a4da9404f06cfb1c05b6 ---
--- Nom du fichier: 16eb4bedb46ed43567a4da9404f06cfb1c05b6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5d\5814e104cf11149d5ce777b2279b0137463248 ---
--- Nom du fichier: 5814e104cf11149d5ce777b2279b0137463248 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5d\63a279abcef6a3d1704046a754bac37a55f327 ---
--- Nom du fichier: 63a279abcef6a3d1704046a754bac37a55f327 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5d\72e318c507210089503b90d325d18e02b9ec3a ---
--- Nom du fichier: 72e318c507210089503b90d325d18e02b9ec3a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5d\88fffd00c923a481abaa224f71d466b1d3fe82 ---
--- Nom du fichier: 88fffd00c923a481abaa224f71d466b1d3fe82 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5d\a48237e82d87063e48f3b9735fd9845037ff5f ---
--- Nom du fichier: a48237e82d87063e48f3b9735fd9845037ff5f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5d\a70fd60bf2e39323742c8b70d3dd97cddac050 ---
--- Nom du fichier: a70fd60bf2e39323742c8b70d3dd97cddac050 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5d\b22e510e99613e5c101087d32a965bea693046 ---
--- Nom du fichier: b22e510e99613e5c101087d32a965bea693046 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5d\cee91d5cf26d5dfa5297a3e288b98662afbe72 ---
--- Nom du fichier: cee91d5cf26d5dfa5297a3e288b98662afbe72 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5e\4975edb00eb65bd38a20f889adafcf3a7271ef ---
--- Nom du fichier: 4975edb00eb65bd38a20f889adafcf3a7271ef ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5e\4f2d5656fa1b7df70e48d6443a8d4f874865e0 ---
--- Nom du fichier: 4f2d5656fa1b7df70e48d6443a8d4f874865e0 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5f\1b771a53510397bc6cc24c3a0f4dcf435ddf11 ---
--- Nom du fichier: 1b771a53510397bc6cc24c3a0f4dcf435ddf11 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5f\35ed9900fbe6235c10aa46dbf20857f334196a ---
--- Nom du fichier: 35ed9900fbe6235c10aa46dbf20857f334196a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5f\47139b7684695a0a42372ffb0d29fb8f462391 ---
--- Nom du fichier: 47139b7684695a0a42372ffb0d29fb8f462391 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5f\514e6e8e993b0dfb6114f891a550c6fb3b6331 ---
--- Nom du fichier: 514e6e8e993b0dfb6114f891a550c6fb3b6331 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5f\6b56ca1ba8c2278e31720f42fe226def02e329 ---
--- Nom du fichier: 6b56ca1ba8c2278e31720f42fe226def02e329 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5f\8df7c9e7c8f224427a7da8902ee1e096304e0b ---
--- Nom du fichier: 8df7c9e7c8f224427a7da8902ee1e096304e0b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5f\a4523bcce9bac9acd3f1ef28fc47e7c4ef621b ---
--- Nom du fichier: a4523bcce9bac9acd3f1ef28fc47e7c4ef621b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5f\ce6757ea320cc5703fe8a55b69edc93c675460 ---
--- Nom du fichier: ce6757ea320cc5703fe8a55b69edc93c675460 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5f\d266149fb50e70fa7b6685f51f3d0a11648aae ---
--- Nom du fichier: d266149fb50e70fa7b6685f51f3d0a11648aae ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\5f\df094ad552ce9ee4a7eb72d1f4cd8a7ad23e7a ---
--- Nom du fichier: df094ad552ce9ee4a7eb72d1f4cd8a7ad23e7a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\60\2366d6b9be609826fea05981e10b7c8f685e45 ---
--- Nom du fichier: 2366d6b9be609826fea05981e10b7c8f685e45 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\60\8dedf924df61808764165448c13927e92f7637 ---
--- Nom du fichier: 8dedf924df61808764165448c13927e92f7637 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\60\a6239d9c74a6482449a1076220d79247c4b224 ---
--- Nom du fichier: a6239d9c74a6482449a1076220d79247c4b224 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\60\baee86f311748d9f983b5610e3bd568bea77ca ---
--- Nom du fichier: baee86f311748d9f983b5610e3bd568bea77ca ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\61\12c7bd2a616ec0854e4726bfd06d5183b58437 ---
--- Nom du fichier: 12c7bd2a616ec0854e4726bfd06d5183b58437 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\61\246d7f8d5949522f0ff08152ce328053837734 ---
--- Nom du fichier: 246d7f8d5949522f0ff08152ce328053837734 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\61\45d8b7bbdcdf06931fc0913056199cf5d1263b ---
--- Nom du fichier: 45d8b7bbdcdf06931fc0913056199cf5d1263b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\61\4826a275125c592afdddaa92aada394f9be635 ---
--- Nom du fichier: 4826a275125c592afdddaa92aada394f9be635 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\61\4d8b9c3b555991f8fb7da7fc5a8f06b8cd9cf4 ---
--- Nom du fichier: 4d8b9c3b555991f8fb7da7fc5a8f06b8cd9cf4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\61\584fd01b9fd10ec6e8c3e3ed29d78d49c5c72f ---
--- Nom du fichier: 584fd01b9fd10ec6e8c3e3ed29d78d49c5c72f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\61\636d5cadff17715032a5cbf8b29f89ccd79a29 ---
--- Nom du fichier: 636d5cadff17715032a5cbf8b29f89ccd79a29 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\61\6e02e1824b7680814150b307250ad959597c53 ---
--- Nom du fichier: 6e02e1824b7680814150b307250ad959597c53 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\61\6f91f55b8b0e5bdce25f154d8f4c7f944ebecb ---
--- Nom du fichier: 6f91f55b8b0e5bdce25f154d8f4c7f944ebecb ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\61\b410fb7157179efc9cb78f2e479505ae4b90d2 ---
--- Nom du fichier: b410fb7157179efc9cb78f2e479505ae4b90d2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\62\1edf5dc9ad5eaa10b63da5feaea3b5a5bd7b4f ---
--- Nom du fichier: 1edf5dc9ad5eaa10b63da5feaea3b5a5bd7b4f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\62\2b9f0a4d879fa040a8967b3018918f6870a619 ---
--- Nom du fichier: 2b9f0a4d879fa040a8967b3018918f6870a619 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\62\650f32b6c2f5567edb6173311ed957219c6a4e ---
--- Nom du fichier: 650f32b6c2f5567edb6173311ed957219c6a4e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\62\a45d8d1409d2c6f6af05128e3124c5dd09d018 ---
--- Nom du fichier: a45d8d1409d2c6f6af05128e3124c5dd09d018 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\62\de9d1a00613f5693f63ad16a2e28b024170aac ---
--- Nom du fichier: de9d1a00613f5693f63ad16a2e28b024170aac ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\62\fa0be9ef0233d2ab7f39b6a14b6afde2821da3 ---
--- Nom du fichier: fa0be9ef0233d2ab7f39b6a14b6afde2821da3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\62\fe8256d41485d4477f2190c0ba1437edfd6734 ---
--- Nom du fichier: fe8256d41485d4477f2190c0ba1437edfd6734 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\63\2ce3c1fa0afbdc39e580f28c11c611ae2048ea ---
--- Nom du fichier: 2ce3c1fa0afbdc39e580f28c11c611ae2048ea ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\63\7095388d453d11a085723e3ada5ea527bad617 ---
--- Nom du fichier: 7095388d453d11a085723e3ada5ea527bad617 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\63\bab34dcf08d5eba439da2567b58789a17e9bce ---
--- Nom du fichier: bab34dcf08d5eba439da2567b58789a17e9bce ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\63\c2b2235ee39061936bdcaa583b82f8a6006256 ---
--- Nom du fichier: c2b2235ee39061936bdcaa583b82f8a6006256 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\63\e7780c9708ab5933c110fb1324e830b5db64c1 ---
--- Nom du fichier: e7780c9708ab5933c110fb1324e830b5db64c1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\63\f0aaed653f22f847e0387c12c2eb5b584f2e1f ---
--- Nom du fichier: f0aaed653f22f847e0387c12c2eb5b584f2e1f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\64\2f43d24d4baa57b573b4a5eaa8bd06d3bb1437 ---
--- Nom du fichier: 2f43d24d4baa57b573b4a5eaa8bd06d3bb1437 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\64\4dc250e6789dd5bec706a10cf40e5cd549c6f4 ---
--- Nom du fichier: 4dc250e6789dd5bec706a10cf40e5cd549c6f4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\64\4f99dfd17dbcadc50db4c22ea689c5be927e9f ---
--- Nom du fichier: 4f99dfd17dbcadc50db4c22ea689c5be927e9f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\64\5489212fa019e60b13b1e69b59c081524b703b ---
--- Nom du fichier: 5489212fa019e60b13b1e69b59c081524b703b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\64\68a62996ebdb2a6c3f298457f52ebc2f7d5ed5 ---
--- Nom du fichier: 68a62996ebdb2a6c3f298457f52ebc2f7d5ed5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\64\bab670b4fcbd2ecf9c6717cf7cd47c62b01c14 ---
--- Nom du fichier: bab670b4fcbd2ecf9c6717cf7cd47c62b01c14 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\64\f3081165873323b5f23e922d63b6a83887b499 ---
--- Nom du fichier: f3081165873323b5f23e922d63b6a83887b499 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\64\f5fa5db820776fe2364c4126ebf5f761865ccc ---
--- Nom du fichier: f5fa5db820776fe2364c4126ebf5f761865ccc ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\65\09295ce7596729ebe59dfc7e5d3ab8031ead8b ---
--- Nom du fichier: 09295ce7596729ebe59dfc7e5d3ab8031ead8b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\65\0be167ebb6f1d47c8446306effff6e43e5060a ---
--- Nom du fichier: 0be167ebb6f1d47c8446306effff6e43e5060a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\65\166285e53d6232180ed382136f987b96e28017 ---
--- Nom du fichier: 166285e53d6232180ed382136f987b96e28017 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\65\180a9220d19a7e2b1d714583ab4bdb4eed43d9 ---
--- Nom du fichier: 180a9220d19a7e2b1d714583ab4bdb4eed43d9 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\65\3bb89bfb1e4813125640600c78711d9a7f0e65 ---
--- Nom du fichier: 3bb89bfb1e4813125640600c78711d9a7f0e65 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\65\8e470c205102cff923deeca4d8fe5c19106763 ---
--- Nom du fichier: 8e470c205102cff923deeca4d8fe5c19106763 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\65\8fb19be6b0ef4c1ba55d2bab8abe3fa509da16 ---
--- Nom du fichier: 8fb19be6b0ef4c1ba55d2bab8abe3fa509da16 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\65\a7092485567ee2d18bd8b3c6b95cbbcb2f4e2d ---
--- Nom du fichier: a7092485567ee2d18bd8b3c6b95cbbcb2f4e2d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\65\abd372cf56dacef0f28a0b95adc65faf0997bd ---
--- Nom du fichier: abd372cf56dacef0f28a0b95adc65faf0997bd ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\65\b41bc551cf2ffe8d82a2c10e73df7b16a6c0b1 ---
--- Nom du fichier: b41bc551cf2ffe8d82a2c10e73df7b16a6c0b1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\65\b677c6d9f3e90e7569d4c48557149ee56ce9bd ---
--- Nom du fichier: b677c6d9f3e90e7569d4c48557149ee56ce9bd ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\65\e64a8700960c30dba280374cb5f45d7d415695 ---
--- Nom du fichier: e64a8700960c30dba280374cb5f45d7d415695 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\65\f33fbf54bab4adfb8766fdec5e87ca4510b7e7 ---
--- Nom du fichier: f33fbf54bab4adfb8766fdec5e87ca4510b7e7 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\66\53125dfc6f587745b128f039ebaa43c6497b7f ---
--- Nom du fichier: 53125dfc6f587745b128f039ebaa43c6497b7f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\66\8db6d1353f4b29dd5aed64720c5f78d624322c ---
--- Nom du fichier: 8db6d1353f4b29dd5aed64720c5f78d624322c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\66\8dcd45c96c40c4b1855775dfc1e921aa71591d ---
--- Nom du fichier: 8dcd45c96c40c4b1855775dfc1e921aa71591d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\66\c820443eb623a773157739fdb5f2ddd68ad84b ---
--- Nom du fichier: c820443eb623a773157739fdb5f2ddd68ad84b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\66\e9519338d70d9b1ef1187a899a266cdf4c1a51 ---
--- Nom du fichier: e9519338d70d9b1ef1187a899a266cdf4c1a51 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\67\206dc8fe941ea9f7bb3682f21e4ed45c0199b7 ---
--- Nom du fichier: 206dc8fe941ea9f7bb3682f21e4ed45c0199b7 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\67\29576d36a9cc77d0d41ccc2b1fd7eedf3949df ---
--- Nom du fichier: 29576d36a9cc77d0d41ccc2b1fd7eedf3949df ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\67\3b4d81f730e1dbf9f96a1f21236cc1004f7aec ---
--- Nom du fichier: 3b4d81f730e1dbf9f96a1f21236cc1004f7aec ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\67\4b44ce0f86afcc3c715c59caeccb8c05b4b3e2 ---
--- Nom du fichier: 4b44ce0f86afcc3c715c59caeccb8c05b4b3e2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\67\5e5d16d06619900a5ba48093052b3c042b8d8e ---
--- Nom du fichier: 5e5d16d06619900a5ba48093052b3c042b8d8e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\67\c610a373962f6a43ed5043692d399bf0846b95 ---
--- Nom du fichier: c610a373962f6a43ed5043692d399bf0846b95 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\67\d55eb1a3b2d3386ca4afb62a37e7819fb029ff ---
--- Nom du fichier: d55eb1a3b2d3386ca4afb62a37e7819fb029ff ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\67\dbb363c5d8de4bb85dd032076a1fb6ebb30041 ---
--- Nom du fichier: dbb363c5d8de4bb85dd032076a1fb6ebb30041 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\68\0ac17ff4540bf5a08e9a83b232fdda6fe0c576 ---
--- Nom du fichier: 0ac17ff4540bf5a08e9a83b232fdda6fe0c576 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\68\1a05c809f69ac9515136837ba4eb11db2c147f ---
--- Nom du fichier: 1a05c809f69ac9515136837ba4eb11db2c147f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\68\21928127b359dcc05a83528edc5eb1a9188dd1 ---
--- Nom du fichier: 21928127b359dcc05a83528edc5eb1a9188dd1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\68\799facd2e34df3736bb164eb212ba1857267aa ---
--- Nom du fichier: 799facd2e34df3736bb164eb212ba1857267aa ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\68\7dce8a8214657addc46d6179652f3c5c5bcb76 ---
--- Nom du fichier: 7dce8a8214657addc46d6179652f3c5c5bcb76 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\68\83cd3d016327b191c23cf23b7d59a69efa9206 ---
--- Nom du fichier: 83cd3d016327b191c23cf23b7d59a69efa9206 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\68\acee46a9ba0b8f1571e150d8e376dc3f3fa7bc ---
--- Nom du fichier: acee46a9ba0b8f1571e150d8e376dc3f3fa7bc ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\68\be8dc8198d672720edcea584a592d30a80e367 ---
--- Nom du fichier: be8dc8198d672720edcea584a592d30a80e367 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\68\dbfc65b216035cc493a3a636797320d67f882c ---
--- Nom du fichier: dbfc65b216035cc493a3a636797320d67f882c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\69\001f886c8b3b02ce022d0488fd4c0501447383 ---
--- Nom du fichier: 001f886c8b3b02ce022d0488fd4c0501447383 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\69\2875fb63ff0b00b85fbc1ff3ce93a812cee3cf ---
--- Nom du fichier: 2875fb63ff0b00b85fbc1ff3ce93a812cee3cf ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\69\341d6d81aed390e6c716b7fe17fd023723e7d5 ---
--- Nom du fichier: 341d6d81aed390e6c716b7fe17fd023723e7d5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\69\67842ab1fc60e79a30beb85b70206e18bbf5d2 ---
--- Nom du fichier: 67842ab1fc60e79a30beb85b70206e18bbf5d2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\69\744adbf5c2790c1a6cabbd14af47b82c248fda ---
--- Nom du fichier: 744adbf5c2790c1a6cabbd14af47b82c248fda ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\69\8192674886d87f9f4290e9c174a163fad72916 ---
--- Nom du fichier: 8192674886d87f9f4290e9c174a163fad72916 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\69\95cd68a942497a969d2aaa9962eab93634b56a ---
--- Nom du fichier: 95cd68a942497a969d2aaa9962eab93634b56a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\69\f49515e401b12f52f647d6de0a01331819774b ---
--- Nom du fichier: f49515e401b12f52f647d6de0a01331819774b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\69\f9d820e655d69efedd7b4ebf23f500db3fb687 ---
--- Nom du fichier: f9d820e655d69efedd7b4ebf23f500db3fb687 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\69\fbb02696d7d797f457f7e1578073901fdc52db ---
--- Nom du fichier: fbb02696d7d797f457f7e1578073901fdc52db ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\6a\3b430098b6d07d89f1b3bc3d737f05f3851dbc ---
--- Nom du fichier: 3b430098b6d07d89f1b3bc3d737f05f3851dbc ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\6a\41ac848d13d42087671b9c60eae3df75a0ca57 ---
--- Nom du fichier: 41ac848d13d42087671b9c60eae3df75a0ca57 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\6a\435047dbda272f05a457dd0d6144a3300b63a0 ---
--- Nom du fichier: 435047dbda272f05a457dd0d6144a3300b63a0 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\6a\44f2a1689f09be470527b37349837f3cac0f8c ---
--- Nom du fichier: 44f2a1689f09be470527b37349837f3cac0f8c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\6a\55c86554da6e3d731200f99b220298eacd9329 ---
--- Nom du fichier: 55c86554da6e3d731200f99b220298eacd9329 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\6a\a0f7dfdb8e7b31c41e1d3c46c6e8a398347cac ---
--- Nom du fichier: a0f7dfdb8e7b31c41e1d3c46c6e8a398347cac ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\6a\d395aae0088ba1c7bfbc84e8d3de41a4e2b78f ---
--- Nom du fichier: d395aae0088ba1c7bfbc84e8d3de41a4e2b78f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\6a\ddb3dc29e5598315fa9842445c46a33f399590 ---
--- Nom du fichier: ddb3dc29e5598315fa9842445c46a33f399590 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\6a\fa6db7a5eb5441a5c82ed2af366d3eecaf9130 ---
--- Nom du fichier: fa6db7a5eb5441a5c82ed2af366d3eecaf9130 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\6b\c2b5f868bec44a25040f1cea0f4e073f6ff328 ---
--- Nom du fichier: c2b5f868bec44a25040f1cea0f4e073f6ff328 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\6b\cf8eef22bb9942ce4c637a8c293140bce26463 ---
--- Nom du fichier: cf8eef22bb9942ce4c637a8c293140bce26463 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\6b\fa34650d6032c9830f84e2197610add5a180b0 ---
--- Nom du fichier: fa34650d6032c9830f84e2197610add5a180b0 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\6b\fb813a2f73fa07957894eacbcaa0aebedd251d ---
--- Nom du fichier: fb813a2f73fa07957894eacbcaa0aebedd251d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\6c\386a46a24de072fda5ab0220a263c11f2e8d7d ---
--- Nom du fichier: 386a46a24de072fda5ab0220a263c11f2e8d7d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\6c\508c2495c292d5523fb1f80e2871929f0626aa ---
--- Nom du fichier: 508c2495c292d5523fb1f80e2871929f0626aa ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\6c\746d2ec101e3062929e61bfa9564ce4456ca78 ---
--- Nom du fichier: 746d2ec101e3062929e61bfa9564ce4456ca78 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\6c\a6d7b89765ab568decce29c3922e87bb261f4c ---
--- Nom du fichier: a6d7b89765ab568decce29c3922e87bb261f4c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\6c\aac80858941bc945d4ac78825f822e8bcd8079 ---
--- Nom du fichier: aac80858941bc945d4ac78825f822e8bcd8079 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\6c\aae611aa0f9a39c9a13a223473110783b09fe3 ---
--- Nom du fichier: aae611aa0f9a39c9a13a223473110783b09fe3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\6c\f8948360e37ef41ea668b8a891a060f7f61ee3 ---
--- Nom du fichier: f8948360e37ef41ea668b8a891a060f7f61ee3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\6c\fe8c65e942c2214a7a97a02012074b4a4d1242 ---
--- Nom du fichier: fe8c65e942c2214a7a97a02012074b4a4d1242 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\6d\07dc6f0ba3d1764b2ec74237d572a4f0ef0074 ---
--- Nom du fichier: 07dc6f0ba3d1764b2ec74237d572a4f0ef0074 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\6d\10aeadc4c09cbd7b38b996d22654b957856aec ---
--- Nom du fichier: 10aeadc4c09cbd7b38b996d22654b957856aec ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\6d\fd80c8ed567083635991efe3017f46d90d635a ---
--- Nom du fichier: fd80c8ed567083635991efe3017f46d90d635a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\6d\ffbf62f52b39ead210039b47ac25ccf61b947a ---
--- Nom du fichier: ffbf62f52b39ead210039b47ac25ccf61b947a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\6e\16b9f03c40227c87c5ce5dd475cd5ef12cf6c2 ---
--- Nom du fichier: 16b9f03c40227c87c5ce5dd475cd5ef12cf6c2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\6e\480fe05724ec0c88ced495589ca1a8937dd562 ---
--- Nom du fichier: 480fe05724ec0c88ced495589ca1a8937dd562 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\6e\6d3c963768943633e013e0d7c8659925e27ef1 ---
--- Nom du fichier: 6d3c963768943633e013e0d7c8659925e27ef1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\6e\a4d13250366cd6828548d6bb55dae6be69aef5 ---
--- Nom du fichier: a4d13250366cd6828548d6bb55dae6be69aef5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\6e\c6a0b5b3bc5c6cdc08d28a4f4f814718612c88 ---
--- Nom du fichier: c6a0b5b3bc5c6cdc08d28a4f4f814718612c88 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\6e\f4d80014dbf7ca7985e372b914cbb4c0632677 ---
--- Nom du fichier: f4d80014dbf7ca7985e372b914cbb4c0632677 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\6f\5ce518c8555a75df22cba88fa26a614601bf86 ---
--- Nom du fichier: 5ce518c8555a75df22cba88fa26a614601bf86 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\6f\89de35941a793d0dd53687a4d6b4ac3d020b59 ---
--- Nom du fichier: 89de35941a793d0dd53687a4d6b4ac3d020b59 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\70\1b8cc1c3f6df088c37a60203127acfaead5a77 ---
--- Nom du fichier: 1b8cc1c3f6df088c37a60203127acfaead5a77 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\70\4445894f5a4ca7b22a8f3fe7d34d11077d60a3 ---
--- Nom du fichier: 4445894f5a4ca7b22a8f3fe7d34d11077d60a3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\70\4c51573e3df11d12c24a72fcdce7189c71d2c1 ---
--- Nom du fichier: 4c51573e3df11d12c24a72fcdce7189c71d2c1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\70\a859329fd447d578871c2cabddfc5d14026b99 ---
--- Nom du fichier: a859329fd447d578871c2cabddfc5d14026b99 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\70\d052a9a877f65e54e315854114e9779868bfb1 ---
--- Nom du fichier: d052a9a877f65e54e315854114e9779868bfb1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\70\e5bdace0a2b838f7a5fa201dc314741b743f6e ---
--- Nom du fichier: e5bdace0a2b838f7a5fa201dc314741b743f6e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\71\577badd84664b699a5865af88ca3c53ed98e09 ---
--- Nom du fichier: 577badd84664b699a5865af88ca3c53ed98e09 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\71\7455301252739512c0db99db53ca3463ccb285 ---
--- Nom du fichier: 7455301252739512c0db99db53ca3463ccb285 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\71\a2887131a63b4c9ad8e7f70b46338e7d14eb57 ---
--- Nom du fichier: a2887131a63b4c9ad8e7f70b46338e7d14eb57 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\71\a374b1da5ad421a4af4dcca07d37730f619018 ---
--- Nom du fichier: a374b1da5ad421a4af4dcca07d37730f619018 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\71\c7cce107d267a8478a72905682d579640678bd ---
--- Nom du fichier: c7cce107d267a8478a72905682d579640678bd ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\71\cb81cb62f5980c1b6831fc78af8af465ad0451 ---
--- Nom du fichier: cb81cb62f5980c1b6831fc78af8af465ad0451 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\71\e22a0af410408efb514584f907e415756181e1 ---
--- Nom du fichier: e22a0af410408efb514584f907e415756181e1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\72\0311c08ae4122fe6ef4e5b5fb1043ba3e4a7e7 ---
--- Nom du fichier: 0311c08ae4122fe6ef4e5b5fb1043ba3e4a7e7 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\72\6e91b558486778bd3a1a6dd36f1c63861928bc ---
--- Nom du fichier: 6e91b558486778bd3a1a6dd36f1c63861928bc ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\72\bd4e65b72a1e9d6f778d2f3cf5708e4fc95dbb ---
--- Nom du fichier: bd4e65b72a1e9d6f778d2f3cf5708e4fc95dbb ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\72\c98d09a45dc3a8bc2072790d69a2e157b9f94f ---
--- Nom du fichier: c98d09a45dc3a8bc2072790d69a2e157b9f94f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\72\e1a2fbbe1d17db33553f857fc2399ec8a3c9c9 ---
--- Nom du fichier: e1a2fbbe1d17db33553f857fc2399ec8a3c9c9 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\72\ecc776042bdebae2657b29da70fdb4792d28b6 ---
--- Nom du fichier: ecc776042bdebae2657b29da70fdb4792d28b6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\72\f4350b817c918fbf8426976108e8286005a3f0 ---
--- Nom du fichier: f4350b817c918fbf8426976108e8286005a3f0 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\73\05a0b03830a9ad56c01335dd3cb03e34de027a ---
--- Nom du fichier: 05a0b03830a9ad56c01335dd3cb03e34de027a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\73\41fbfd29b5fd385de9a77e2a56cd5932f85435 ---
--- Nom du fichier: 41fbfd29b5fd385de9a77e2a56cd5932f85435 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\73\47ad55fc7899d048b94f22d1137fb577e49cbb ---
--- Nom du fichier: 47ad55fc7899d048b94f22d1137fb577e49cbb ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\73\50459dbabd8b48561bb60680f9cf427495b070 ---
--- Nom du fichier: 50459dbabd8b48561bb60680f9cf427495b070 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\73\a255ef36c3debd3e8ff4495474a7e5078021d4 ---
--- Nom du fichier: a255ef36c3debd3e8ff4495474a7e5078021d4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\73\ad33ed18c9c33204dd1bae2d47b90f01e20547 ---
--- Nom du fichier: ad33ed18c9c33204dd1bae2d47b90f01e20547 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\73\cc69861c31881a10775c87e60bdda2ca401f41 ---
--- Nom du fichier: cc69861c31881a10775c87e60bdda2ca401f41 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\73\e807a88d3944e7567bb86c84a11d5f7594c88b ---
--- Nom du fichier: e807a88d3944e7567bb86c84a11d5f7594c88b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\74\0e4d2266dcf82df13cd248d6666f09c95ddd2f ---
--- Nom du fichier: 0e4d2266dcf82df13cd248d6666f09c95ddd2f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\74\16a016671f15e03069ef193adedf412d478dd2 ---
--- Nom du fichier: 16a016671f15e03069ef193adedf412d478dd2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\74\1831ddbe2a03ecbac3808baec6e82988112855 ---
--- Nom du fichier: 1831ddbe2a03ecbac3808baec6e82988112855 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\74\2cebd5be68a9ba43de9dea5a28254048c59d09 ---
--- Nom du fichier: 2cebd5be68a9ba43de9dea5a28254048c59d09 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\74\72c234c0b31303ed1bd42dcda6af645dc15fb9 ---
--- Nom du fichier: 72c234c0b31303ed1bd42dcda6af645dc15fb9 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\74\7ff80798d9be216e4020c6ca7739e87b8cb992 ---
--- Nom du fichier: 7ff80798d9be216e4020c6ca7739e87b8cb992 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\74\90fc57df540d6b9d610e8f848b1a65df7c7705 ---
--- Nom du fichier: 90fc57df540d6b9d610e8f848b1a65df7c7705 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\74\bc268e103a47de84b7bba3fb55f39bd7b30595 ---
--- Nom du fichier: bc268e103a47de84b7bba3fb55f39bd7b30595 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\74\df75818964198aa6b6ee3fa2c962601fddf921 ---
--- Nom du fichier: df75818964198aa6b6ee3fa2c962601fddf921 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\74\e18588f51270966bbc4c35e7bc057db6390082 ---
--- Nom du fichier: e18588f51270966bbc4c35e7bc057db6390082 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\74\e38cc733858b45cf378ef2a1066b43600a20b1 ---
--- Nom du fichier: e38cc733858b45cf378ef2a1066b43600a20b1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\74\eae4ba7b5f67c9522e54c14fd2bbfb29562512 ---
--- Nom du fichier: eae4ba7b5f67c9522e54c14fd2bbfb29562512 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\75\6ea8d086fb0ee9a80e933b609766be3ce52127 ---
--- Nom du fichier: 6ea8d086fb0ee9a80e933b609766be3ce52127 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\75\f61532f9d7280eea90e9aa9b5d9561a58d5a57 ---
--- Nom du fichier: f61532f9d7280eea90e9aa9b5d9561a58d5a57 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\76\5309843532d369e7ca5cee93e78aa820938d41 ---
--- Nom du fichier: 5309843532d369e7ca5cee93e78aa820938d41 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\76\5f86796f7f681de88c316747f13518ee0096f2 ---
--- Nom du fichier: 5f86796f7f681de88c316747f13518ee0096f2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\76\878696e06dca6838146678b88371a9fe0f852f ---
--- Nom du fichier: 878696e06dca6838146678b88371a9fe0f852f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\76\d4a01f8d54bab97910f873c5f7659579d83fbf ---
--- Nom du fichier: d4a01f8d54bab97910f873c5f7659579d83fbf ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\76\d8cc5bd7c53ea8e7b750e75c4adfa2c561fa6e ---
--- Nom du fichier: d8cc5bd7c53ea8e7b750e75c4adfa2c561fa6e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\77\13debdbfa52ea79d84e95476e08dcb37616de2 ---
--- Nom du fichier: 13debdbfa52ea79d84e95476e08dcb37616de2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\77\28fe86d7d6fd83104d8a66bfa1b3bbe6173b3a ---
--- Nom du fichier: 28fe86d7d6fd83104d8a66bfa1b3bbe6173b3a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\77\332d1b4cfb0a7fe276c863752b9ae19cbe4f87 ---
--- Nom du fichier: 332d1b4cfb0a7fe276c863752b9ae19cbe4f87 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\77\3fa31de54318e9289b10198928ff64b8f27fe3 ---
--- Nom du fichier: 3fa31de54318e9289b10198928ff64b8f27fe3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\77\522bf8d13aef58dbdbec34bfe5d40e54323092 ---
--- Nom du fichier: 522bf8d13aef58dbdbec34bfe5d40e54323092 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\77\63ec290da531c4bf7f292ae9c6d4a65b4fd872 ---
--- Nom du fichier: 63ec290da531c4bf7f292ae9c6d4a65b4fd872 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\77\840b6737050186e4a103d76775015edc96289f ---
--- Nom du fichier: 840b6737050186e4a103d76775015edc96289f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\77\a66849b3dacafe4ee886317dafe9c2cf65ef74 ---
--- Nom du fichier: a66849b3dacafe4ee886317dafe9c2cf65ef74 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\77\c6b18171f79f15a43d8d7334a9d85bcfd2b328 ---
--- Nom du fichier: c6b18171f79f15a43d8d7334a9d85bcfd2b328 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\77\cb362141662ea97c0775a0de43ed79b733b9eb ---
--- Nom du fichier: cb362141662ea97c0775a0de43ed79b733b9eb ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\78\0d7838655fdf83eaa102edaca3f9b51d7d20e9 ---
--- Nom du fichier: 0d7838655fdf83eaa102edaca3f9b51d7d20e9 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\78\3f443295e9be76a81a1374c9bbb537367e6fe9 ---
--- Nom du fichier: 3f443295e9be76a81a1374c9bbb537367e6fe9 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\78\66b97077c93939922803421fe34ffaf147c768 ---
--- Nom du fichier: 66b97077c93939922803421fe34ffaf147c768 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\78\94f70a250768e45987e5c111d6a0a3053ced1d ---
--- Nom du fichier: 94f70a250768e45987e5c111d6a0a3053ced1d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\79\6b05436236e4dbb7c06193aba02a4a9d182d78 ---
--- Nom du fichier: 6b05436236e4dbb7c06193aba02a4a9d182d78 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\79\7fab4e8f8517aac050b0e9258bee5a9b3e52f2 ---
--- Nom du fichier: 7fab4e8f8517aac050b0e9258bee5a9b3e52f2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\79\c5ab11d82dc7d60cbd2323c9c2bc58170e80bd ---
--- Nom du fichier: c5ab11d82dc7d60cbd2323c9c2bc58170e80bd ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\79\e7221510a4549bde4b08fdf7dac5d264ac6442 ---
--- Nom du fichier: e7221510a4549bde4b08fdf7dac5d264ac6442 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\7a\93948240e5c9bfcc1b88ed07bbbb5bf12d369f ---
--- Nom du fichier: 93948240e5c9bfcc1b88ed07bbbb5bf12d369f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\7a\ce600508d8a22c5cc0cd7e4fce9c389a796a90 ---
--- Nom du fichier: ce600508d8a22c5cc0cd7e4fce9c389a796a90 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\7a\df6da6aff81b53426211ddbbee9c6a8bde4bf9 ---
--- Nom du fichier: df6da6aff81b53426211ddbbee9c6a8bde4bf9 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\7a\f24376da3d4c97f53789850cae39162632688b ---
--- Nom du fichier: f24376da3d4c97f53789850cae39162632688b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\7b\573267dda5e4ff1b6efca7270ee80fa19f812e ---
--- Nom du fichier: 573267dda5e4ff1b6efca7270ee80fa19f812e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\7b\a6db9b19eb6d42d494a8673e643428b39f72a0 ---
--- Nom du fichier: a6db9b19eb6d42d494a8673e643428b39f72a0 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\7b\d482dcdc417f272cbd79dc29492776257f8ef5 ---
--- Nom du fichier: d482dcdc417f272cbd79dc29492776257f8ef5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\7c\099203f2b192d4f0bcc4f285a04d5caa0b1c9e ---
--- Nom du fichier: 099203f2b192d4f0bcc4f285a04d5caa0b1c9e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\7c\09c73e1d2565544bf84b0f97af29dd4c6b26f8 ---
--- Nom du fichier: 09c73e1d2565544bf84b0f97af29dd4c6b26f8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\7c\1b5603add07f41f15aa66b3685303f6da8585a ---
--- Nom du fichier: 1b5603add07f41f15aa66b3685303f6da8585a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\7c\7d4ca3987b267f9d467b4292fb002b918ea770 ---
--- Nom du fichier: 7d4ca3987b267f9d467b4292fb002b918ea770 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\7c\c0a0670be60672a0120443218b8d06a7deb07d ---
--- Nom du fichier: c0a0670be60672a0120443218b8d06a7deb07d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\7d\02e8a795d061ae8066c3c2e40dba084690abe1 ---
--- Nom du fichier: 02e8a795d061ae8066c3c2e40dba084690abe1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\7d\3b782fcd62dc219cfddc2434a95081ee201e14 ---
--- Nom du fichier: 3b782fcd62dc219cfddc2434a95081ee201e14 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\7d\8cf9ddf633b230f8fccd4a7ed459c062a7f12f ---
--- Nom du fichier: 8cf9ddf633b230f8fccd4a7ed459c062a7f12f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\7d\9be6e34bcb3fa7613514f24eb89240940aca68 ---
--- Nom du fichier: 9be6e34bcb3fa7613514f24eb89240940aca68 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\7d\ae733b231906274ac84e7e0e68116a69a88327 ---
--- Nom du fichier: ae733b231906274ac84e7e0e68116a69a88327 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\7d\c882d95bfa1a3a208a36c1d82c84830595dc71 ---
--- Nom du fichier: c882d95bfa1a3a208a36c1d82c84830595dc71 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\7d\d5e021918b18a0e87dbb82716435a743340c7c ---
--- Nom du fichier: d5e021918b18a0e87dbb82716435a743340c7c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\7d\eb05bda541dbb7cea292d539f9b25983d25055 ---
--- Nom du fichier: eb05bda541dbb7cea292d539f9b25983d25055 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\7e\06c3b0f101866f24dbfe6dbd93e88163934955 ---
--- Nom du fichier: 06c3b0f101866f24dbfe6dbd93e88163934955 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\7e\8b369ea5ac4c4803345aab2187ce2fdacf6548 ---
--- Nom du fichier: 8b369ea5ac4c4803345aab2187ce2fdacf6548 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\7e\dd3916e52e04f81e2f1e3011474826f39d226f ---
--- Nom du fichier: dd3916e52e04f81e2f1e3011474826f39d226f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\7e\f0478c3f75c0d2c8e51f25bed5336990e6863f ---
--- Nom du fichier: f0478c3f75c0d2c8e51f25bed5336990e6863f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\7f\293f8149edb76f9b20b3f3f60450e593fbd958 ---
--- Nom du fichier: 293f8149edb76f9b20b3f3f60450e593fbd958 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\7f\36b4df9c23b1eb49071bd45b8b6c93bc12c8fc ---
--- Nom du fichier: 36b4df9c23b1eb49071bd45b8b6c93bc12c8fc ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\7f\4ded72d0f8e86276cee4e7919df3fc1fc11c6c ---
--- Nom du fichier: 4ded72d0f8e86276cee4e7919df3fc1fc11c6c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\7f\8ae34aaeae696e780192880881b9645107af15 ---
--- Nom du fichier: 8ae34aaeae696e780192880881b9645107af15 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\7f\8ae592e5ae3139390e5afbc5702f397a9ed77b ---
--- Nom du fichier: 8ae592e5ae3139390e5afbc5702f397a9ed77b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\7f\9d99e9836afef21ff0cf96b1ef33ab7bcbe206 ---
--- Nom du fichier: 9d99e9836afef21ff0cf96b1ef33ab7bcbe206 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\7f\b66b9952ce167c9d574feca500ad114d6425a8 ---
--- Nom du fichier: b66b9952ce167c9d574feca500ad114d6425a8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\7f\f5e336f7cb1a86f341c5a2cec15bbcc073cf4d ---
--- Nom du fichier: f5e336f7cb1a86f341c5a2cec15bbcc073cf4d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\80\04b618cfc4f70ef78a35eb2700ccbd97cc8ecc ---
--- Nom du fichier: 04b618cfc4f70ef78a35eb2700ccbd97cc8ecc ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\80\0608f74485fd402dd2c66435550271a57db789 ---
--- Nom du fichier: 0608f74485fd402dd2c66435550271a57db789 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\80\131fac9809787e30ba227a60a4dc04b0588387 ---
--- Nom du fichier: 131fac9809787e30ba227a60a4dc04b0588387 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\80\33959bec808177fe1743890fade0d14ce25c5a ---
--- Nom du fichier: 33959bec808177fe1743890fade0d14ce25c5a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\80\60d6afe6ab8f7cfc3e2db326c739fa181277ab ---
--- Nom du fichier: 60d6afe6ab8f7cfc3e2db326c739fa181277ab ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\80\6423c225adb20b35039263aeec6b6b8e66f02c ---
--- Nom du fichier: 6423c225adb20b35039263aeec6b6b8e66f02c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\80\870d7b363c5082cef30486d7d947721039c187 ---
--- Nom du fichier: 870d7b363c5082cef30486d7d947721039c187 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\80\c3c8bb635a8e368968d8a64be8058e82ba2a99 ---
--- Nom du fichier: c3c8bb635a8e368968d8a64be8058e82ba2a99 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\80\d54e788781d25e59b38c87a00502badc0ceb91 ---
--- Nom du fichier: d54e788781d25e59b38c87a00502badc0ceb91 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\81\32588db22a9cc07f50d26d43eda69eb77a7413 ---
--- Nom du fichier: 32588db22a9cc07f50d26d43eda69eb77a7413 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\81\60c2bd988a2f98aed93d5f1e5cb55fe9b2fc19 ---
--- Nom du fichier: 60c2bd988a2f98aed93d5f1e5cb55fe9b2fc19 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\81\65f555a0195eccecad8e80d8a2bc043822d4ad ---
--- Nom du fichier: 65f555a0195eccecad8e80d8a2bc043822d4ad ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\81\7cd1899a6e52eccbca8fb84842f323e1e1cfc5 ---
--- Nom du fichier: 7cd1899a6e52eccbca8fb84842f323e1e1cfc5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\81\dbfc227dba53c3deff7da447b0198d1fbea78c ---
--- Nom du fichier: dbfc227dba53c3deff7da447b0198d1fbea78c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\81\f42e951ca3eb36b9122bfebea77eab8d17775c ---
--- Nom du fichier: f42e951ca3eb36b9122bfebea77eab8d17775c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\81\f986caff927c1f21c2232c30f2aea897057302 ---
--- Nom du fichier: f986caff927c1f21c2232c30f2aea897057302 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\82\03e9bc2db054092f4613dffdedaa9e55b56360 ---
--- Nom du fichier: 03e9bc2db054092f4613dffdedaa9e55b56360 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\82\1d3207f24e6aa8c31c736bbab75e1880ee3cbb ---
--- Nom du fichier: 1d3207f24e6aa8c31c736bbab75e1880ee3cbb ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\82\3627c599d0e80ab377d9c94e363d18d8c61681 ---
--- Nom du fichier: 3627c599d0e80ab377d9c94e363d18d8c61681 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\82\6d567428ce2ae3ffcc563a2bac20bafb207781 ---
--- Nom du fichier: 6d567428ce2ae3ffcc563a2bac20bafb207781 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\82\99f27e58eb9c1501d706cb7732b36bfc5eb809 ---
--- Nom du fichier: 99f27e58eb9c1501d706cb7732b36bfc5eb809 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\82\a2a98a7d1257f8c23d329330dd6f5acb72a2eb ---
--- Nom du fichier: a2a98a7d1257f8c23d329330dd6f5acb72a2eb ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\82\a6a63eca69336e2bf79cdb601eee7fd9fc4ada ---
--- Nom du fichier: a6a63eca69336e2bf79cdb601eee7fd9fc4ada ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\82\ae0b69f49d89bfe98465b800979c837a4c779b ---
--- Nom du fichier: ae0b69f49d89bfe98465b800979c837a4c779b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\82\c0a04a362e0dcfe5f165cbd10987afe7f8d071 ---
--- Nom du fichier: c0a04a362e0dcfe5f165cbd10987afe7f8d071 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\82\d5cc6cc72eba088d3da126c022ef9f32640c37 ---
--- Nom du fichier: d5cc6cc72eba088d3da126c022ef9f32640c37 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\82\e350f5e4e261adbb28699f9210f2587e681355 ---
--- Nom du fichier: e350f5e4e261adbb28699f9210f2587e681355 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\83\08cb6969b86484d85b02a3f518604f27f7ff48 ---
--- Nom du fichier: 08cb6969b86484d85b02a3f518604f27f7ff48 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\83\31d5eacbdf3addb58c5dd49e76036febf70475 ---
--- Nom du fichier: 31d5eacbdf3addb58c5dd49e76036febf70475 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\83\5f7b4433fcd0755417f5f693111b1659f227ec ---
--- Nom du fichier: 5f7b4433fcd0755417f5f693111b1659f227ec ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\83\d252227b14c87fe074b4b034deee290b112d0c ---
--- Nom du fichier: d252227b14c87fe074b4b034deee290b112d0c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\83\de26fc55366c85e787a6fe6843c73b3d43a370 ---
--- Nom du fichier: de26fc55366c85e787a6fe6843c73b3d43a370 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\84\07165fa68b9e9d1b1dd2be1220ceb526b10bc8 ---
--- Nom du fichier: 07165fa68b9e9d1b1dd2be1220ceb526b10bc8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\84\3d2802cc1653001185caa721848dde95e6b615 ---
--- Nom du fichier: 3d2802cc1653001185caa721848dde95e6b615 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\84\4222f14ad5f5140b51577af6f0e5059cbd2898 ---
--- Nom du fichier: 4222f14ad5f5140b51577af6f0e5059cbd2898 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\84\8030888b9a5824aa4bbfcbaf267c82d17cce5f ---
--- Nom du fichier: 8030888b9a5824aa4bbfcbaf267c82d17cce5f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\84\86dbca68683122400b796a2a9d38e806b49de9 ---
--- Nom du fichier: 86dbca68683122400b796a2a9d38e806b49de9 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\84\ce7b9df6584045510ed8311d6f112e7140fed6 ---
--- Nom du fichier: ce7b9df6584045510ed8311d6f112e7140fed6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\84\d0e7559eacadcaedfb319f45e0b35e9445574b ---
--- Nom du fichier: d0e7559eacadcaedfb319f45e0b35e9445574b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\84\de269a375c55ee194c1920b8aa2b846741bbd2 ---
--- Nom du fichier: de269a375c55ee194c1920b8aa2b846741bbd2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\84\f5ef4ca05c4811f2bff49f45f42d2ec8368430 ---
--- Nom du fichier: f5ef4ca05c4811f2bff49f45f42d2ec8368430 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\85\502fa8870e2df5577a8f63100246fdad8b0b0d ---
--- Nom du fichier: 502fa8870e2df5577a8f63100246fdad8b0b0d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\85\683c867cb09aebe6ccf94437cf673501c0d871 ---
--- Nom du fichier: 683c867cb09aebe6ccf94437cf673501c0d871 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\85\8ad23871b91af91d6dcd356d2f1c31bdf23c02 ---
--- Nom du fichier: 8ad23871b91af91d6dcd356d2f1c31bdf23c02 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\85\9e8a6dedc545d47e700167273db6682066c09a ---
--- Nom du fichier: 9e8a6dedc545d47e700167273db6682066c09a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\85\f7f852910da6667c557926dde115fcd497e9ac ---
--- Nom du fichier: f7f852910da6667c557926dde115fcd497e9ac ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\86\5d8fd648919c3eea38afa713bea076fec780cb ---
--- Nom du fichier: 5d8fd648919c3eea38afa713bea076fec780cb ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\86\aa5eba99ddf0a18427ef127459d4c107cf45d7 ---
--- Nom du fichier: aa5eba99ddf0a18427ef127459d4c107cf45d7 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\86\ba54fe4d4df925662d83f5abae1c90c43d5076 ---
--- Nom du fichier: ba54fe4d4df925662d83f5abae1c90c43d5076 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\86\ccd0ddb7bdb59edd52a9228f8ba4485da6cf3b ---
--- Nom du fichier: ccd0ddb7bdb59edd52a9228f8ba4485da6cf3b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\86\cd3703cf98dc49225a830777afabd1e9989459 ---
--- Nom du fichier: cd3703cf98dc49225a830777afabd1e9989459 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\86\d020cc135539e5b2badacbe48c893b3b7a92a0 ---
--- Nom du fichier: d020cc135539e5b2badacbe48c893b3b7a92a0 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\86\e7e6aff076afac1fae5f81b1fd245c11a602b4 ---
--- Nom du fichier: e7e6aff076afac1fae5f81b1fd245c11a602b4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\86\ea093e251802ac49029cb6625a347ecca2e29f ---
--- Nom du fichier: ea093e251802ac49029cb6625a347ecca2e29f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\87\008da88cc39ae0b9b3f521c1936fa76cd9adc3 ---
--- Nom du fichier: 008da88cc39ae0b9b3f521c1936fa76cd9adc3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\87\020557cfb0bf24d96d6eeed6529ab827fd5d2e ---
--- Nom du fichier: 020557cfb0bf24d96d6eeed6529ab827fd5d2e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\87\0e7946394781e883a59f1990335d6ae31f7dee ---
--- Nom du fichier: 0e7946394781e883a59f1990335d6ae31f7dee ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\87\2e1d3e094604397fc602de29dceddaaf0bafa8 ---
--- Nom du fichier: 2e1d3e094604397fc602de29dceddaaf0bafa8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\87\66625b1ce0a37463d15076d1ccd2c6113c208a ---
--- Nom du fichier: 66625b1ce0a37463d15076d1ccd2c6113c208a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\87\892675ecfaf7e6db332e1acae028d1b83baeaf ---
--- Nom du fichier: 892675ecfaf7e6db332e1acae028d1b83baeaf ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\87\a95e841bd642e19e087b5f4699906362c35e8c ---
--- Nom du fichier: a95e841bd642e19e087b5f4699906362c35e8c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\87\b076fcc4b27a3b43cd52d401c8ca6163555f72 ---
--- Nom du fichier: b076fcc4b27a3b43cd52d401c8ca6163555f72 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\88\0ed4a95c0ad70d5e330a2d4f0899661698667c ---
--- Nom du fichier: 0ed4a95c0ad70d5e330a2d4f0899661698667c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\88\165c5dbf169c781a5aee0ec05ede0c2b93af37 ---
--- Nom du fichier: 165c5dbf169c781a5aee0ec05ede0c2b93af37 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\88\3980dbb75cd1adf30c6b45ec6cffc17a72cace ---
--- Nom du fichier: 3980dbb75cd1adf30c6b45ec6cffc17a72cace ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\88\635a1b63e6a7555cf9c117ed54fe7f7cc204f0 ---
--- Nom du fichier: 635a1b63e6a7555cf9c117ed54fe7f7cc204f0 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\88\968f0bcc5ed79c1e2bf851bc834305d3363735 ---
--- Nom du fichier: 968f0bcc5ed79c1e2bf851bc834305d3363735 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\88\9f0f3d7b9ef8ff6535c3946d017412e43a275d ---
--- Nom du fichier: 9f0f3d7b9ef8ff6535c3946d017412e43a275d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\88\dea9d6a6c701a218dae81ff3d74316e17c631a ---
--- Nom du fichier: dea9d6a6c701a218dae81ff3d74316e17c631a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\89\462ddfdad0a3060362277607f8a3ffbef4b68f ---
--- Nom du fichier: 462ddfdad0a3060362277607f8a3ffbef4b68f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\89\4b025eea133a464e88134183eccdef98404e95 ---
--- Nom du fichier: 4b025eea133a464e88134183eccdef98404e95 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\89\5b81c62a0da04a92130aab2be90bf959525732 ---
--- Nom du fichier: 5b81c62a0da04a92130aab2be90bf959525732 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\89\761ba4bdd14a1e88443bdfd94c53ab69b6f885 ---
--- Nom du fichier: 761ba4bdd14a1e88443bdfd94c53ab69b6f885 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\89\9eb22c3df11102e8c2af874d9c6e841e217aeb ---
--- Nom du fichier: 9eb22c3df11102e8c2af874d9c6e841e217aeb ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\89\c4bd4a609907c4342ad836e3dad65e0c9d8fe3 ---
--- Nom du fichier: c4bd4a609907c4342ad836e3dad65e0c9d8fe3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\89\e82cfa2d9ae8015b6b4e1c305522e646348139 ---
--- Nom du fichier: e82cfa2d9ae8015b6b4e1c305522e646348139 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\89\f3f89fd7fb86790bf6cbbf3fde07c16976ab29 ---
--- Nom du fichier: f3f89fd7fb86790bf6cbbf3fde07c16976ab29 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8a\0350a56f28f7bebd930dc47f53d6e09b2f77e6 ---
--- Nom du fichier: 0350a56f28f7bebd930dc47f53d6e09b2f77e6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8a\0773a7907c047b36440acbd353317d23c37cab ---
--- Nom du fichier: 0773a7907c047b36440acbd353317d23c37cab ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8a\2f22fb27740f013403a762cbfafc73f7a7ae1a ---
--- Nom du fichier: 2f22fb27740f013403a762cbfafc73f7a7ae1a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8a\45a967ab044c129aac94b2ccec33d23ccbc622 ---
--- Nom du fichier: 45a967ab044c129aac94b2ccec33d23ccbc622 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8a\5f9789682ff8b2f751d81c4f07b85005ea0650 ---
--- Nom du fichier: 5f9789682ff8b2f751d81c4f07b85005ea0650 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8a\6186f11654473265df3f960516dd271ba23d6f ---
--- Nom du fichier: 6186f11654473265df3f960516dd271ba23d6f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8a\758314027df2dc9c5c80887711a94b20c3851f ---
--- Nom du fichier: 758314027df2dc9c5c80887711a94b20c3851f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8a\7e28d0e5eb290e37ed5facc98eedbb9e4a45ce ---
--- Nom du fichier: 7e28d0e5eb290e37ed5facc98eedbb9e4a45ce ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8a\a5b1b1a4756cc273ba0efb25da37879feea54b ---
--- Nom du fichier: a5b1b1a4756cc273ba0efb25da37879feea54b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8a\fe2c408335864289b022d6dc562f295ea40df0 ---
--- Nom du fichier: fe2c408335864289b022d6dc562f295ea40df0 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8b\00cc86f372353ee00e22e3affad6e776337088 ---
--- Nom du fichier: 00cc86f372353ee00e22e3affad6e776337088 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8b\04c8c42ad1243ff4133be9935dc60ace34179a ---
--- Nom du fichier: 04c8c42ad1243ff4133be9935dc60ace34179a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8b\43ff458ab354320d14dec82e2a2a89a052e60a ---
--- Nom du fichier: 43ff458ab354320d14dec82e2a2a89a052e60a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8b\6927d975c434f64664fbefb40eaabfe85cf331 ---
--- Nom du fichier: 6927d975c434f64664fbefb40eaabfe85cf331 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8b\816ddf332cadfbbde5ff9ae1d14ebf84ef05c4 ---
--- Nom du fichier: 816ddf332cadfbbde5ff9ae1d14ebf84ef05c4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8b\f46857280daf7ed71bcba34ea571a3d1752ca6 ---
--- Nom du fichier: f46857280daf7ed71bcba34ea571a3d1752ca6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8b\fb8559f89627c1d69107133452ce4fbb10377d ---
--- Nom du fichier: fb8559f89627c1d69107133452ce4fbb10377d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8b\ff4af2be2c506c83a84569c0faa3fc04625275 ---
--- Nom du fichier: ff4af2be2c506c83a84569c0faa3fc04625275 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8c\35ec758dda21d5e3d6265f27f7a833c1d256d5 ---
--- Nom du fichier: 35ec758dda21d5e3d6265f27f7a833c1d256d5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8c\3e4d876673feb42c28999692ad43539d1f6855 ---
--- Nom du fichier: 3e4d876673feb42c28999692ad43539d1f6855 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8c\593de748f208d595a54954b3daff62632827da ---
--- Nom du fichier: 593de748f208d595a54954b3daff62632827da ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8c\81f0bdce28b67d3970f38af6982c667f953eec ---
--- Nom du fichier: 81f0bdce28b67d3970f38af6982c667f953eec ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8d\0fe08c04c44d205e29cc7e5cee928be8b0b33e ---
--- Nom du fichier: 0fe08c04c44d205e29cc7e5cee928be8b0b33e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8d\14c12714f80e7b9b4f126ed67ca1eb2b5ac3a4 ---
--- Nom du fichier: 14c12714f80e7b9b4f126ed67ca1eb2b5ac3a4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8d\3851bf21b15136b1142e1eaa488bb92c9d46b7 ---
--- Nom du fichier: 3851bf21b15136b1142e1eaa488bb92c9d46b7 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8d\9b976151a74e83a9a0a8a3dae1a3721c8a9c68 ---
--- Nom du fichier: 9b976151a74e83a9a0a8a3dae1a3721c8a9c68 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8d\aa7cd023bd873fb0a8a8dd76ed7fbb8def6772 ---
--- Nom du fichier: aa7cd023bd873fb0a8a8dd76ed7fbb8def6772 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8d\ace0f42aa24d30d1f0d66bdbd6eadb3af04890 ---
--- Nom du fichier: ace0f42aa24d30d1f0d66bdbd6eadb3af04890 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8d\adf952cb77db207bb8785d4e431e8f29bf481e ---
--- Nom du fichier: adf952cb77db207bb8785d4e431e8f29bf481e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8d\df5ce33071d7096467006e706ed521ce54c87d ---
--- Nom du fichier: df5ce33071d7096467006e706ed521ce54c87d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8d\e25c0ccf8c169813e055f49ba76c05b7968464 ---
--- Nom du fichier: e25c0ccf8c169813e055f49ba76c05b7968464 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8d\eedec0ffb060524c15b19f0e2080e010e1c5f3 ---
--- Nom du fichier: eedec0ffb060524c15b19f0e2080e010e1c5f3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8d\fb604cd3b41334efdc011a52661f61d06a5087 ---
--- Nom du fichier: fb604cd3b41334efdc011a52661f61d06a5087 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8e\10484d761224f6e3ae70fd47c62ca66bb82ac8 ---
--- Nom du fichier: 10484d761224f6e3ae70fd47c62ca66bb82ac8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8e\1dec0c3c7a02db4ea0564619012d31ffe61861 ---
--- Nom du fichier: 1dec0c3c7a02db4ea0564619012d31ffe61861 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8e\49479a4ba10fcc8ea5ce2a8eb8d9500b1c52dd ---
--- Nom du fichier: 49479a4ba10fcc8ea5ce2a8eb8d9500b1c52dd ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8e\71f5018b81b032ef9b57df4d2175c0a58bfb02 ---
--- Nom du fichier: 71f5018b81b032ef9b57df4d2175c0a58bfb02 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8e\898d2ac1f6ad598a7a572c4ee1629afdf27151 ---
--- Nom du fichier: 898d2ac1f6ad598a7a572c4ee1629afdf27151 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8e\e11850d85f4ef4afba6a0ac869a6925af3866e ---
--- Nom du fichier: e11850d85f4ef4afba6a0ac869a6925af3866e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8f\0783d75fceb5b28415d7066319717838cd89c1 ---
--- Nom du fichier: 0783d75fceb5b28415d7066319717838cd89c1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8f\138859a83de92cba2fe7803d7aac30e087d3bb ---
--- Nom du fichier: 138859a83de92cba2fe7803d7aac30e087d3bb ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8f\4a60e50a16afedaa5ceca1e78b31ad4b51c562 ---
--- Nom du fichier: 4a60e50a16afedaa5ceca1e78b31ad4b51c562 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8f\55f66346873872eaf8116508ac33cffccf51c3 ---
--- Nom du fichier: 55f66346873872eaf8116508ac33cffccf51c3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8f\658c094033efb87eb58ff4e3c97e8019df8108 ---
--- Nom du fichier: 658c094033efb87eb58ff4e3c97e8019df8108 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8f\76fce3fed7abb665975f0b3df53b58d5932295 ---
--- Nom du fichier: 76fce3fed7abb665975f0b3df53b58d5932295 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8f\ba794f8c08aff1e6abdd199373ca025c34c15d ---
--- Nom du fichier: ba794f8c08aff1e6abdd199373ca025c34c15d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8f\bd6ccab58777bf200639a84e9d9bafd9ef3813 ---
--- Nom du fichier: bd6ccab58777bf200639a84e9d9bafd9ef3813 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8f\cb59c1bb83971137bef191a030420f56d21ef7 ---
--- Nom du fichier: cb59c1bb83971137bef191a030420f56d21ef7 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8f\e760029cdc06e39d2ce65ffef5053e70b1da4f ---
--- Nom du fichier: e760029cdc06e39d2ce65ffef5053e70b1da4f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\8f\fc34e642d925b4d2939837cfa03034e9bb2633 ---
--- Nom du fichier: fc34e642d925b4d2939837cfa03034e9bb2633 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\90\0fccb1d2a968f7fcb93d2d359607d398d0583e ---
--- Nom du fichier: 0fccb1d2a968f7fcb93d2d359607d398d0583e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\90\5e5cf5c43f50cbbce0518474189e5df5588b6c ---
--- Nom du fichier: 5e5cf5c43f50cbbce0518474189e5df5588b6c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\90\6aefa749fccdae6cdb92650dac17a73c891401 ---
--- Nom du fichier: 6aefa749fccdae6cdb92650dac17a73c891401 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\90\8155cc8460d35ccf67c4a06f828af340a30820 ---
--- Nom du fichier: 8155cc8460d35ccf67c4a06f828af340a30820 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\90\a82c9de8e86825b68bdb01b75f7d3b2361ca4c ---
--- Nom du fichier: a82c9de8e86825b68bdb01b75f7d3b2361ca4c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\90\ace6acbc9d9cf751c34facb18c0f6a70b94edf ---
--- Nom du fichier: ace6acbc9d9cf751c34facb18c0f6a70b94edf ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\90\cef1964ad05b0c8a3b889961335d98cea88ca8 ---
--- Nom du fichier: cef1964ad05b0c8a3b889961335d98cea88ca8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\90\dda09d8bc5fb3c00bfbbbe11234774795ec62b ---
--- Nom du fichier: dda09d8bc5fb3c00bfbbbe11234774795ec62b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\90\eed9f129aad4eb779611efa5d2ffe161448a73 ---
--- Nom du fichier: eed9f129aad4eb779611efa5d2ffe161448a73 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\90\f1d9b2c4d309fc76a94e4e9c94a31ea0ee0677 ---
--- Nom du fichier: f1d9b2c4d309fc76a94e4e9c94a31ea0ee0677 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\91\227737c1b9983d770e8be0846b90443ed8c1c7 ---
--- Nom du fichier: 227737c1b9983d770e8be0846b90443ed8c1c7 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\91\3ea1da2b3b67df768936491cd15e50d81e37db ---
--- Nom du fichier: 3ea1da2b3b67df768936491cd15e50d81e37db ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\91\4e2535ad3aa2115451a383b3530780f640962c ---
--- Nom du fichier: 4e2535ad3aa2115451a383b3530780f640962c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\91\5cd1097ffd0626cf7ad3be0afae7be3a635927 ---
--- Nom du fichier: 5cd1097ffd0626cf7ad3be0afae7be3a635927 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\91\760491aea100a5994413f257d1f9328f48fe95 ---
--- Nom du fichier: 760491aea100a5994413f257d1f9328f48fe95 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\91\873a28255fae1d6b45efc6c0dbfbc5d0e5e592 ---
--- Nom du fichier: 873a28255fae1d6b45efc6c0dbfbc5d0e5e592 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\91\a3ca888ff1b0fdf4665ebf01fbf9cd83bd0e6f ---
--- Nom du fichier: a3ca888ff1b0fdf4665ebf01fbf9cd83bd0e6f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\91\b27a77fccaeb5bb2694eab2a55e387b9dcedab ---
--- Nom du fichier: b27a77fccaeb5bb2694eab2a55e387b9dcedab ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\91\ccfe6207ceb308f7ac896fe331654a3358cbf6 ---
--- Nom du fichier: ccfe6207ceb308f7ac896fe331654a3358cbf6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\91\eb9769528591c441726a03d9132270eb62d601 ---
--- Nom du fichier: eb9769528591c441726a03d9132270eb62d601 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\91\f0aa541f988a1214d8bb20776308ca23c475fe ---
--- Nom du fichier: f0aa541f988a1214d8bb20776308ca23c475fe ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\91\f4d9245b9878396085b3de433e8d1ba715ac04 ---
--- Nom du fichier: f4d9245b9878396085b3de433e8d1ba715ac04 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\92\346874d26c9e3433c4179eb87b904b2fcfdacc ---
--- Nom du fichier: 346874d26c9e3433c4179eb87b904b2fcfdacc ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\92\412ce92a828b2b2ff6bd242dbf4f8b5d08806c ---
--- Nom du fichier: 412ce92a828b2b2ff6bd242dbf4f8b5d08806c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\92\8f5ac77038412a1263fd0efe46f187035eedfd ---
--- Nom du fichier: 8f5ac77038412a1263fd0efe46f187035eedfd ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\92\a1484084c8f277e6a7bb4699e112375625e685 ---
--- Nom du fichier: a1484084c8f277e6a7bb4699e112375625e685 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\92\b854778b580b6edf2290dbae0908ab553c9ea5 ---
--- Nom du fichier: b854778b580b6edf2290dbae0908ab553c9ea5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\92\dc4b04328bc4a5e504fb667d3b7565903264b7 ---
--- Nom du fichier: dc4b04328bc4a5e504fb667d3b7565903264b7 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\92\dd10a0388f8b53a9b6a96f9f4fe10b0dd56410 ---
--- Nom du fichier: dd10a0388f8b53a9b6a96f9f4fe10b0dd56410 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\92\f39bc05e7e41cd9beadecf70df3242ecac3430 ---
--- Nom du fichier: f39bc05e7e41cd9beadecf70df3242ecac3430 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\93\58657985716bbc05f53a4dd3eca5cf46e2d308 ---
--- Nom du fichier: 58657985716bbc05f53a4dd3eca5cf46e2d308 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\93\736ea6b71b43c12dde4fc95505b1b81a38fe88 ---
--- Nom du fichier: 736ea6b71b43c12dde4fc95505b1b81a38fe88 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\93\acae19847c1d719144367515fe5f0b080554ea ---
--- Nom du fichier: acae19847c1d719144367515fe5f0b080554ea ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\93\bbf0411cef4034a6516e36fb61c255dd364c63 ---
--- Nom du fichier: bbf0411cef4034a6516e36fb61c255dd364c63 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\93\f7fe2a88ebdbb412a3fd8b1989ebb015370038 ---
--- Nom du fichier: f7fe2a88ebdbb412a3fd8b1989ebb015370038 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\94\00a44312dd9abff835f0b1e0270308540fc39a ---
--- Nom du fichier: 00a44312dd9abff835f0b1e0270308540fc39a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\94\17c70f02b858597764b95ed255b4622b9b87b3 ---
--- Nom du fichier: 17c70f02b858597764b95ed255b4622b9b87b3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\94\24a89dc36acd1ba514c0c3ff6128deaccdc503 ---
--- Nom du fichier: 24a89dc36acd1ba514c0c3ff6128deaccdc503 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\94\fd75f0c31937d52803579834aaf688a240b628 ---
--- Nom du fichier: fd75f0c31937d52803579834aaf688a240b628 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\95\21757f889098f0faba3fb9c91d40a645991097 ---
--- Nom du fichier: 21757f889098f0faba3fb9c91d40a645991097 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\95\2ee9a375aca28066697cc3a4a28b97bdb0b685 ---
--- Nom du fichier: 2ee9a375aca28066697cc3a4a28b97bdb0b685 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\95\396c5e11a23aed7887332cdb1be4a6c72b8114 ---
--- Nom du fichier: 396c5e11a23aed7887332cdb1be4a6c72b8114 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\95\780f32aafe84c4b3abea04f1c74367fa2b8d4b ---
--- Nom du fichier: 780f32aafe84c4b3abea04f1c74367fa2b8d4b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\95\b1678b4f9690e2c3bcd5790aab5b761931d457 ---
--- Nom du fichier: b1678b4f9690e2c3bcd5790aab5b761931d457 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\95\d527f145ed8611cd2b1b26bb9fc5e5ed3f7c84 ---
--- Nom du fichier: d527f145ed8611cd2b1b26bb9fc5e5ed3f7c84 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\95\d8dceecd661fcab6e0e45d8ef1b488b735313f ---
--- Nom du fichier: d8dceecd661fcab6e0e45d8ef1b488b735313f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\96\0a93c2125dc8b727bdf80a7c0d21c4175edcf1 ---
--- Nom du fichier: 0a93c2125dc8b727bdf80a7c0d21c4175edcf1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\96\2ca88a589637f66495d30704991b9b76592112 ---
--- Nom du fichier: 2ca88a589637f66495d30704991b9b76592112 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\96\63ad4c98d3949c448af90c0e3bc31c407629af ---
--- Nom du fichier: 63ad4c98d3949c448af90c0e3bc31c407629af ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\96\6f8bb58ef3e1b4d8c976588bf2abc6ddd01b67 ---
--- Nom du fichier: 6f8bb58ef3e1b4d8c976588bf2abc6ddd01b67 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\96\77df114736a81b1525b480586d22c381592747 ---
--- Nom du fichier: 77df114736a81b1525b480586d22c381592747 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\96\785e4c1554ba362e6541e3dc5f39d6a01fc326 ---
--- Nom du fichier: 785e4c1554ba362e6541e3dc5f39d6a01fc326 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\96\7c0e3de3064a9013febc09461deba390922ded ---
--- Nom du fichier: 7c0e3de3064a9013febc09461deba390922ded ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\96\83014668f093afd2797b5965567d195f4b7a8a ---
--- Nom du fichier: 83014668f093afd2797b5965567d195f4b7a8a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\96\a98b2de0663e8b1dba5b440d3f3ab14959cb5b ---
--- Nom du fichier: a98b2de0663e8b1dba5b440d3f3ab14959cb5b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\96\b0795e0c0db8cdedfba88260f41f35fb2153da ---
--- Nom du fichier: b0795e0c0db8cdedfba88260f41f35fb2153da ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\96\b862a2e02ac87d331442d1c099a63d54e1ab55 ---
--- Nom du fichier: b862a2e02ac87d331442d1c099a63d54e1ab55 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\96\e88ae8af670fc2ac6cb0b1791b74a768679240 ---
--- Nom du fichier: e88ae8af670fc2ac6cb0b1791b74a768679240 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\97\16e50b5ec5329c674ec9f3ebee555d99a6aea5 ---
--- Nom du fichier: 16e50b5ec5329c674ec9f3ebee555d99a6aea5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\97\5530129fa9024e16a0a544c6124231787e5fdc ---
--- Nom du fichier: 5530129fa9024e16a0a544c6124231787e5fdc ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\97\55b2150991afe970c46522f368401c6cc2e3f5 ---
--- Nom du fichier: 55b2150991afe970c46522f368401c6cc2e3f5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\97\736a345d667efa40fa6a93d26e341c24434835 ---
--- Nom du fichier: 736a345d667efa40fa6a93d26e341c24434835 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\97\cf9f48441f9742834f672e1407f596c4f7ba3e ---
--- Nom du fichier: cf9f48441f9742834f672e1407f596c4f7ba3e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\97\ed1c2ce3df4d2d4be97032c92fe56ffcf6035e ---
--- Nom du fichier: ed1c2ce3df4d2d4be97032c92fe56ffcf6035e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\97\fd86ee6dc0e886ed48e38ac3046668f8854d76 ---
--- Nom du fichier: fd86ee6dc0e886ed48e38ac3046668f8854d76 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\98\7e212f756aca969a4b71ac851ab6727822d5b6 ---
--- Nom du fichier: 7e212f756aca969a4b71ac851ab6727822d5b6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\98\ac541ee6668f3df97e316ac66f84c1d61a18c5 ---
--- Nom du fichier: ac541ee6668f3df97e316ac66f84c1d61a18c5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\98\b27337bfd38f153cd0083297a17329b7ce97cb ---
--- Nom du fichier: b27337bfd38f153cd0083297a17329b7ce97cb ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\98\c0d14aeee89d4ee4cf8a080e94be5bcde99012 ---
--- Nom du fichier: c0d14aeee89d4ee4cf8a080e94be5bcde99012 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\98\ce8e8bda17685a9b99202830e6990a57562329 ---
--- Nom du fichier: ce8e8bda17685a9b99202830e6990a57562329 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\98\f11e4dd6a4972b0aec1b2bc9c73019f7ad3c0a ---
--- Nom du fichier: f11e4dd6a4972b0aec1b2bc9c73019f7ad3c0a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\99\1670332dd4b180c754a854f3a3c36efa091bea ---
--- Nom du fichier: 1670332dd4b180c754a854f3a3c36efa091bea ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\99\345708bdffffd99b1d41eef01562ce67e779e6 ---
--- Nom du fichier: 345708bdffffd99b1d41eef01562ce67e779e6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\99\4d93b62da8c1db08b964705e75331c82a168f9 ---
--- Nom du fichier: 4d93b62da8c1db08b964705e75331c82a168f9 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\99\8a4dd95c38c6dda1c51554452270760b20f9bc ---
--- Nom du fichier: 8a4dd95c38c6dda1c51554452270760b20f9bc ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\99\c9d8a4010a135f57f6b86fa3674310f070fa51 ---
--- Nom du fichier: c9d8a4010a135f57f6b86fa3674310f070fa51 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9a\0273f2f5134b87d720ed99ca8183d803d3a881 ---
--- Nom du fichier: 0273f2f5134b87d720ed99ca8183d803d3a881 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9a\11cbb6eb8a3c4baf753de78bd0eb56f4aefe71 ---
--- Nom du fichier: 11cbb6eb8a3c4baf753de78bd0eb56f4aefe71 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9a\42bb227b2935e3b4a3dbe325606417ef1fb959 ---
--- Nom du fichier: 42bb227b2935e3b4a3dbe325606417ef1fb959 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9a\52c4206bf3f5e29f5e16fc284396b0ec43b6bc ---
--- Nom du fichier: 52c4206bf3f5e29f5e16fc284396b0ec43b6bc ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9a\73a7773ee1371eb8941ec92fa3520045427779 ---
--- Nom du fichier: 73a7773ee1371eb8941ec92fa3520045427779 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9a\86452c987f38238a945bf0cfef4ce3db21ec2b ---
--- Nom du fichier: 86452c987f38238a945bf0cfef4ce3db21ec2b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9a\b9c956f4cca5c39605d4f52240cbd7e49e582c ---
--- Nom du fichier: b9c956f4cca5c39605d4f52240cbd7e49e582c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9a\c558c348cfcfacfd7104d1a0a65915a75ed824 ---
--- Nom du fichier: c558c348cfcfacfd7104d1a0a65915a75ed824 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9b\26a81de6243c9a506d738b6c9978e958fe7520 ---
--- Nom du fichier: 26a81de6243c9a506d738b6c9978e958fe7520 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9b\443e569603b6bb0c752fa7ce13079473e6b738 ---
--- Nom du fichier: 443e569603b6bb0c752fa7ce13079473e6b738 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9b\4aa4e85c05c1c03c1ef4d79581a9bea99d8581 ---
--- Nom du fichier: 4aa4e85c05c1c03c1ef4d79581a9bea99d8581 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9b\4f91b4b257ad283e0d286d72ac3f0e61cadf19 ---
--- Nom du fichier: 4f91b4b257ad283e0d286d72ac3f0e61cadf19 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9b\92af06372b29826304680eee9a5cc06d45c40b ---
--- Nom du fichier: 92af06372b29826304680eee9a5cc06d45c40b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9b\d0856ef4a50327a243b380d4d6b488e65ba7b0 ---
--- Nom du fichier: d0856ef4a50327a243b380d4d6b488e65ba7b0 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9c\0545eb2dde0a94c9e0c43c27a6ad79f0c65afb ---
--- Nom du fichier: 0545eb2dde0a94c9e0c43c27a6ad79f0c65afb ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9c\146148b56839c52527c3005ccf89ed6543958e ---
--- Nom du fichier: 146148b56839c52527c3005ccf89ed6543958e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9c\32e5136cbcfe7c2f0653653940c95552a98629 ---
--- Nom du fichier: 32e5136cbcfe7c2f0653653940c95552a98629 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9c\3a948aecffe794c2a47ce467171a1c3bd07214 ---
--- Nom du fichier: 3a948aecffe794c2a47ce467171a1c3bd07214 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9d\1e4b0f1f7478999a26dd266372738106b0404f ---
--- Nom du fichier: 1e4b0f1f7478999a26dd266372738106b0404f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9d\3bc47465efa2a9d31d3f05fdc47ae282ab7c82 ---
--- Nom du fichier: 3bc47465efa2a9d31d3f05fdc47ae282ab7c82 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9d\4799a9c50fa4c648023dc583954317ddd36b59 ---
--- Nom du fichier: 4799a9c50fa4c648023dc583954317ddd36b59 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9d\4eed7815d9dc8e3ccf6b6888da61ae0b22f0fb ---
--- Nom du fichier: 4eed7815d9dc8e3ccf6b6888da61ae0b22f0fb ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9d\7106af022e57492ed6dfe30b46469b60a9cdc4 ---
--- Nom du fichier: 7106af022e57492ed6dfe30b46469b60a9cdc4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9d\ad3b2de25bc2add6f13493b6b726eab3c3148b ---
--- Nom du fichier: ad3b2de25bc2add6f13493b6b726eab3c3148b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9e\24e315de02d1b80fbe7a7323d3e9ae0fe3ef15 ---
--- Nom du fichier: 24e315de02d1b80fbe7a7323d3e9ae0fe3ef15 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9e\276b6a96e35203429f5135e78393b380928f23 ---
--- Nom du fichier: 276b6a96e35203429f5135e78393b380928f23 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9e\8a062838b1b263d0a25c2f51052408fdc5eba0 ---
--- Nom du fichier: 8a062838b1b263d0a25c2f51052408fdc5eba0 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9e\c8682a685f6a5e3edc5d2f798eac1ec0d5f409 ---
--- Nom du fichier: c8682a685f6a5e3edc5d2f798eac1ec0d5f409 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9e\f39fb202342d674223d9b08c99d7e3a529a3d7 ---
--- Nom du fichier: f39fb202342d674223d9b08c99d7e3a529a3d7 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9e\f7f8d44fbb9f488ced177b9443708eb7f20c56 ---
--- Nom du fichier: f7f8d44fbb9f488ced177b9443708eb7f20c56 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9f\19e46cf09712e3e14384f6963ad7abc3a76d44 ---
--- Nom du fichier: 19e46cf09712e3e14384f6963ad7abc3a76d44 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9f\38e2414aad38879672a15ef3413550f4aa8ea2 ---
--- Nom du fichier: 38e2414aad38879672a15ef3413550f4aa8ea2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9f\482c9255448928fae9b997fea47bfa6e480556 ---
--- Nom du fichier: 482c9255448928fae9b997fea47bfa6e480556 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9f\627dec1374b293e768ed80c50c6a8853604ac7 ---
--- Nom du fichier: 627dec1374b293e768ed80c50c6a8853604ac7 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9f\64dc794b32e6531f2c1f8bfd11f03dfc31fa14 ---
--- Nom du fichier: 64dc794b32e6531f2c1f8bfd11f03dfc31fa14 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9f\9db8b703db704e4878bb4943b86732a1d773cf ---
--- Nom du fichier: 9db8b703db704e4878bb4943b86732a1d773cf ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9f\a903031f214e630eb8b7d40ddc4592d2c13513 ---
--- Nom du fichier: a903031f214e630eb8b7d40ddc4592d2c13513 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9f\b8814ee8e93b9af1b269ce08b60356847e42b1 ---
--- Nom du fichier: b8814ee8e93b9af1b269ce08b60356847e42b1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\9f\b9b039beacead32f3232fde1b8bbff3677b547 ---
--- Nom du fichier: b9b039beacead32f3232fde1b8bbff3677b547 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a0\205970385f59a472ec0c6723f71e92282b765f ---
--- Nom du fichier: 205970385f59a472ec0c6723f71e92282b765f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a0\4cc7fe9d1b03f374fdf44c70155c45f1903719 ---
--- Nom du fichier: 4cc7fe9d1b03f374fdf44c70155c45f1903719 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a0\64c7205bfa7188b1a036a67458ff8250fed46d ---
--- Nom du fichier: 64c7205bfa7188b1a036a67458ff8250fed46d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a0\b617c3bf51732de2661cde2e7ad554e644eb81 ---
--- Nom du fichier: b617c3bf51732de2661cde2e7ad554e644eb81 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a0\cb21d0fd4acf0e558f7c8e02c9df08d264fff6 ---
--- Nom du fichier: cb21d0fd4acf0e558f7c8e02c9df08d264fff6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a0\e352c02085876ccd9089bd9aa07854bf8966d5 ---
--- Nom du fichier: e352c02085876ccd9089bd9aa07854bf8966d5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a0\f6d06d78ecc70fec0b6cba80bcd8db106da530 ---
--- Nom du fichier: f6d06d78ecc70fec0b6cba80bcd8db106da530 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a0\ff452ce28bd2b2785a4c44cc2741602b817403 ---
--- Nom du fichier: ff452ce28bd2b2785a4c44cc2741602b817403 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a1\2f159f1537aef7474511dff7cd2c139e6cf14f ---
--- Nom du fichier: 2f159f1537aef7474511dff7cd2c139e6cf14f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a1\53ea8bba9f30de40bb202b95cf1cdb050635b5 ---
--- Nom du fichier: 53ea8bba9f30de40bb202b95cf1cdb050635b5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a1\738a225b519ec44bf94fc8ec6460fb280a55ca ---
--- Nom du fichier: 738a225b519ec44bf94fc8ec6460fb280a55ca ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a1\7695b19bf829f46b6e785bd031b456a5a2ff09 ---
--- Nom du fichier: 7695b19bf829f46b6e785bd031b456a5a2ff09 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a1\8a3500e16b66a8ed69bcecfc19e65f46b49cb8 ---
--- Nom du fichier: 8a3500e16b66a8ed69bcecfc19e65f46b49cb8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a1\93bac10da85820620987eb42d27317fc7c0004 ---
--- Nom du fichier: 93bac10da85820620987eb42d27317fc7c0004 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a2\21c12acebaeafc4e8a6ac20efaa6cb42cd1065 ---
--- Nom du fichier: 21c12acebaeafc4e8a6ac20efaa6cb42cd1065 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a2\94367e2e243cd3eb5af3e8f64b8e5ce564a7da ---
--- Nom du fichier: 94367e2e243cd3eb5af3e8f64b8e5ce564a7da ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a2\a000d93c5acc5a6aa0b6a9b5612fb9fa659557 ---
--- Nom du fichier: a000d93c5acc5a6aa0b6a9b5612fb9fa659557 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a2\a617adfaef235c6437ef04be4f3b4e513477c1 ---
--- Nom du fichier: a617adfaef235c6437ef04be4f3b4e513477c1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a2\c52e997be0b12596d25e603d4768386d385cab ---
--- Nom du fichier: c52e997be0b12596d25e603d4768386d385cab ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a2\e2feff3e61e29c1fca0ba1dd0d7519dd6a71f8 ---
--- Nom du fichier: e2feff3e61e29c1fca0ba1dd0d7519dd6a71f8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a2\e99af357a8bc98d54e1eeb29bd7385e4bbb684 ---
--- Nom du fichier: e99af357a8bc98d54e1eeb29bd7385e4bbb684 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a2\f0b5d7700f4ecc7053263b4f6f9cd29840d37a ---
--- Nom du fichier: f0b5d7700f4ecc7053263b4f6f9cd29840d37a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a3\165bd4f3606b00dd5bebc6c15ceedb94501ce7 ---
--- Nom du fichier: 165bd4f3606b00dd5bebc6c15ceedb94501ce7 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a3\2edd81c03f921b8be643167a981595e0f8a46c ---
--- Nom du fichier: 2edd81c03f921b8be643167a981595e0f8a46c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a3\3ac59d9d05f5b102d8b692c189003e59373eaf ---
--- Nom du fichier: 3ac59d9d05f5b102d8b692c189003e59373eaf ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a3\40404c3e69b5b3c9ac9f50720e9f2046c4e2a0 ---
--- Nom du fichier: 40404c3e69b5b3c9ac9f50720e9f2046c4e2a0 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a3\5e2c6bff466cda8a1b7795df3585215a1ce66d ---
--- Nom du fichier: 5e2c6bff466cda8a1b7795df3585215a1ce66d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a3\76d49a66c70c24ab6c2d76de83d8614f178f1b ---
--- Nom du fichier: 76d49a66c70c24ab6c2d76de83d8614f178f1b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a3\79c0b8bb07bf1f57390d9abcefb13276f323b2 ---
--- Nom du fichier: 79c0b8bb07bf1f57390d9abcefb13276f323b2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a3\8d5a91a6e68afa7548ab6743f91805d800184e ---
--- Nom du fichier: 8d5a91a6e68afa7548ab6743f91805d800184e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a3\97bdbd73a9bdca8566f5ae82f7724b8c6a6980 ---
--- Nom du fichier: 97bdbd73a9bdca8566f5ae82f7724b8c6a6980 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a3\caf12b7bc50a2f897210390b6ccb4e7badaac6 ---
--- Nom du fichier: caf12b7bc50a2f897210390b6ccb4e7badaac6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a3\d0dbb7b6f8d78bbeb1ce4abdc9cbac4e76f322 ---
--- Nom du fichier: d0dbb7b6f8d78bbeb1ce4abdc9cbac4e76f322 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a3\eb038415e5a71f9d85e4f0063c9875ac48858b ---
--- Nom du fichier: eb038415e5a71f9d85e4f0063c9875ac48858b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a3\f2d545a8227517827750d26fa1626aab7bd481 ---
--- Nom du fichier: f2d545a8227517827750d26fa1626aab7bd481 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a4\059cb9643f5813ebe6ac8536c7c77439f43a3a ---
--- Nom du fichier: 059cb9643f5813ebe6ac8536c7c77439f43a3a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a4\0756c3a957407a19b9d38e7634c3a1a47ecbad ---
--- Nom du fichier: 0756c3a957407a19b9d38e7634c3a1a47ecbad ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a4\22348d06fbab87a71404d0090f5acc383469f3 ---
--- Nom du fichier: 22348d06fbab87a71404d0090f5acc383469f3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a4\24f82e3f789c32a43d3539b8accb945a2c51a0 ---
--- Nom du fichier: 24f82e3f789c32a43d3539b8accb945a2c51a0 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a4\4c7f087be715e2f319adc8be9664b6d7bbecbe ---
--- Nom du fichier: 4c7f087be715e2f319adc8be9664b6d7bbecbe ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a4\aa2968f10dbb6a3ecae593ddbb4af1f03a1e65 ---
--- Nom du fichier: aa2968f10dbb6a3ecae593ddbb4af1f03a1e65 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a4\c3b08a6869492d6be0045cfbdab3e16cbc7823 ---
--- Nom du fichier: c3b08a6869492d6be0045cfbdab3e16cbc7823 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a4\ca474eaeadb55fc722ececdece8e0fb1ef19d2 ---
--- Nom du fichier: ca474eaeadb55fc722ececdece8e0fb1ef19d2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a4\e5762ff99c37bd913681cf5d5b9906022dee40 ---
--- Nom du fichier: e5762ff99c37bd913681cf5d5b9906022dee40 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a4\ef8f453a6930b6dd9c38fb1b5b7857c2d9b7ac ---
--- Nom du fichier: ef8f453a6930b6dd9c38fb1b5b7857c2d9b7ac ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a5\3ab53499248dc9a0a40f6a217b092509c1804c ---
--- Nom du fichier: 3ab53499248dc9a0a40f6a217b092509c1804c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a5\4e3f16ec0fe1fd072aa4a74afc7f57dee9fcc2 ---
--- Nom du fichier: 4e3f16ec0fe1fd072aa4a74afc7f57dee9fcc2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a5\564287f7c2e5fe2a22991933f2a3c2d5c8d8e6 ---
--- Nom du fichier: 564287f7c2e5fe2a22991933f2a3c2d5c8d8e6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a5\5c0d8385eaaa1d435f3f6e874e0380044d9286 ---
--- Nom du fichier: 5c0d8385eaaa1d435f3f6e874e0380044d9286 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a5\78bbb6c9a60a8ce5a736b68dd282bda40e5a79 ---
--- Nom du fichier: 78bbb6c9a60a8ce5a736b68dd282bda40e5a79 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a5\7a9aecfe9b8f7a843b77174934ff569790f1d8 ---
--- Nom du fichier: 7a9aecfe9b8f7a843b77174934ff569790f1d8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a5\8870f54ee0dd84547af185b9313491399b689a ---
--- Nom du fichier: 8870f54ee0dd84547af185b9313491399b689a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a6\10fe2ea31233e1bd619f6d3e734c53f41f76d5 ---
--- Nom du fichier: 10fe2ea31233e1bd619f6d3e734c53f41f76d5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a6\168187a9591fedf035c29ba944e3a50e3cc059 ---
--- Nom du fichier: 168187a9591fedf035c29ba944e3a50e3cc059 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a6\396dbb6fd598ed3f02971e4fbaa0846bbf7f09 ---
--- Nom du fichier: 396dbb6fd598ed3f02971e4fbaa0846bbf7f09 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a6\45005f12cb45cf40dfe4ef8b030bf672fbb805 ---
--- Nom du fichier: 45005f12cb45cf40dfe4ef8b030bf672fbb805 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a6\9a066510ed55aebd06a44950875482125553bf ---
--- Nom du fichier: 9a066510ed55aebd06a44950875482125553bf ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a6\a923b26d1a5008d3d7387fbcdfc72390ccb0b4 ---
--- Nom du fichier: a923b26d1a5008d3d7387fbcdfc72390ccb0b4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a6\e3d9a5a4fb4526878f6a90fa297982b0eb3fa4 ---
--- Nom du fichier: e3d9a5a4fb4526878f6a90fa297982b0eb3fa4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a6\e4b491d93ca67f9eacbdf45cb133fb2e051ae5 ---
--- Nom du fichier: e4b491d93ca67f9eacbdf45cb133fb2e051ae5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a7\2a41cf51bdf9887cd5fc343717f8f33c21b0a1 ---
--- Nom du fichier: 2a41cf51bdf9887cd5fc343717f8f33c21b0a1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a7\44a25239e98488648e6447b36a56c7f25bcbd3 ---
--- Nom du fichier: 44a25239e98488648e6447b36a56c7f25bcbd3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a7\4c7062f35a6c114d16516530c9dba83f94f697 ---
--- Nom du fichier: 4c7062f35a6c114d16516530c9dba83f94f697 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a7\99f8f31e0dc086bf7e1f48e67d111d01990fdd ---
--- Nom du fichier: 99f8f31e0dc086bf7e1f48e67d111d01990fdd ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a7\d49a6b30bf2ee06b264182d4ebe41f58f9d05b ---
--- Nom du fichier: d49a6b30bf2ee06b264182d4ebe41f58f9d05b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a8\0fefec6bc32ed6476d71ebf324561e8cb443fc ---
--- Nom du fichier: 0fefec6bc32ed6476d71ebf324561e8cb443fc ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a8\a8442175507aa4f5e4c0707cf6374e5c25b7ca ---
--- Nom du fichier: a8442175507aa4f5e4c0707cf6374e5c25b7ca ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a8\c1b9138d2f2945ff44400f3c484071446c1784 ---
--- Nom du fichier: c1b9138d2f2945ff44400f3c484071446c1784 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a9\0fc84b912425ba2a3608a091407deb6318ea1b ---
--- Nom du fichier: 0fc84b912425ba2a3608a091407deb6318ea1b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a9\2763d44c83a9e26aaeb6fe13792530dd80777b ---
--- Nom du fichier: 2763d44c83a9e26aaeb6fe13792530dd80777b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a9\40a50125a1061ba44465c33c286cb59139001f ---
--- Nom du fichier: 40a50125a1061ba44465c33c286cb59139001f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a9\5dc3b4a50a89c394d66258f46b2621084fcf8b ---
--- Nom du fichier: 5dc3b4a50a89c394d66258f46b2621084fcf8b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a9\6083cbb80309e70bf16d018baf9b81675efc75 ---
--- Nom du fichier: 6083cbb80309e70bf16d018baf9b81675efc75 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a9\9cddadc892ce3e419a017cc7c0f42906719943 ---
--- Nom du fichier: 9cddadc892ce3e419a017cc7c0f42906719943 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a9\adbe735e105d37103ab43213c2706034a92d0a ---
--- Nom du fichier: adbe735e105d37103ab43213c2706034a92d0a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\a9\e5274040204b42dff73ad3698d240fa07b89bb ---
--- Nom du fichier: e5274040204b42dff73ad3698d240fa07b89bb ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\aa\42cf679740ce6b2a3bbe8aa641ac8f5979d46b ---
--- Nom du fichier: 42cf679740ce6b2a3bbe8aa641ac8f5979d46b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\aa\76445999a0df53372e54977a9b087b1b4bcf54 ---
--- Nom du fichier: 76445999a0df53372e54977a9b087b1b4bcf54 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\aa\96651918ed2fb982006b1caafd24b1ccd00788 ---
--- Nom du fichier: 96651918ed2fb982006b1caafd24b1ccd00788 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\aa\ae0f6dfe61e8e9f1529bcbfe53b6073469b125 ---
--- Nom du fichier: ae0f6dfe61e8e9f1529bcbfe53b6073469b125 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ab\07fa532402c980b62b57fd490e27d5edfc52cb ---
--- Nom du fichier: 07fa532402c980b62b57fd490e27d5edfc52cb ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ab\1d294be5c22106085a2ba1f19a450c145431de ---
--- Nom du fichier: 1d294be5c22106085a2ba1f19a450c145431de ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ab\593f8263ab6a06f6a2b9e92318bbb8c834adc5 ---
--- Nom du fichier: 593f8263ab6a06f6a2b9e92318bbb8c834adc5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ab\832fac2fffb23a3480b37a91a42d7af878acc2 ---
--- Nom du fichier: 832fac2fffb23a3480b37a91a42d7af878acc2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ab\dcfd5b455ff27fe6a2a21670ab901569c53117 ---
--- Nom du fichier: dcfd5b455ff27fe6a2a21670ab901569c53117 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ac\10d712e62e85015d22493046d20d670e1a5728 ---
--- Nom du fichier: 10d712e62e85015d22493046d20d670e1a5728 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ac\58e364aa6ee76fc4dafe8128e63fa92d0c66e2 ---
--- Nom du fichier: 58e364aa6ee76fc4dafe8128e63fa92d0c66e2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ac\7cb6c8b7ac8fb762b9365634deb1837dfc2a9c ---
--- Nom du fichier: 7cb6c8b7ac8fb762b9365634deb1837dfc2a9c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ac\b3d77c4988147093b8ee9336d976e4d4e21bd3 ---
--- Nom du fichier: b3d77c4988147093b8ee9336d976e4d4e21bd3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ac\d7a6b107813a5149887a3cedc1edfead7eba95 ---
--- Nom du fichier: d7a6b107813a5149887a3cedc1edfead7eba95 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ac\e6cbd9b5f6069fabc8e45a4140243289972edd ---
--- Nom du fichier: e6cbd9b5f6069fabc8e45a4140243289972edd ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ad\55c318f1dca901bb1a1672a3ef8cd5967e7b5b ---
--- Nom du fichier: 55c318f1dca901bb1a1672a3ef8cd5967e7b5b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ad\5678641a873edbab613c2de51e35cf13538b0f ---
--- Nom du fichier: 5678641a873edbab613c2de51e35cf13538b0f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ad\a906dab56d0b4320988cbbb4e59b4c06046ce5 ---
--- Nom du fichier: a906dab56d0b4320988cbbb4e59b4c06046ce5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ad\b12eacb39352918a871b7ae491c502a4d68da7 ---
--- Nom du fichier: b12eacb39352918a871b7ae491c502a4d68da7 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ad\e742e05200c3f18aad0b2bec16a39dfbfcb8d8 ---
--- Nom du fichier: e742e05200c3f18aad0b2bec16a39dfbfcb8d8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ad\f9c0d9f70b96f8651f2f754115c1d2a23de126 ---
--- Nom du fichier: f9c0d9f70b96f8651f2f754115c1d2a23de126 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ae\06731b6dafb133db78a72ff6c71dbdec67ab55 ---
--- Nom du fichier: 06731b6dafb133db78a72ff6c71dbdec67ab55 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ae\505b398bc2db535a4c2c3c8aad1c328c061f25 ---
--- Nom du fichier: 505b398bc2db535a4c2c3c8aad1c328c061f25 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ae\50ee01b1361edc3403ba5dab0a96ecdfef9ac5 ---
--- Nom du fichier: 50ee01b1361edc3403ba5dab0a96ecdfef9ac5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ae\5f1a123fbe4c68ef27771423632cf4f1d19964 ---
--- Nom du fichier: 5f1a123fbe4c68ef27771423632cf4f1d19964 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ae\a533b0f68f8bc3fb54f4507e8834dcdaf5e6f7 ---
--- Nom du fichier: a533b0f68f8bc3fb54f4507e8834dcdaf5e6f7 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ae\bc8e9d591c64e8db63592c0a8afb85d2d7378a ---
--- Nom du fichier: bc8e9d591c64e8db63592c0a8afb85d2d7378a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\af\2306d4b7d4d0e0e5e18a36558a240d3c40105a ---
--- Nom du fichier: 2306d4b7d4d0e0e5e18a36558a240d3c40105a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\af\2f56eaa40245a93c1f3fc6f29873327c25564a ---
--- Nom du fichier: 2f56eaa40245a93c1f3fc6f29873327c25564a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\af\3c1c8296ffec4436eaaabef7c5c26d12d16a70 ---
--- Nom du fichier: 3c1c8296ffec4436eaaabef7c5c26d12d16a70 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\af\4fd505f6ed823c9d3aaeb4cb0146e5fa3f0a45 ---
--- Nom du fichier: 4fd505f6ed823c9d3aaeb4cb0146e5fa3f0a45 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\af\a0d32d444d2f518f824f976e50d616134a644e ---
--- Nom du fichier: a0d32d444d2f518f824f976e50d616134a644e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\af\a1b511ecf556b770947019d8766a51aba5dc84 ---
--- Nom du fichier: a1b511ecf556b770947019d8766a51aba5dc84 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\af\af74cfdd6420c07138cd03ac487e217d39afc3 ---
--- Nom du fichier: af74cfdd6420c07138cd03ac487e217d39afc3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\af\b232aceb53900315fdc80000405bb3661725f2 ---
--- Nom du fichier: b232aceb53900315fdc80000405bb3661725f2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\af\d1d693a1a1b3872a8a042003bcae606fb5314b ---
--- Nom du fichier: d1d693a1a1b3872a8a042003bcae606fb5314b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\af\db043c07be75a0e5ccde67e161cf9d22169334 ---
--- Nom du fichier: db043c07be75a0e5ccde67e161cf9d22169334 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\af\f34171c9ed4298e5762217ca1fb0a40e6fbd29 ---
--- Nom du fichier: f34171c9ed4298e5762217ca1fb0a40e6fbd29 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b1\11748c212e0dedff30227b0acde851d5e28ddb ---
--- Nom du fichier: 11748c212e0dedff30227b0acde851d5e28ddb ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b1\1fa9f6b3ba03696325bc59d28913367a9cba91 ---
--- Nom du fichier: 1fa9f6b3ba03696325bc59d28913367a9cba91 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b1\303ebcc16bc4792779cab3c7172222889c2b74 ---
--- Nom du fichier: 303ebcc16bc4792779cab3c7172222889c2b74 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b1\49b319e3fd9650db4850daba025de4adb7b476 ---
--- Nom du fichier: 49b319e3fd9650db4850daba025de4adb7b476 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b1\b55b3426a598828544e08076073565043afa34 ---
--- Nom du fichier: b55b3426a598828544e08076073565043afa34 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b1\b5fcb55afa8d3fae515b64182d1347ce490be7 ---
--- Nom du fichier: b5fcb55afa8d3fae515b64182d1347ce490be7 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b1\ce4837da7c07a72cb579cd0137680365167efb ---
--- Nom du fichier: ce4837da7c07a72cb579cd0137680365167efb ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b2\0e5e6b01c2738402cd4732b3b93d5c4f56eca5 ---
--- Nom du fichier: 0e5e6b01c2738402cd4732b3b93d5c4f56eca5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b2\6893f1b0e472ae2ca603ee9b4c3d00da55f2a5 ---
--- Nom du fichier: 6893f1b0e472ae2ca603ee9b4c3d00da55f2a5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b2\94475098726cbfb1844bdfa4e05eca448e973a ---
--- Nom du fichier: 94475098726cbfb1844bdfa4e05eca448e973a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b2\e1595f6751dbf7e8df46a17b797cd859d8a9ab ---
--- Nom du fichier: e1595f6751dbf7e8df46a17b797cd859d8a9ab ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b2\e7cecbf71781aba8093c6fe2b13565d026d5af ---
--- Nom du fichier: e7cecbf71781aba8093c6fe2b13565d026d5af ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b3\03e4617b6ffaf663a94a15fd65caf73a429290 ---
--- Nom du fichier: 03e4617b6ffaf663a94a15fd65caf73a429290 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b3\12135300448cdd332c3b77587a47a1b29a203e ---
--- Nom du fichier: 12135300448cdd332c3b77587a47a1b29a203e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b3\2531bcacc77288ce287828f9405e94ee705048 ---
--- Nom du fichier: 2531bcacc77288ce287828f9405e94ee705048 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b3\28d0b0c2501abd14d7a768afd207c2d7c71cd6 ---
--- Nom du fichier: 28d0b0c2501abd14d7a768afd207c2d7c71cd6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b3\3d46d851e58e8e76ca9e6e036bfd0e448e5020 ---
--- Nom du fichier: 3d46d851e58e8e76ca9e6e036bfd0e448e5020 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b3\432dd244e9de978eeca84e6e7998fb2df2a269 ---
--- Nom du fichier: 432dd244e9de978eeca84e6e7998fb2df2a269 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b3\49dc2709a5e4868263fc0cfc7768891ef229d8 ---
--- Nom du fichier: 49dc2709a5e4868263fc0cfc7768891ef229d8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b3\59cceb634406ef11e65f4cfb34bc428298c630 ---
--- Nom du fichier: 59cceb634406ef11e65f4cfb34bc428298c630 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b3\766da5f190f3f62367336985524e8beb1c0ec2 ---
--- Nom du fichier: 766da5f190f3f62367336985524e8beb1c0ec2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b3\8c0323d5f06902f240a965c0bca3a1c2348221 ---
--- Nom du fichier: 8c0323d5f06902f240a965c0bca3a1c2348221 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b3\b99921602a5ca3fd9d0a73c01ca0362c76bcca ---
--- Nom du fichier: b99921602a5ca3fd9d0a73c01ca0362c76bcca ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b3\bf37d2d428947cd0d1e63ebc0a030cfbefc4e7 ---
--- Nom du fichier: bf37d2d428947cd0d1e63ebc0a030cfbefc4e7 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b3\ee2b9a67ebe55a379d9a6bb861c2cd00e896f7 ---
--- Nom du fichier: ee2b9a67ebe55a379d9a6bb861c2cd00e896f7 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b4\09554fa93870144800fa10ada42ffc2319f5c8 ---
--- Nom du fichier: 09554fa93870144800fa10ada42ffc2319f5c8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b4\13a6a93470d1ac6f27a23257748dd876ffc6cf ---
--- Nom du fichier: 13a6a93470d1ac6f27a23257748dd876ffc6cf ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b4\38b57811f7870b120870fc77a31fc941970054 ---
--- Nom du fichier: 38b57811f7870b120870fc77a31fc941970054 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b4\397a7d2a8423d96223f700c67a4c44dac4b58f ---
--- Nom du fichier: 397a7d2a8423d96223f700c67a4c44dac4b58f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b4\6371cb1fe8fe227b2a27cc69c6c081788d6bed ---
--- Nom du fichier: 6371cb1fe8fe227b2a27cc69c6c081788d6bed ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b4\8c6c54d2b94a03a9baf6b6d0b701797fcde1d4 ---
--- Nom du fichier: 8c6c54d2b94a03a9baf6b6d0b701797fcde1d4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b4\9fbafbdc0ca62474655ba186df891882297cc6 ---
--- Nom du fichier: 9fbafbdc0ca62474655ba186df891882297cc6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b4\a014aadfe9e09c7c11d9cdab8a0685c9c953d9 ---
--- Nom du fichier: a014aadfe9e09c7c11d9cdab8a0685c9c953d9 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b4\af3148340a06c429ccdf501bc6a5f42907b1e7 ---
--- Nom du fichier: af3148340a06c429ccdf501bc6a5f42907b1e7 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b4\dc54826655525f9f0f414420f3c084afd70a1f ---
--- Nom du fichier: dc54826655525f9f0f414420f3c084afd70a1f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b4\f8a6a9c36b8a1e4f052986e053ed4d2ad84fc0 ---
--- Nom du fichier: f8a6a9c36b8a1e4f052986e053ed4d2ad84fc0 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b4\fccc4fbb8328c99ae7273748cdff09047b3567 ---
--- Nom du fichier: fccc4fbb8328c99ae7273748cdff09047b3567 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b5\079fcf8655f72f2b5c8a6092bf1893c49df3fb ---
--- Nom du fichier: 079fcf8655f72f2b5c8a6092bf1893c49df3fb ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b5\3e7570564034c763b6ce1c35c7fce643cc4cfe ---
--- Nom du fichier: 3e7570564034c763b6ce1c35c7fce643cc4cfe ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b5\8c26b53723ab39a53183332d56d33c0ec7208f ---
--- Nom du fichier: 8c26b53723ab39a53183332d56d33c0ec7208f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b5\a8227ecc1fdad64a7b7258fef7a72e350976c3 ---
--- Nom du fichier: a8227ecc1fdad64a7b7258fef7a72e350976c3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b6\12f388eaa1e58110810b16bcbbc7a23582abd8 ---
--- Nom du fichier: 12f388eaa1e58110810b16bcbbc7a23582abd8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b6\41499ad3608554bf5920d32e09c0fc1abd8bd8 ---
--- Nom du fichier: 41499ad3608554bf5920d32e09c0fc1abd8bd8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b6\57b51eca348a9948f0ae4c58bd220c56bf9f0c ---
--- Nom du fichier: 57b51eca348a9948f0ae4c58bd220c56bf9f0c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b6\5af89eaaf5ba9e764d921258ae057b6ed3d71b ---
--- Nom du fichier: 5af89eaaf5ba9e764d921258ae057b6ed3d71b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b6\7916c5d78b5a494d09976d9d793c310fa11d5c ---
--- Nom du fichier: 7916c5d78b5a494d09976d9d793c310fa11d5c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b6\b5d8faaca9502857e2865042c84592bc9ad6e4 ---
--- Nom du fichier: b5d8faaca9502857e2865042c84592bc9ad6e4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b6\f9be391ceeedc4e9d6444dd4aa9a50a48b63e3 ---
--- Nom du fichier: f9be391ceeedc4e9d6444dd4aa9a50a48b63e3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b7\0061d26e7b46314cdc94a36779388fe25cc90f ---
--- Nom du fichier: 0061d26e7b46314cdc94a36779388fe25cc90f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b7\0e8ddcd8ce3195f2afdad07e1d2ddb4c6548de ---
--- Nom du fichier: 0e8ddcd8ce3195f2afdad07e1d2ddb4c6548de ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b7\60e3c3aa957424a397ad611b8acde23aa59957 ---
--- Nom du fichier: 60e3c3aa957424a397ad611b8acde23aa59957 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b7\6c0796156cb61b0b77f026bb67d93b3b436000 ---
--- Nom du fichier: 6c0796156cb61b0b77f026bb67d93b3b436000 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b7\90e294c697439f55f121261c3532a04751c633 ---
--- Nom du fichier: 90e294c697439f55f121261c3532a04751c633 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b7\981480d3f9a88a5b88ec2e8820ba806fb67047 ---
--- Nom du fichier: 981480d3f9a88a5b88ec2e8820ba806fb67047 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b7\eaddaa6151667c0dd1506aed76f0e127c75be7 ---
--- Nom du fichier: eaddaa6151667c0dd1506aed76f0e127c75be7 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b7\fb87ad45d47de62963fae53c5a6e4d2725db07 ---
--- Nom du fichier: fb87ad45d47de62963fae53c5a6e4d2725db07 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b8\45e0c96377b73a26d80bf2835684c3d2c88e07 ---
--- Nom du fichier: 45e0c96377b73a26d80bf2835684c3d2c88e07 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b8\858ef20bbc5a7de4498ce4f753080e3c1129d6 ---
--- Nom du fichier: 858ef20bbc5a7de4498ce4f753080e3c1129d6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b8\a6c626f00f6a0e51dfe6d18104c897b41fc465 ---
--- Nom du fichier: a6c626f00f6a0e51dfe6d18104c897b41fc465 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b8\aebd82372b0ffa41331c54eb2da93eb04948a0 ---
--- Nom du fichier: aebd82372b0ffa41331c54eb2da93eb04948a0 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b8\b2eea48aa158e4054886f65615620a445a7021 ---
--- Nom du fichier: b2eea48aa158e4054886f65615620a445a7021 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b8\e1db6658090d8239ec52713899ac5199968bb9 ---
--- Nom du fichier: e1db6658090d8239ec52713899ac5199968bb9 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b8\e575be12388d1cd2d42fb6af46745dbcc1a65b ---
--- Nom du fichier: e575be12388d1cd2d42fb6af46745dbcc1a65b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b9\1aab7ea0b56375c284880128ebccaab4faebab ---
--- Nom du fichier: 1aab7ea0b56375c284880128ebccaab4faebab ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b9\5acd106e229e60a142df1185009fa3f688e26f ---
--- Nom du fichier: 5acd106e229e60a142df1185009fa3f688e26f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b9\60a06a9f9ecc81a82eac74d8d6ebd49d534aca ---
--- Nom du fichier: 60a06a9f9ecc81a82eac74d8d6ebd49d534aca ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b9\68d97b94ff3069cd8903e986e985b5ca86f608 ---
--- Nom du fichier: 68d97b94ff3069cd8903e986e985b5ca86f608 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b9\7bfecbcbfeb0080718073e22cb51e9886f42bb ---
--- Nom du fichier: 7bfecbcbfeb0080718073e22cb51e9886f42bb ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b9\8f3669abc379779582229c4d8c4b2b8c61b13f ---
--- Nom du fichier: 8f3669abc379779582229c4d8c4b2b8c61b13f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b9\a7aabe9595b9121db4d336f1422995b65c3980 ---
--- Nom du fichier: a7aabe9595b9121db4d336f1422995b65c3980 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b9\aa662884946b207fa6641129a400d0288f917f ---
--- Nom du fichier: aa662884946b207fa6641129a400d0288f917f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b9\caac1cf4f527625d45157bb11f822c07261674 ---
--- Nom du fichier: caac1cf4f527625d45157bb11f822c07261674 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b9\e3861e93f10bc6caeaf76ae9ccd4d8b427bc6c ---
--- Nom du fichier: e3861e93f10bc6caeaf76ae9ccd4d8b427bc6c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b9\e57c20ef190b2e9a69bd8adae1372f5a3b5b5b ---
--- Nom du fichier: e57c20ef190b2e9a69bd8adae1372f5a3b5b5b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\b9\e5aa5f0ce6c7bd4509f04cfc879d9a7af69ae1 ---
--- Nom du fichier: e5aa5f0ce6c7bd4509f04cfc879d9a7af69ae1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ba\7c77f5b45905397bdb99536f8a5faef2d98184 ---
--- Nom du fichier: 7c77f5b45905397bdb99536f8a5faef2d98184 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ba\96c3d3ed289f972ccc5dd16ea78895dcc2e66f ---
--- Nom du fichier: 96c3d3ed289f972ccc5dd16ea78895dcc2e66f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ba\aeded6d4cf017267f40e3e6acd5f4758458edc ---
--- Nom du fichier: aeded6d4cf017267f40e3e6acd5f4758458edc ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ba\b14e9b895987094d7489a50838c84ca27818f1 ---
--- Nom du fichier: b14e9b895987094d7489a50838c84ca27818f1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ba\d43fe44ddca393ef0dc4dec929fec66207da64 ---
--- Nom du fichier: d43fe44ddca393ef0dc4dec929fec66207da64 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\bb\0fa3280e4a0e75ecb99aff20b932745be46154 ---
--- Nom du fichier: 0fa3280e4a0e75ecb99aff20b932745be46154 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\bb\4639d77fbdcba53f2dae956cf060bff113e0e1 ---
--- Nom du fichier: 4639d77fbdcba53f2dae956cf060bff113e0e1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\bb\9f1f1e7e6ad0307bbf6d1f84501856db959dc5 ---
--- Nom du fichier: 9f1f1e7e6ad0307bbf6d1f84501856db959dc5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\bc\7d21877270b8e05c08ae7650f90c177a25a2ef ---
--- Nom du fichier: 7d21877270b8e05c08ae7650f90c177a25a2ef ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\bc\b16b896d5f8044750215be46e1591eb339cbc1 ---
--- Nom du fichier: b16b896d5f8044750215be46e1591eb339cbc1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\bc\d3f1c4db6144a890ba2cd321414c85969b435e ---
--- Nom du fichier: d3f1c4db6144a890ba2cd321414c85969b435e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\bc\f2126bf17eae31fd6f6727d60eef3d34a135c2 ---
--- Nom du fichier: f2126bf17eae31fd6f6727d60eef3d34a135c2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\bc\f84be8ad434e8540b9acbe90b9f1f51aacb742 ---
--- Nom du fichier: f84be8ad434e8540b9acbe90b9f1f51aacb742 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\bd\1e65a6fa05a40f1e76403c5e145287b27e6021 ---
--- Nom du fichier: 1e65a6fa05a40f1e76403c5e145287b27e6021 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\bd\253a9fc187889f166445cc62aa15846af61172 ---
--- Nom du fichier: 253a9fc187889f166445cc62aa15846af61172 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\bd\27d2c434324235ad3728b6633f9db123ddb60d ---
--- Nom du fichier: 27d2c434324235ad3728b6633f9db123ddb60d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\bd\5b7eecd7142c4806cab49ad77236f0fdfbf35d ---
--- Nom du fichier: 5b7eecd7142c4806cab49ad77236f0fdfbf35d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\bd\5c0254ea12bdf0e067bb2f2bd387ded34cec9e ---
--- Nom du fichier: 5c0254ea12bdf0e067bb2f2bd387ded34cec9e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\bd\be71e3a101d6669ef473218261ba54ede55e72 ---
--- Nom du fichier: be71e3a101d6669ef473218261ba54ede55e72 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\bd\d2227174555ee4dc98b7820bd6640c5ba6ab20 ---
--- Nom du fichier: d2227174555ee4dc98b7820bd6640c5ba6ab20 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\bd\ed25789153c595ccf16f3e549a816b87c868c2 ---
--- Nom du fichier: ed25789153c595ccf16f3e549a816b87c868c2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\be\29bdbe38ebd09c24d31dbc7a6aa27537a1823f ---
--- Nom du fichier: 29bdbe38ebd09c24d31dbc7a6aa27537a1823f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\be\60c24dca38fa02bc316d24f1e3d902623e3a7c ---
--- Nom du fichier: 60c24dca38fa02bc316d24f1e3d902623e3a7c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\be\72bc617cb665fc2f4cff80470dd898f6f640b2 ---
--- Nom du fichier: 72bc617cb665fc2f4cff80470dd898f6f640b2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\be\73229a5acf861bf9b913d7262752139c692dba ---
--- Nom du fichier: 73229a5acf861bf9b913d7262752139c692dba ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\be\98f088a164907587a7891fc97d151214f6e1de ---
--- Nom du fichier: 98f088a164907587a7891fc97d151214f6e1de ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\be\e7b4d2e67201e0e2be8623f4e327fed7d0305f ---
--- Nom du fichier: e7b4d2e67201e0e2be8623f4e327fed7d0305f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\be\e9699c26e3e25d32a5563194f4a0b10d3d79bf ---
--- Nom du fichier: e9699c26e3e25d32a5563194f4a0b10d3d79bf ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\be\fc93e90e2224c365cf685dbe13b1abe6df2be3 ---
--- Nom du fichier: fc93e90e2224c365cf685dbe13b1abe6df2be3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\bf\09f0d5c1ec45493936ff331ce671a83d1b8ac9 ---
--- Nom du fichier: 09f0d5c1ec45493936ff331ce671a83d1b8ac9 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\bf\27ece0ed4d9893f9fd35a35acc3d14cb1d3713 ---
--- Nom du fichier: 27ece0ed4d9893f9fd35a35acc3d14cb1d3713 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\bf\5a515e066b0b1d6576ecc99e70d116c7ab3c04 ---
--- Nom du fichier: 5a515e066b0b1d6576ecc99e70d116c7ab3c04 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\bf\6393662b5aab5e6cf64aff892e3051f5501a60 ---
--- Nom du fichier: 6393662b5aab5e6cf64aff892e3051f5501a60 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\bf\8eebb5c3bde352b86de8ce26b6274991d839c4 ---
--- Nom du fichier: 8eebb5c3bde352b86de8ce26b6274991d839c4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\bf\cd5ee6953ff13ef7d6677bd91496127ebfadd7 ---
--- Nom du fichier: cd5ee6953ff13ef7d6677bd91496127ebfadd7 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\bf\e3f2d496eaa189e940d5c6a24a09a1dcf76f35 ---
--- Nom du fichier: e3f2d496eaa189e940d5c6a24a09a1dcf76f35 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c0\266edc327bbae9e08f8a413f6970851fb45571 ---
--- Nom du fichier: 266edc327bbae9e08f8a413f6970851fb45571 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c0\3dc3fde9db0a467f6488003a399c3e19652a2c ---
--- Nom du fichier: 3dc3fde9db0a467f6488003a399c3e19652a2c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c0\8c87e01d4353059a090e2a84fdb06ffcb7dc32 ---
--- Nom du fichier: 8c87e01d4353059a090e2a84fdb06ffcb7dc32 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c1\0b3469f918cb3b69c16b086f5b8522a1d7777a ---
--- Nom du fichier: 0b3469f918cb3b69c16b086f5b8522a1d7777a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c1\270bd59df0398765f5b65533bea560eee20f24 ---
--- Nom du fichier: 270bd59df0398765f5b65533bea560eee20f24 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c1\3a17b8c4de522cf97d976ed85b9dc316114f80 ---
--- Nom du fichier: 3a17b8c4de522cf97d976ed85b9dc316114f80 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c1\79e321f64cbefc96785d7f2f921712ca71efba ---
--- Nom du fichier: 79e321f64cbefc96785d7f2f921712ca71efba ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c1\8674aa9b927c4b5c7c6b5c89de235d2554a431 ---
--- Nom du fichier: 8674aa9b927c4b5c7c6b5c89de235d2554a431 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c1\e29713de65cc4c881b1d933b0029a69bd7efbf ---
--- Nom du fichier: e29713de65cc4c881b1d933b0029a69bd7efbf ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c1\f9c169b4402603f6db48c77414ff0d8421c37f ---
--- Nom du fichier: f9c169b4402603f6db48c77414ff0d8421c37f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c1\fc700778f5af9e854554368d762d4a99d57381 ---
--- Nom du fichier: fc700778f5af9e854554368d762d4a99d57381 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c2\105ed488da0aa7e8bb2c0ae58b1c8a17775c91 ---
--- Nom du fichier: 105ed488da0aa7e8bb2c0ae58b1c8a17775c91 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c2\4deeb7c5632dbb7efaa13cd3957362f10ac4ed ---
--- Nom du fichier: 4deeb7c5632dbb7efaa13cd3957362f10ac4ed ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c2\55810c3f69771aa7afbed7c5e12a1191c0df3e ---
--- Nom du fichier: 55810c3f69771aa7afbed7c5e12a1191c0df3e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c2\5abedd26112023a90c3a965a4b4afc8161f158 ---
--- Nom du fichier: 5abedd26112023a90c3a965a4b4afc8161f158 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c2\78fb89785aa31402a9b4e5c355c6ffa3d98d7b ---
--- Nom du fichier: 78fb89785aa31402a9b4e5c355c6ffa3d98d7b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c2\86871f91becef73e049cdc378041ee877e4ce5 ---
--- Nom du fichier: 86871f91becef73e049cdc378041ee877e4ce5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c2\9ab388bb917f6ae477fd5b8921591333f46b16 ---
--- Nom du fichier: 9ab388bb917f6ae477fd5b8921591333f46b16 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c2\9d64cafcf812e572d930cb452b100d9717e5e2 ---
--- Nom du fichier: 9d64cafcf812e572d930cb452b100d9717e5e2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c3\2a8f1545d10e5f84f4d142468bbf4d08c2ec58 ---
--- Nom du fichier: 2a8f1545d10e5f84f4d142468bbf4d08c2ec58 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c3\81d8a8434055af8f82e9a2c41a58acf0439f7b ---
--- Nom du fichier: 81d8a8434055af8f82e9a2c41a58acf0439f7b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c3\85799e98765579ca27e688d585187fe9d2b0ad ---
--- Nom du fichier: 85799e98765579ca27e688d585187fe9d2b0ad ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c3\8735183ed8d83e40fb77b9fe43ba60fe41ff8c ---
--- Nom du fichier: 8735183ed8d83e40fb77b9fe43ba60fe41ff8c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c3\8f5aaf517b54f1234f7acd0ccbe3917b3b1e36 ---
--- Nom du fichier: 8f5aaf517b54f1234f7acd0ccbe3917b3b1e36 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c3\95159b153ea9bc1c45745cea4c3ad6f6c5d4e6 ---
--- Nom du fichier: 95159b153ea9bc1c45745cea4c3ad6f6c5d4e6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c3\a906e3167efaf87a2ead8345ba92d042cb5208 ---
--- Nom du fichier: a906e3167efaf87a2ead8345ba92d042cb5208 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c3\ce8f0460d53d7e479d3f49069f7c7c60234e2a ---
--- Nom du fichier: ce8f0460d53d7e479d3f49069f7c7c60234e2a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c3\d839e68e0a670e947b78d5a7c91b3a295304f1 ---
--- Nom du fichier: d839e68e0a670e947b78d5a7c91b3a295304f1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c4\cb2e4bbda450f912341fd506af2147ffc396cd ---
--- Nom du fichier: cb2e4bbda450f912341fd506af2147ffc396cd ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c4\d527a4fc71adeff3bcd63bfe3308384e04464a ---
--- Nom du fichier: d527a4fc71adeff3bcd63bfe3308384e04464a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c5\242e528087f69a5dbe09dc90020ae017943201 ---
--- Nom du fichier: 242e528087f69a5dbe09dc90020ae017943201 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c5\6808297a80b86c202775b0ff7c22bbd7519b03 ---
--- Nom du fichier: 6808297a80b86c202775b0ff7c22bbd7519b03 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c5\bde2a9aea086818def2cd8ae09117f0377be71 ---
--- Nom du fichier: bde2a9aea086818def2cd8ae09117f0377be71 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c5\c6fa0f330edb18f1c61fc22c7dbf448db436c1 ---
--- Nom du fichier: c6fa0f330edb18f1c61fc22c7dbf448db436c1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c5\d376112ca5c07f612be00ad3dc6456bb831b43 ---
--- Nom du fichier: d376112ca5c07f612be00ad3dc6456bb831b43 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c5\d56f3b902b5075468a21bb953f845a6e2fd909 ---
--- Nom du fichier: d56f3b902b5075468a21bb953f845a6e2fd909 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c6\0f0df0b948ca80bac81cdcda95efbcdb4666bf ---
--- Nom du fichier: 0f0df0b948ca80bac81cdcda95efbcdb4666bf ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c6\31508033be25062e18224e2414e714b4a7e34e ---
--- Nom du fichier: 31508033be25062e18224e2414e714b4a7e34e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c6\a96561e9e0b770a0cb77dac28bb767e3ec8fed ---
--- Nom du fichier: a96561e9e0b770a0cb77dac28bb767e3ec8fed ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c6\b28bbeb6c2a8fc28a34923b46fe4e1ad524510 ---
--- Nom du fichier: b28bbeb6c2a8fc28a34923b46fe4e1ad524510 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c6\ddeb192f3f417016df7f87ac5dc664105b60a8 ---
--- Nom du fichier: ddeb192f3f417016df7f87ac5dc664105b60a8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c6\e07cc89d033621a9ba759fec9b28c35eee087f ---
--- Nom du fichier: e07cc89d033621a9ba759fec9b28c35eee087f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c7\11fcdcb1be5ca321293e49b8a7ab5020f02958 ---
--- Nom du fichier: 11fcdcb1be5ca321293e49b8a7ab5020f02958 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c7\263b4889e818e4b7335592c65849c64b9f2c4d ---
--- Nom du fichier: 263b4889e818e4b7335592c65849c64b9f2c4d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c7\7c6e60ac8e88ce91136c3a4702680e04824b66 ---
--- Nom du fichier: 7c6e60ac8e88ce91136c3a4702680e04824b66 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c7\8e28da0b661ab48b1e08fdad6d2dc61b792b5d ---
--- Nom du fichier: 8e28da0b661ab48b1e08fdad6d2dc61b792b5d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c7\e88f383759b5f70192597685cd1d2714ff6a0a ---
--- Nom du fichier: e88f383759b5f70192597685cd1d2714ff6a0a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c7\ee40db20c07d4a267a2d75c48b869254ed5bdc ---
--- Nom du fichier: ee40db20c07d4a267a2d75c48b869254ed5bdc ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c8\54d8d9bc7f955df1a8be91da91660fb8cbee17 ---
--- Nom du fichier: 54d8d9bc7f955df1a8be91da91660fb8cbee17 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c8\8010f8b98d20aa5140be0e3adb7d57773e6cdc ---
--- Nom du fichier: 8010f8b98d20aa5140be0e3adb7d57773e6cdc ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c8\8dfd9079a8607ebc225339dd8a64c94cc7c595 ---
--- Nom du fichier: 8dfd9079a8607ebc225339dd8a64c94cc7c595 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c8\ac9aceb89ca519352481b089758e435876056c ---
--- Nom du fichier: ac9aceb89ca519352481b089758e435876056c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c8\b9bc57ed1be4d6433916bbd262c6b85ab67a2f ---
--- Nom du fichier: b9bc57ed1be4d6433916bbd262c6b85ab67a2f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c8\c9be7f6761d3e4e0d7a9776ecfa1576443fe47 ---
--- Nom du fichier: c9be7f6761d3e4e0d7a9776ecfa1576443fe47 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c8\e9a49e0105541521ed9e1997d50107f93abbea ---
--- Nom du fichier: e9a49e0105541521ed9e1997d50107f93abbea ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c9\0ab047c07c59122ccfe12c0acfc59693809cbe ---
--- Nom du fichier: 0ab047c07c59122ccfe12c0acfc59693809cbe ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c9\0e09333859212e41ccb3e64995d80729e7a35c ---
--- Nom du fichier: 0e09333859212e41ccb3e64995d80729e7a35c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c9\1439b370b5ad0d141d8739d23625d3db399257 ---
--- Nom du fichier: 1439b370b5ad0d141d8739d23625d3db399257 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c9\2e638af4f7a6a5f239ee33d083d8d50b891a99 ---
--- Nom du fichier: 2e638af4f7a6a5f239ee33d083d8d50b891a99 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c9\5742fdc51fdc876248acfe659ebca7521349c2 ---
--- Nom du fichier: 5742fdc51fdc876248acfe659ebca7521349c2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c9\5815fd06337cf250a06b4d4a4e01d164d55fb8 ---
--- Nom du fichier: 5815fd06337cf250a06b4d4a4e01d164d55fb8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c9\7ac50b16e42910a5a72b0e81d72a164cdbe1e6 ---
--- Nom du fichier: 7ac50b16e42910a5a72b0e81d72a164cdbe1e6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c9\a13d3339f0b477860d172c3765a21dc229c354 ---
--- Nom du fichier: a13d3339f0b477860d172c3765a21dc229c354 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c9\cbe2cee498b4333c767e432b549fd2897d4cf1 ---
--- Nom du fichier: cbe2cee498b4333c767e432b549fd2897d4cf1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\c9\dc2540d2a219ca57cd23ed9235ef3b75202940 ---
--- Nom du fichier: dc2540d2a219ca57cd23ed9235ef3b75202940 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ca\077f1f5b87e5c4a50b1837c7cd1c469cb9649a ---
--- Nom du fichier: 077f1f5b87e5c4a50b1837c7cd1c469cb9649a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ca\2807057add816878075d92e6638461f8ccfc3e ---
--- Nom du fichier: 2807057add816878075d92e6638461f8ccfc3e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ca\5d66d08735fe7bedbbd62e32adfc8ea5e5fe4a ---
--- Nom du fichier: 5d66d08735fe7bedbbd62e32adfc8ea5e5fe4a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ca\8025920350180b54daf02a0de6938b2deba72d ---
--- Nom du fichier: 8025920350180b54daf02a0de6938b2deba72d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ca\865f22cc7afac562303a597fcb806dd8f008d4 ---
--- Nom du fichier: 865f22cc7afac562303a597fcb806dd8f008d4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ca\c980f7a655375833558d1ae38bf5b8b6b63bae ---
--- Nom du fichier: c980f7a655375833558d1ae38bf5b8b6b63bae ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ca\cc927d0cfdbdd79f3b7984830828047004511a ---
--- Nom du fichier: cc927d0cfdbdd79f3b7984830828047004511a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ca\eebccb214c8276bb6dfe4ff705c5523c008aab ---
--- Nom du fichier: eebccb214c8276bb6dfe4ff705c5523c008aab ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\cb\4383036a8c9c1f3d9005adc5dfbe225f70cba8 ---
--- Nom du fichier: 4383036a8c9c1f3d9005adc5dfbe225f70cba8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\cb\48b282b668bb889abbe8a24c3ae89cb07ba123 ---
--- Nom du fichier: 48b282b668bb889abbe8a24c3ae89cb07ba123 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\cb\50c72f006ed8b02da98eb8b03e141a6cde27f3 ---
--- Nom du fichier: 50c72f006ed8b02da98eb8b03e141a6cde27f3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\cb\55d06d980a5f516a121ade47a22bb6a5806e3c ---
--- Nom du fichier: 55d06d980a5f516a121ade47a22bb6a5806e3c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\cb\698b945d20f81a954c5b2db06abf6aeb851ae0 ---
--- Nom du fichier: 698b945d20f81a954c5b2db06abf6aeb851ae0 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\cb\75a1d9a7eee346f43657eb5f538b10b95399f8 ---
--- Nom du fichier: 75a1d9a7eee346f43657eb5f538b10b95399f8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\cb\a901f293bc791c84f0f47b3bf6ebd80cd84777 ---
--- Nom du fichier: a901f293bc791c84f0f47b3bf6ebd80cd84777 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\cb\e88de0b05f2e17d71abb1d2473b0c9f1244218 ---
--- Nom du fichier: e88de0b05f2e17d71abb1d2473b0c9f1244218 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\cb\fdcefac4525e7f1cd9e090dcb6af9b201e72fb ---
--- Nom du fichier: fdcefac4525e7f1cd9e090dcb6af9b201e72fb ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\cc\05ccb8f297c0fad170299a08185d46e3d6bb44 ---
--- Nom du fichier: 05ccb8f297c0fad170299a08185d46e3d6bb44 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\cc\0e5770afaf5270bd5b0d3ce6779d64388e2d54 ---
--- Nom du fichier: 0e5770afaf5270bd5b0d3ce6779d64388e2d54 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\cc\319298e6a18240b0c0be65655b9464a89abb73 ---
--- Nom du fichier: 319298e6a18240b0c0be65655b9464a89abb73 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\cc\4474bbf4a3ddc0bbe6b28c87af1888b0b56421 ---
--- Nom du fichier: 4474bbf4a3ddc0bbe6b28c87af1888b0b56421 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\cc\6d12ec134e78eea39bdb3086c0c868ab41a86c ---
--- Nom du fichier: 6d12ec134e78eea39bdb3086c0c868ab41a86c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\cd\0df4c42de0515ccc9e05bf8f9598108dd8cf59 ---
--- Nom du fichier: 0df4c42de0515ccc9e05bf8f9598108dd8cf59 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\cd\17d993f51ce4cc6c51d86530b69ff60a81d2c0 ---
--- Nom du fichier: 17d993f51ce4cc6c51d86530b69ff60a81d2c0 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\cd\1ea60ad5edb46193738102f7c1b8e6b8ce7eb5 ---
--- Nom du fichier: 1ea60ad5edb46193738102f7c1b8e6b8ce7eb5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\cd\63a7eab6f01a58f26de2e0c15259687ffa24b6 ---
--- Nom du fichier: 63a7eab6f01a58f26de2e0c15259687ffa24b6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\cd\6726fb7f93c8bf863f955304f7b19c4915e10e ---
--- Nom du fichier: 6726fb7f93c8bf863f955304f7b19c4915e10e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\cd\85666f039887773a145620a4e69663f518ce08 ---
--- Nom du fichier: 85666f039887773a145620a4e69663f518ce08 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\cd\8f3c46a03042fe69a434d71a5b2f512a96171a ---
--- Nom du fichier: 8f3c46a03042fe69a434d71a5b2f512a96171a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\cd\93e64ae49af03c0ef189ff401caea672a9f6d5 ---
--- Nom du fichier: 93e64ae49af03c0ef189ff401caea672a9f6d5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\cd\a82fc351afb61bdd0b53d8bc862586a1b8d2fe ---
--- Nom du fichier: a82fc351afb61bdd0b53d8bc862586a1b8d2fe ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\cd\af0ad9c5ed4269506e5484eb29a446c06bfbf4 ---
--- Nom du fichier: af0ad9c5ed4269506e5484eb29a446c06bfbf4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\cd\fc2de2f88f114115210ccf1cb6506119b74b73 ---
--- Nom du fichier: fc2de2f88f114115210ccf1cb6506119b74b73 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ce\1d096352814ca30b39e26ab2d3c89275532068 ---
--- Nom du fichier: 1d096352814ca30b39e26ab2d3c89275532068 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ce\5f0d6c87dd2df85832f5148d994b7649413e5b ---
--- Nom du fichier: 5f0d6c87dd2df85832f5148d994b7649413e5b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ce\79dcaafad149230525dd443ac45f37b194707e ---
--- Nom du fichier: 79dcaafad149230525dd443ac45f37b194707e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ce\79ec5fbedcdefbce8f9131ddfd8ff2a8b5765d ---
--- Nom du fichier: 79ec5fbedcdefbce8f9131ddfd8ff2a8b5765d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\cf\209399e364209e1e3ece8fb1752456af95d974 ---
--- Nom du fichier: 209399e364209e1e3ece8fb1752456af95d974 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\cf\3e4d27d77b24e9fda8d21172b1881562ded09b ---
--- Nom du fichier: 3e4d27d77b24e9fda8d21172b1881562ded09b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\cf\46f618e5eab7af314885e4d01c1be63c42f4b1 ---
--- Nom du fichier: 46f618e5eab7af314885e4d01c1be63c42f4b1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\cf\5b5dbe0293059b6c648378fec867c76a7eb0ff ---
--- Nom du fichier: 5b5dbe0293059b6c648378fec867c76a7eb0ff ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\cf\a676976432e6e5945c49a0fc620d8802c3e9ca ---
--- Nom du fichier: a676976432e6e5945c49a0fc620d8802c3e9ca ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\cf\beac571053d3d657c49ff63ff7eeba7bb002fe ---
--- Nom du fichier: beac571053d3d657c49ff63ff7eeba7bb002fe ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\cf\ebce9b24a48b9cc50e0390e4608af3153e46cc ---
--- Nom du fichier: ebce9b24a48b9cc50e0390e4608af3153e46cc ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\cf\ed3f01f8abfd8db37752b48fb20c260aad0bb7 ---
--- Nom du fichier: ed3f01f8abfd8db37752b48fb20c260aad0bb7 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d0\2997c67871d7aceae1d1ee465589c6e9015b2f ---
--- Nom du fichier: 2997c67871d7aceae1d1ee465589c6e9015b2f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d0\4fc92aff338470eb8a4859b058b349d3e9e426 ---
--- Nom du fichier: 4fc92aff338470eb8a4859b058b349d3e9e426 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d0\646f27bec0ddcaffdba8f0f4c2a37e90f123e6 ---
--- Nom du fichier: 646f27bec0ddcaffdba8f0f4c2a37e90f123e6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d0\b5800a9d29b055f840ed9f1e33ce44c78185bf ---
--- Nom du fichier: b5800a9d29b055f840ed9f1e33ce44c78185bf ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d1\1d6070b5a81d00291fd32b8ef8f7bcab2c8d46 ---
--- Nom du fichier: 1d6070b5a81d00291fd32b8ef8f7bcab2c8d46 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d1\1d90c380ea81edae2a701bfc7d48e62e5af06e ---
--- Nom du fichier: 1d90c380ea81edae2a701bfc7d48e62e5af06e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d1\589432caaa1a09540b9ae05529d473cb5a3445 ---
--- Nom du fichier: 589432caaa1a09540b9ae05529d473cb5a3445 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d1\909d100dc79871ad5147d577e2a15836340ea5 ---
--- Nom du fichier: 909d100dc79871ad5147d577e2a15836340ea5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d1\fc465d48b0ba7982e873027de953a69f296bd3 ---
--- Nom du fichier: fc465d48b0ba7982e873027de953a69f296bd3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d2\034d12a395405b7b838f18a163fd5e04df6efa ---
--- Nom du fichier: 034d12a395405b7b838f18a163fd5e04df6efa ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d2\0d3b9e7187f2aa61c2395d7e178f0abd422290 ---
--- Nom du fichier: 0d3b9e7187f2aa61c2395d7e178f0abd422290 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d2\1354308c631af4a7b95decb8a93929f093ebd8 ---
--- Nom du fichier: 1354308c631af4a7b95decb8a93929f093ebd8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d2\4b3fa95f3fdef4a558c27942acea4e9516be11 ---
--- Nom du fichier: 4b3fa95f3fdef4a558c27942acea4e9516be11 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d2\4b770efcd0727dd237bdc4d88ee484bbd302d3 ---
--- Nom du fichier: 4b770efcd0727dd237bdc4d88ee484bbd302d3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d2\8e3ed2c60107e736ae908ef3eb461e80728f5d ---
--- Nom du fichier: 8e3ed2c60107e736ae908ef3eb461e80728f5d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d2\9d6d216391f334b8093595e9dcda79b9dd270b ---
--- Nom du fichier: 9d6d216391f334b8093595e9dcda79b9dd270b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d2\bf43c27324bde97b8bec38815210ebd7c06f39 ---
--- Nom du fichier: bf43c27324bde97b8bec38815210ebd7c06f39 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d2\c09124355985065af2bdabe9f5c34d2216a5dc ---
--- Nom du fichier: c09124355985065af2bdabe9f5c34d2216a5dc ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d2\cc089be8a8a9d75993ca47768aa97a77ff1fb6 ---
--- Nom du fichier: cc089be8a8a9d75993ca47768aa97a77ff1fb6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d3\45b7a3fd503019d76996f5ab08089783e609a1 ---
--- Nom du fichier: 45b7a3fd503019d76996f5ab08089783e609a1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d3\48d3e6efc53c7d4758166d8a2efb5da156b5b0 ---
--- Nom du fichier: 48d3e6efc53c7d4758166d8a2efb5da156b5b0 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d3\58ac3ff3ce5a1d567614155276d7a4033a6044 ---
--- Nom du fichier: 58ac3ff3ce5a1d567614155276d7a4033a6044 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d3\807f40016678aca601e788c884644d61e1b7dd ---
--- Nom du fichier: 807f40016678aca601e788c884644d61e1b7dd ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d3\b6295688eb11f8f6dbda4cf92487ff853f75ce ---
--- Nom du fichier: b6295688eb11f8f6dbda4cf92487ff853f75ce ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d3\b980a2c0ad726b62bb3587cf1780413ce41e99 ---
--- Nom du fichier: b980a2c0ad726b62bb3587cf1780413ce41e99 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d3\d8158d79b25213abb4b2b97122284e2a6ee1d1 ---
--- Nom du fichier: d8158d79b25213abb4b2b97122284e2a6ee1d1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d3\eef2d46aacfbcb32a54bf95082f458403c21dc ---
--- Nom du fichier: eef2d46aacfbcb32a54bf95082f458403c21dc ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d4\42921dad1c9151aafd9042d4a55cbef57fdef1 ---
--- Nom du fichier: 42921dad1c9151aafd9042d4a55cbef57fdef1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d4\635e8c16f2ca32ef289dc94c99e70178ca45f5 ---
--- Nom du fichier: 635e8c16f2ca32ef289dc94c99e70178ca45f5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d4\b10a5b7153ac0d4dbba613f7946dc4a9f34c6e ---
--- Nom du fichier: b10a5b7153ac0d4dbba613f7946dc4a9f34c6e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d4\cae6bd2ec866031c7ee3fe088f7c91b7447686 ---
--- Nom du fichier: cae6bd2ec866031c7ee3fe088f7c91b7447686 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d4\e6a4d00843cc100cf811d7f931a7e7c0e7d708 ---
--- Nom du fichier: e6a4d00843cc100cf811d7f931a7e7c0e7d708 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d5\0b2c2f5a5a805bec05a0a357ff3e011cae0039 ---
--- Nom du fichier: 0b2c2f5a5a805bec05a0a357ff3e011cae0039 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d5\0c0d6cea72341a2425eb0d8a195c58cbb1aec1 ---
--- Nom du fichier: 0c0d6cea72341a2425eb0d8a195c58cbb1aec1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d5\4fb8832fcc792bcf2c1431df8d63499becbe23 ---
--- Nom du fichier: 4fb8832fcc792bcf2c1431df8d63499becbe23 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d5\84f41d26eede688d7f9f320d0ffcae97c91c74 ---
--- Nom du fichier: 84f41d26eede688d7f9f320d0ffcae97c91c74 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d5\ab6b3c6acb13a837eb685a6d7e3b8772b51fd8 ---
--- Nom du fichier: ab6b3c6acb13a837eb685a6d7e3b8772b51fd8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d5\b7a079561b9b5047bf1655d44abcb749c8f064 ---
--- Nom du fichier: b7a079561b9b5047bf1655d44abcb749c8f064 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d5\c55d559966048faad8492107662accaea17044 ---
--- Nom du fichier: c55d559966048faad8492107662accaea17044 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d5\dbf8c21f283a256fdbd817d013dba28a7f7cf7 ---
--- Nom du fichier: dbf8c21f283a256fdbd817d013dba28a7f7cf7 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d6\46cf67cca89fddf4d9f5167d1e6c4dd831415d ---
--- Nom du fichier: 46cf67cca89fddf4d9f5167d1e6c4dd831415d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d6\53ac2ffef3d43c8824a9e327da8e463cf74abe ---
--- Nom du fichier: 53ac2ffef3d43c8824a9e327da8e463cf74abe ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d6\9aa91b708a7fe1ea1285a2e287544f371a7112 ---
--- Nom du fichier: 9aa91b708a7fe1ea1285a2e287544f371a7112 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d6\b8957c9bf2f9993f9251b28353c71e356377a6 ---
--- Nom du fichier: b8957c9bf2f9993f9251b28353c71e356377a6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d6\bd341523924cecb9e4cc58ff191fe56e40221b ---
--- Nom du fichier: bd341523924cecb9e4cc58ff191fe56e40221b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d6\e09e6ba03567baa741505255a9210b87e1dae3 ---
--- Nom du fichier: e09e6ba03567baa741505255a9210b87e1dae3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d6\fce6e7ad7bbc34cf991e05cca71af5b6c4e246 ---
--- Nom du fichier: fce6e7ad7bbc34cf991e05cca71af5b6c4e246 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d7\300791f54fefb55a84dc26cce3b253de625162 ---
--- Nom du fichier: 300791f54fefb55a84dc26cce3b253de625162 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d7\78605cdab222b30d5080ad547f02df1a5d8cd0 ---
--- Nom du fichier: 78605cdab222b30d5080ad547f02df1a5d8cd0 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d7\81711243eb173787b69b4f1fe1e4f99a85ec71 ---
--- Nom du fichier: 81711243eb173787b69b4f1fe1e4f99a85ec71 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d7\9a94d67704fc7a994b2c48ce0728e9a89e9aea ---
--- Nom du fichier: 9a94d67704fc7a994b2c48ce0728e9a89e9aea ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d7\a9996daee2d62e011eacb3738d2c79f60a3e22 ---
--- Nom du fichier: a9996daee2d62e011eacb3738d2c79f60a3e22 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d7\befdb64b456787d7f2fd913451f7dfd5672e65 ---
--- Nom du fichier: befdb64b456787d7f2fd913451f7dfd5672e65 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d7\e83dccf0458b353efece1a25f7cad45969b2b5 ---
--- Nom du fichier: e83dccf0458b353efece1a25f7cad45969b2b5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d8\057aaeb84541e95286ff93b1cc65ebc33f7497 ---
--- Nom du fichier: 057aaeb84541e95286ff93b1cc65ebc33f7497 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d8\1a6335d654069cd4c9883c688348db80877934 ---
--- Nom du fichier: 1a6335d654069cd4c9883c688348db80877934 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d8\523e073e408bfbdfef28eb34ce30dd5f7ff5e6 ---
--- Nom du fichier: 523e073e408bfbdfef28eb34ce30dd5f7ff5e6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d8\5606f1608cbf13af853f49448ebe5c8a628047 ---
--- Nom du fichier: 5606f1608cbf13af853f49448ebe5c8a628047 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d8\8cfc240909b4a55e01b817cabbcbf908ff4cfe ---
--- Nom du fichier: 8cfc240909b4a55e01b817cabbcbf908ff4cfe ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d8\8ff21d98e2013c0cb9dbebbe715aee6b8658de ---
--- Nom du fichier: 8ff21d98e2013c0cb9dbebbe715aee6b8658de ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d8\909e0616bc072a3440a58abc1720b6106a4b24 ---
--- Nom du fichier: 909e0616bc072a3440a58abc1720b6106a4b24 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d8\f7837ffc0524a9b2b24007b00cd65bd9b74e26 ---
--- Nom du fichier: f7837ffc0524a9b2b24007b00cd65bd9b74e26 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d9\391c11f7f2add43778724ae0ca3a25f6d5c575 ---
--- Nom du fichier: 391c11f7f2add43778724ae0ca3a25f6d5c575 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d9\7cd95455c769553ea5d58814b4f607c4dfbe2b ---
--- Nom du fichier: 7cd95455c769553ea5d58814b4f607c4dfbe2b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d9\aa24ee067dc2127a48062ae52bd7341223b8ce ---
--- Nom du fichier: aa24ee067dc2127a48062ae52bd7341223b8ce ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\d9\fcc835eada690ccb98e9af9adb26a769adf487 ---
--- Nom du fichier: fcc835eada690ccb98e9af9adb26a769adf487 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\da\4edd3c5043c9d26e4848db76831f6d4617b5e9 ---
--- Nom du fichier: 4edd3c5043c9d26e4848db76831f6d4617b5e9 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\da\726891e3e01911891473d5d768b72b7930adbe ---
--- Nom du fichier: 726891e3e01911891473d5d768b72b7930adbe ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\da\9f068cbdccc2849b52cf9bbe556192e8672910 ---
--- Nom du fichier: 9f068cbdccc2849b52cf9bbe556192e8672910 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\da\b0500c2cd617c58b8ad41ae9b65bb75bacf243 ---
--- Nom du fichier: b0500c2cd617c58b8ad41ae9b65bb75bacf243 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\db\0fe8c8990da0b9ed2ea20f72a29196786bbf1f ---
--- Nom du fichier: 0fe8c8990da0b9ed2ea20f72a29196786bbf1f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\db\52f68e0395b81281c9a6cac5702199c5c39441 ---
--- Nom du fichier: 52f68e0395b81281c9a6cac5702199c5c39441 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\db\bfd55017b2775d8547e45da2d5a7f0dcd1e273 ---
--- Nom du fichier: bfd55017b2775d8547e45da2d5a7f0dcd1e273 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\db\d421a51a86a020ab9bf24f2f3ee00939363ee0 ---
--- Nom du fichier: d421a51a86a020ab9bf24f2f3ee00939363ee0 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\db\d6fdfdd310798168aad3792679649b882f6ff5 ---
--- Nom du fichier: d6fdfdd310798168aad3792679649b882f6ff5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\db\f290573e937f8385af5fe901e96235b13b880b ---
--- Nom du fichier: f290573e937f8385af5fe901e96235b13b880b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\dc\0c40a15d059a70968422564236b1d0af684d56 ---
--- Nom du fichier: 0c40a15d059a70968422564236b1d0af684d56 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\dc\10a1cfa39232509c99eb979a9bc195939495ba ---
--- Nom du fichier: 10a1cfa39232509c99eb979a9bc195939495ba ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\dc\8ab2a049858d945e76267a82d984c75c61dcf3 ---
--- Nom du fichier: 8ab2a049858d945e76267a82d984c75c61dcf3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\dc\97e96b53becd3ebc26640776f56af62c34bfef ---
--- Nom du fichier: 97e96b53becd3ebc26640776f56af62c34bfef ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\dc\a5f49ddc93c4155daa6d3e9f835fab8be57a77 ---
--- Nom du fichier: a5f49ddc93c4155daa6d3e9f835fab8be57a77 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\dc\b152bcbeb9d250746b1bf2b5ecca9f41db3885 ---
--- Nom du fichier: b152bcbeb9d250746b1bf2b5ecca9f41db3885 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\dc\cb8fdb76576d62a09f00b14a7041e36fe10d95 ---
--- Nom du fichier: cb8fdb76576d62a09f00b14a7041e36fe10d95 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\dc\ea321f9909cb7548a11a24f9c0b26d0c84c206 ---
--- Nom du fichier: ea321f9909cb7548a11a24f9c0b26d0c84c206 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\dc\fbe571453778f6c11900c1645ac4e2508b519e ---
--- Nom du fichier: fbe571453778f6c11900c1645ac4e2508b519e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\dd\53f715e4f22e03411b46c4a58a062373bab135 ---
--- Nom du fichier: 53f715e4f22e03411b46c4a58a062373bab135 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\dd\80579044e751da471265961a9a785982f3bc8b ---
--- Nom du fichier: 80579044e751da471265961a9a785982f3bc8b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\dd\b6ed9051a851a7422cbfc74061a635e3008b4c ---
--- Nom du fichier: b6ed9051a851a7422cbfc74061a635e3008b4c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\de\193ee1f8b58f74a1e398cabf854bce0d37aaad ---
--- Nom du fichier: 193ee1f8b58f74a1e398cabf854bce0d37aaad ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\de\231ae9f2eac5f847e4dad82a7b91cad3f4936e ---
--- Nom du fichier: 231ae9f2eac5f847e4dad82a7b91cad3f4936e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\de\40bd228c2a2ce788ba7d0c36b58c8d71b5c17c ---
--- Nom du fichier: 40bd228c2a2ce788ba7d0c36b58c8d71b5c17c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\de\4645c090dfedaabc7c29b7eb2e10d624ca8289 ---
--- Nom du fichier: 4645c090dfedaabc7c29b7eb2e10d624ca8289 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\de\959adbd112c1e9ea2c7d1fbc593984fd3160b8 ---
--- Nom du fichier: 959adbd112c1e9ea2c7d1fbc593984fd3160b8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\de\a67fb475d7ccfeaa7cb0aea1efd2deede2087c ---
--- Nom du fichier: a67fb475d7ccfeaa7cb0aea1efd2deede2087c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\de\b368b6a88e01e6c7580610cb44046819be918c ---
--- Nom du fichier: b368b6a88e01e6c7580610cb44046819be918c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\de\b9a287c5fd050be3d62e0785ab13d9bf743c11 ---
--- Nom du fichier: b9a287c5fd050be3d62e0785ab13d9bf743c11 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\de\e741e77c42ef25c786c937a7e6512b64c76b8f ---
--- Nom du fichier: e741e77c42ef25c786c937a7e6512b64c76b8f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\df\5eb289d4f44f1166311313b569a0c6fc8abc80 ---
--- Nom du fichier: 5eb289d4f44f1166311313b569a0c6fc8abc80 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\df\62f65ba7e52ed6921a091fb9801b4d633c965e ---
--- Nom du fichier: 62f65ba7e52ed6921a091fb9801b4d633c965e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\df\9d4fae33e769c256f9c0c5c2d03a4a751a1032 ---
--- Nom du fichier: 9d4fae33e769c256f9c0c5c2d03a4a751a1032 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e0\19c2c66ebb019e80f6c7276fbc9908cd4beae4 ---
--- Nom du fichier: 19c2c66ebb019e80f6c7276fbc9908cd4beae4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e0\1f8c81d03c6d188c5e13d6f0430924a7a43602 ---
--- Nom du fichier: 1f8c81d03c6d188c5e13d6f0430924a7a43602 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e0\2803ae932357a17505df5ea19f5815dc5aa62e ---
--- Nom du fichier: 2803ae932357a17505df5ea19f5815dc5aa62e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e0\286906cd58892c97ab6bd96fd43226667f5cf9 ---
--- Nom du fichier: 286906cd58892c97ab6bd96fd43226667f5cf9 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e0\949523be9531f4cf5f01682bcaff9f007f35d3 ---
--- Nom du fichier: 949523be9531f4cf5f01682bcaff9f007f35d3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e0\9c20fc2fc385c7caad5807adaff6ae6d6f8b2d ---
--- Nom du fichier: 9c20fc2fc385c7caad5807adaff6ae6d6f8b2d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e0\bca8d1f7924cb1ea13c3c23e979df1be40208c ---
--- Nom du fichier: bca8d1f7924cb1ea13c3c23e979df1be40208c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e0\f854a8d0b1073f341a7669558f6f950bcace9a ---
--- Nom du fichier: f854a8d0b1073f341a7669558f6f950bcace9a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e1\00d8c63d8a6145bf2429109f2f2ac207839757 ---
--- Nom du fichier: 00d8c63d8a6145bf2429109f2f2ac207839757 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e1\43db44c9c98c926730294a9a0c3b6fb455282e ---
--- Nom du fichier: 43db44c9c98c926730294a9a0c3b6fb455282e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e1\a9b13570da8f2a5af644d1bace0a3300a8ba54 ---
--- Nom du fichier: a9b13570da8f2a5af644d1bace0a3300a8ba54 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e1\ac4459ee471a638b7b4573c5a4a5b8a42b0e7a ---
--- Nom du fichier: ac4459ee471a638b7b4573c5a4a5b8a42b0e7a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e1\d7e5fb8bc789799966d57b098b6ed00235c809 ---
--- Nom du fichier: d7e5fb8bc789799966d57b098b6ed00235c809 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e1\eab39f435693335dbc889bd5653aa65df903d2 ---
--- Nom du fichier: eab39f435693335dbc889bd5653aa65df903d2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e2\461efb9af502ecfe1cf96ba05efe4b08118736 ---
--- Nom du fichier: 461efb9af502ecfe1cf96ba05efe4b08118736 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e2\66d7336c092e39f822caa333bea30794f7e04d ---
--- Nom du fichier: 66d7336c092e39f822caa333bea30794f7e04d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e2\72ce3bb2ae81984662ce5cc84d3749e5e32cd9 ---
--- Nom du fichier: 72ce3bb2ae81984662ce5cc84d3749e5e32cd9 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e2\82cb427c0384848fd36bff1c053b766540ca05 ---
--- Nom du fichier: 82cb427c0384848fd36bff1c053b766540ca05 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e2\87afaff1583b4a2b0d36fe895cf769f94d0fb3 ---
--- Nom du fichier: 87afaff1583b4a2b0d36fe895cf769f94d0fb3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e2\d7cfdf3a1dfa9d7820395d4371b1c7dcd469ae ---
--- Nom du fichier: d7cfdf3a1dfa9d7820395d4371b1c7dcd469ae ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e2\ef2a481a0dae7d76697ad6e3463824734ebf79 ---
--- Nom du fichier: ef2a481a0dae7d76697ad6e3463824734ebf79 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e3\10b1e6965b44a62836bea8f481f76e75a26fdd ---
--- Nom du fichier: 10b1e6965b44a62836bea8f481f76e75a26fdd ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e3\187541ac55ba40b66cb4d01dce7715ed485d65 ---
--- Nom du fichier: 187541ac55ba40b66cb4d01dce7715ed485d65 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e3\d19fe962ab3d939fd754e2055ba353fbd26279 ---
--- Nom du fichier: d19fe962ab3d939fd754e2055ba353fbd26279 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e3\fa9231477ffd28dd3a0337873b738f5dc57cd0 ---
--- Nom du fichier: fa9231477ffd28dd3a0337873b738f5dc57cd0 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e4\12f309d8d6a6e0a692bbe3ba8b598255a9dd70 ---
--- Nom du fichier: 12f309d8d6a6e0a692bbe3ba8b598255a9dd70 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e4\143535d497931930b6dccd4db3370356613c50 ---
--- Nom du fichier: 143535d497931930b6dccd4db3370356613c50 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e4\2d1f420be7a224b4fe32122405a2cdd996fecf ---
--- Nom du fichier: 2d1f420be7a224b4fe32122405a2cdd996fecf ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e4\3c1425d4a602a5163777fdf2d73c3bedd03426 ---
--- Nom du fichier: 3c1425d4a602a5163777fdf2d73c3bedd03426 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e4\74770df0af65fae4af16e981b233be1b221230 ---
--- Nom du fichier: 74770df0af65fae4af16e981b233be1b221230 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e4\8f1ca1a5a1d91ec17abf12592c13fca8d8ed78 ---
--- Nom du fichier: 8f1ca1a5a1d91ec17abf12592c13fca8d8ed78 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e4\d630efecaea6339e0498e80de59297719761b9 ---
--- Nom du fichier: d630efecaea6339e0498e80de59297719761b9 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e4\e07d572d71afcb37f34a11f52ccb3274da27c3 ---
--- Nom du fichier: e07d572d71afcb37f34a11f52ccb3274da27c3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e5\037f8bf698e7c3a92d48a323c61095d24c3717 ---
--- Nom du fichier: 037f8bf698e7c3a92d48a323c61095d24c3717 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e5\1de857ce56ebd1c4ec310aaaf400dc08bb4e55 ---
--- Nom du fichier: 1de857ce56ebd1c4ec310aaaf400dc08bb4e55 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e5\548cd54fff23484bf9f47297a2647b21aab13a ---
--- Nom du fichier: 548cd54fff23484bf9f47297a2647b21aab13a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e5\8dfefd1872b4f2acab174ba32c2992ddb30910 ---
--- Nom du fichier: 8dfefd1872b4f2acab174ba32c2992ddb30910 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e5\acf112710f8e69f1a0237ee2101fcbcba110ba ---
--- Nom du fichier: acf112710f8e69f1a0237ee2101fcbcba110ba ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e6\200dd59602e0b9c8f556bf70ed8cae982d0799 ---
--- Nom du fichier: 200dd59602e0b9c8f556bf70ed8cae982d0799 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e6\27a82ef4328332b5d9f409b6ec5a7f46c1d0f0 ---
--- Nom du fichier: 27a82ef4328332b5d9f409b6ec5a7f46c1d0f0 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e6\3a4436cc6334d14189eb26dd4701cd4be98195 ---
--- Nom du fichier: 3a4436cc6334d14189eb26dd4701cd4be98195 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e6\9de29bb2d1d6434b8b29ae775ad8c2e48c5391 ---
--- Nom du fichier: 9de29bb2d1d6434b8b29ae775ad8c2e48c5391 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e6\b044fd2153d12515d1cf5f743fe16ddcaae0c7 ---
--- Nom du fichier: b044fd2153d12515d1cf5f743fe16ddcaae0c7 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e6\b2766a3b8546c4f39835ab4a0e672db9774c2b ---
--- Nom du fichier: b2766a3b8546c4f39835ab4a0e672db9774c2b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e6\b3c7de4a0a9cc4e21c4cef850f236b52ebc0c6 ---
--- Nom du fichier: b3c7de4a0a9cc4e21c4cef850f236b52ebc0c6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e6\b784592362715378bb8ed05bd87409cf89a686 ---
--- Nom du fichier: b784592362715378bb8ed05bd87409cf89a686 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e6\d05939cb5ff2e66ba4bdbd2a9f95493800570d ---
--- Nom du fichier: d05939cb5ff2e66ba4bdbd2a9f95493800570d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e7\241198b53b73e30c8fa566e3aead62279f4f54 ---
--- Nom du fichier: 241198b53b73e30c8fa566e3aead62279f4f54 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e7\29fbdd3dc8fbf5ddf11e12a959f705b5757599 ---
--- Nom du fichier: 29fbdd3dc8fbf5ddf11e12a959f705b5757599 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e7\4d9e7b20c3fdec4b148bab45437df79128de87 ---
--- Nom du fichier: 4d9e7b20c3fdec4b148bab45437df79128de87 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e7\a5479983659b8f5303aab4acc1c142630df8a8 ---
--- Nom du fichier: a5479983659b8f5303aab4acc1c142630df8a8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e8\bd79b6cf9731f9b0d2d35011598856337b8559 ---
--- Nom du fichier: bd79b6cf9731f9b0d2d35011598856337b8559 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e9\28cd37095a1f4435d154c9e04d1bba47f81a50 ---
--- Nom du fichier: 28cd37095a1f4435d154c9e04d1bba47f81a50 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e9\3293748ea8c9cd40704a52373061e7a159c36d ---
--- Nom du fichier: 3293748ea8c9cd40704a52373061e7a159c36d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e9\4a363746c5524b0018c9023fb99dbc18d08ddc ---
--- Nom du fichier: 4a363746c5524b0018c9023fb99dbc18d08ddc ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e9\b8b731299749ce3cd514041bc94286e066a5a2 ---
--- Nom du fichier: b8b731299749ce3cd514041bc94286e066a5a2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\e9\c5b0c253cfd057d445d31f15d35e20ac101576 ---
--- Nom du fichier: c5b0c253cfd057d445d31f15d35e20ac101576 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ea\4fbfa310987df100b8b1e0c9acc9b8748b8fc5 ---
--- Nom du fichier: 4fbfa310987df100b8b1e0c9acc9b8748b8fc5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ea\a7894c69c59a90a489320d86a6e3e39b2a5fb6 ---
--- Nom du fichier: a7894c69c59a90a489320d86a6e3e39b2a5fb6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ea\d393b3f2188ebe55781bf1f0934cbdc0ed5bec ---
--- Nom du fichier: d393b3f2188ebe55781bf1f0934cbdc0ed5bec ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ea\e4c08039c9528f0136bd862410e62d6cafe294 ---
--- Nom du fichier: e4c08039c9528f0136bd862410e62d6cafe294 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ea\f27e53b3f26352b40e815e583c3ff75934ed59 ---
--- Nom du fichier: f27e53b3f26352b40e815e583c3ff75934ed59 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\eb\0cb63514d2bc16c2f9e3aac3a185b5722e9bfd ---
--- Nom du fichier: 0cb63514d2bc16c2f9e3aac3a185b5722e9bfd ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\eb\1cc0014348e14a184df374ff45b0965fd38218 ---
--- Nom du fichier: 1cc0014348e14a184df374ff45b0965fd38218 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\eb\351e15f6260bbaedd7f4ae251ec23f46cb36c8 ---
--- Nom du fichier: 351e15f6260bbaedd7f4ae251ec23f46cb36c8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\eb\3c8bd4e20b72be6443444421da57c5c2c94969 ---
--- Nom du fichier: 3c8bd4e20b72be6443444421da57c5c2c94969 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\eb\5ef4ab03ec89d4941be884c4b93633a22601c2 ---
--- Nom du fichier: 5ef4ab03ec89d4941be884c4b93633a22601c2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\eb\65f513dc055b498bb54226152fb6605aac6f2e ---
--- Nom du fichier: 65f513dc055b498bb54226152fb6605aac6f2e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\eb\7297bbd01f5aca61e59ca458ebc4e435b9bb3c ---
--- Nom du fichier: 7297bbd01f5aca61e59ca458ebc4e435b9bb3c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\eb\9cf60f5d718d76b2d3ed27d15c72cc0c755b9c ---
--- Nom du fichier: 9cf60f5d718d76b2d3ed27d15c72cc0c755b9c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\eb\a1a5af8cf7de07ff9e092a266de36e383bfb64 ---
--- Nom du fichier: a1a5af8cf7de07ff9e092a266de36e383bfb64 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\eb\c922de9007ff36797672688b9dffeeb7ce6199 ---
--- Nom du fichier: c922de9007ff36797672688b9dffeeb7ce6199 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\eb\f0d3b302ceb65490f3f7694edd054d7db7ed6c ---
--- Nom du fichier: f0d3b302ceb65490f3f7694edd054d7db7ed6c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ec\14ff1de7248b1515eab361306466b529f02234 ---
--- Nom du fichier: 14ff1de7248b1515eab361306466b529f02234 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ec\3b7d340551e5baa121d4cf5d53f2739257e442 ---
--- Nom du fichier: 3b7d340551e5baa121d4cf5d53f2739257e442 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ec\5dfee76e34fb094e8f213962dfa660ca47f6bb ---
--- Nom du fichier: 5dfee76e34fb094e8f213962dfa660ca47f6bb ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ec\80f480afe9d230452aa2c2d32c5f807cfb92d1 ---
--- Nom du fichier: 80f480afe9d230452aa2c2d32c5f807cfb92d1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ec\b714f7b9d9a9036e207af1836093e59a793bf0 ---
--- Nom du fichier: b714f7b9d9a9036e207af1836093e59a793bf0 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ec\c7ec0a6ea66adc505e38349d90421176a7769e ---
--- Nom du fichier: c7ec0a6ea66adc505e38349d90421176a7769e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ed\00d4d74b4bd5ae4e5cece48ab0b17bd7bc0dc4 ---
--- Nom du fichier: 00d4d74b4bd5ae4e5cece48ab0b17bd7bc0dc4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ed\57bc83d39e352e446f63d31a56f6bd3cf6c951 ---
--- Nom du fichier: 57bc83d39e352e446f63d31a56f6bd3cf6c951 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ed\76810b720e3a3111e2c3b0a1dbae6122517dba ---
--- Nom du fichier: 76810b720e3a3111e2c3b0a1dbae6122517dba ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ed\9b1519b6a9fd2069a71c094ae9b1959e340830 ---
--- Nom du fichier: 9b1519b6a9fd2069a71c094ae9b1959e340830 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ed\b7433d51e85305f4ed214376a634ae01f191db ---
--- Nom du fichier: b7433d51e85305f4ed214376a634ae01f191db ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ed\e19d64bb245698d0cabdf56b3d5130a4b3d27c ---
--- Nom du fichier: e19d64bb245698d0cabdf56b3d5130a4b3d27c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ed\e23f68d995d34df089d60176668f44fa0029a3 ---
--- Nom du fichier: e23f68d995d34df089d60176668f44fa0029a3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ee\3288854c9154751576837b4ea2c69001242b6f ---
--- Nom du fichier: 3288854c9154751576837b4ea2c69001242b6f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ee\3b6fae9fa2b237c4e98ff27d7e6f16259accf5 ---
--- Nom du fichier: 3b6fae9fa2b237c4e98ff27d7e6f16259accf5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ee\9d998829c788986ae73c8f950597535f845325 ---
--- Nom du fichier: 9d998829c788986ae73c8f950597535f845325 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ee\c9d893964e6945063ab99e1b7eff87cd144853 ---
--- Nom du fichier: c9d893964e6945063ab99e1b7eff87cd144853 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ee\d8fa78312aa95cab1178fe22a5f0cc27638334 ---
--- Nom du fichier: d8fa78312aa95cab1178fe22a5f0cc27638334 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ef\461df3d178525e9aeaa1e853bebb6074b689ff ---
--- Nom du fichier: 461df3d178525e9aeaa1e853bebb6074b689ff ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ef\ac70d2faac4c8ebe80292c9c2912d5f6f0b999 ---
--- Nom du fichier: ac70d2faac4c8ebe80292c9c2912d5f6f0b999 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f0\ada21912164293257f63aa31773e0f40521bd0 ---
--- Nom du fichier: ada21912164293257f63aa31773e0f40521bd0 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f0\bcc716f32fdef1fe1e4693bf807ef3568f25e0 ---
--- Nom du fichier: bcc716f32fdef1fe1e4693bf807ef3568f25e0 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f0\fa61d13e8503692b9b0637a831832dc00030a0 ---
--- Nom du fichier: fa61d13e8503692b9b0637a831832dc00030a0 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f1\1fd9081837065e9b68566031cf6a88ecf1daa0 ---
--- Nom du fichier: 1fd9081837065e9b68566031cf6a88ecf1daa0 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f1\336ba710dddbf186af861cd51468354e5b353c ---
--- Nom du fichier: 336ba710dddbf186af861cd51468354e5b353c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f1\3a7ccdff224782ea0b41ffeee8a57b37937c61 ---
--- Nom du fichier: 3a7ccdff224782ea0b41ffeee8a57b37937c61 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f1\469e59cd6664e5e269c692302eb33b09457ae6 ---
--- Nom du fichier: 469e59cd6664e5e269c692302eb33b09457ae6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f1\93b6bfcd14276cdd22484f19aa5df02de41e0f ---
--- Nom du fichier: 93b6bfcd14276cdd22484f19aa5df02de41e0f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f1\9b790ba103c6c5d5aa07be8c3f6c7f4b8ce3c9 ---
--- Nom du fichier: 9b790ba103c6c5d5aa07be8c3f6c7f4b8ce3c9 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f1\a733d0accd2defa3a590cc33e11e4d3a084706 ---
--- Nom du fichier: a733d0accd2defa3a590cc33e11e4d3a084706 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f1\adcd9ffef820e8518b937d63823472fca4d0df ---
--- Nom du fichier: adcd9ffef820e8518b937d63823472fca4d0df ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f1\b281d01aff474dc54a32b2c6b7dd249a211d66 ---
--- Nom du fichier: b281d01aff474dc54a32b2c6b7dd249a211d66 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f1\d47128d79d7e97640b7c338f303d143b8f50b4 ---
--- Nom du fichier: d47128d79d7e97640b7c338f303d143b8f50b4 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f1\f5301e590bf711afe4e2a92c854401de130aee ---
--- Nom du fichier: f5301e590bf711afe4e2a92c854401de130aee ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f2\4280c64de2e40c822fd05e6ef483de8bbb906a ---
--- Nom du fichier: 4280c64de2e40c822fd05e6ef483de8bbb906a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f2\ba003a94e462aeafdecef1b7d754b0c81d34d5 ---
--- Nom du fichier: ba003a94e462aeafdecef1b7d754b0c81d34d5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f2\cfd8ee9dc536a6a721a05da608a894b86fbeaf ---
--- Nom du fichier: cfd8ee9dc536a6a721a05da608a894b86fbeaf ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f3\2c017c778a4a1162ec845113601ef050098a31 ---
--- Nom du fichier: 2c017c778a4a1162ec845113601ef050098a31 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f3\6c8ba8fee38ebffeb5f9bbdb985ce8f2a49b48 ---
--- Nom du fichier: 6c8ba8fee38ebffeb5f9bbdb985ce8f2a49b48 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f3\dcc6c02b9884feb273db4f46e98119d1b95ed9 ---
--- Nom du fichier: dcc6c02b9884feb273db4f46e98119d1b95ed9 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f3\dd61295fbdd6d074638353567129289586475e ---
--- Nom du fichier: dd61295fbdd6d074638353567129289586475e ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f4\121772cc12c71261ff92c29788611b0bbf44eb ---
--- Nom du fichier: 121772cc12c71261ff92c29788611b0bbf44eb ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f4\4782aef085b4ca4dcbac162c2b8f11e2871ac3 ---
--- Nom du fichier: 4782aef085b4ca4dcbac162c2b8f11e2871ac3 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f4\4a064bcf03dd5c6ae5666666315c597cbb1292 ---
--- Nom du fichier: 4a064bcf03dd5c6ae5666666315c597cbb1292 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f4\9c9fe41850dda797ba5627b72fc24340c70de7 ---
--- Nom du fichier: 9c9fe41850dda797ba5627b72fc24340c70de7 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f4\c50c9024be1f2c67d144e6a5aa3e5fbbd8473a ---
--- Nom du fichier: c50c9024be1f2c67d144e6a5aa3e5fbbd8473a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f5\25798d426cb572ed56cfe39d7ad43e78a9ba1a ---
--- Nom du fichier: 25798d426cb572ed56cfe39d7ad43e78a9ba1a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f5\3aa3d4c497ca563b6cd19e94eb31d88219b9b5 ---
--- Nom du fichier: 3aa3d4c497ca563b6cd19e94eb31d88219b9b5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f5\4d40d97c4f5078a709fc0b66010c65dda33c34 ---
--- Nom du fichier: 4d40d97c4f5078a709fc0b66010c65dda33c34 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f5\6e88ebe8fa3b93dd894232a4e66d95fb9ce203 ---
--- Nom du fichier: 6e88ebe8fa3b93dd894232a4e66d95fb9ce203 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f5\7e32156cfa15bd44e65f2a6fff0e7a58ce0448 ---
--- Nom du fichier: 7e32156cfa15bd44e65f2a6fff0e7a58ce0448 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f5\caf6712349e9902e705010f5046a15b0eee14a ---
--- Nom du fichier: caf6712349e9902e705010f5046a15b0eee14a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f5\d58a5846fcab28906f13b4059f1e52cb4cd68b ---
--- Nom du fichier: d58a5846fcab28906f13b4059f1e52cb4cd68b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f5\d87ef2de4099d68b17a7fbf4ba5c2bfe23a58f ---
--- Nom du fichier: d87ef2de4099d68b17a7fbf4ba5c2bfe23a58f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f5\f3421dafffb7091badb2e2f04093917adcfe06 ---
--- Nom du fichier: f3421dafffb7091badb2e2f04093917adcfe06 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f6\1098a4217f6bdfab7f465acc627cca84e7f451 ---
--- Nom du fichier: 1098a4217f6bdfab7f465acc627cca84e7f451 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f6\1d14e7725ecda14904c3db1e365caa3000f41d ---
--- Nom du fichier: 1d14e7725ecda14904c3db1e365caa3000f41d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f6\a22a14ed3c5f0891b1e42b8c2198cda5e7d941 ---
--- Nom du fichier: a22a14ed3c5f0891b1e42b8c2198cda5e7d941 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f6\a7627b4b9222a985e789bb42f6d484fe84a967 ---
--- Nom du fichier: a7627b4b9222a985e789bb42f6d484fe84a967 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f6\ba8aae665d8665e5d53e85937c9f1e74029777 ---
--- Nom du fichier: ba8aae665d8665e5d53e85937c9f1e74029777 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f6\e96b9591776562ea44b4d7ce9c99458de77a2d ---
--- Nom du fichier: e96b9591776562ea44b4d7ce9c99458de77a2d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f6\ef2009535cbea7ea9220f8230380886edff7dd ---
--- Nom du fichier: ef2009535cbea7ea9220f8230380886edff7dd ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f6\f5f0422ecbc31b254ae5ffcb432941d03c6ea2 ---
--- Nom du fichier: f5f0422ecbc31b254ae5ffcb432941d03c6ea2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f7\1c318b5807c1239a4f7089ffcfb9d981c04f20 ---
--- Nom du fichier: 1c318b5807c1239a4f7089ffcfb9d981c04f20 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f7\7338e87e695ad1371507ee5dac3c763ab5b3b9 ---
--- Nom du fichier: 7338e87e695ad1371507ee5dac3c763ab5b3b9 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f7\750e88a79f3da84d4434284cc9cc08bc61138d ---
--- Nom du fichier: 750e88a79f3da84d4434284cc9cc08bc61138d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f7\97779dc2088c3452014141711aa6e9a9c8aaa6 ---
--- Nom du fichier: 97779dc2088c3452014141711aa6e9a9c8aaa6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f7\c6f8d0e5f3540c952680c34f4322839bf7dd1d ---
--- Nom du fichier: c6f8d0e5f3540c952680c34f4322839bf7dd1d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f7\de9ac179800e2a94a724d2976e8a6d3bc3d0ce ---
--- Nom du fichier: de9ac179800e2a94a724d2976e8a6d3bc3d0ce ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f7\deaa17fe69f0c5fc402994d0efec5f3b7d60aa ---
--- Nom du fichier: deaa17fe69f0c5fc402994d0efec5f3b7d60aa ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f8\657aa235c8dc660893723ad5b824ef1836710b ---
--- Nom du fichier: 657aa235c8dc660893723ad5b824ef1836710b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f8\d05659ba9158d3e24b784b0e85c68a9f76789d ---
--- Nom du fichier: d05659ba9158d3e24b784b0e85c68a9f76789d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f8\d20b77697ae36aa5ba9afb7e776ae993c3b0b1 ---
--- Nom du fichier: d20b77697ae36aa5ba9afb7e776ae993c3b0b1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f9\053718f79539759be009d5b52494bfc5db515d ---
--- Nom du fichier: 053718f79539759be009d5b52494bfc5db515d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f9\30567d9fe95511ee5334da44dee9117fd16d3d ---
--- Nom du fichier: 30567d9fe95511ee5334da44dee9117fd16d3d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f9\44645ae354e727f32739008895e7743b8a9847 ---
--- Nom du fichier: 44645ae354e727f32739008895e7743b8a9847 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f9\584dfe9ef75a2c955d54c32ee867dbfedd1227 ---
--- Nom du fichier: 584dfe9ef75a2c955d54c32ee867dbfedd1227 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f9\6832c8ce0e233e29928a3b122f3b912675328f ---
--- Nom du fichier: 6832c8ce0e233e29928a3b122f3b912675328f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f9\7923f82850de5c3dec010ca83374650ab3d6a8 ---
--- Nom du fichier: 7923f82850de5c3dec010ca83374650ab3d6a8 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f9\83b6b020f82096a0f9fb266e47639a53f5ab90 ---
--- Nom du fichier: 83b6b020f82096a0f9fb266e47639a53f5ab90 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f9\88c7ac14d3a35d803157819dae3cd0acd95fbd ---
--- Nom du fichier: 88c7ac14d3a35d803157819dae3cd0acd95fbd ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f9\ee1f467ef28e34c221b1725d9e378b8b949b33 ---
--- Nom du fichier: ee1f467ef28e34c221b1725d9e378b8b949b33 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\f9\fe195958905dc42607770c17057981e4804723 ---
--- Nom du fichier: fe195958905dc42607770c17057981e4804723 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\fa\20986a6e8dac66aa01d7a4520cd412677db30a ---
--- Nom du fichier: 20986a6e8dac66aa01d7a4520cd412677db30a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\fa\213c517c4960105a9b47c8e318afd1cfa41577 ---
--- Nom du fichier: 213c517c4960105a9b47c8e318afd1cfa41577 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\fa\4ca9adbb8fbaafa230b50a0026cb81f91dcf96 ---
--- Nom du fichier: 4ca9adbb8fbaafa230b50a0026cb81f91dcf96 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\fa\f50d5a2c6b22bf880e29b5ae9e7af4be807dbd ---
--- Nom du fichier: f50d5a2c6b22bf880e29b5ae9e7af4be807dbd ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\fb\7c6225555f3bad972ec0700e33cbfab956a721 ---
--- Nom du fichier: 7c6225555f3bad972ec0700e33cbfab956a721 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\fb\83d1d7cccd8c9de79531e8e27c6e3a89a39163 ---
--- Nom du fichier: 83d1d7cccd8c9de79531e8e27c6e3a89a39163 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\fb\8737ea884e6933f7d331bdca21aee35768d55a ---
--- Nom du fichier: 8737ea884e6933f7d331bdca21aee35768d55a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\fb\8ee330d0f53f39d060c6a2a46f6b9f05bd62d1 ---
--- Nom du fichier: 8ee330d0f53f39d060c6a2a46f6b9f05bd62d1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\fb\b9212f1782f2ddb5ca404e18fcbe0726728708 ---
--- Nom du fichier: b9212f1782f2ddb5ca404e18fcbe0726728708 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\fc\1d122c8ae257269114ef8ffefa22400f889910 ---
--- Nom du fichier: 1d122c8ae257269114ef8ffefa22400f889910 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\fc\3e4cb880eb993006b8fa80a3ca5669023de4db ---
--- Nom du fichier: 3e4cb880eb993006b8fa80a3ca5669023de4db ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\fc\459376818812cd73b3d8783eae323d0e4c706c ---
--- Nom du fichier: 459376818812cd73b3d8783eae323d0e4c706c ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\fc\67c00b2c78ddad7211ea41395b3212e8b8b125 ---
--- Nom du fichier: 67c00b2c78ddad7211ea41395b3212e8b8b125 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\fc\6e2e40eeeae144c174445883d232e5ebc39802 ---
--- Nom du fichier: 6e2e40eeeae144c174445883d232e5ebc39802 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\fc\83b62ed69758ce782b73d7940425c2c9cf9f83 ---
--- Nom du fichier: 83b62ed69758ce782b73d7940425c2c9cf9f83 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\fc\9b5df5acf8ecafbc870e0e34fe9f444e8cc8c2 ---
--- Nom du fichier: 9b5df5acf8ecafbc870e0e34fe9f444e8cc8c2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\fc\a22d08eeb74710100696c8ed93951d816cb710 ---
--- Nom du fichier: a22d08eeb74710100696c8ed93951d816cb710 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\fc\b77b58e8d98f45eac1413ae516341f228dd5d6 ---
--- Nom du fichier: b77b58e8d98f45eac1413ae516341f228dd5d6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\fc\bee6d08ac5035134c86ff35453ec3f060e66ae ---
--- Nom du fichier: bee6d08ac5035134c86ff35453ec3f060e66ae ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\fc\f16f074edff16eab51497f37e8cfc13e869b85 ---
--- Nom du fichier: f16f074edff16eab51497f37e8cfc13e869b85 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\fc\f6e2bc90ff340e171a3ebc4cd307802037ee4d ---
--- Nom du fichier: f6e2bc90ff340e171a3ebc4cd307802037ee4d ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\fd\32bbfda1e80d1c75cf1d350326fc32af711c7b ---
--- Nom du fichier: 32bbfda1e80d1c75cf1d350326fc32af711c7b ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\fd\45e53fc641e04fc68b4422064b625593a1ac71 ---
--- Nom du fichier: 45e53fc641e04fc68b4422064b625593a1ac71 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\fd\774925f507f15c9b98003f964b0cb2dc44b880 ---
--- Nom du fichier: 774925f507f15c9b98003f964b0cb2dc44b880 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\fd\887a2773037542cd597019dae1a8e5133dab70 ---
--- Nom du fichier: 887a2773037542cd597019dae1a8e5133dab70 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\fd\9d1a93493dbbaf44a615b87c5dca94aabff11f ---
--- Nom du fichier: 9d1a93493dbbaf44a615b87c5dca94aabff11f ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\fd\a018904f5412b7480f0b88cacccd295e1606c6 ---
--- Nom du fichier: a018904f5412b7480f0b88cacccd295e1606c6 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\fd\a657f7c06f064febe4a921ba38da8214069af7 ---
--- Nom du fichier: a657f7c06f064febe4a921ba38da8214069af7 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\fd\b0189126a4d28f3898bf668d39c4d0189cdb17 ---
--- Nom du fichier: b0189126a4d28f3898bf668d39c4d0189cdb17 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\fd\b2c211094510a685342ad29119df079d80c7b1 ---
--- Nom du fichier: b2c211094510a685342ad29119df079d80c7b1 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\fd\c99d6f8c0ae350af43583ae15cfb643fd59a16 ---
--- Nom du fichier: c99d6f8c0ae350af43583ae15cfb643fd59a16 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\fd\f97b47f5ba4acf96e6669c90c9b4bec345c8e5 ---
--- Nom du fichier: f97b47f5ba4acf96e6669c90c9b4bec345c8e5 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\fe\6b0014ae06bc8e1d7f02887af992b35da819d0 ---
--- Nom du fichier: 6b0014ae06bc8e1d7f02887af992b35da819d0 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\fe\918fb7cd7a4e755e9074deb38723e4be8631fe ---
--- Nom du fichier: 918fb7cd7a4e755e9074deb38723e4be8631fe ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\fe\d704693c18ade3fba3833a249f75ec1b928df2 ---
--- Nom du fichier: d704693c18ade3fba3833a249f75ec1b928df2 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ff\1800999b6cf4336d768b7af3832f8912f99e69 ---
--- Nom du fichier: 1800999b6cf4336d768b7af3832f8912f99e69 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ff\3be1ff5404d1b6d55e8d081f5652efca00651a ---
--- Nom du fichier: 3be1ff5404d1b6d55e8d081f5652efca00651a ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ff\4ce9fa1e90f0ecf9eb5b650ea03ebf7796c844 ---
--- Nom du fichier: 4ce9fa1e90f0ecf9eb5b650ea03ebf7796c844 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ff\7cf16e73eb6580c3539cee437fb437c90e9713 ---
--- Nom du fichier: 7cf16e73eb6580c3539cee437fb437c90e9713 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\objects\ff\c3d4322818ddf2c59ee926ff82a9173dfd4a60 ---
--- Nom du fichier: c3d4322818ddf2c59ee926ff82a9173dfd4a60 ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\refs\heads\main ---
--- Nom du fichier: main ---
--- Contenu ---
c5d56f3b902b5075468a21bb953f845a6e2fd909

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\refs\remotes\origin\HEAD ---
--- Nom du fichier: HEAD ---
--- Contenu ---
ref: refs/remotes/origin/main

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\.git\refs\remotes\origin\main ---
--- Nom du fichier: main ---
--- Contenu ---
c5d56f3b902b5075468a21bb953f845a6e2fd909

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\backend\database.db ---
--- Nom du fichier: database.db ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\backend\database.py ---
--- Nom du fichier: database.py ---
--- Contenu ---
from sqlalchemy import create_engine
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker
import os

# Render fournira DATABASE_URL automatiquement pour PostgreSQL
DATABASE_URL = os.environ.get("DATABASE_URL", "sqlite:///./database.db")

# Render utilise postgres:// mais SQLAlchemy n√©cessite postgresql://
if DATABASE_URL.startswith("postgres://"):
    DATABASE_URL = DATABASE_URL.replace("postgres://", "postgresql://", 1)

# Configuration diff√©rente selon le type de base de donn√©es
if DATABASE_URL.startswith("postgresql://"):
    # Configuration PostgreSQL pour production
    engine = create_engine(
        DATABASE_URL,
        pool_pre_ping=True,
        pool_recycle=300,
        echo=False
    )
else:
    # Configuration SQLite pour d√©veloppement local
    engine = create_engine(
        DATABASE_URL,
        connect_args={"check_same_thread": False},
        echo=False
    )

SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)
Base = declarative_base()

def get_db():
    db = SessionLocal()
    try:
        yield db
    finally:
        db.close()
--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\backend\main.py ---
--- Nom du fichier: main.py ---
--- Contenu ---
# ===== backend/main.py - VERSION FINALE CORRIG√âE =====
from fastapi import FastAPI, HTTPException, Depends
from fastapi.middleware.cors import CORSMiddleware
from fastapi.staticfiles import StaticFiles
from sqlalchemy.orm import Session
from sqlalchemy import create_engine, text, func
from typing import List, Optional, Dict, Any
from datetime import datetime, timedelta
from contextlib import asynccontextmanager
from backend.database import engine, get_db, SessionLocal
from backend.models import Base, User, Exercise, Workout, Set, Program, ProgramDay, ProgramExercise
from backend.routes import router
from backend.schemas import UserCreate, UserResponse, WorkoutCreate, SetCreate, ExerciseResponse, SetRestTimeUpdate, ProgramCreate, ProgramResponse
from backend.ml_engine import FitnessMLEngine, SessionBuilder

import json
import os
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# Create tables
Base.metadata.create_all(bind=engine)

# Lifespan event handler
@asynccontextmanager
async def lifespan(app: FastAPI):
    # Startup
    db = SessionLocal()
    try:
        logger.info("=== STARTUP: Import des exercices ===")
        exercise_count = db.query(Exercise).count()
        logger.info(f"Exercises en base: {exercise_count}")
        
        if exercise_count == 0:
            json_path = os.path.join(os.path.dirname(__file__), "..", "exercises.json")
            logger.info(f"Chemin exercises.json: {json_path}")
            logger.info(f"Fichier existe: {os.path.exists(json_path)}")
            
            if os.path.exists(json_path):
                try:
                    with open(json_path, "r", encoding="utf-8") as f:
                        exercises_data = json.load(f)
                        logger.info(f"JSON charg√©: {len(exercises_data)} exercices")
                        
                        # Tester le premier exercice
                        if exercises_data:
                            first_ex = exercises_data[0]
                            logger.info(f"Premier exercice: {first_ex.get('name_fr', 'MANQUANT')}")
                            logger.info(f"Cl√©s disponibles: {list(first_ex.keys())}")
                            
                            # Tenter de cr√©er le premier exercice
                            try:
                                test_exercise = Exercise(**first_ex)
                                logger.info("‚úÖ Premier exercice cr√©√© avec succ√®s")
                                db.add(test_exercise)
                                db.commit()
                                logger.info("‚úÖ Premier exercice ins√©r√© en base")
                                
                                # Si √ßa marche, importer le reste
                                for i, ex_data in enumerate(exercises_data[1:], 1):
                                    try:
                                        exercise = Exercise(**ex_data)
                                        db.add(exercise)
                                    except Exception as ex_error:
                                        logger.error(f"‚ùå Erreur exercice {i}: {ex_error}")
                                        logger.error(f"Donn√©es probl√©matiques: {ex_data}")
                                        
                                db.commit()
                                final_count = db.query(Exercise).count()
                                logger.info(f"‚úÖ Import termin√©: {final_count} exercices en base")
                                
                            except Exception as creation_error:
                                logger.error(f"‚ùå Erreur cr√©ation premier exercice: {creation_error}")
                                logger.error(f"Donn√©es: {first_ex}")
                                
                except Exception as json_error:
                    logger.error(f"‚ùå Erreur chargement JSON: {json_error}")
            else:
                logger.error("‚ùå exercises.json introuvable")
        else:
            logger.info(f"‚úÖ Base d√©j√† remplie avec {exercise_count} exercices")
            
    except Exception as startup_error:
        logger.error(f"‚ùå ERREUR CRITIQUE STARTUP: {startup_error}")
        import traceback
        logger.error(traceback.format_exc())
    finally:
        db.close()
    
    yield
    # Shutdown (nothing to do)

app = FastAPI(title="Gym Coach API", lifespan=lifespan)
app.include_router(router)

# CORS for local network access
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

@app.get("/api/health")
def health_check():
    return {"status": "ok", "timestamp": datetime.utcnow().isoformat()}

# User endpoints
@app.post("/api/users/", response_model=UserResponse)
def create_user(user: UserCreate, db: Session = Depends(get_db)):
    user_data = user.dict()
    
    # Cr√©er l'utilisateur avec la nouvelle structure
    db_user = User(**user_data)
    db.add(db_user)
    db.commit()
    db.refresh(db_user)
    return db_user

@app.get("/api/users/{user_id}", response_model=UserResponse)
def get_user(user_id: int, db: Session = Depends(get_db)):
    user = db.query(User).filter(User.id == user_id).first()
    if not user:
        raise HTTPException(status_code=404, detail="User not found")
    return user


# Exercise endpoints
@app.get("/api/exercises/", response_model=List[ExerciseResponse])
def get_exercises(
    skip: int = 0,
    limit: int = 1000,
    body_part: Optional[str] = None,
    equipment: Optional[str] = None,
    db: Session = Depends(get_db)
):
    query = db.query(Exercise)
    
    if body_part:
        query = query.filter(Exercise.body_part == body_part)
    
    exercises = query.offset(skip).limit(limit).all()
    return exercises

@app.get("/api/exercises/{exercise_id}", response_model=ExerciseResponse)
def get_exercise(exercise_id: int, db: Session = Depends(get_db)):
    exercise = db.query(Exercise).filter(Exercise.id == exercise_id).first()
    if not exercise:
        raise HTTPException(status_code=404, detail="Exercise not found")
    return exercise

@app.get("/api/exercises/{exercise_id}/alternatives", response_model=List[ExerciseResponse])
def get_exercise_alternatives(exercise_id: int, user_id: int, db: Session = Depends(get_db)):
    exercise = db.query(Exercise).filter(Exercise.id == exercise_id).first()
    if not exercise:
        raise HTTPException(status_code=404, detail="Exercise not found")
    
    user = db.query(User).filter(User.id == user_id).first()
    if not user:
        raise HTTPException(status_code=404, detail="User not found")
    
    # R√©cup√©rer TOUS les exercices du m√™me groupe musculaire
    all_alternatives = db.query(Exercise).filter(
        Exercise.body_part == exercise.body_part,
        Exercise.id != exercise_id
    ).all()
    
    # Filtrer par √©quipement disponible (utiliser la m√™me logique que SessionBuilder)
    ml_engine = FitnessMLEngine(db)
    session_builder = SessionBuilder(db)
    
    compatible_alternatives = []
    for alt in all_alternatives:
        if session_builder._check_equipment_availability(alt, user):
            compatible_alternatives.append(alt)
    
    # Limiter √† 8 alternatives max, tri√©es par niveau de compatibilit√©
    return compatible_alternatives[:8]

# Endpoint pour exercices disponibles selon √©quipement utilisateur
@app.get("/api/users/{user_id}/available-exercises", response_model=List[ExerciseResponse])
def get_available_exercises(user_id: int, db: Session = Depends(get_db)):
    user = db.query(User).filter(User.id == user_id).first()
    if not user:
        raise HTTPException(status_code=404, detail="User not found")
    
    if not user.equipment_config:
        return []
    
    # Analyser l'√©quipement disponible
    config = user.equipment_config
    available_equipment = []
    
    # Barres
    for barre_type, barre_config in config.get("barres", {}).items():
        if barre_config.get("available", False):
            if barre_type in ["olympique", "courte"]:
                available_equipment.append("barre_olympique")
            elif barre_type == "ez":
                available_equipment.append("barre_ez")
            
            # √âquivalence barre courte = dumbbells (si paire + disques)
            if (barre_type == "courte" and barre_config.get("count", 0) >= 2 and 
                config.get("disques", {}).get("available", False)):
                logger.info("Barres courtes en paire + disques d√©tect√©es - ajout √©quivalence dumbbells")
                available_equipment.append("dumbbells")
        
    # Dumbbells (halt√®res fixes)
    if config.get("dumbbells", {}).get("available", False):
        available_equipment.append("dumbbells")

    # √âquivalence : 2 barres courtes + disques = dumbbells
    barres_courtes = config.get("barres", {}).get("courte", {})
    has_disques = config.get("disques", {}).get("available", False)
    if (barres_courtes.get("available", False) and 
        barres_courtes.get("count", 0) >= 2 and 
        has_disques):
        available_equipment.append("dumbbells")  # √âquivalence fonctionnelle
        logger.info("√âquivalence d√©tect√©e: 2 barres courtes + disques = dumbbells disponibles")
    
    # Banc
    if config.get("banc", {}).get("available", False):
        available_equipment.append("banc_plat")
        if config["banc"].get("inclinable_haut", False):
            available_equipment.append("banc_inclinable")
        if config["banc"].get("inclinable_bas", False):
            available_equipment.append("banc_declinable")
    
    # √âlastiques
    if config.get("elastiques", {}).get("available", False):
        available_equipment.append("elastiques")
    # Note: Les √©quipements suivants dans exercises.json ne sont pas support√©s :
    # - cables, dip_bars, machine_*, squat_rack
    # Ces exercices seront automatiquement exclus du filtrage
    
    # Autres √©quipements avec mapping correct
    autres = config.get("autres", {})
    equipment_mapping = {
        "barre_traction": "barre_traction",
        "kettlebell": "kettlebell",
        "lest_corps": "bodyweight_vest",
        "lest_chevilles": "ankle_weights",
        "lest_poignets": "wrist_weights"
    }

    for equip_type, equip_config in autres.items():
        if equip_config.get("available", False):
            # Utiliser le nom mapp√© si disponible, sinon le nom original
            mapped_name = equipment_mapping.get(equip_type, equip_type)
            available_equipment.append(mapped_name)
    
    # Poids du corps toujours disponible
    available_equipment.append("poids_du_corps")
    
    # Filtrer les exercices
    all_exercises = db.query(Exercise).all()
    compatible_exercises = []
    
    for exercise in all_exercises:
        exercise_equipment = exercise.equipment or []
        # V√©rifier si tous les √©quipements requis sont disponibles
        if not exercise_equipment or any(eq in available_equipment for eq in exercise_equipment):
            compatible_exercises.append(exercise)
    
    return compatible_exercises

# Workout endpoints
@app.post("/api/workouts/")
async def create_workout(workout: WorkoutCreate, db: Session = Depends(get_db)):
    # V√©rifier que l'utilisateur existe
    user = db.query(User).filter(User.id == workout.user_id).first()
    if not user:
        raise HTTPException(status_code=404, detail="User not found")
    
    # V√©rifier qu'il n'y a pas d√©j√† une session active
    active_workout = db.query(Workout).filter(
        Workout.user_id == workout.user_id,
        Workout.status.in_(["started", "paused"])
    ).first()
    
    if active_workout:
        raise HTTPException(
            status_code=400, 
            detail=f"Session active existante (ID: {active_workout.id}). Terminez-la d'abord."
        )
    
    # Cr√©er le workout
    db_workout = Workout(
        user_id=workout.user_id,
        type=workout.type,
        status="started"
    )
    db.add(db_workout)
    db.commit()
    db.refresh(db_workout)
    
    return {
        "id": db_workout.id,
        "status": db_workout.status,
        "created_at": db_workout.created_at,
        "type": db_workout.type
    }

@app.get("/api/workouts/{user_id}/history")
def get_workout_history(user_id: int, limit: int = 20, db: Session = Depends(get_db)):
    workouts = db.query(Workout).filter(
        Workout.user_id == user_id,
        Workout.status == "completed"
    ).order_by(Workout.created_at.desc()).limit(limit).all()
    
    history = []
    for workout in workouts:
        sets = db.query(Set).filter(Set.workout_id == workout.id).all()
        
        # Calculate total volume - pour les exercices au poids du corps, utiliser le poids de l'utilisateur
        total_volume = 0
        for s in sets:
            if not s.skipped:
                # R√©cup√©rer l'exercice pour v√©rifier si c'est du bodyweight
                exercise = db.query(Exercise).filter(Exercise.id == s.exercise_id).first()
                if exercise and any('poids_du_corps' in eq for eq in exercise.equipment):
                    # Pour bodyweight, ajouter le poids du corps √† la charge additionnelle
                    user = db.query(User).filter(User.id == user_id).first()
                    body_weight = user.weight if user else 75
                    effective_weight = body_weight + s.weight  # s.weight est le lest additionnel
                    total_volume += effective_weight * s.actual_reps
                else:
                    total_volume += s.weight * s.actual_reps
        
        # Get unique exercises
        exercise_ids = list(set(s.exercise_id for s in sets))
        exercises = []
        for ex_id in exercise_ids[:3]:  # First 3 exercises
            ex = db.query(Exercise).filter(Exercise.id == ex_id).first()
            if ex:
                exercises.append(ex.name_fr)
        
        history.append({
            "id": workout.id,
            "date": workout.created_at,
            "type": workout.type,
            "total_volume": total_volume,
            "total_sets": len(sets),
            "exercises": exercises
        })
    
    return history

@app.delete("/api/users/{user_id}/workout-history")
def delete_workout_history(user_id: int, db: Session = Depends(get_db)):
    """Supprime tout l'historique des s√©ances d'un utilisateur"""
    user = db.query(User).filter(User.id == user_id).first()
    if not user:
        raise HTTPException(status_code=404, detail="User not found")
    
    try:
        # Utiliser SQL brut pour √©viter les probl√®mes de contraintes
        from sqlalchemy import text
        
        # Supprimer d'abord les sets
        db.execute(text("""
            DELETE FROM sets 
            WHERE workout_id IN (
                SELECT id FROM workouts WHERE user_id = :user_id
            )
        """), {"user_id": user_id})
        
        # Puis les workouts
        count = db.query(Workout).filter(
            Workout.user_id == user_id,
            Workout.status.in_(["completed", "abandoned"])
        ).count()
        db.execute(text("""
            DELETE FROM workouts 
            WHERE user_id = :user_id 
            AND status IN ('completed', 'abandoned')
        """), {"user_id": user_id})
        
        db.commit()
        
        return {
            "message": "Historique supprim√© avec succ√®s",
            "deleted_workouts": count
        }
    except Exception as e:
        db.rollback()
        raise HTTPException(status_code=500, detail=str(e))

@app.put("/api/workouts/{workout_id}/complete")
def complete_workout(workout_id: int, db: Session = Depends(get_db)):
    workout = db.query(Workout).filter(Workout.id == workout_id).first()
    if not workout:
        raise HTTPException(status_code=404, detail="Workout not found")
    
    if workout.status == "completed":
        raise HTTPException(status_code=400, detail="Workout already completed")
    
    # Si en pause, calculer la dur√©e de pause finale
    if workout.status == "paused" and workout.paused_at:
        pause_duration = (datetime.utcnow() - workout.paused_at).total_seconds()
        workout.total_pause_duration += int(pause_duration)
    
    workout.completed_at = datetime.utcnow()
    workout.status = "completed"
    # Mettre √† jour les adaptive targets
    from backend.ml_engine import RealTimeAdapter
    adapter = RealTimeAdapter(db)
    adapter.handle_session_completed(workout)
    # Mettre √† jour les volumes adaptatifs
    update_adaptive_targets_volume(workout.user_id, db)
    db.commit()
    
    return {"status": "completed", "completed_at": workout.completed_at}

def update_adaptive_targets_volume(user_id: int, db: Session):
    """Met √† jour le volume actuel des AdaptiveTargets"""
    from datetime import datetime, timedelta
    from backend.models import AdaptiveTargets
    
    # Calculer le volume des 7 derniers jours
    seven_days_ago = datetime.utcnow() - timedelta(days=7)
    
    # Requ√™te pour obtenir le volume par muscle
    volume_by_muscle = db.query(
        Exercise.body_part,
        func.sum(Set.actual_reps * Set.weight).label('volume')
    ).join(
        Set, Set.exercise_id == Exercise.id
    ).join(
        Workout, Workout.id == Set.workout_id
    ).filter(
        Workout.user_id == user_id,
        Workout.completed_at >= seven_days_ago,
        Workout.status == "completed"
    ).group_by(Exercise.body_part).all()
    
    # Mettre √† jour chaque target
    for muscle, volume in volume_by_muscle:
        target = db.query(AdaptiveTargets).filter(
            AdaptiveTargets.user_id == user_id,
            AdaptiveTargets.muscle_group == muscle
        ).first()
        
        if target:
            target.current_volume = float(volume or 0)
            target.last_trained = datetime.utcnow()
    
    db.commit()

@app.put("/api/workouts/{workout_id}/pause")
def pause_workout(workout_id: int, db: Session = Depends(get_db)):
    workout = db.query(Workout).filter(Workout.id == workout_id).first()
    if not workout:
        raise HTTPException(status_code=404, detail="Workout not found")
    
    if workout.status != "started":
        raise HTTPException(status_code=400, detail=f"Cannot pause workout in status: {workout.status}")
    
    workout.status = "paused"
    workout.paused_at = datetime.utcnow()
    db.commit()
    
    return {"status": "paused", "paused_at": workout.paused_at}

@app.put("/api/workouts/{workout_id}/resume")
def resume_workout(workout_id: int, db: Session = Depends(get_db)):
    workout = db.query(Workout).filter(Workout.id == workout_id).first()
    if not workout:
        raise HTTPException(status_code=404, detail="Workout not found")
    
    if workout.status != "paused":
        raise HTTPException(status_code=400, detail=f"Cannot resume workout in status: {workout.status}")
    
    if workout.paused_at:
        pause_duration = (datetime.utcnow() - workout.paused_at).total_seconds()
        workout.total_pause_duration += int(pause_duration)
    
    workout.status = "started"
    workout.paused_at = None
    db.commit()
    
    return {"status": "resumed", "total_pause_duration": workout.total_pause_duration}

@app.put("/api/workouts/{workout_id}/abandon")
def abandon_workout(workout_id: int, db: Session = Depends(get_db)):
    workout = db.query(Workout).filter(Workout.id == workout_id).first()
    if not workout:
        raise HTTPException(status_code=404, detail="Workout not found")
    
    if workout.status == "completed":
        raise HTTPException(status_code=400, detail="Workout already completed")
    
    workout.status = "abandoned"
    workout.completed_at = datetime.utcnow()
    db.commit()
    
    return {"status": "abandoned"}

# Program endpoints
@app.post("/api/programs/", response_model=ProgramResponse)
def create_program(program: ProgramCreate, user_id: int, db: Session = Depends(get_db)):
    # Cr√©er le programme principal
    db_program = Program(
        user_id=user_id,  # Utiliser le user_id pass√© en param√®tre
        name=program.name,
        duration_weeks=program.duration_weeks,
        frequency=program.frequency
    )
    db.add(db_program)
    db.flush()  # Pour obtenir l'ID
    
    # Cr√©er les jours et exercices
    for day_data in program.program_days:
        db_day = ProgramDay(
            program_id=db_program.id,
            week_number=day_data.week_number,
            day_number=day_data.day_number,
            muscle_group=day_data.muscle_group
        )
        db.add(db_day)
        db.flush()
        
        for ex_data in day_data.exercises:
            db_exercise = ProgramExercise(
                program_day_id=db_day.id,
                exercise_id=ex_data.exercise_id,
                sets=ex_data.sets,
                target_reps=ex_data.target_reps,
                rest_time=ex_data.rest_time,
                order_index=ex_data.order_index,
                predicted_weight=ex_data.predicted_weight
            )
            db.add(db_exercise)
    
    db.commit()
    db.refresh(db_program)
    return db_program

@app.get("/api/users/{user_id}/programs", response_model=List[ProgramResponse])
def get_user_programs(user_id: int, db: Session = Depends(get_db)):
    programs = db.query(Program).filter(
        Program.user_id == user_id
    ).order_by(Program.created_at.desc()).all()
    return programs

@app.get("/api/programs/{program_id}", response_model=ProgramResponse)
def get_program(program_id: int, db: Session = Depends(get_db)):
    program = db.query(Program).filter(Program.id == program_id).first()
    if not program:
        raise HTTPException(status_code=404, detail="Program not found")
    return program

@app.put("/api/programs/{program_id}/activate")
def activate_program(program_id: int, db: Session = Depends(get_db)):
    program = db.query(Program).filter(Program.id == program_id).first()
    if not program:
        raise HTTPException(status_code=404, detail="Program not found")
    
    # D√©sactiver tous les autres programmes de l'utilisateur
    db.query(Program).filter(
        Program.user_id == program.user_id,
        Program.id != program_id
    ).update({"is_active": False})
    
    # Activer ce programme
    program.is_active = True
    db.commit()
    
    return {"message": "Program activated"}

@app.get("/api/workouts/{workout_id}/status")
async def get_workout_status(workout_id: int, db: Session = Depends(get_db)):
    workout = db.query(Workout).filter(Workout.id == workout_id).first()
    if not workout:
        raise HTTPException(status_code=404, detail="Workout not found")
    
    # Calculer la dur√©e totale
    if workout.completed_at:
        total_duration = (workout.completed_at - workout.created_at).total_seconds()
    else:
        total_duration = (datetime.utcnow() - workout.created_at).total_seconds()
    
    active_duration = total_duration - workout.total_pause_duration
    
    return {
        "id": workout.id,
        "status": workout.status,
        "created_at": workout.created_at,
        "completed_at": workout.completed_at,
        "total_duration": int(total_duration),
        "active_duration": int(active_duration),
        "pause_duration": workout.total_pause_duration,
        "type": workout.type
    }

@app.patch("/api/sets/{set_id}/rest-time")
def update_set_rest_time(set_id: int, rest_update: SetRestTimeUpdate, db: Session = Depends(get_db)):
    """Update rest time for a completed set"""
    set_obj = db.query(Set).filter(Set.id == set_id).first()
    if not set_obj:
        raise HTTPException(status_code=404, detail="Set not found")
    
    set_obj.rest_time = rest_update.rest_time
    db.commit()
    return {"updated": True, "set_id": set_id, "rest_time": rest_update.rest_time}

@app.get("/api/users/{user_id}/active-workout")
def get_active_workout(user_id: int, db: Session = Depends(get_db)):
    """R√©cup√®re la session active d'un utilisateur s'il y en a une"""
    workout = db.query(Workout).filter(
        Workout.user_id == user_id,
        Workout.status.in_(["started", "paused"])
    ).first()
    
    if not workout:
        return {"active_workout": None}
    
    return {
        "active_workout": {
            "id": workout.id,
            "status": workout.status,
            "type": workout.type,
            "created_at": workout.created_at
        }
    }

@app.get("/api/users/{user_id}/program/next-weight/{exercise_id}")
def get_next_weight(user_id: int, exercise_id: int, db: Session = Depends(get_db)):
    """Endpoint optimis√© pour suggestions de poids simples"""
    
    try:
        # V√©rifier que l'utilisateur existe
        user = db.query(User).filter(User.id == user_id).first()
        if not user:
            return {"weight": 20}
        
        # V√©rifier que l'exercice existe
        exercise = db.query(Exercise).filter(Exercise.id == exercise_id).first()
        if not exercise:
            return {"weight": 20}
        
        # R√©cup√©rer les derni√®res s√©ries - SANS JOINTURE
        recent_sets = db.query(Set).filter(
            Set.exercise_id == exercise_id,
            Set.skipped == False
        ).order_by(Set.completed_at.desc()).limit(10).all()
        
        # Filtrer pour cet utilisateur
        user_sets = []
        for set_obj in recent_sets:
            workout = db.query(Workout).filter(
                Workout.id == set_obj.workout_id,
                Workout.user_id == user_id
            ).first()
            if workout:
                user_sets.append(set_obj)
            if len(user_sets) >= 3:
                break
        
        if not user_sets:
            # Poids par d√©faut selon le type d'exercice
            default_weights = {
                "Pectoraux": 40,
                "Dos": 50,
                "Jambes": 60,
                "√âpaules": 20,
                "Biceps": 15,
                "Triceps": 20,
                "Abdominaux": 0  # Souvent au poids du corps
            }
            
            base_weight = default_weights.get(exercise.body_part, 20)
            
            # Ajuster selon le niveau d'exp√©rience
            experience_multipliers = {
                "d√©butant": 0.6,
                "interm√©diaire": 0.8,
                "avanc√©": 1.0,
                "expert": 1.2
            }
            multiplier = experience_multipliers.get(user.experience_level, 0.8)
            
            return {"weight": round(base_weight * multiplier / 2.5) * 2.5}
        
        # Calcul simple de progression bas√© sur la derni√®re s√©rie
        last_set = user_sets[0]
        
        # Si la derni√®re s√©rie √©tait facile, augmenter l√©g√®rement
        if last_set.fatigue_level <= 4 and last_set.actual_reps >= last_set.target_reps:
            suggested = last_set.weight + 2.5
        # Si c'√©tait dur, maintenir ou r√©duire
        elif last_set.fatigue_level >= 8 or last_set.actual_reps < last_set.target_reps * 0.8:
            suggested = max(0, last_set.weight - 2.5)
        else:
            suggested = last_set.weight
        
        # Arrondir √† 2.5kg pr√®s
        return {"weight": round(suggested / 2.5) * 2.5}
        
    except Exception as e:
        print(f"Erreur dans get_next_weight: {str(e)}")
        import traceback
        traceback.print_exc()
        return {"weight": 20}  # Valeur par d√©faut en cas d'erreur

@app.post("/api/workouts/{workout_id}/fatigue-check")
def check_workout_fatigue(workout_id: int, db: Session = Depends(get_db)):
    """Analyse rapide de fatigue pour √©viter le surmenage"""
    
    sets = db.query(Set).filter(
        Set.workout_id == workout_id
    ).order_by(Set.completed_at.desc()).limit(10).all()
    
    if len(sets) < 3:
        return {"risk": "low", "message": "Continuez !"}
    
    # Moyenne de fatigue sur les 3 derni√®res s√©ries
    recent_fatigue = sum(s.fatigue_level for s in sets[:3]) / 3
    
    # Tendance de fatigue
    if len(sets) >= 5:
        early_fatigue = sum(s.fatigue_level for s in sets[-5:-2]) / 3
        fatigue_increase = recent_fatigue - early_fatigue
    else:
        fatigue_increase = 0
    
    if recent_fatigue >= 8 or fatigue_increase > 3:
        return {
            "risk": "high",
            "message": "Fatigue √©lev√©e d√©tect√©e. Pensez √† terminer bient√¥t.",
            "recommendation": "reduce_weight"
        }
    elif recent_fatigue >= 6:
        return {
            "risk": "medium",
            "message": "Fatigue mod√©r√©e. Restez vigilant.",
            "recommendation": "maintain"
        }
    else:
        return {
            "risk": "low",
            "message": "Bonne forme ! Continuez.",
            "recommendation": "increase_weight"
        }

@app.get("/api/workouts/{workout_id}/muscle-summary")
def get_muscle_summary(workout_id: int, db: Session = Depends(get_db)):
    """R√©sum√© des muscles travaill√©s avec calcul de volume adapt√©"""
    
    sets = db.query(Set).filter(Set.workout_id == workout_id).all()
    workout = db.query(Workout).filter(Workout.id == workout_id).first()
    user = db.query(User).filter(User.id == workout.user_id).first() if workout else None
    
    muscle_volumes = {}
    for set_item in sets:
        if set_item.skipped:
            continue
            
        exercise = db.query(Exercise).filter(Exercise.id == set_item.exercise_id).first()
        if exercise:
            # D√©terminer le type d'exercice
            is_bodyweight = "poids_du_corps" in exercise.equipment
            is_time_based = any(keyword in exercise.name_fr.lower() 
                               for keyword in ['gainage', 'planche', 'plank', 'vacuum'])
            
            # Calculer le volume selon le type
            if is_time_based:
                # Pour les exercices temporels : dur√©e √ó (1 + charge/100)
                volume = set_item.actual_reps * (1 + set_item.weight / 100)
            elif is_bodyweight and set_item.weight == 0:
                # Exercice au poids du corps sans charge : utiliser le poids de l'utilisateur
                body_weight = user.weight if user else 75
                volume = body_weight * set_item.actual_reps
            else:
                # Calcul standard
                volume = set_item.weight * set_item.actual_reps
            
            muscle = exercise.body_part
            muscle_volumes[muscle] = muscle_volumes.get(muscle, 0) + volume
    
    # D√©tecter les d√©s√©quilibres
    warning = None
    if muscle_volumes:
        max_volume = max(muscle_volumes.values())
        avg_volume = sum(muscle_volumes.values()) / len(muscle_volumes)
        
        if max_volume > avg_volume * 2:
            dominant_muscle = max(muscle_volumes, key=muscle_volumes.get)
            warning = f"Attention : {dominant_muscle} tr√®s sollicit√© aujourd'hui"
    
    return {
        "volumes": muscle_volumes,
        "warning": warning
    }

@app.get("/api/users/{user_id}/stats")
def get_user_stats(user_id: int, db: Session = Depends(get_db)):
    user = db.query(User).filter(User.id == user_id).first()
    if not user:
        raise HTTPException(status_code=404, detail="User not found")
    
    # Compter les workouts
    total_workouts = db.query(Workout).filter(
        Workout.user_id == user_id,
        Workout.status == "completed"
    ).count()
    
    # Calculer le streak (simplifi√©)
    last_workout = db.query(Workout).filter(
        Workout.user_id == user_id,
        Workout.status == "completed"
    ).order_by(Workout.completed_at.desc()).first()
    
    last_workout_date = "Jamais"
    if last_workout and last_workout.completed_at:
        last_workout_date = last_workout.completed_at.strftime("%d/%m")
    
    return {
        "total_workouts": total_workouts,
        "week_streak": 0,  # √Ä impl√©menter selon votre logique
        "last_workout": last_workout_date
    }



# Set endpoints
@app.post("/api/sets/")
def create_set(set_data: SetCreate, db: Session = Depends(get_db)):
    # Filtrer uniquement les champs qui existent dans le mod√®le Set
    set_dict = set_data.dict()
    valid_fields = ['workout_id', 'exercise_id', 'set_number', 'target_reps', 
                    'actual_reps', 'weight', 'rest_time', 'fatigue_level', 
                    'perceived_exertion', 'skipped']
    filtered_data = {k: v for k, v in set_dict.items() if k in valid_fields}
    db_set = Set(**filtered_data)
    db.add(db_set)
    db.commit()
    db.refresh(db_set)
    return {"id": db_set.id, "created": True}


@app.get("/api/users/")
def get_all_users(db: Session = Depends(get_db)):
    users = db.query(User).all()
    return [{"id": u.id, "name": u.name, "created_at": u.created_at} for u in users]


@app.get("/api/sets/{workout_id}")
def get_workout_sets(workout_id: int, db: Session = Depends(get_db)):
    sets = db.query(Set).filter(Set.workout_id == workout_id).all()
    return sets

# Analytics endpoints for stats page
@app.get("/api/users/{user_id}/muscle-progression")
def get_muscle_progression(user_id: int, period: str = "month", db: Session = Depends(get_db)):
    """Progression de charge par groupe musculaire"""
    from datetime import datetime, timedelta
    
    # D√©finir la p√©riode
    end_date = datetime.utcnow()
    if period == "week":
        start_date = end_date - timedelta(days=7)
    elif period == "month":
        start_date = end_date - timedelta(days=30)
    else:  # year
        start_date = end_date - timedelta(days=365)
    
    # R√©cup√©rer tous les sets de la p√©riode
    sets = db.query(Set).join(Workout).filter(
        Workout.user_id == user_id,
        Workout.status == "completed",
        Set.completed_at >= start_date,
        Set.completed_at <= end_date,
        Set.skipped == False
    ).all()
    
    if not sets:
        return {"dates": [], "muscle_groups": {}}
    
    # Grouper par date et muscle
    muscle_data = {}
    dates_set = set()
    
    for set_item in sets:
        exercise = db.query(Exercise).filter(Exercise.id == set_item.exercise_id).first()
        if not exercise:
            continue
            
        muscle = exercise.body_part
        date_str = set_item.completed_at.strftime("%Y-%m-%d")
        dates_set.add(date_str)
        
        if muscle not in muscle_data:
            muscle_data[muscle] = {}
        
        if date_str not in muscle_data[muscle]:
            muscle_data[muscle][date_str] = []
        
        muscle_data[muscle][date_str].append(set_item.weight)
    
    # Calculer la charge max par jour et muscle
    dates = sorted(list(dates_set))
    muscle_groups = {}
    
    for muscle, date_weights in muscle_data.items():
        muscle_groups[muscle] = []
        for date in dates:
            if date in date_weights:
                muscle_groups[muscle].append(max(date_weights[date]))
            else:
                muscle_groups[muscle].append(None)
    
    return {"dates": dates, "muscle_groups": muscle_groups}

@app.get("/api/users/{user_id}/muscle-recovery")
def get_muscle_recovery(user_id: int, db: Session = Depends(get_db)):
    """Dashboard de r√©cup√©ration musculaire"""
    from datetime import datetime, timedelta
    
    # R√©cup√©rer le dernier workout par groupe musculaire
    last_workouts = {}
    
    # R√©cup√©rer tous les sets des 30 derniers jours
    thirty_days_ago = datetime.utcnow() - timedelta(days=30)
    
    sets = db.query(Set).join(Workout).filter(
        Workout.user_id == user_id,
        Workout.status == "completed",
        Workout.completed_at >= thirty_days_ago,
        Set.skipped == False
    ).order_by(Set.completed_at.desc()).all()
    
    for set_item in sets:
        exercise = db.query(Exercise).filter(Exercise.id == set_item.exercise_id).first()
        if exercise:
            muscle = exercise.body_part
            if muscle not in last_workouts:
                last_workouts[muscle] = set_item.completed_at
    
    # Calculer le temps de r√©cup√©ration
    recovery_data = []
    now = datetime.utcnow()
    
    all_muscles = ["Pectoraux", "Dos", "√âpaules", "Biceps", "Triceps", "Jambes", "Abdominaux"]
    
    for muscle in all_muscles:
        if muscle in last_workouts:
            hours_since = (now - last_workouts[muscle]).total_seconds() / 3600
            recovery_data.append({
                "muscle": muscle,
                "hours_since_last": round(hours_since, 1),
                "status": "ready" if hours_since > 48 else "recovering" if hours_since > 24 else "fatigued"
            })
        else:
            recovery_data.append({
                "muscle": muscle,
                "hours_since_last": 999,
                "status": "ready"
            })
    
    return {"muscles": recovery_data}

@app.get("/api/users/{user_id}/muscle-volume")
def get_muscle_volume(user_id: int, period: str = "month", db: Session = Depends(get_db)):
    """Volume total par groupe musculaire"""
    from datetime import datetime, timedelta
    
    # D√©finir la p√©riode
    end_date = datetime.utcnow()
    if period == "week":
        start_date = end_date - timedelta(days=7)
    elif period == "month":
        start_date = end_date - timedelta(days=30)
    else:  # year
        start_date = end_date - timedelta(days=365)
    
    # R√©cup√©rer tous les sets de la p√©riode
    sets = db.query(Set).join(Workout).join(Exercise).filter(
        Workout.user_id == user_id,
        Workout.status == "completed",
        Set.completed_at >= start_date,
        Set.completed_at <= end_date,
        Set.skipped == False
    ).all()
    
    muscle_volumes = {}
    for set_item in sets:
        exercise = db.query(Exercise).filter(Exercise.id == set_item.exercise_id).first()
        if exercise:
            volume = set_item.weight * set_item.actual_reps
            muscle = exercise.body_part
            muscle_volumes[muscle] = muscle_volumes.get(muscle, 0) + volume
    
    return {"volumes": muscle_volumes}

@app.get("/api/users/{user_id}/muscle-distribution-detailed")
def get_muscle_distribution_detailed(user_id: int, period: str = "month", db: Session = Depends(get_db)):
    """Distribution d√©taill√©e par muscle et exercice pour le sunburst"""
    from datetime import datetime, timedelta
    
    end_date = datetime.utcnow()
    if period == "week":
        start_date = end_date - timedelta(days=7)
    elif period == "month":
        start_date = end_date - timedelta(days=30)
    else:  # year
        start_date = end_date - timedelta(days=365)
    
    # R√©cup√©rer tous les sets de la p√©riode
    sets = db.query(Set).join(Workout).filter(
        Workout.user_id == user_id,
        Workout.status == "completed",
        Set.completed_at >= start_date,
        Set.completed_at <= end_date,
        Set.skipped == False
    ).all()
    
    # Structure pour sunburst hi√©rarchique
    muscle_data = {}
    
    for set_item in sets:
        exercise = db.query(Exercise).filter(Exercise.id == set_item.exercise_id).first()
        if not exercise:
            continue
        
        muscle = exercise.body_part
        exercise_name = exercise.name_fr
        volume = set_item.weight * set_item.actual_reps
        
        if muscle not in muscle_data:
            muscle_data[muscle] = {}
        
        if exercise_name not in muscle_data[muscle]:
            muscle_data[muscle][exercise_name] = 0
        
        muscle_data[muscle][exercise_name] += volume
    
    # Convertir en format sunburst hi√©rarchique
    children = []
    for muscle, exercises in muscle_data.items():
        muscle_children = []
        for exercise, volume in exercises.items():
            muscle_children.append({
                "name": exercise,
                "value": round(volume)
            })
        
        children.append({
            "name": muscle,
            "children": muscle_children
        })
    
    return {
        "name": "Total",
        "children": children
    }

@app.get("/api/users/{user_id}/equipment-usage")
def get_equipment_usage(user_id: int, period: str = "month", db: Session = Depends(get_db)):
    """Utilisation d'√©quipement en format sunburst"""
    from datetime import datetime, timedelta
    
    # D√©finir la p√©riode
    end_date = datetime.utcnow()
    if period == "week":
        start_date = end_date - timedelta(days=7)
    elif period == "month":
        start_date = end_date - timedelta(days=30)
    else:  # year
        start_date = end_date - timedelta(days=365)
    
    # R√©cup√©rer tous les sets de la p√©riode
    sets = db.query(Set).join(Workout).filter(
        Workout.user_id == user_id,
        Workout.status == "completed",
        Set.completed_at >= start_date,
        Set.completed_at <= end_date,
        Set.skipped == False
    ).all()
    
    # Structure pour sunburst
    equipment_data = {}
    
    for set_item in sets:
        exercise = db.query(Exercise).filter(Exercise.id == set_item.exercise_id).first()
        if not exercise:
            continue
        
        # Calculer le volume
        volume = set_item.weight * set_item.actual_reps
        
        # Organiser par √©quipement
        for equip in exercise.equipment:
            if equip not in equipment_data:
                equipment_data[equip] = {}
            
            if exercise.name_fr not in equipment_data[equip]:
                equipment_data[equip][exercise.name_fr] = 0
            
            equipment_data[equip][exercise.name_fr] += volume
    
    # Convertir en format sunburst
    sunburst_data = {
        "name": "Total",
        "children": []
    }
    
    for equip, exercises in equipment_data.items():
        equip_node = {
            "name": equip,
            "children": []
        }
        for exercise, volume in exercises.items():
            equip_node["children"].append({
                "name": exercise,
                "value": round(volume)
            })
        sunburst_data["children"].append(equip_node)
    
    return sunburst_data

@app.get("/api/users/{user_id}/muscle-performance-prediction")
def get_muscle_performance_prediction(user_id: int, db: Session = Depends(get_db)):
    """Pr√©diction de performance par groupe musculaire"""
    from datetime import datetime, timedelta
    
    predictions = {}
    
    # Pour chaque groupe musculaire
    muscles = ["Pectoraux", "Dos", "√âpaules", "Biceps", "Triceps", "Jambes"]
    
    for muscle in muscles:
        # R√©cup√©rer l'historique des 30 derniers jours
        thirty_days_ago = datetime.utcnow() - timedelta(days=30)
        
        sets = db.query(Set).join(Workout).join(Exercise).filter(
            Workout.user_id == user_id,
            Workout.status == "completed",
            Exercise.body_part == muscle,
            Set.completed_at >= thirty_days_ago,
            Set.skipped == False
        ).order_by(Set.completed_at).all()
        
        if len(sets) < 3:
            predictions[muscle] = {
                "current_max": 0,
                "predicted_max": 0,
                "confidence": 0,
                "trend": "stable"
            }
            continue
        
        # Extraire les charges max par s√©ance
        workout_maxes = {}
        for set_item in sets:
            workout_id = set_item.workout_id
            if workout_id not in workout_maxes:
                workout_maxes[workout_id] = 0
            workout_maxes[workout_id] = max(workout_maxes[workout_id], set_item.weight)
        
        weights = list(workout_maxes.values())
        
        if weights:
            current_max = max(weights)
            
            # Calcul simple de tendance
            if len(weights) >= 3:
                recent_avg = sum(weights[-3:]) / 3
                older_avg = sum(weights[:3]) / 3 if len(weights) > 3 else weights[0]
                
                trend_percent = ((recent_avg - older_avg) / older_avg) * 100 if older_avg > 0 else 0
                
                # Pr√©diction simple bas√©e sur la tendance
                if trend_percent > 5:
                    predicted_max = current_max * 1.05
                    trend = "improving"
                elif trend_percent < -5:
                    predicted_max = current_max * 0.98
                    trend = "declining"
                else:
                    predicted_max = current_max * 1.02
                    trend = "stable"
                
                confidence = min(90, 50 + len(weights) * 5)
            else:
                predicted_max = current_max
                trend = "stable"
                confidence = 30
            
            predictions[muscle] = {
                "current_max": round(current_max, 1),
                "predicted_max": round(predicted_max, 1),
                "confidence": confidence,
                "trend": trend
            }
        else:
            predictions[muscle] = {
                "current_max": 0,
                "predicted_max": 0,
                "confidence": 0,
                "trend": "stable"
            }
    
    return {"predictions": predictions}

@app.post("/api/users/{user_id}/init-adaptive-targets")
def init_adaptive_targets(user_id: int, db: Session = Depends(get_db)):
    """Initialise les targets adaptatifs si elles n'existent pas"""
    from backend.models import AdaptiveTargets
    muscles = ["Pectoraux", "Dos", "Delto√Ødes", "Jambes", "Bras", "Abdominaux"]
    for muscle in muscles:
        existing = db.query(AdaptiveTargets).filter(
            AdaptiveTargets.user_id == user_id,
            AdaptiveTargets.muscle_group == muscle
        ).first()
        if not existing:
            target = AdaptiveTargets(
                user_id=user_id,
                muscle_group=muscle,
                target_volume=100.0,
                current_volume=0.0,
                recovery_debt=0.0,
                adaptation_rate=1.0
            )
            db.add(target)
    db.commit()
    update_adaptive_targets_volume(user_id, db)
    return {"status": "initialized"}

@app.delete("/api/users/{user_id}")
def delete_user(user_id: int, db: Session = Depends(get_db)):
    """Supprimer compl√®tement un utilisateur et toutes ses donn√©es"""
    user = db.query(User).filter(User.id == user_id).first()
    if not user:
        raise HTTPException(status_code=404, detail="User not found")
    
    try:
        # Si les cascades ne fonctionnent pas, supprimer manuellement dans l'ordre
        # pour √©viter les contraintes de cl√©s √©trang√®res
        
        # 1. Supprimer d'abord les tables qui d√©pendent d'autres tables
        # Supprimer les sets (d√©pendent des workouts)
        db.execute(text("""
            DELETE FROM sets 
            WHERE workout_id IN (
                SELECT id FROM workouts WHERE user_id = :user_id
            )
        """), {"user_id": user_id})
        
        # Supprimer les program_exercises (d√©pendent des program_days)
        db.execute(text("""
            DELETE FROM program_exercises 
            WHERE program_day_id IN (
                SELECT pd.id FROM program_days pd
                JOIN programs p ON pd.program_id = p.id
                WHERE p.user_id = :user_id
            )
        """), {"user_id": user_id})
        
        # Supprimer les program_days (d√©pendent des programs)
        db.execute(text("""
            DELETE FROM program_days 
            WHERE program_id IN (
                SELECT id FROM programs WHERE user_id = :user_id
            )
        """), {"user_id": user_id})
        
        # 2. Supprimer les tables directement li√©es √† l'utilisateur
        db.execute(text("DELETE FROM workouts WHERE user_id = :user_id"), {"user_id": user_id})
        db.execute(text("DELETE FROM programs WHERE user_id = :user_id"), {"user_id": user_id})
        db.execute(text("DELETE FROM user_commitments WHERE user_id = :user_id"), {"user_id": user_id})
        db.execute(text("DELETE FROM adaptive_targets WHERE user_id = :user_id"), {"user_id": user_id})
        
        # 3. Finalement supprimer l'utilisateur
        db.delete(user)
        db.commit()
        
        return {"message": "User deleted successfully", "user_id": user_id}
        
    except Exception as e:
        db.rollback()
        logger.error(f"Error deleting user {user_id}: {str(e)}")
        raise HTTPException(status_code=500, detail=f"Database error: {str(e)}")


    

# Static files
#app.mount("/", StaticFiles(directory="frontend", html=True), name="frontend")
# Static files - Ajuster le chemin selon l'environnement
import os
frontend_path = os.path.join(os.path.dirname(__file__), "..", "frontend")
if os.path.exists(frontend_path):
    app.mount("/", StaticFiles(directory=frontend_path, html=True), name="frontend")
else:
    # Fallback si on est dans une structure diff√©rente
    app.mount("/", StaticFiles(directory="frontend", html=True), name="frontend")
--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\backend\ml_engine.py ---
--- Nom du fichier: ml_engine.py ---
--- Contenu ---
# ===== backend/ml_engine.py =====
from logging import config
from sqlalchemy import func
from sqlalchemy.orm import Session
from typing import List, Dict, Any
from datetime import datetime, timedelta
from backend.models import User, Exercise, Workout, Set, AdaptiveTargets, ProgramExercise, UserCommitment
import logging
import random

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


class FitnessMLEngine:
    """
    Moteur d'apprentissage automatique pour:
    - Calcul intelligent des poids
    - Pr√©diction de performance
    - Ajustement dynamique des programmes
    - Pr√©vention des blessures
    """
    
    def __init__(self, db: Session):
        self.db = db
        
        # Coefficients pour les calculs
        self.FATIGUE_WEIGHTS = {
            1: 1.0,    # Pas fatigu√©
            2: 0.95,   # L√©g√®rement fatigu√©
            3: 0.90,   # Mod√©r√©ment fatigu√©
            4: 0.85,   # Tr√®s fatigu√©
            5: 0.80    # √âpuis√©
        }
        
        self.EXPERIENCE_MULTIPLIERS = {
            "d√©butant": 0.7,
            "interm√©diaire": 0.85,
            "avanc√©": 1.0,
            "√©lite": 1.1,
            "extr√™me": 1.2
        }
        
        self.GOAL_ADJUSTMENTS = {
            "force": {"sets": 0.8, "reps": 0.7, "weight": 1.2},
            "hypertrophie": {"sets": 1.0, "reps": 1.0, "weight": 1.0},
            "endurance": {"sets": 1.2, "reps": 1.3, "weight": 0.8},
            "perte_de_poids": {"sets": 1.1, "reps": 1.2, "weight": 0.85},
            "cardio": {"sets": 1.3, "reps": 1.4, "weight": 0.7},
            "flexibility": {"sets": 0.9, "reps": 1.5, "weight": 0.6}
        }

        # Facteurs d'ajustement des r√©p√©titions selon la fatigue
        self.REPS_FATIGUE_ADJUSTMENTS = {
            1: 1.0,    # Pas fatigu√© - maintenir les reps
            2: 1.0,    # L√©g√®rement fatigu√© - maintenir
            3: 0.95,   # Mod√©r√©ment fatigu√© - r√©duire l√©g√®rement
            4: 0.85,   # Tr√®s fatigu√© - r√©duire significativement
            5: 0.75    # √âpuis√© - r√©duire fortement
        }

    def _mean(self, values):
        """Calcule la moyenne d'une liste de valeurs"""
        return sum(values) / len(values) if values else 0

    def _linear_regression_slope(self, x_values, y_values):
        """Calcule la pente d'une r√©gression lin√©aire simple"""
        if len(x_values) != len(y_values) or len(x_values) < 2:
            return 0
        
        n = len(x_values)
        sum_x = sum(x_values)
        sum_y = sum(y_values)
        sum_xy = sum(x * y for x, y in zip(x_values, y_values))
        sum_x2 = sum(x * x for x in x_values)
        
        # Formule: slope = (n*sum_xy - sum_x*sum_y) / (n*sum_x2 - sum_x^2)
        denominator = n * sum_x2 - sum_x * sum_x
        if denominator == 0:
            return 0
        
        return (n * sum_xy - sum_x * sum_y) / denominator
    
    def calculate_starting_weight(self, user: User, exercise: Exercise) -> float:
        """
        Calcule le poids de d√©part pour un exercice bas√© sur:
        - Le niveau d'exp√©rience de l'utilisateur
        - Le type d'exercice
        - Les objectifs
        - L'historique (si disponible)
        """
        
        # R√©cup√©rer l'historique de cet exercice
        history = self.db.query(Set).join(Workout).filter(
            Workout.user_id == user.id,
            Set.exercise_id == exercise.id,
            Set.skipped == False
        ).order_by(Set.completed_at.desc()).limit(10).all()
        
        if history:
            # Utiliser la moyenne pond√©r√©e des derni√®res performances
            weights = []
            for i, set_record in enumerate(history):
                # Poids plus r√©cents ont plus d'importance
                weight_factor = 1.0 - (i * 0.05)
                weights.append(set_record.weight * weight_factor)
            
            base_weight = self._mean(weights)
            
            # Ajuster selon la fatigue moyenne r√©cente
            avg_fatigue = self._mean([s.fatigue_level for s in history[:3]])
            fatigue_adjustment = self.FATIGUE_WEIGHTS.get(int(avg_fatigue), 0.9)
            
            return round(base_weight * fatigue_adjustment, 2.5)
        
        else:
            # Estimation initiale bas√©e sur le niveau et le type d'exercice
            return self._estimate_initial_weight(user, exercise)
    
    def predict_next_session_performance(
        self,
        user: User,
        exercise: Exercise,
        target_sets: int,
        target_reps: int
    ) -> Dict:
        """
        Pr√©dit la performance pour la prochaine session
        """
        # R√©cup√©rer l'historique r√©cent
        history = self.db.query(Set).join(Workout).filter(
            Workout.user_id == user.id,
            Set.exercise_id == exercise.id,
            Set.skipped == False
        ).order_by(Set.completed_at.desc()).limit(5).all()
        
        if history:
            # Utiliser le dernier poids comme base
            predicted_weight = history[0].weight
            
            # Ajuster selon la performance r√©cente
            if history[0].actual_reps >= history[0].target_reps:
                predicted_weight *= 1.025  # Augmentation de 2.5%
        else:
            # Pas d'historique, utiliser le calcul de d√©part
            predicted_weight = self.calculate_starting_weight(user, exercise)
        
        return {
            "predicted_weight": round(predicted_weight, 2),
            "confidence": "high" if len(history) >= 3 else "low"
        }

    def _estimate_initial_weight(self, user: User, exercise: Exercise) -> float:
        """
        Estime le poids initial pour un nouvel exercice
        """
        # Poids de base selon le type d'exercice et le poids corporel
        body_weight = self._get_user_weight(user)
        
        # Mapping approximatif exercice -> pourcentage du poids corporel
        exercise_ratios = {
            "D√©velopp√© couch√©": 0.6,
            "Squat": 0.8,
            "Soulev√© de terre": 1.0,
            "D√©velopp√© militaire": 0.4,
            "Curl biceps": 0.15,
            "Extension triceps": 0.12,
            "Rowing": 0.5,
            "Leg press": 1.5,
            "Curl poignet": 0.1,
        }
        
        # Chercher le ratio le plus proche
        ratio = 0.3  # D√©faut
        for key, value in exercise_ratios.items():
            if key.lower() in exercise.name_fr.lower():
                ratio = value
                break
        
        # Calcul du poids de base
        base_weight = body_weight * ratio
        # V√©rifier le poids minimum de la barre pour les exercices avec barbell
        if any('barbell' in eq for eq in exercise.equipment):
            min_bar_weight = 20  # Barre olympique par d√©faut
            if user.equipment_config and user.equipment_config.get('barres'):
                if user.equipment_config['barres'].get('courte', {}).get('available'):
                    min_bar_weight = 2.5
                elif user.equipment_config['barres'].get('ez', {}).get('available'):
                    min_bar_weight = 10
            
            # S'assurer que le poids sugg√©r√© n'est pas inf√©rieur au poids de la barre
            if base_weight < min_bar_weight:
                base_weight = min_bar_weight
        
        # Ajuster selon l'exp√©rience
        experience_mult = self.EXPERIENCE_MULTIPLIERS.get(user.experience_level, 0.85)
        
        # Ajuster selon les objectifs
        goal_mult = 1.0
        if user.goals:
            for goal in user.goals:
                if goal in self.GOAL_ADJUSTMENTS:
                    goal_mult *= self.GOAL_ADJUSTMENTS[goal]["weight"]
            goal_mult = goal_mult ** (1/len(user.goals))  # Moyenne g√©om√©trique
        
        # Si dumbbells, ajuster au poids disponible le plus proche
        if "dumbbells" in exercise.equipment and user.equipment_config:
            target_weight = base_weight * experience_mult * goal_mult / 2
            available_weights = []  # INITIALISER TOUJOURS
            
            # V√©rifier dumbbells fixes d'abord
            dumbbell_config = user.equipment_config.get("dumbbells", {})
            if dumbbell_config.get("available", False) and dumbbell_config.get("weights"):
                available_weights = sorted(dumbbell_config["weights"])
                closest_weight = min(available_weights, key=lambda x: abs(x - target_weight))
                return closest_weight * 2  # Paire d'halt√®res
            
            # Sinon, utiliser √©quivalence barres courtes + disques
            barres_courtes = user.equipment_config.get("barres", {}).get("courte", {})
            disques_config = user.equipment_config.get("disques", {})
            if (barres_courtes.get("available", False) and 
                barres_courtes.get("count", 0) >= 2 and 
                disques_config.get("available", False)):
                
                # Calculer avec barre courte + disques disponibles
                barre_weight = barres_courtes.get("weight", 2.5)
                available_plates = []
                for weight_str, count in disques_config.get("weights", {}).items():
                    weight = float(weight_str)
                    # On peut utiliser jusqu'√† la moiti√© des disques (pour faire une paire)
                    available_plates.extend([weight] * (count // 2))
                
                if available_plates:
                    # Trouver la combinaison optimale pour se rapprocher de target_weight - barre_weight
                    target_plate_weight = max(0, target_weight - barre_weight)
                    closest_plate = min(available_plates, key=lambda x: abs(x - target_plate_weight))
                    return (barre_weight + closest_plate) * 2  # Paire
            
            # Trouver le poids le plus proche SI disponible
            if available_weights:  # Maintenant safe !
                closest_weight = min(available_weights, key=lambda x: abs(x - target_weight))
                return closest_weight * 2  # Multipli√© par 2 pour la paire
        
        # Arrondir √† 2.5kg pr√®s
        return round(base_weight * experience_mult * goal_mult / 2.5) * 2.5
    
    def _get_user_weight(self, user: User) -> float:
        """Retourne le poids r√©el de l'utilisateur"""
        return user.weight
        
    def predict_next_session_performance(
        self, 
        user: User, 
        exercise: Exercise,
        target_sets: int,
        target_reps: int
    ) -> Dict:
        """
        Pr√©dit la performance pour la prochaine session
        """
        recent_sets = self.db.query(Set).join(Workout).filter(
            Workout.user_id == user.id,
            Set.exercise_id == exercise.id,
            Set.skipped == False
        ).order_by(Set.completed_at.desc()).limit(20).all()
        
        if not recent_sets:
            # Premi√®re fois, utiliser les valeurs par d√©faut
            weight = self.calculate_starting_weight(user, exercise)
            return {
                "predicted_weight": weight,
                "predicted_reps": target_reps,
                "confidence": 0.5,
                "recommendation": "Premi√®re s√©ance avec cet exercice. Commencez prudemment."
            }
        
        # Analyser la progression
        weights = [s.weight for s in recent_sets]
        reps = [s.actual_reps for s in recent_sets]
        fatigue_levels = [s.fatigue_level for s in recent_sets]
        
        # Calcul de la tendance (r√©gression lin√©aire simple)
        if len(weights) >= 3:
            x_values = list(range(len(weights)))
            weight_trend = self._linear_regression_slope(x_values, weights)
            reps_trend = self._linear_regression_slope(x_values, reps)
            
            # Pr√©diction
            next_weight = weights[0] + weight_trend
            
            # Ajustement selon la fatigue moyenne r√©cente
            recent_fatigue = self._mean(fatigue_levels[:5])
            fatigue_factor = self.FATIGUE_WEIGHTS.get(int(recent_fatigue), 0.9)
            
            # Ajustement selon la r√©ussite des derni√®res s√©ances
            success_rate = sum(1 for s in recent_sets[:5] if s.actual_reps >= s.target_reps) / min(5, len(recent_sets))
            
            if success_rate >= 0.8:
                # Augmenter le poids
                next_weight *= 1.025
                recommendation = "Performance excellente! Augmentation du poids recommand√©e."
            elif success_rate < 0.5:
                # Diminuer le poids
                next_weight *= 0.975
                recommendation = "Difficult√© d√©tect√©e. R√©duction du poids recommand√©e."
            else:
                recommendation = "Maintenir le poids actuel et viser l'am√©lioration technique."
            
            # Arrondir au poids disponible le plus proche
            if (user.equipment_config and 
                user.equipment_config.get("halteres", {}).get("weights") and 
                "halteres" in exercise.equipment):
                target_per_dumbbell = next_weight / 2
                available = sorted(user.equipment_config["halteres"]["weights"])
                if available:
                    closest = min(available, key=lambda x: abs(x - target_per_dumbbell))
                    next_weight = closest * 2
            else:
                # Arrondir √† 2.5kg pr√®s
                next_weight = round(next_weight / 2.5) * 2.5
            
            return {
                "predicted_weight": max(0, next_weight),
                "predicted_reps": int(target_reps * fatigue_factor),
                "confidence": min(0.9, 0.5 + len(recent_sets) * 0.02),
                "recommendation": recommendation,
                "fatigue_warning": "Attention: fatigue √©lev√©e d√©tect√©e" if recent_fatigue > 3.5 else None
            }
        
        else:
            # Pas assez de donn√©es pour une tendance
            last_weight = weights[0]
            return {
                "predicted_weight": last_weight,
                "predicted_reps": target_reps,
                "confidence": 0.6,
                "recommendation": "Continuez avec le poids actuel pour √©tablir une base."
            }
    
    def adjust_workout_in_progress(
        self,
        user: User,
        current_set: Set,
        remaining_sets: int
    ) -> Dict:
        """
        Ajuste la s√©ance en cours selon la performance actuelle
        """
        # Analyser la performance de la s√©rie actuelle
        if current_set.target_reps > 0:
            performance_ratio = current_set.actual_reps / current_set.target_reps
        else:
            performance_ratio = 0
        
        recommendations = []
        adjustments = {}

        # Calculer l'ajustement des r√©p√©titions
        recent_sets = self.db.query(Set).join(Workout).filter(
            Workout.user_id == user.id,
            Set.exercise_id == current_set.exercise_id,
            Set.skipped == False
        ).order_by(Set.completed_at.desc()).limit(5).all()

        rep_suggestion = self.calculate_optimal_rep_range(
            user=user,
            exercise=self.db.query(Exercise).filter(
                Exercise.id == current_set.exercise_id
            ).first(),
            current_fatigue=current_set.fatigue_level / 2,  # Normaliser sur 5
            recent_performance=recent_sets,
            remaining_sets=remaining_sets
        )

        adjustments["suggested_reps"] = rep_suggestion["optimal_reps"]
        adjustments["rep_range"] = {
            "min": rep_suggestion["min_reps"],
            "max": rep_suggestion["max_reps"]
        }
        adjustments["rep_confidence"] = rep_suggestion["confidence"]

        # Ajouter une recommandation si les reps sugg√©r√©es diff√®rent significativement
        if current_set.target_reps > 0:
            rep_diff_ratio = rep_suggestion["optimal_reps"] / current_set.target_reps
            if rep_diff_ratio < 0.8:
                recommendations.append(f"R√©duire √† {rep_suggestion['optimal_reps']} reps pour maintenir la qualit√©")
            elif rep_diff_ratio > 1.2:
                recommendations.append(f"Augmenter √† {rep_suggestion['optimal_reps']} reps si possible")
        
        if performance_ratio < 0.7:
            # Performance tr√®s en dessous
            adjustments["weight_multiplier"] = 0.9
            adjustments["rest_time_bonus"] = 30
            recommendations.append("R√©duire le poids de 10% pour les prochaines s√©ries")
            
        elif performance_ratio < 0.85:
            # Performance l√©g√®rement en dessous
            adjustments["weight_multiplier"] = 0.95
            adjustments["rest_time_bonus"] = 15
            recommendations.append("L√©g√®re r√©duction du poids recommand√©e")
            
        elif performance_ratio > 1.2:
            # Performance tr√®s au-dessus
            adjustments["weight_multiplier"] = 1.05
            recommendations.append("Excellente forme! Augmentation du poids possible")
            
        # Ajustement selon la fatigue
        if current_set.fatigue_level >= 4:
            adjustments["rest_time_bonus"] = adjustments.get("rest_time_bonus", 0) + 30
            recommendations.append("Fatigue √©lev√©e: repos suppl√©mentaire recommand√©")
            
            if remaining_sets > 2:
                adjustments["skip_sets"] = 1
                recommendations.append("Envisager de r√©duire le nombre de s√©ries")
        
        # Pr√©vention des blessures
        if current_set.perceived_exertion >= 9:
            adjustments["stop_workout"] = True
            recommendations.append("‚ö†Ô∏è Effort maximal atteint. Arr√™t recommand√© pour √©viter les blessures.")
        
        return {
            "adjustments": adjustments,
            "recommendations": recommendations
        }
    
    def calculate_optimal_rep_range(
        self,
        user: User,
        exercise: Exercise,
        current_fatigue: float,
        recent_performance: List[Set],
        remaining_sets: int
    ) -> Dict:
        """
        Calcule la fourchette de r√©p√©titions optimale selon:
        - Les objectifs de l'utilisateur
        - Le niveau de fatigue actuel
        - L'historique r√©cent de performance
        - Le nombre de s√©ries restantes
        """
        # R√©cup√©rer les reps de base depuis l'exercice
        base_reps = 10  # Valeur par d√©faut
        if exercise.sets_reps:
            for config in exercise.sets_reps:
                if config.get("level") == user.experience_level:
                    base_reps = config.get("reps", 10)
                    break
        
        # Ajuster selon les objectifs
        goal_multiplier = 1.0
        if user.goals:
            for goal in user.goals:
                if goal in self.GOAL_ADJUSTMENTS:
                    goal_multiplier *= self.GOAL_ADJUSTMENTS[goal]["reps"]
            goal_multiplier = goal_multiplier ** (1/len(user.goals))
        
        # Ajuster selon la fatigue
        fatigue_multiplier = self.REPS_FATIGUE_ADJUSTMENTS.get(
            int(current_fatigue), 0.9
        )
        
        # Analyser la tendance de performance
        if recent_performance and len(recent_performance) >= 2:
            # Calculer le ratio de r√©ussite moyen
            success_ratios = []
            for perf in recent_performance[-3:]:
                if perf.target_reps > 0:
                    ratio = perf.actual_reps / perf.target_reps
                    success_ratios.append(ratio)
            
            if success_ratios:
                avg_success = sum(success_ratios) / len(success_ratios)
                
                # Ajuster selon la performance
                if avg_success > 1.15:  # D√©passement constant
                    performance_adjustment = 1.1
                elif avg_success < 0.85:  # Sous-performance
                    performance_adjustment = 0.9
                else:
                    performance_adjustment = 1.0
            else:
                performance_adjustment = 1.0
        else:
            performance_adjustment = 1.0
        
        # Calculer les reps optimales
        optimal_reps = int(base_reps * goal_multiplier * fatigue_multiplier * performance_adjustment)
        
        # D√©finir la fourchette (¬±10-20%)
        min_reps = max(1, int(optimal_reps * 0.8))
        max_reps = int(optimal_reps * 1.2)
        
        # Ajustement sp√©cial pour les derni√®res s√©ries
        if remaining_sets <= 1 and current_fatigue >= 4:
            # Permettre de r√©duire plus sur la derni√®re s√©rie si tr√®s fatigu√©
            min_reps = max(1, int(min_reps * 0.8))
        
        return {
            "optimal_reps": optimal_reps,
            "min_reps": min_reps,
            "max_reps": max_reps,
            "confidence": 0.8 if len(recent_performance) >= 3 else 0.5,
            "adjustment_reason": self._get_adjustment_reason(
                goal_multiplier, fatigue_multiplier, performance_adjustment
            )
        }

    def _get_adjustment_reason(self, goal_mult, fatigue_mult, perf_mult):
        """Explique la raison de l'ajustement des reps"""
        reasons = []
        
        if goal_mult < 0.9:
            reasons.append("Objectif force: moins de reps")
        elif goal_mult > 1.1:
            reasons.append("Objectif endurance: plus de reps")
            
        if fatigue_mult < 0.9:
            reasons.append("Fatigue √©lev√©e d√©tect√©e")
            
        if perf_mult > 1.05:
            reasons.append("Performance excellente r√©cente")
        elif perf_mult < 0.95:
            reasons.append("Ajustement pour maintenir la qualit√©")
        
        return " - ".join(reasons) if reasons else "R√©p√©titions standards"
        
    def generate_adaptive_program(
            self,
            user: User,
            duration_weeks: int = 4,
            frequency: int = 3
        ) -> List[Dict]:
            """
            G√©n√®re un programme adaptatif bas√© sur:
            - Les objectifs de l'utilisateur
            - Son √©quipement disponible
            - Son historique de performance
            - Les principes de p√©riodisation
            """
            program = []
        
            # V√©rifier que l'utilisateur a des objectifs
            if not user.goals:
                user.goals = ["hypertrophie"]  # Objectif par d√©faut

            # Valider la configuration d'√©quipement
            if not user.equipment_config or not isinstance(user.equipment_config, dict):
                logger.error(f"Configuration d'√©quipement invalide pour l'utilisateur {user.id}")
                return []

            # V√©rifier qu'au moins un √©quipement est disponible
            has_equipment = False
            for category, items in user.equipment_config.items():
                if isinstance(items, dict) and items.get("available", False):
                    has_equipment = True
                    break

            if not has_equipment:
                logger.error(f"Aucun √©quipement disponible pour l'utilisateur {user.id}")
                return []
            
            # R√©cup√©rer les exercices disponibles selon l'√©quipement
            available_equipment = []
            config = user.equipment_config
            
            # Barres
            for barre_type, barre_config in config.get("barres", {}).items():
                if barre_config.get("available", False):
                    if barre_type in ["olympique", "courte"]:
                        available_equipment.append("barre_olympique")
                    elif barre_type == "ez":
                        available_equipment.append("barre_ez")
                    
                    # √âquivalence barre courte = dumbbells (si paire + disques)
                    if (barre_type == "courte" and barre_config.get("count", 0) >= 2 and 
                        config.get("disques", {}).get("available", False)):
                        logger.info("Barres courtes en paire + disques d√©tect√©es - ajout √©quivalence dumbbells")
                        available_equipment.append("dumbbells")

            # Halt√®res
            if config.get("dumbbells", {}).get("available", False):
                available_equipment.append("dumbbells")
                
            # Poids du corps toujours disponible
            available_equipment.append("poids_du_corps")
            
            # Banc
            if config.get("banc", {}).get("available", False):
                available_equipment.append("banc_plat")
                if config["banc"].get("inclinable_haut", False):
                    available_equipment.append("banc_inclinable")
                if config["banc"].get("inclinable_bas", False):
                    available_equipment.append("banc_declinable")

            # √âlastiques
            if config.get("elastiques", {}).get("available", False):
                available_equipment.append("elastiques")

            # Autres √©quipements
            autres = config.get("autres", {})
            if autres.get("kettlebell", {}).get("available", False):
                available_equipment.append("kettlebell")
            if autres.get("barre_traction", {}).get("available", False):
                available_equipment.append("barre_traction")  # Mapping correct
            # Ajouter apr√®s les autres mappings d'√©quipement
            # Machines (non disponibles dans la config actuelle)
            machine_equipment = ["poulies", "machine_convergente", "machine_pectoraux", 
                                "machine_developpe", "machine_epaules", "machine_oiseau",
                                "machine_shrug", "dip_bars"]
            # Ces √©quipements ne sont pas dans la config utilisateur, donc toujours False

            logger.info(f"=== DIAGNOSTIC √âQUIPEMENT ===")
            logger.info(f"Config utilisateur brute: {user.equipment_config}")
            logger.info(f"√âquipement mapp√© disponible: {available_equipment}")
            all_exercises = self.db.query(Exercise).all()
            
            # Debug d√©taill√© des premiers exercices
            logger.info(f"=== DIAGNOSTIC D√âTAILL√â √âQUIPEMENT ===")
            for i, exercise in enumerate(all_exercises[:10]):
                logger.info(f"Exercice {i+1}: {exercise.name_fr}")
                logger.info(f"  √âquipement requis: {exercise.equipment}")
                if exercise.equipment:
                    matches = [eq for eq in exercise.equipment if eq in available_equipment]
                    logger.info(f"  √âquipements correspondants: {matches}")
                    logger.info(f"  Compatible: {len(matches) > 0}")

            # R√©cup√©rer TOUS les exercices et filtrer manuellement
            logger.info(f"Nombre total d'exercices dans la DB: {len(all_exercises)}")

            # Filtrer les exercices
            available_exercises = []
            for exercise in all_exercises:
                exercise_equipment = exercise.equipment or []
                
                # Un exercice est disponible si on a AU MOINS UN des √©quipements requis
                if not exercise_equipment or any(eq in available_equipment for eq in exercise_equipment):
                    available_exercises.append(exercise)
                else:
                    # Log seulement quelques exemples pour debug
                    if len(available_exercises) < 5 and exercise.body_part in ["Pectoraux", "Dos"]:
                        missing = [eq for eq in exercise_equipment if eq not in available_equipment]
                        logger.debug(f"Exercice exclu: {exercise.name_fr} - manque: {missing}")

            # R√©sum√© du filtrage
            logger.info(f"=== R√âSULTAT FILTRAGE ===")
            logger.info(f"Exercices disponibles apr√®s filtrage: {len(available_exercises)}")
            if len(available_exercises) < 10:
                logger.warning(f"Peu d'exercices trouv√©s ({len(available_exercises)})")
                for i, ex in enumerate(available_exercises[:5]):
                    logger.info(f"  Exercice {i+1}: {ex.name_fr}")
                    
            # V√©rifier qu'on a assez d'exercices
            if len(available_exercises) < 5:
                logger.error(f"Impossible de g√©n√©rer un programme avec seulement {len(available_exercises)} exercices")
                return []
            
            # Grouper par partie du corps
            logger.error(f"DEBUG: Groupage de {len(available_exercises)} exercices")
            body_parts = {}
            for ex in available_exercises:
                if ex.body_part not in body_parts:
                    body_parts[ex.body_part] = []
                body_parts[ex.body_part].append(ex)

            # AJOUTER CE LOG
            logger.error(f"DEBUG: Body parts trouv√©s: {list(body_parts.keys())}")
            for bp, exs in body_parts.items():
                logger.error(f"  - {bp}: {len(exs)} exercices")

            # Create rotation based on requested frequency
            if frequency == 3:
                split = ["Pectoraux/Triceps", "Dos/Biceps", "Jambes"]
            elif frequency == 4:
                split = ["Pectoraux/Triceps", "Dos/Biceps", "Jambes", "√âpaules/Abdos"]
            elif frequency == 5:
                split = ["Pectoraux", "Dos", "Jambes", "√âpaules", "Bras"]
            else:
                split = ["Haut du corps", "Bas du corps", "Full body"]
            
            # G√©n√©rer les s√©ances pour chaque semaine
            for week in range(duration_weeks):
                exercise_rotation_offset = week % 2
                week_intensity = 0.85 + (week * 0.05)
                
                if week == duration_weeks - 1:
                    week_intensity = 0.7  # Semaine de deload
                
                week_program = []
                
                for day_num, muscle_group in enumerate(split):
                    workout = {
                        "week": week + 1,
                        "day": day_num + 1,
                        "muscle_group": muscle_group,
                        "exercises": []
                    }
                    
                    # S√©lectionner les exercices pour ce jour
                    selected_exercises = self._select_exercises_for_day(
                        body_parts, 
                        muscle_group, 
                        user.experience_level,
                        exercise_rotation_offset
                    )
                                        
                    for exercise in selected_exercises:
                        logger.info(f"Tentative d'ajout de l'exercice: {exercise.name_fr} (ID: {exercise.id})")
                        try:
                            # Obtenir les recommandations pour cet exercice
                            sets_reps = self.get_sets_reps_for_level(
                                exercise, 
                                user.experience_level,
                                user.goals
                            )
                            
                            # Pr√©dire le poids
                            prediction = self.predict_next_session_performance(
                                user, 
                                exercise,
                                sets_reps["sets"],
                                sets_reps["reps"]
                            )
                            
                            workout["exercises"].append({
                                "exercise_id": exercise.id,
                                "exercise_name": exercise.name_fr,
                                "sets": int(sets_reps["sets"] * week_intensity),
                                "target_reps": sets_reps["reps"],
                                "predicted_weight": prediction["predicted_weight"],
                                "rest_time": 90 if user.goals and "force" in user.goals else 60
                            })
                        except Exception as e:
                            # CHANGEZ print par logger.error pour voir dans les logs serveur
                            logger.error(f"ERREUR CRITIQUE avec l'exercice {exercise.name_fr}: {str(e)}")
                            logger.error(f"Traceback complet:", exc_info=True)
                            continue
                    
                    week_program.append(workout)
                
                program.extend(week_program)
            
            return program

    def _select_exercises_for_day(
        self,
        body_parts: Dict,
        muscle_group: str,
        experience_level: str,
        exercise_rotation_offset: int = 0
    ) -> List[Exercise]:
        """
        S√©lectionne les exercices pour une journ√©e
        """
        logger.error(f"DEBUG _select_exercises_for_day:")
        logger.error(f"  - muscle_group demand√©: '{muscle_group}'")
        logger.error(f"  - body_parts disponibles: {list(body_parts.keys())}")
        
        selected = []
        
        # Mapping des groupes musculaires
        muscle_mapping = {
            "Pectoraux/Triceps": ["Pectoraux", "Bras"],
            "Dos/Biceps": ["Dos", "Bras"],  # CHANG√â : Simplifi√© pour correspondre √† la DB - ### TODO_later
            "Jambes": ["Jambes"],
            "√âpaules/Abdos": ["Delto√Ødes", "Abdominaux"],
            "Haut du corps": ["Pectoraux", "Dos", "Delto√Ødes"],
            "Bas du corps": ["Jambes"],
            "Full body": ["Pectoraux", "Dos", "Jambes", "Delto√Ødes"],
            "Bras": ["Bras"],
        }
        
        target_parts = muscle_mapping.get(muscle_group, [muscle_group])
        logger.error(f"  - target_parts apr√®s mapping: {target_parts}")
        
        # Nombre d'exercices selon le niveau
        exercise_counts = {
            "d√©butant": 3,
            "interm√©diaire": 4,
            "avanc√©": 5,
            "√©lite": 6,
            "extr√™me": 7
        }
        
        max_exercises = exercise_counts.get(experience_level, 4)
        exercises_per_part = max(2, max_exercises // len(target_parts))
        
        # Pour chaque partie musculaire
        for i, part in enumerate(target_parts):
            logger.error(f"  - Recherche de '{part}' dans body_parts...")
            
            if part in body_parts:
                part_exercises = body_parts[part]
                logger.error(f"    ‚úì Trouv√© {len(part_exercises)} exercices")
                
                # Appliquer la rotation
                if exercise_rotation_offset > 0 and len(part_exercises) > 3:
                    part_exercises = part_exercises[exercise_rotation_offset:] + part_exercises[:exercise_rotation_offset]
                
                # S√©parer par niveau
                compound = [ex for ex in part_exercises if ex.level in ["basique", "avanc√©"]]
                isolation = [ex for ex in part_exercises if ex.level in ["isolation", "finition"]]
                
                # S√©lection selon le type de muscle
                if part in ["Pectoraux", "Dos", "Jambes"]:
                    # Gros muscles : privil√©gier les compos√©s
                    if compound:
                        selected.extend(compound[:min(2, exercises_per_part)])
                    if isolation and len(selected) < max_exercises:
                        remaining = max_exercises - len(selected)
                        selected.extend(isolation[:min(remaining, exercises_per_part-1)])
                else:
                    # Petits muscles : m√©langer
                    mixed = compound + isolation
                    count = min(exercises_per_part, len(mixed))
                    if i == 0:  # Premier muscle = plus d'exercices
                        count = min(count + 1, len(mixed))
                    selected.extend(mixed[:count])
                
                if len(selected) >= max_exercises:
                    break
            else:
                logger.error(f"    ‚úó '{part}' NON TROUV√â dans {list(body_parts.keys())}")
        
        # Assurer un minimum de 3 exercices
        if len(selected) < 3:
            all_available = []
            for exercises_list in body_parts.values():
                all_available.extend(exercises_list)
            remaining = [ex for ex in all_available if ex not in selected]
            selected.extend(remaining[:3 - len(selected)])
        
        logger.error(f"  - Retour de {len(selected)} exercices s√©lectionn√©s")
        return selected[:max_exercises]
   
    def get_sets_reps_for_level(self, exercise: Exercise, level: str, goals: List[str]) -> Dict:
        """
        Obtient les sets/reps recommand√©s
        """
        # V√©rifier que sets_reps existe
        if not exercise.sets_reps:
            return {"sets": 3, "reps": 10}  # Valeurs par d√©faut
        
        # Trouver la configuration pour ce niveau
        sets_reps_config = None
        for config in exercise.sets_reps:
            if config["level"] == level:
                sets_reps_config = config
                break
        
        if not sets_reps_config:
            # Utiliser le niveau interm√©diaire par d√©faut
            for config in exercise.sets_reps:
                if config["level"] == "interm√©diaire":
                    sets_reps_config = config
                    break
        
        if not sets_reps_config:
            # Valeurs par d√©faut
            return {"sets": 3, "reps": 10}
        
        # Ajuster selon les objectifs
        sets = sets_reps_config["sets"]
        reps = sets_reps_config["reps"]
        
        if goals:
            for goal in goals:
                if goal in self.GOAL_ADJUSTMENTS:
                  sets = int(sets * self.GOAL_ADJUSTMENTS[goal]["sets"])
                  reps = int(reps * self.GOAL_ADJUSTMENTS[goal]["reps"])
        
        return {"sets": sets, "reps": reps}
    
    def analyze_injury_risk(self, user: User) -> Dict:
        """
        Analyse le risque de blessure bas√© sur:
        - Les patterns de fatigue
        - L'augmentation rapide des charges
        - Les zones de douleur signal√©es
        """
        # R√©cup√©rer l'historique r√©cent
        recent_workouts = self.db.query(Workout).filter(
            Workout.user_id == user.id,
            Workout.created_at >= datetime.utcnow() - timedelta(days=14)
        ).all()
        
        risk_factors = []
        risk_level = "low"
        
        # Analyser la fr√©quence d'entra√Ænement
        workout_days = len(set(w.created_at.date() for w in recent_workouts))
        if workout_days > 10:
            risk_factors.append("Fr√©quence d'entra√Ænement tr√®s √©lev√©e")
            risk_level = "medium"
        
        # Analyser les niveaux de fatigue
        all_sets = []
        for workout in recent_workouts:
            all_sets.extend(workout.sets)
        
        if all_sets:
            avg_fatigue = self._mean([s.fatigue_level for s in all_sets if s.fatigue_level])
            if avg_fatigue > 3.5:
                risk_factors.append("Niveau de fatigue chronique √©lev√©")
                risk_level = "high" if risk_level == "medium" else "medium"
            
            # Analyser l'augmentation des charges
            by_exercise = {}
            for s in all_sets:
                if s.exercise_id not in by_exercise:
                    by_exercise[s.exercise_id] = []
                by_exercise[s.exercise_id].append((s.completed_at, s.weight))
            
            for exercise_id, history in by_exercise.items():
                if len(history) >= 3:
                    history.sort(key=lambda x: x[0])
                    weights = [h[1] for h in history]
                    
                    # Calculer l'augmentation sur les 3 derni√®res s√©ances
                    if weights[-1] > weights[-3] * 1.15:
                        risk_factors.append(f"Augmentation rapide de charge d√©tect√©e")
                        risk_level = "high"
        
        recommendations = []
        if risk_level == "high":
            recommendations = [
                "‚ö†Ô∏è Risque √©lev√© d√©tect√©",
                "R√©duire l'intensit√© pendant 3-5 jours",
                "Privil√©gier la r√©cup√©ration active",
                "Consulter un professionnel si douleur"
            ]
        elif risk_level == "medium":
            recommendations = [
                "Surveillance recommand√©e",
                "Int√©grer plus de jours de repos",
                "Focus sur la technique"
            ]
        else:
            recommendations = [
                "‚úÖ Risque faible",
                "Continuer la progression actuelle",
                "Maintenir une bonne r√©cup√©ration"
            ]
        
        return {
            "risk_level": risk_level,
            "risk_factors": risk_factors,
            "recommendations": recommendations,
            "recovery_days_recommended": 2 if risk_level == "high" else 1
        }
    
    def calculate_weight_for_exercise(self, user: User, exercise: Exercise, reps: int) -> float:
        """Calcule le poids pour un exercice donn√© avec gestion d'erreur robuste"""
        try:
            # Validation des param√®tres d'entr√©e
            if not user or not exercise:
                logger.warning("Param√®tres invalides pour calculate_weight_for_exercise")
                return 20.0
                
            prediction = self.predict_next_session_performance(user, exercise, 3, reps)
            
            # Validation du r√©sultat
            if not prediction or "predicted_weight" not in prediction:
                logger.warning(f"Pr√©diction invalide pour {exercise.name_fr}")
                return self.calculate_starting_weight(user, exercise)
                
            weight = float(prediction.get("predicted_weight", 20.0))
            
            # Validation du poids (doit √™tre positif et raisonnable)
            if weight <= 0 or weight > 500:
                logger.warning(f"Poids invalide {weight} pour {exercise.name_fr}")
                return self.calculate_starting_weight(user, exercise)
                
            return weight
            
        except Exception as e:
            logger.error(f"Exception dans calculate_weight_for_exercise pour {exercise.name_fr}: {e}")
            # Fallback vers calculate_starting_weight
            try:
                return self.calculate_starting_weight(user, exercise)
            except Exception as e2:
                logger.error(f"Erreur fallback calculate_starting_weight: {e2}")
                # Dernier recours : poids par d√©faut selon niveau
                defaults = {
                    "d√©butant": 10.0, "interm√©diaire": 20.0, "avanc√©": 30.0,
                    "√©lite": 40.0, "extr√™me": 50.0
                }
                return defaults.get(user.experience_level, 20.0)

# ========== NOUVEAUX MODULES PHASE 2.2 ==========

class RecoveryTracker:
    """Module 1 : Gestion de la r√©cup√©ration"""
    def __init__(self, db: Session):
        self.db = db
    
    def get_muscle_readiness(self, muscle: str, user: User) -> float:
        """Score 0-1 bas√© sur fatigue, derni√®re s√©ance, sommeil"""
        from backend.models import AdaptiveTargets
        
        # R√©cup√©rer la target adaptive pour ce muscle
        target = self.db.query(AdaptiveTargets).filter(
            AdaptiveTargets.user_id == user.id,
            AdaptiveTargets.muscle_group == muscle
        ).first()
        
        if not target or not target.last_trained:
            return 1.0  # Muscle frais
        
        hours_since = (datetime.utcnow() - target.last_trained).total_seconds() / 3600
        
        # R√©cup√©ration bas√©e sur le temps (48-72h optimal)
        if hours_since < 24:
            recovery = 0.3
        elif hours_since < 48:
            recovery = 0.7
        elif hours_since < 72:
            recovery = 0.9
        else:
            recovery = 1.0
        
        # Ajuster selon la dette de r√©cup√©ration
        if target.recovery_debt > 0:
            recovery *= (1 - min(0.5, target.recovery_debt / 10))
        
        return max(0.2, recovery)  # Minimum 20%

class VolumeOptimizer:
    """Module 2 : Optimisation du volume"""
    def __init__(self, db: Session):
        self.db = db
    
    def calculate_optimal_volume(self, user: User, muscle: str) -> int:
        """Calcul du volume optimal bas√© sur historique et objectifs"""
        from backend.models import UserCommitment
        
        # R√©cup√©rer l'engagement utilisateur
        commitment = self.db.query(UserCommitment).filter(
            UserCommitment.user_id == user.id
        ).first()
        
        # Volume de base selon objectif principal
        primary_goal = user.goals[0] if user.goals else "hypertrophie"
        base_volumes = {
            "force": 10,
            "hypertrophie": 16,
            "endurance": 20,
            "perte_de_poids": 14,
            "cardio": 12,
            "flexibility": 8
        }
        base_volume = base_volumes.get(primary_goal, 16)
        
        # Ajuster selon l'exp√©rience
        exp_multipliers = {
            "d√©butant": 0.7,
            "interm√©diaire": 1.0,
            "avanc√©": 1.2,
            "√©lite": 1.4,
            "extr√™me": 1.5
        }
        exp_mult = exp_multipliers.get(user.experience_level, 1.0)
        
        # Ajuster selon le focus musculaire
        if commitment and muscle in commitment.focus_muscles:
            focus_level = commitment.focus_muscles[muscle]
            if focus_level == "always":
                exp_mult *= 1.5
            elif focus_level == "priority":
                exp_mult *= 1.3
            elif focus_level == "never":
                exp_mult *= 0.3  # Minimum vital pour √©viter les blessures
        
        return int(base_volume * exp_mult)
    
    def get_volume_deficit(self, user: User) -> Dict[str, float]:
        """Retourne les muscles en retard sur leur volume cible"""
        from backend.models import AdaptiveTargets
        
        targets = self.db.query(AdaptiveTargets).filter(
            AdaptiveTargets.user_id == user.id
        ).all()
        
        deficits = {}
        for target in targets:
            if target.target_volume > 0:
                deficit = (target.target_volume - target.current_volume) / target.target_volume
                if deficit > 0.2:  # Plus de 20% de retard
                    deficits[target.muscle_group] = deficit
        
        return dict(sorted(deficits.items(), key=lambda x: x[1], reverse=True))

class SessionBuilder:
    """Module 3 : Construction de s√©ance pure"""
    def __init__(self, db: Session):
        self.db = db
        self.ml_engine = FitnessMLEngine(db)  # R√©utiliser l'existant

    def build_session(self, muscles: List[str], time_budget: int, 
                    user: User, constraints: Dict = None) -> List[Dict]:
        """Construction d'une s√©ance optimis√©e avec limitation intelligente"""

        # AJOUTER au d√©but (apr√®s les logs existants) :
        # Calculer le nombre max d'exercices selon le temps disponible
        if time_budget <= 30:
            max_total_exercises = 2
            max_per_muscle = 1
        elif time_budget <= 45:
            max_total_exercises = 3
            max_per_muscle = 2  # Max 2 exercices par muscle
        elif time_budget <= 60:
            max_total_exercises = 4
            max_per_muscle = 2
        else:
            max_total_exercises = 5
            max_per_muscle = 2

        logger.info(f"Time budget: {time_budget}min -> Max {max_total_exercises} exercises total, {max_per_muscle} per muscle")

        # Ajouter des logs de d√©bogage (GARDER votre code existant)
        logger.info(f"Building session for muscles: {muscles}")
        logger.info(f"User equipment: {user.equipment_config}")
        
        # R√©cup√©rer tous les exercices disponibles (GARDER votre code)
        all_exercises = self.db.query(Exercise).all()
        logger.info(f"Total exercises in DB: {len(all_exercises)}")
        
        # Filtrer par muscle (GARDER votre code)
        muscle_exercises = [e for e in all_exercises if e.body_part in muscles]
        logger.info(f"Exercises for selected muscles: {len(muscle_exercises)}")

        session = []
        time_used = 0
        constraints = constraints or {}
        
        # MODIFIER cette ligne pour limiter les muscles trait√©s :
        for muscle in muscles:
            # V√©rifier si on a d√©j√† atteint le max d'exercices
            if len(session) >= max_total_exercises:
                logger.info(f"Max exercises ({max_total_exercises}) atteint, arr√™t de l'ajout")
                break
                
            # R√©cup√©rer exercices disponibles (GARDER votre code existant)
            exercises = self.db.query(Exercise).filter(
                Exercise.body_part == muscle
            ).all()
            
            # Filtrer par √©quipement disponible (GARDER votre code)
            available_exercises = []
            for ex in exercises:
                if self._check_equipment_availability(ex, user):
                    available_exercises.append(ex)
            
            if not available_exercises:
                continue
            
            # MODIFIER cette ligne pour utiliser la limite calcul√©e :
            selected_exercises = self._select_best_exercises(
                available_exercises, user, muscle, max_exercises=max_per_muscle
            )
            
            for selected in selected_exercises:
                # V√©rifier si on a d√©j√† atteint le max total
                if len(session) >= max_total_exercises:
                    logger.info(f"Max total exercises ({max_total_exercises}) atteint")
                    break
                    
                # GARDER TOUT votre code existant pour sets/reps/poids/temps :
                sets = 3 if user.experience_level in ["d√©butant", "interm√©diaire"] else 4
                
                # Adapter les reps selon l'objectif
                if "force" in user.goals:
                    reps = 5
                elif "endurance" in user.goals:
                    reps = 15
                else:
                    reps = 10
                
                # Temps de repos selon objectif
                if "force" in user.goals:
                    rest = 180
                elif "endurance" in user.goals:
                    rest = 60
                else:
                    rest = 120
                
                # Calculer le poids sugg√©r√© via ML existant avec gestion d'erreur
                try:
                    weight = self.ml_engine.calculate_weight_for_exercise(user, selected, reps)
                except Exception as e:
                    logger.error(f"Erreur calcul poids pour {selected.name_fr}: {e}")
                    weight = 20.0  # Poids par d√©faut s√©curis√©
                
                exercise_time = sets * (30 + rest)  # 30s par s√©rie + repos
                
                if time_used + exercise_time <= time_budget * 60:  # Convertir minutes en secondes
                    session.append({
                        "exercise_id": selected.id,
                        "exercise_name": selected.name_fr,
                        "body_part": selected.body_part,
                        "sets": int(sets),
                        "target_reps": int(reps),
                        "suggested_weight": float(weight),
                        "rest_time": int(rest)
                    })
                    time_used += exercise_time
        
        # GARDER TOUT votre code de logs et fallbacks existant :
        logger.info(f"Session construite: {len(session)} exercices")
        for ex in session:
            logger.info(f"  - {ex['exercise_name']} ({ex['body_part']})")

        # Si moins de 2 exercices (au lieu de 3), essayer d'en ajouter plus
        min_exercises = 2 if time_budget <= 30 else 3
        if len(session) < min_exercises:
            logger.warning(f"Seulement {len(session)} exercices trouv√©s, recherche suppl√©mentaire...")
            # GARDER votre logique de recherche suppl√©mentaire
            all_exercises = self.db.query(Exercise).filter(Exercise.body_part.in_(muscles)).all()
            available_all = [ex for ex in all_exercises if self._check_equipment_availability(ex, user)]
            
            # Limiter l'ajout selon le budget temps
            for ex in available_all[:max_total_exercises]:
                if len(session) >= max_total_exercises:
                    break
                if ex.id not in [s["exercise_id"] for s in session]:
                    session.append({
                        "exercise_id": ex.id,
                        "exercise_name": ex.name_fr,
                        "body_part": ex.body_part,
                        "sets": 3,
                        "target_reps": 10,
                        "suggested_weight": 20.0,
                        "rest_time": 90
                    })
                    if len(session) >= min_exercises:
                        break
            
            logger.info(f"Apr√®s recherche suppl√©mentaire: {len(session)} exercices")

        # GARDER votre fallback ultime :
        if not session and muscles:
            # Fallback : prendre n'importe quel exercice disponible
            fallback_exercise = self.db.query(Exercise).filter(
                Exercise.body_part.in_(muscles)
            ).first()
            
            if fallback_exercise:
                try:
                    fallback_weight = self.ml_engine.calculate_weight_for_exercise(user, fallback_exercise, 10)
                except Exception as e:
                    logger.error(f"Erreur calcul poids fallback pour {fallback_exercise.name_fr}: {e}")
                    fallback_weight = 20.0
                
                session.append({
                    "exercise_id": fallback_exercise.id,
                    "exercise_name": fallback_exercise.name_fr,
                    "body_part": fallback_exercise.body_part,
                    "sets": 3,
                    "target_reps": 10,
                    "rest_time": 90,
                    "suggested_weight": float(fallback_weight)
                })
                
        return session 
    def _check_equipment_availability(self, exercise: Exercise, user: User) -> bool:
        """V√©rifie si l'√©quipement n√©cessaire est disponible"""
        if not exercise.equipment:
            return True
        
        # Utiliser la m√™me logique que get_available_exercises de FitnessMLEngine
        config = user.equipment_config or {}
        available_equipment = []
        
        # Barres
        for barre_type, barre_config in config.get("barres", {}).items():
            if barre_config.get("available", False):
                if barre_type in ["olympique", "courte"]:
                    available_equipment.append("barre_olympique")
                elif barre_type == "ez":
                    available_equipment.append("barre_ez")
                    
                # √âquivalence barre courte = dumbbells (si paire + disques)
                if (barre_type == "courte" and barre_config.get("count", 0) >= 2 and 
                    config.get("disques", {}).get("available", False)):
                    available_equipment.append("dumbbells")

        # Halt√®res
        if config.get("dumbbells", {}).get("available", False):
            available_equipment.append("dumbbells")
            
        # Poids du corps toujours disponible
        available_equipment.append("poids_du_corps")
        
        # Banc
        if config.get("banc", {}).get("available", False):
            available_equipment.append("banc_plat")
            if config["banc"].get("inclinable_haut", False):
                available_equipment.append("banc_inclinable")
            if config["banc"].get("inclinable_bas", False):
                available_equipment.append("banc_declinable")

        # √âlastiques
        if config.get("elastiques", {}).get("available", False):
            available_equipment.append("elastiques")

        # Autres √©quipements
        autres = config.get("autres", {})
        if autres.get("kettlebell", {}).get("available", False):
            available_equipment.append("kettlebell")
        if autres.get("barre_traction", {}).get("available", False):
            available_equipment.append("barre_traction")
        
        # V√©rifier compatibilit√©
        exercise_equipment = exercise.equipment or []
        compatible = not exercise_equipment or any(eq in available_equipment for eq in exercise_equipment)
        
        # LOG POUR DEBUG
        if not compatible:
            logger.warning(f"‚ùå Exercice {exercise.name_fr} incompatible - Demande: {exercise_equipment}, Disponible: {available_equipment}")
        
        return compatible
    
    def _select_best_exercises(self, exercises: List[Exercise], 
                             user: User, muscle: str, max_exercises: int = 2) -> List[Exercise]:
        """S√©lectionne les meilleurs exercices selon plusieurs crit√®res"""
        # Prioriser par niveau d'exp√©rience
        suitable_exercises = [
            ex for ex in exercises 
            if self._is_suitable_level(ex.level, user.experience_level)
        ]
        
        if not suitable_exercises:
            suitable_exercises = exercises
        
        # Pour l'instant, prendre les premiers
        # TODO: Am√©liorer avec historique, vari√©t√©, pr√©f√©rences
        return suitable_exercises[:max_exercises]
    
    def _is_suitable_level(self, exercise_level: str, user_level: str) -> bool:
        """V√©rifie si l'exercice convient au niveau de l'utilisateur"""
        level_hierarchy = {
            "d√©butant": 1,
            "interm√©diaire": 2,
            "avanc√©": 3,
            "√©lite": 4,
            "extr√™me": 5
        }
        
        ex_level = level_hierarchy.get(exercise_level, 2)
        user_level_num = level_hierarchy.get(user_level, 2)
        
        # Accepter jusqu'√† 1 niveau au-dessus
        return ex_level <= user_level_num + 1

class ProgressionAnalyzer:
    """Module 4 : Analyse de trajectoire"""
    def __init__(self, db: Session):
        self.db = db
    
    def get_trajectory_status(self, user: User) -> Dict:
        """Analyse compl√®te de la progression vers les objectifs"""
        from backend.models import UserCommitment, AdaptiveTargets
        
        commitment = self.db.query(UserCommitment).filter(
            UserCommitment.user_id == user.id
        ).first()
        
        if not commitment:
            return {
                "status": "no_commitment",
                "on_track": False,
                "sessions_this_week": 0,
                "sessions_target": 0,
                "volume_adherence": 0.0,
                "consistency_score": 0.0,
                "muscle_balance": {},
                "insights": ["D√©finissez vos objectifs pour commencer le suivi"]
            }
        
        # Calculer les m√©triques sur 7 jours glissants
        sessions_last_7d = self.db.query(Workout).filter(
            Workout.user_id == user.id,
            Workout.created_at > datetime.utcnow() - timedelta(days=7),
            Workout.status == "completed"
        ).count()
        
        # Volume par muscle
        volume_by_muscle = self._calculate_volume_by_muscle(user, days=7)
        
        # Score de consistance (30 jours)
        consistency = self._calculate_consistency_score(user, days=30)
        
        # Adh√©rence au volume
        volume_adherence = self._calculate_volume_adherence(user)
        
        # Analyse de l'√©quilibre musculaire
        muscle_balance = self._analyze_muscle_balance(volume_by_muscle)
        
        # Insights personnalis√©s
        insights = self._generate_insights(
            user, volume_by_muscle, sessions_last_7d, commitment, consistency
        )
        
        return {
            "on_track": sessions_last_7d >= commitment.sessions_per_week * 0.7,
            "sessions_this_week": sessions_last_7d,
            "sessions_target": commitment.sessions_per_week,
            "volume_adherence": volume_adherence,
            "consistency_score": consistency,
            "muscle_balance": muscle_balance,
            "insights": insights
        }
    
    def _calculate_volume_by_muscle(self, user: User, days: int) -> Dict[str, int]:
        """Calcule le volume total par muscle sur X jours"""
        from sqlalchemy import and_
        
        cutoff_date = datetime.utcnow() - timedelta(days=days)
        
        # Requ√™te pour obtenir le volume
        results = self.db.query(
            Exercise.body_part,
            func.sum(Set.actual_reps * Set.weight).label('volume')
        ).join(
            Set, Set.exercise_id == Exercise.id
        ).join(
            Workout, Workout.id == Set.workout_id
        ).filter(
            and_(
                Workout.user_id == user.id,
                Workout.created_at > cutoff_date,
                Workout.status == "completed"
            )
        ).group_by(Exercise.body_part).all()
        
        return {muscle: int(volume or 0) for muscle, volume in results}
    
    def _calculate_consistency_score(self, user: User, days: int) -> float:
        """Score de r√©gularit√© sur X jours"""
        from backend.models import UserCommitment
        
        commitment = self.db.query(UserCommitment).filter(
            UserCommitment.user_id == user.id
        ).first()
        
        if not commitment:
            return 0.5
        
        # Compter les s√©ances compl√©t√©es
        workouts_count = self.db.query(Workout).filter(
            Workout.user_id == user.id,
            Workout.created_at > datetime.utcnow() - timedelta(days=days),
            Workout.status == "completed"
        ).count()
        
        # Calculer l'attendu
        expected = (days / 7) * commitment.sessions_per_week
        
        return min(1.0, workouts_count / expected) if expected > 0 else 0
    
    def _calculate_volume_adherence(self, user: User) -> float:
        """Calcule l'adh√©rence au volume cible"""
        from backend.models import AdaptiveTargets
        
        targets = self.db.query(AdaptiveTargets).filter(
            AdaptiveTargets.user_id == user.id
        ).all()
        
        if not targets:
            return 1.0
        
        adherences = []
        for target in targets:
            if target.target_volume > 0:
                adherence = min(1.0, target.current_volume / target.target_volume)
                adherences.append(adherence)
        
        return sum(adherences) / len(adherences) if adherences else 0.5  # 50% par d√©faut
    
    def _analyze_muscle_balance(self, volume_by_muscle: Dict[str, int]) -> Dict[str, float]:
        """Analyse l'√©quilibre entre les groupes musculaires"""
        if not volume_by_muscle:
            return {}
        
        total_volume = sum(volume_by_muscle.values())
        if total_volume == 0:
            return {}
        
        # Calculer les pourcentages
        balance = {}
        for muscle, volume in volume_by_muscle.items():
            balance[muscle] = round(volume / total_volume * 100, 1)
        
        return balance
    
    def _generate_insights(self, user: User, volume_by_muscle: Dict, 
                          sessions_count: int, commitment: Any, 
                          consistency: float) -> List[str]:
        """G√©n√®re des insights personnalis√©s"""
        insights = []
        
        # Insight sur la r√©gularit√©
        if sessions_count == 0:
            insights.append("üí™ C'est le moment de reprendre ! Une petite s√©ance aujourd'hui ?")
        elif sessions_count < commitment.sessions_per_week * 0.7:
            insights.append(f"‚ö†Ô∏è {sessions_count}/{commitment.sessions_per_week} s√©ances cette semaine. Essayons d'en faire une de plus !")
        elif sessions_count >= commitment.sessions_per_week:
            insights.append(f"üî• Objectif atteint : {sessions_count} s√©ances ! Excellent travail !")
        
        # Insight sur la consistance
        if consistency > 0.8:
            insights.append("üéØ R√©gularit√© exemplaire sur 30 jours !")
        elif consistency < 0.5:
            insights.append("üìà La r√©gularit√© est la cl√© : essayons de maintenir le rythme")
        
        # Insight sur l'√©quilibre musculaire
        if volume_by_muscle:
            max_muscle = max(volume_by_muscle.items(), key=lambda x: x[1])
            min_muscle = min(volume_by_muscle.items(), key=lambda x: x[1])
            
            if max_muscle[1] > min_muscle[1] * 3:
                insights.append(f"‚öñÔ∏è {min_muscle[0].capitalize()} n√©glig√© : seulement {min_muscle[1]} s√©ries cette semaine")
        
        # Insight sur les muscles prioritaires
        if commitment.focus_muscles:
            for muscle, priority in commitment.focus_muscles.items():
                if priority == "priority" and muscle in volume_by_muscle:
                    if volume_by_muscle[muscle] < 10:
                        insights.append(f"üéØ {muscle.capitalize()} est prioritaire mais peu travaill√© cette semaine")
        
        return insights[:3]  # Max 3 insights

# ========== ADAPTATEUR TEMPS R√âEL ==========

class RealTimeAdapter:
    """Gestion de l'adaptation en temps r√©el"""
    def __init__(self, db: Session):
        self.db = db
        self.recovery_tracker = RecoveryTracker(db)
        self.volume_optimizer = VolumeOptimizer(db)
        self.progression_analyzer = ProgressionAnalyzer(db)
    
    def handle_session_completed(self, workout: Workout):
        """Appel√© apr√®s chaque s√©ance pour adapter les targets"""
        from backend.models import AdaptiveTargets
        
        # Mettre √† jour les volumes r√©alis√©s
        self._update_current_volumes(workout)
        
        # D√©tecter les patterns de fatigue
        if self._detect_overtraining(workout.user):
            self._force_deload_period(workout.user)
        
        # Ajuster les targets adaptatifs
        self._recalibrate_targets(workout.user)
    
    def handle_session_skipped(self, user: User, reason: str = None):
        """Gestion intelligente des s√©ances rat√©es"""
        from backend.models import UserCommitment, AdaptiveTargets
        
        # Pas de culpabilisation, juste adaptation
        commitment = self.db.query(UserCommitment).filter(
            UserCommitment.user_id == user.id
        ).first()
        
        if commitment:
            # R√©duire temporairement les attentes
            targets = self.db.query(AdaptiveTargets).filter(
                AdaptiveTargets.user_id == user.id
            ).all()
            
            for target in targets:
                target.target_volume *= 0.9  # R√©duire de 10%
            
            self.db.commit()
    
    def get_smart_reminder(self, user: User) -> str:
        """G√©n√®re un rappel contextuel intelligent"""
        from backend.models import UserCommitment
        
        # Analyser le contexte
        trajectory = self.progression_analyzer.get_trajectory_status(user)
        
        if trajectory["sessions_this_week"] == 0:
            return "üí™ Pas grave pour les s√©ances rat√©es. 30 min aujourd'hui ?"
        elif trajectory["sessions_this_week"] >= 5:
            return "üî• 5 s√©ances d'affil√©e ! Repos m√©rit√© ou on continue ?"
        elif trajectory["consistency_score"] > 0.8:
            return "üéØ Tu es sur une excellente lanc√©e ! Pr√™t pour la suite ?"
        else:
            return "üí™ C'est le moment parfait pour une s√©ance !"
    
    def _update_current_volumes(self, workout: Workout):
        """Met √† jour les volumes r√©alis√©s dans les targets adaptatifs"""
        from backend.models import AdaptiveTargets
        
        # Calculer le volume par muscle pour cette s√©ance
        volume_by_muscle = {}
        for set_item in workout.sets:
            exercise = self.db.query(Exercise).filter(
                Exercise.id == set_item.exercise_id
            ).first()
            
            if exercise:
                muscle = exercise.body_part
                volume = set_item.actual_reps
                
                if muscle in volume_by_muscle:
                    volume_by_muscle[muscle] += volume
                else:
                    volume_by_muscle[muscle] = volume
        
        # Mettre √† jour les targets
        for muscle, volume in volume_by_muscle.items():
            target = self.db.query(AdaptiveTargets).filter(
                AdaptiveTargets.user_id == workout.user_id,
                AdaptiveTargets.muscle_group == muscle
            ).first()
            
            if target:
                # Recalculer sur fen√™tre de 7 jours
                target.current_volume = self._calculate_7day_volume(workout.user_id, muscle)
                target.last_trained = workout.completed_at or datetime.utcnow()
                
                # Mettre √† jour la dette de r√©cup√©ration
                avg_fatigue = sum(s.fatigue_level for s in workout.sets) / len(workout.sets)
                target.recovery_debt = max(0, target.recovery_debt + (avg_fatigue - 2.5) * 0.5)
        
        self.db.commit()
    
    def _calculate_7day_volume(self, user_id: int, muscle: str) -> float:
        """Calcule le volume sur 7 jours glissants"""
        cutoff = datetime.utcnow() - timedelta(days=7)
        
        result = self.db.query(func.sum(Set.actual_reps * Set.weight)).join(
            Workout
        ).join(
            Exercise
        ).filter(
            Workout.user_id == user_id,
            Exercise.body_part == muscle,
            Workout.created_at > cutoff,
            Workout.status == "completed"
        ).scalar()
        
        return float(result or 0)
    
    def _detect_overtraining(self, user: User) -> bool:
        """D√©tecte les signes de surentra√Ænement"""
        # Moyenne de fatigue sur 7 jours
        avg_fatigue = self.db.query(func.avg(Set.fatigue_level)).join(
            Workout
        ).filter(
            Workout.user_id == user.id,
            Workout.created_at > datetime.utcnow() - timedelta(days=7)
        ).scalar()
        
        return avg_fatigue and avg_fatigue > 4.0
    
    def _force_deload_period(self, user: User):
        """Force une p√©riode de d√©charge"""
        from backend.models import AdaptiveTargets
        
        targets = self.db.query(AdaptiveTargets).filter(
            AdaptiveTargets.user_id == user.id
        ).all()
        
        for target in targets:
            target.target_volume *= 0.6  # R√©duire de 40%
            target.recovery_debt = 0  # Reset la dette
        
        self.db.commit()
    
    def _recalibrate_targets(self, user: User):
        """Recalibre les objectifs adaptatifs"""
        from backend.models import AdaptiveTargets
        
        targets = self.db.query(AdaptiveTargets).filter(
            AdaptiveTargets.user_id == user.id
        ).all()
        
        for target in targets:
            # Si le volume actuel d√©passe la cible, augmenter la cible
            if target.current_volume > target.target_volume * 1.1:
                target.target_volume = target.current_volume
                target.adaptation_rate = min(1.5, target.adaptation_rate * 1.1)
            # Si tr√®s en dessous, ajuster la cible
            elif target.current_volume < target.target_volume * 0.5:
                target.target_volume *= 0.85
                target.adaptation_rate = max(0.5, target.adaptation_rate * 0.9)
        
        self.db.commit()


    def analyze_program_performance(self, user_id: int, program_id: int) -> dict:
        """Analyse les performances sur un programme"""
        # R√©cup√©rer les 2 derni√®res semaines de donn√©es
        two_weeks_ago = datetime.utcnow() - timedelta(days=14)
        
        recent_workouts = self.db.query(Workout).filter(
            Workout.user_id == user_id,
            Workout.created_at >= two_weeks_ago,
            Workout.status == "completed"
        ).all()
        
        if len(recent_workouts) < 3:
            return {
                "status": "insufficient_data",
                "message": "Pas assez de s√©ances pour analyser"
            }
        
        # Analyser la progression par muscle
        muscle_progress = {}
        for workout in recent_workouts:
            sets = self.db.query(Set).filter(
                Set.workout_id == workout.id,
                Set.skipped == False
            ).all()
            
            for set in sets:
                exercise = self.db.query(Exercise).filter(
                    Exercise.id == set.exercise_id
                ).first()
                
                muscle = exercise.body_part
                if muscle not in muscle_progress:
                    muscle_progress[muscle] = {
                        "weights": [],
                        "reps": [],
                        "fatigue": []
                    }
                
                muscle_progress[muscle]["weights"].append(set.weight)
                muscle_progress[muscle]["reps"].append(set.actual_reps)
                muscle_progress[muscle]["fatigue"].append(set.fatigue_level)
        
        # Calculer les tendances
        analysis = {
            "status": "ready",
            "muscles": {}
        }
        
        for muscle, data in muscle_progress.items():
            if len(data["weights"]) > 0:
                avg_weight_progress = (
                    sum(data["weights"][-3:]) / 3 - 
                    sum(data["weights"][:3]) / min(3, len(data["weights"]))
                ) / (sum(data["weights"][:3]) / min(3, len(data["weights"])) + 0.1)
                
                avg_fatigue = sum(data["fatigue"]) / len(data["fatigue"])
                
                analysis["muscles"][muscle] = {
                    "weight_progress": avg_weight_progress * 100,  # en %
                    "average_fatigue": avg_fatigue,
                    "total_volume": sum(w * r for w, r in zip(data["weights"], data["reps"]))
                }
        
        return analysis

    def suggest_program_adjustments(self, user_id: int, program_id: int) -> dict:
        """Sugg√®re des ajustements bas√©s sur l'analyse"""
        analysis = self.analyze_program_performance(user_id, program_id)
        
        if analysis["status"] != "ready":
            return analysis
        
        suggestions = {
            "global_recommendations": [],
            "muscle_specific": {},
            "exercises_to_change": []
        }
        
        # Analyser chaque muscle
        for muscle, stats in analysis["muscles"].items():
            muscle_suggestions = []
            
            # Si progression forte et fatigue mod√©r√©e ‚Üí augmenter volume
            if stats["weight_progress"] > 5 and stats["average_fatigue"] < 7:
                muscle_suggestions.append({
                    "type": "increase_volume",
                    "reason": "Progression excellente, fatigue mod√©r√©e",
                    "action": "Ajouter 1 s√©rie ou augmenter les charges de 2.5kg"
                })
            
            # Si stagnation ‚Üí varier exercices
            elif -2 <= stats["weight_progress"] <= 2:
                muscle_suggestions.append({
                    "type": "change_exercises",
                    "reason": "Stagnation d√©tect√©e",
                    "action": "Remplacer un exercice par une variante"
                })
                
                # Sugg√©rer des exercices alternatifs
                current_exercises = self.db.query(Exercise).join(
                    ProgramExercise
                ).filter(
                    Exercise.body_part == muscle
                ).limit(3).all()
                
                alternatives = self.db.query(Exercise).filter(
                    Exercise.body_part == muscle,
                    ~Exercise.id.in_([e.id for e in current_exercises])
                ).limit(3).all()
                
                if alternatives:
                    suggestions["exercises_to_change"].append({
                        "muscle": muscle,
                        "current": [e.name_fr for e in current_exercises[:1]],
                        "alternatives": [e.name_fr for e in alternatives]
                    })
            
            # Si fatigue excessive ‚Üí r√©duire volume
            elif stats["average_fatigue"] > 8:
                muscle_suggestions.append({
                    "type": "reduce_volume",
                    "reason": "Fatigue excessive d√©tect√©e",
                    "action": "R√©duire d'1 s√©rie ou baisser les charges de 10%"
                })
            
            if muscle_suggestions:
                suggestions["muscle_specific"][muscle] = muscle_suggestions
        
        # Recommandations globales
        avg_fatigue_global = sum(
            s["average_fatigue"] for s in analysis["muscles"].values()
        ) / len(analysis["muscles"])
        
        if avg_fatigue_global > 7.5:
            suggestions["global_recommendations"].append({
                "type": "deload_week",
                "reason": "Fatigue g√©n√©rale √©lev√©e",
                "action": "Semaine de d√©charge recommand√©e (r√©duire volume de 40%)"
            })
        
        return suggestions
--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\backend\models.py ---
--- Nom du fichier: models.py ---
--- Contenu ---
# ===== backend/models.py =====
from sqlalchemy import Column, Integer, String, Float, DateTime, ForeignKey, JSON, Boolean, Text
from sqlalchemy.orm import relationship
from datetime import datetime
from backend.database import Base


class User(Base):
    __tablename__ = "users"
    
    id = Column(Integer, primary_key=True, index=True)
    name = Column(String, nullable=False)
    birth_date = Column(DateTime)
    height = Column(Float)  # en cm
    weight = Column(Float)  # en kg
    experience_level = Column(String)
    goals = Column(JSON)
    equipment_config = Column(JSON)  # Structure compl√®te nouvelle
    created_at = Column(DateTime, default=datetime.utcnow)
    
    # AJOUTER cascade="all, delete-orphan" √† toutes les relations
    workouts = relationship("Workout", back_populates="user", cascade="all, delete-orphan")
    programs = relationship("Program", back_populates="user", cascade="all, delete-orphan")
    commitment = relationship("UserCommitment", back_populates="user", uselist=False, cascade="all, delete-orphan")
    adaptive_targets = relationship("AdaptiveTargets", back_populates="user", cascade="all, delete-orphan")

class Exercise(Base):
    __tablename__ = "exercises"
    
    id = Column(Integer, primary_key=True, index=True)
    name_fr = Column(String, nullable=False)
    name_eng = Column(String, nullable=False)
    equipment = Column(JSON)  # ["barre_olympique", "halteres"]
    level = Column(String)
    body_part = Column(String)
    sets_reps = Column(JSON)
    equipment_specs = Column(JSON)  # {"barbell_count": 1, "dumbbell_count": 2}
    progression_metadata = Column(JSON)  # M√©tadonn√©es de progression
    muscle_groups = Column(JSON)  # Groupes musculaires primaires/secondaires
    fatigue_profile = Column(JSON)  # Profil de fatigue
    recovery_hours = Column(Integer)  # Heures de r√©cup√©ration
    injury_risk_zones = Column(JSON)  # Zones √† risque de blessure
    can_superset_with = Column(JSON)  # Exercices compatibles en superset

class Workout(Base):
    __tablename__ = "workouts"
    
    id = Column(Integer, primary_key=True, index=True)
    user_id = Column(Integer, ForeignKey("users.id"))
    type = Column(String, default="free_time")
    status = Column(String, default="started")  # started, paused, completed, abandoned
    paused_at = Column(DateTime, nullable=True)
    total_pause_duration = Column(Integer, default=0)  # en secondes
    created_at = Column(DateTime, default=datetime.utcnow)
    completed_at = Column(DateTime, nullable=True)
    notes = Column(Text, nullable=True)
    
    user = relationship("User", back_populates="workouts")
    sets = relationship("Set", back_populates="workout", cascade="all, delete-orphan")

class Set(Base):
    __tablename__ = "sets"
    
    id = Column(Integer, primary_key=True, index=True)
    workout_id = Column(Integer, ForeignKey("workouts.id"))
    exercise_id = Column(Integer, ForeignKey("exercises.id"))
    set_number = Column(Integer)
    target_reps = Column(Integer)
    actual_reps = Column(Integer)
    weight = Column(Float)
    rest_time = Column(Integer)
    fatigue_level = Column(Integer)
    perceived_exertion = Column(Integer)
    completed_at = Column(DateTime, default=datetime.utcnow)
    skipped = Column(Boolean, default=False)
    
    workout = relationship("Workout", back_populates="sets")

class Program(Base):
    __tablename__ = "programs"
    
    id = Column(Integer, primary_key=True, index=True)
    user_id = Column(Integer, ForeignKey("users.id"))
    name = Column(String, nullable=False)
    duration_weeks = Column(Integer, nullable=False)
    frequency = Column(Integer, nullable=False)  # jours par semaine
    created_at = Column(DateTime, default=datetime.utcnow)
    is_active = Column(Boolean, default=True)
    
    user = relationship("User", back_populates="programs")
    program_days = relationship("ProgramDay", back_populates="program", cascade="all, delete-orphan")

class ProgramDay(Base):
    __tablename__ = "program_days"
    
    id = Column(Integer, primary_key=True, index=True)
    program_id = Column(Integer, ForeignKey("programs.id"))
    week_number = Column(Integer, nullable=False)
    day_number = Column(Integer, nullable=False)
    muscle_group = Column(String, nullable=False)
    
    program = relationship("Program", back_populates="program_days")
    exercises = relationship("ProgramExercise", back_populates="program_day", cascade="all, delete-orphan")

class ProgramExercise(Base):
    __tablename__ = "program_exercises"
    
    id = Column(Integer, primary_key=True, index=True)
    program_day_id = Column(Integer, ForeignKey("program_days.id"))
    exercise_id = Column(Integer, ForeignKey("exercises.id"))
    sets = Column(Integer, nullable=False)
    target_reps = Column(Integer, nullable=False)
    rest_time = Column(Integer, nullable=False)
    order_index = Column(Integer, nullable=False)
    predicted_weight = Column(Float, nullable=True)
    
    program_day = relationship("ProgramDay", back_populates="exercises")
    exercise = relationship("Exercise")

class UserCommitment(Base):
    """L'engagement initial de l'utilisateur"""
    __tablename__ = "user_commitments"
    
    user_id = Column(Integer, ForeignKey("users.id"), primary_key=True)
    sessions_per_week = Column(Integer, nullable=False)
    focus_muscles = Column(JSON)  # {"Pectoraux": "priority", "Jambes": "maintain"}
    time_per_session = Column(Integer)  # Minutes moyennes souhait√©es
    created_at = Column(DateTime, default=datetime.utcnow)
    updated_at = Column(DateTime, default=datetime.utcnow, onupdate=datetime.utcnow)
    
    user = relationship("User", back_populates="commitment")

class AdaptiveTargets(Base):
    """Objectifs glissants auto-ajust√©s sur fen√™tre de 7 jours"""
    __tablename__ = "adaptive_targets"
    
    id = Column(Integer, primary_key=True, index=True)
    user_id = Column(Integer, ForeignKey("users.id"))
    muscle_group = Column(String, nullable=False)
    target_volume = Column(Float)  # Volume optimal calcul√©
    current_volume = Column(Float, default=0)  # Volume r√©alis√© (fen√™tre 7j)
    recovery_debt = Column(Float, default=0)  # Fatigue accumul√©e
    last_trained = Column(DateTime, nullable=True)
    adaptation_rate = Column(Float, default=1.0)  # Vitesse d'adaptation
    updated_at = Column(DateTime, default=datetime.utcnow, onupdate=datetime.utcnow)
    
    user = relationship("User", back_populates="adaptive_targets")
--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\backend\routes.py ---
--- Nom du fichier: routes.py ---
--- Contenu ---
# ===== backend/routes.py =====
from fastapi import APIRouter, Depends, HTTPException
from sqlalchemy.orm import Session
from typing import List, Optional
from backend.database import get_db
from backend.models import User, Exercise, Workout, Set
from backend.ml_engine import FitnessMLEngine
from backend.schemas import UserCreate, WorkoutCreate, SetCreate, ProgramGenerationRequest, ProgramCreate, ProgramDayBase, ProgramExerciseBase
from backend.schemas import UserCommitmentCreate, UserCommitmentResponse, AdaptiveTargetsResponse, TrajectoryAnalysis
from backend.models import UserCommitment, AdaptiveTargets
from backend.ml_engine import RecoveryTracker, VolumeOptimizer, SessionBuilder, ProgressionAnalyzer, RealTimeAdapter
from datetime import datetime
import logging
logger = logging.getLogger(__name__)


router = APIRouter()

@router.post("/api/users/{user_id}/program")
async def generate_program(
    user_id: int, 
    request: ProgramGenerationRequest,
    db: Session = Depends(get_db)
):
    user = db.query(User).filter(User.id == user_id).first()
    if not user:
        raise HTTPException(status_code=404, detail="User not found")
    
    ml_engine = FitnessMLEngine(db)

    logger = logging.getLogger(__name__)

    try:
        program = ml_engine.generate_adaptive_program(user, request.weeks, request.frequency)
    except Exception as e:
        logger.error(f"Program generation failed for user {user_id}: {str(e)}")
        raise HTTPException(status_code=500, detail="Program generation failed")
    
    # Retourner uniquement le programme g√©n√©r√© pour l'instant
    # La sauvegarde sera g√©r√©e c√¥t√© frontend
    return {"program": program}

@router.get("/api/users/{user_id}/injury-risk")
async def check_injury_risk(user_id: int, db: Session = Depends(get_db)):
    user = db.query(User).filter(User.id == user_id).first()
    if not user:
        raise HTTPException(status_code=404, detail="User not found")
    
    ml_engine = FitnessMLEngine(db)
    risk_analysis = ml_engine.analyze_injury_risk(user)
    
    return risk_analysis

@router.post("/api/workouts/{workout_id}/sets/{set_id}/adjust")
async def adjust_workout(
    workout_id: int, 
    set_id: int,
    remaining_sets: int,
    db: Session = Depends(get_db)
):
    workout = db.query(Workout).filter(Workout.id == workout_id).first()
    current_set = db.query(Set).filter(Set.id == set_id).first()
    
    if not workout or not current_set:
        raise HTTPException(status_code=404, detail="Workout or set not found")
    
    ml_engine = FitnessMLEngine(db)
    adjustments = ml_engine.adjust_workout_in_progress(
        workout.user,
        current_set,
        remaining_sets
    )
    
    return adjustments

# ========== ENDPOINTS SYST√àME ADAPTATIF ==========

@router.post("/api/users/{user_id}/commitment")
async def create_user_commitment(
    user_id: int,
    commitment: UserCommitmentCreate,
    db: Session = Depends(get_db)
):
    """Cr√©er ou mettre √† jour l'engagement utilisateur"""
    user = db.query(User).filter(User.id == user_id).first()
    if not user:
        raise HTTPException(status_code=404, detail="User not found")
    
    # V√©rifier si un engagement existe d√©j√†
    existing = db.query(UserCommitment).filter(
        UserCommitment.user_id == user_id
    ).first()
    
    if existing:
        # Mettre √† jour
        for key, value in commitment.dict().items():
            setattr(existing, key, value)
        existing.updated_at = datetime.utcnow()
    else:
        # Cr√©er nouveau
        new_commitment = UserCommitment(
            user_id=user_id,
            **commitment.dict()
        )
        db.add(new_commitment)
    
    db.commit()
    
    # Initialiser les targets adaptatifs
    volume_optimizer = VolumeOptimizer(db)
    muscles = ["Pectoraux", "Dos", "Delto√Ødes", "Jambes", "Bras", "Abdominaux"]
    
    for muscle in muscles:
        # V√©rifier si existe d√©j√†
        target = db.query(AdaptiveTargets).filter(
            AdaptiveTargets.user_id == user_id,
            AdaptiveTargets.muscle_group == muscle
        ).first()
        
        if not target:
            target = AdaptiveTargets(
                user_id=user_id,
                muscle_group=muscle,
                target_volume=volume_optimizer.calculate_optimal_volume(user, muscle),
                current_volume=0,
                recovery_debt=0,
                adaptation_rate=1.0
            )
            db.add(target)
    
    db.commit()
    
    return {"message": "Commitment created/updated successfully"}

@router.get("/api/users/{user_id}/commitment", response_model=UserCommitmentResponse)
async def get_user_commitment(user_id: int, db: Session = Depends(get_db)):
    """R√©cup√©rer l'engagement utilisateur"""
    commitment = db.query(UserCommitment).filter(
        UserCommitment.user_id == user_id
    ).first()
    
    if not commitment:
        raise HTTPException(status_code=404, detail="No commitment found")
    
    return commitment

@router.get("/api/users/{user_id}/adaptive-targets", response_model=List[AdaptiveTargetsResponse])
async def get_adaptive_targets(user_id: int, db: Session = Depends(get_db)):
    """R√©cup√©rer les objectifs adaptatifs"""
    targets = db.query(AdaptiveTargets).filter(
        AdaptiveTargets.user_id == user_id
    ).all()
    
    return targets

@router.get("/api/users/{user_id}/trajectory", response_model=TrajectoryAnalysis)
async def get_trajectory_analysis(user_id: int, db: Session = Depends(get_db)):
    """Analyser la trajectoire de progression"""
    user = db.query(User).filter(User.id == user_id).first()
    if not user:
        raise HTTPException(status_code=404, detail="User not found")
    
    analyzer = ProgressionAnalyzer(db)
    analysis = analyzer.get_trajectory_status(user)
    
    return analysis

@router.post("/api/users/{user_id}/adaptive-workout")  # URL corrig√©e
async def generate_adaptive_workout(
    user_id: int,
    request: dict,  # Chang√© pour accepter le JSON
    db: Session = Depends(get_db)
):
    """G√©n√©rer une s√©ance adaptative bas√©e sur l'√©tat actuel"""
    user = db.query(User).filter(User.id == user_id).first()
    if not user:
        raise HTTPException(status_code=404, detail="User not found")
    
    # Extraire le temps du request
    time_available = int(request.get("time_available", 60))
    
    # Analyser l'√©tat actuel
    recovery_tracker = RecoveryTracker(db)
    volume_optimizer = VolumeOptimizer(db)
    session_builder = SessionBuilder(db)
    
    # D√©terminer quels muscles entra√Æner
    muscle_readiness = {}
    volume_deficits = volume_optimizer.get_volume_deficit(user)
    
    for muscle in ["Pectoraux", "Dos", "Delto√Ødes", "Jambes", "Bras", "Abdominaux"]:
        readiness = recovery_tracker.get_muscle_readiness(muscle, user)
        deficit = volume_deficits.get(muscle, 0)
        
        # Score combin√© (r√©cup√©ration + besoin de volume)
        priority_score = readiness * 0.4 + deficit * 0.6
        muscle_readiness[muscle] = priority_score
    
    # S√©lectionner les 2-3 meilleurs muscles
    sorted_muscles = sorted(muscle_readiness.items(), key=lambda x: x[1], reverse=True)
    selected_muscles = [m[0] for m in sorted_muscles[:3] if m[1] > 0.3]
    
    if not selected_muscles:
        # Fallback : prendre les plus repos√©s
        selected_muscles = [m[0] for m in sorted_muscles[:2]]
    
    # Construire la s√©ance
    workout = session_builder.build_session(
        muscles=selected_muscles,
        time_budget=int(time_available),  # Forcer int
        user=user
    )
    
    # Calculer la dur√©e avec v√©rification
    if workout and len(workout) > 0:
        # Temps par s√©rie (30s) + repos, multipli√© par le nombre de s√©ries
        estimated_duration = sum(
            ex.get("sets", 3) * (30 + ex.get("rest_time", 90)) 
            for ex in workout
        ) / 60
    else:
        # Estimation par d√©faut bas√©e sur le temps demand√©
        estimated_duration = time_available * 0.8  # 80% du temps disponible
        
    return {
        "muscles": selected_muscles,
        "exercises": workout,
        "estimated_duration": int(max(1, estimated_duration)),  # Au minimum 1 minute
        "readiness_scores": {m: round(s, 2) for m, s in muscle_readiness.items()}
    }

@router.post("/api/workouts/{workout_id}/complete-adaptive")
async def complete_adaptive_workout(
    workout_id: int,
    db: Session = Depends(get_db)
):
    """Marquer une s√©ance comme termin√©e et adapter les objectifs"""
    workout = db.query(Workout).filter(Workout.id == workout_id).first()
    if not workout:
        raise HTTPException(status_code=404, detail="Workout not found")
    
    # Marquer comme compl√©t√©
    workout.status = "completed"
    workout.completed_at = datetime.utcnow()
    db.commit()
    
    # Adapter en temps r√©el
    adapter = RealTimeAdapter(db)
    adapter.handle_session_completed(workout)
    
    return {"message": "Workout completed and targets adapted"}

@router.post("/api/users/{user_id}/skip-session")
async def skip_session(
    user_id: int,
    reason: Optional[str] = None,
    db: Session = Depends(get_db)
):
    """G√©rer une s√©ance rat√©e intelligemment"""
    user = db.query(User).filter(User.id == user_id).first()
    if not user:
        raise HTTPException(status_code=404, detail="User not found")
    
    adapter = RealTimeAdapter(db)
    adapter.handle_session_skipped(user, reason)
    
    # G√©n√©rer un message encourageant
    reminder = adapter.get_smart_reminder(user)
    
    return {
        "message": "Session skipped handled",
        "reminder": reminder
    }

@router.get("/api/programs/{program_id}/adjustments")
async def get_program_adjustments(
    program_id: int,
    user_id: int,
    db: Session = Depends(get_db)
):
    """Obtenir les suggestions d'ajustement pour un programme"""
    ml_engine = FitnessMLEngine(db)
    
    try:
        suggestions = ml_engine.suggest_program_adjustments(user_id, program_id)
        return suggestions
    except Exception as e:
        logger.error(f"Error getting adjustments: {str(e)}")
        raise HTTPException(status_code=500, detail="Analysis failed")

@router.post("/api/users/{user_id}/init-adaptive-targets")
async def initialize_adaptive_targets(
    user_id: int,
    db: Session = Depends(get_db)
):
    """Initialise les targets adaptatifs pour un utilisateur"""
    # V√©rifier si d√©j√† existants
    existing = db.query(AdaptiveTargets).filter(
        AdaptiveTargets.user_id == user_id
    ).first()
    
    if existing:
        return {"status": "already_initialized"}
    
    # Cr√©er les targets pour chaque muscle
    muscles = ["Pectoraux", "Dos", "Delto√Ødes", "Jambes", "Bras", "Abdominaux"]
    for muscle in muscles:
        target = AdaptiveTargets(
            user_id=user_id,
            muscle_group=muscle,
            target_volume=1000.0,  # Volume de base
            current_volume=0.0,
            recovery_debt=0.0,
            adaptation_rate=1.0
        )
        db.add(target)
    
    db.commit()
    return {"status": "initialized"}
--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\backend\schemas.py ---
--- Nom du fichier: schemas.py ---
--- Contenu ---
# ===== backend/schemas.py =====
from pydantic import BaseModel, field_validator
from typing import List, Optional, Dict, Any
from datetime import datetime

# STRUCTURES √âQUIPEMENT REFONDUES
class BarreConfig(BaseModel):
    available: bool = False
    count: int = 0
    weight: float = 20.0  # Poids par d√©faut en kg

class DisquesConfig(BaseModel):
    available: bool = False
    weights: Dict[str, int] = {}  # {"5.0": 4, "10.0": 2} - poids en kg -> nombre

class DumbbellsConfig(BaseModel):
    available: bool = False
    weights: List[float] = []  # Liste des poids disponibles

class BancConfig(BaseModel):
    available: bool = False
    inclinable_haut: bool = False
    inclinable_bas: bool = False

class ElastiquesBand(BaseModel):
    color: str
    resistance: float  # R√©sistance exacte en kg
    count: int = 1

class ElastiquesConfig(BaseModel):
    available: bool = False
    bands: List[ElastiquesBand] = []

class KettlebellConfig(BaseModel):
    available: bool = False
    weights: List[float] = []  # Liste des poids de kettlebells

class BarreTractionConfig(BaseModel):
    available: bool = False

class LestConfig(BaseModel):
    available: bool = False
    weights: List[float] = []  # Liste des poids disponibles

class AutresEquipmentConfig(BaseModel):
    kettlebell: KettlebellConfig = KettlebellConfig()
    barre_traction: BarreTractionConfig = BarreTractionConfig()
    lest_corps: LestConfig = LestConfig()
    lest_chevilles: LestConfig = LestConfig()
    lest_poignets: LestConfig = LestConfig()

class EquipmentConfig(BaseModel):
    barres: Dict[str, BarreConfig] = {
        "olympique": BarreConfig(weight=20.0),
        "ez": BarreConfig(weight=10.0),
        "courte": BarreConfig(weight=2.5)
    }
    disques: DisquesConfig = DisquesConfig()
    dumbbells: DumbbellsConfig = DumbbellsConfig()
    banc: BancConfig = BancConfig()
    elastiques: ElastiquesConfig = ElastiquesConfig()
    autres: AutresEquipmentConfig = AutresEquipmentConfig()

# SCHEMAS EXERCICES
class ExerciseSpecs(BaseModel):
    barbell_count: Optional[int] = None  # Nombre de barres n√©cessaires
    dumbbell_count: Optional[int] = None  # Nombre d'halt√®res n√©cessaires
    requires_rack: Optional[bool] = False
    requires_incline: Optional[bool] = False
    requires_decline: Optional[bool] = False
    min_weight: Optional[float] = None
    max_weight: Optional[float] = None


# SCHEMAS STATS
class UserStats(BaseModel):
    total_workouts: int
    week_streak: int
    last_workout: Optional[str]
    total_weight_lifted: float
    favorite_exercises: List[Dict[str, Any]]
    progress_data: Dict[str, List[Dict[str, Any]]]


# SCHEMAS UTILISATEUR
class UserCreate(BaseModel):
    name: str
    birth_date: datetime
    height: float
    weight: float
    experience_level: str
    goals: List[str]
    equipment_config: EquipmentConfig

class UserResponse(BaseModel):
    id: int
    name: str
    birth_date: datetime
    experience_level: str
    goals: List[str]
    equipment_config: EquipmentConfig
    created_at: datetime
    
    class Config:
        from_attributes = True

class ExerciseResponse(BaseModel):
    id: int
    name_fr: str
    name_eng: str
    equipment: List[str]
    equipment_specs: Optional[ExerciseSpecs] = None
    level: str
    body_part: str
    sets_reps: List[dict]
    
    class Config:
        from_attributes = True

# SCHEMAS WORKOUTS
class WorkoutCreate(BaseModel):
    user_id: int
    type: str = "free_time"
    initial_exercise_id: Optional[int] = None  # Premier exercice pr√©vu

class SetCreate(BaseModel):
    workout_id: int
    exercise_id: int
    set_number: int
    target_reps: int
    actual_reps: int
    weight: float
    rest_time: int
    fatigue_level: int
    perceived_exertion: int
    skipped: bool = False
    # Nouveaux champs optionnels
    is_bodyweight: Optional[bool] = False
    is_time_based: Optional[bool] = False
    body_weight: Optional[float] = None

class SetRestTimeUpdate(BaseModel):
    rest_time: int

class SetResponse(BaseModel):
    id: int
    workout_id: int
    exercise_id: int
    set_number: int
    target_reps: int
    actual_reps: int
    weight: float
    rest_time: int
    fatigue_level: int
    perceived_exertion: int
    completed_at: datetime
    skipped: bool
    
    class Config:
        from_attributes = True

class WorkoutResponse(BaseModel):
    id: int
    user_id: int
    type: str
    status: str
    paused_at: Optional[datetime]
    total_pause_duration: int
    created_at: datetime
    completed_at: Optional[datetime]
    sets: List[SetResponse] = []
    
    class Config:
        from_attributes = True

class ProgramGenerationRequest(BaseModel):
    weeks: int = 4
    frequency: Optional[int] = 3  # Le frontend envoie aussi frequency

# SCHEMAS PROGRAMMES
class ProgramExerciseBase(BaseModel):
    exercise_id: int
    sets: int
    target_reps: int
    rest_time: int
    order_index: int
    predicted_weight: Optional[float] = None

class ProgramDayBase(BaseModel):
    week_number: int
    day_number: int
    muscle_group: str
    exercises: List[ProgramExerciseBase]

class ProgramCreate(BaseModel):
    name: str
    duration_weeks: int
    frequency: int
    program_days: List[ProgramDayBase]

class ProgramExerciseResponse(BaseModel):
    id: int
    exercise_id: int
    exercise: ExerciseResponse
    sets: int
    target_reps: int
    rest_time: int
    order_index: int
    predicted_weight: Optional[float]
    
    class Config:
        from_attributes = True

class ProgramDayResponse(BaseModel):
    id: int
    week_number: int
    day_number: int
    muscle_group: str
    exercises: List[ProgramExerciseResponse]
    
    class Config:
        from_attributes = True

class ProgramResponse(BaseModel):
    id: int
    user_id: int
    name: str
    duration_weeks: int
    frequency: int
    created_at: datetime
    is_active: bool
    program_days: List[ProgramDayResponse]
    
    class Config:
        from_attributes = True

# SCHEMAS ENGAGEMENT ADAPTATIF
class UserCommitmentCreate(BaseModel):
    sessions_per_week: int
    focus_muscles: Dict[str, str]
    time_per_session: int

class UserCommitmentResponse(BaseModel):
    user_id: int
    sessions_per_week: int
    focus_muscles: Dict[str, str]
    time_per_session: int
    created_at: datetime
    updated_at: datetime
    
    class Config:
        from_attributes = True

class AdaptiveTargetsResponse(BaseModel):
    id: int
    muscle_group: str
    target_volume: float
    current_volume: float
    recovery_debt: float
    last_trained: Optional[datetime]
    adaptation_rate: float
    
    class Config:
        from_attributes = True

class TrajectoryAnalysis(BaseModel):
    on_track: bool
    sessions_this_week: int
    sessions_target: int
    volume_adherence: float
    consistency_score: float
    muscle_balance: Dict[str, float]
    insights: List[str]
--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\backend\start.sh ---
--- Nom du fichier: start.sh ---
--- Contenu ---
#!/bin/bash
gunicorn backend.main:app --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:$PORT
--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\backend\__pycache__\database.cpython-313.pyc ---
--- Nom du fichier: database.cpython-313.pyc ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\backend\__pycache__\models.cpython-313.pyc ---
--- Nom du fichier: models.cpython-313.pyc ---
--- Contenu ---
[ERREUR: Impossible de d√©coder le fichier en tant que texte (peut √™tre un fichier binaire).]

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\frontend\app-api.js ---
--- Nom du fichier: app-api.js ---
--- Contenu ---
// ===== GESTIONNAIRE API =====
// Ce fichier centralise tous les appels API avec gestion d'erreurs
// Pas de complexit√© inutile, juste des fonctions async/await simples

import { 
    currentUser,         
    setAllExercises, 
    setCurrentWorkout,
    setCurrentUser,
    setUserCommitment,
    setAdaptiveTargets,
    setTrajectoryAnalysis,
    setCurrentAdaptiveWorkout,
    setUserPrograms 
} from './app-state.js';
import { showToast } from './app-ui.js';

// Configuration de base pour les requ√™tes
const API_BASE_URL = '/api';
const REQUEST_TIMEOUT = 30000; // 30 secondes

// Variables pour la gestion de session
let isRefreshing = false;
let refreshSubscribers = [];

// Fonction helper pour les timeouts
function fetchWithTimeout(url, options = {}, timeout = REQUEST_TIMEOUT) {
    return Promise.race([
        fetch(url, options),
        new Promise((_, reject) => 
            setTimeout(() => reject(new Error('Timeout de la requ√™te')), timeout)
        )
    ]);
}

// Fonction helper pour la gestion des tokens
function onRefreshed(token) {
    refreshSubscribers.forEach(callback => callback(token));
    refreshSubscribers = [];
}

function addRefreshSubscriber(callback) {
    refreshSubscribers.push(callback);
}

async function refreshAuthToken() {
    if (isRefreshing) {
        return new Promise((resolve) => {
            addRefreshSubscriber(() => resolve());
        });
    }
    
    isRefreshing = true;
    
    try {
        const refreshToken = localStorage.getItem('refreshToken');
        if (!refreshToken) throw new Error('No refresh token');
        
        const response = await fetch('/api/auth/refresh', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ refresh_token: refreshToken })
        });
        
        if (response.ok) {
            const data = await response.json();
            localStorage.setItem('authToken', data.access_token);
            if (data.refresh_token) {
                localStorage.setItem('refreshToken', data.refresh_token);
            }
            onRefreshed(data.access_token);
            return data.access_token;
        } else {
            throw new Error('Failed to refresh token');
        }
    } catch (error) {
        console.error('Token refresh failed:', error);
        // Rediriger vers login si le refresh √©choue
        localStorage.removeItem('authToken');
        localStorage.removeItem('refreshToken');
        localStorage.removeItem('userId');
        if (window.showProfileForm) {
            window.showProfileForm();
        }
        throw error;
    } finally {
        isRefreshing = false;
    }
}

// Fonction g√©n√©rique pour les appels API avec retry
async function apiCall(endpoint, options = {}, retries = 3) {
    let lastError;
    
    for (let i = 0; i < retries; i++) {
        try {
            // Ajouter le token d'authentification si disponible
            const authToken = localStorage.getItem('authToken');
            const headers = {
                'Content-Type': 'application/json',
                ...options.headers
            };
            
            if (authToken) {
                headers['Authorization'] = `Bearer ${authToken}`;
            }
            
            const response = await fetchWithTimeout(`${API_BASE_URL}${endpoint}`, {
                ...options,
                headers
            });
            
            // G√©rer l'erreur 401 (non autoris√©)
            if (response.status === 401 && authToken) {
                try {
                    await refreshAuthToken();
                    // R√©essayer avec le nouveau token
                    const newToken = localStorage.getItem('authToken');
                    headers['Authorization'] = `Bearer ${newToken}`;
                    
                    const retryResponse = await fetchWithTimeout(`${API_BASE_URL}${endpoint}`, {
                        ...options,
                        headers
                    });
                    
                    if (!retryResponse.ok) {
                        throw new Error(`API Error: ${retryResponse.status}`);
                    }
                    
                    return await retryResponse.json();
                } catch (refreshError) {
                    throw new Error('Session expir√©e');
                }
            }
            
            if (!response.ok) {
                const error = await response.json().catch(() => ({ detail: 'Erreur inconnue' }));
                throw new Error(error.detail || `Erreur HTTP ${response.status}`);
            }
            
            return await response.json();
        } catch (error) {
            lastError = error;
            console.error(`Tentative ${i + 1}/${retries} √©chou√©e:`, error);
            
            // Ne pas r√©essayer pour certaines erreurs
            if (error.message.includes('401') || error.message.includes('403') || error.message.includes('Session expir√©e')) {
                break;
            }
            
            // Attendre avant de r√©essayer (backoff exponentiel)
            if (i < retries - 1) {
                await new Promise(resolve => setTimeout(resolve, Math.pow(2, i) * 1000));
            }
        }
    }
    
    throw lastError;
}

// ===== USERS API =====
async function saveUser(userData) {
    try {
        const user = await apiCall('/users/', {
            method: 'POST',
            body: JSON.stringify(userData)
        });
        return user;
    } catch (error) {
        console.error('Erreur serveur:', error);
        
        // G√©rer les erreurs de validation sp√©cifiques
        if (error.message.includes('422')) {
            showToast('Donn√©es invalides, v√©rifiez le formulaire', 'error');
        } else {
            showToast(error.message || 'Erreur lors de la sauvegarde', 'error');
        }
        return null;
    }
}

async function loadUserFromAPI(userId) {
    try {
        return await apiCall(`/users/${userId}`);
    } catch (error) {
        console.error('Erreur chargement utilisateur:', error);
        return null;
    }
}

async function getUserStats(userId) {
    try {
        return await apiCall(`/users/${userId}/stats`);
    } catch (error) {
        console.error('Erreur chargement stats:', error);
        return null;
    }
}

// ===== EXERCISES API =====
async function loadExercises() {
    try {
        const response = await fetch('/api/exercises/');
        if (response.ok) {
            const exercises = await response.json();
            setAllExercises(exercises);
            console.log(`${exercises.length} exercices charg√©s`);
            return exercises;
        } else {
            console.error('Erreur chargement exercices:', response.status);
            return [];
        }
    } catch (error) {
        console.error('Erreur chargement exercices:', error);
        return [];
    }
}

async function getSuggestedWeight(userId, exerciseId) {
    try {
        const response = await fetch(`/api/users/${userId}/program/next-weight/${exerciseId}`);
        if (response.ok) {
            const data = await response.json();
            return data.weight;
        }
    } catch (error) {
        console.error('Erreur suggestion poids:', error);
    }
    return null;
}

// R√©cup√©rer les suggestions d'ajustement ML (poids + reps)
async function getWorkoutAdjustments(workoutId, setId, remainingSets) {
    console.log('getWorkoutAdjustments appel√© avec:', {
        workoutId,
        setId,
        remainingSets
    });
    
    try {
        // Le backend attend remaining_sets comme param√®tre de query
        const response = await fetch(`/api/workouts/${workoutId}/sets/${setId}/adjust?remaining_sets=${remainingSets}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
            // Pas de body, remaining_sets est dans l'URL
        });
        
        if (!response.ok) {
            const errorText = await response.text();
            console.error('Erreur adjust workout:', {
                status: response.status,
                statusText: response.statusText,
                error: errorText
            });
            
            // Si c'est une 422, nettoyer l'ID invalide
            if (response.status === 422) {
                localStorage.removeItem('lastCompletedSetId');
            }
            
            return null;
        }
        
        return await response.json();
    } catch (error) {
        console.warn('Ajustements ML non disponibles:', error);
        return null;
    }
}

// ===== WORKOUTS API =====
async function createWorkout(userId, type) {
    try {
        const response = await fetch('/api/workouts/', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                user_id: userId,
                type: type
            })
        });
        
        if (response.ok) {
            return await response.json();
        } else {
            const error = await response.json();
            showToast(error.detail || 'Erreur lors du d√©marrage', 'error');
            return null;
        }
    } catch (error) {
        console.error('Erreur d√©marrage s√©ance:', error);
        showToast('Erreur de connexion au serveur', 'error');
        return null;
    }
}

async function getActiveWorkout(userId) {
    try {
        const response = await fetch(`/api/users/${userId}/active-workout`);
        if (response.ok) {
            const data = await response.json();
            return data.active_workout;
        }
    } catch (error) {
        console.error('Erreur v√©rification workout actif:', error);
    }
    return null;
}

async function getWorkoutStatus(workoutId) {
    try {
        const response = await fetch(`/api/workouts/${workoutId}/status`);
        if (response.ok) {
            return await response.json();
        }
    } catch (error) {
        console.error('Erreur status workout:', error);
    }
    return null;
}

async function pauseWorkoutAPI(workoutId) {
    try {
        const response = await fetch(`/api/workouts/${workoutId}/pause`, {
            method: 'PUT'
        });
        if (response.ok) {
            return await response.json();
        }
    } catch (error) {
        console.error('Erreur pause workout:', error);
    }
    return null;
}

async function resumeWorkoutAPI(workoutId) {
    try {
        const response = await fetch(`/api/workouts/${workoutId}/resume`, {
            method: 'PUT'
        });
        if (response.ok) {
            return await response.json();
        }
    } catch (error) {
        console.error('Erreur reprise workout:', error);
    }
    return null;
}

async function completeWorkoutAPI(workoutId) {
    try {
        const response = await fetch(`/api/workouts/${workoutId}/complete`, {
            method: 'PUT'
        });
        return response.ok;
    } catch (error) {
        console.error('Erreur fin workout:', error);
        return false;
    }
}

async function abandonWorkoutAPI(workoutId) {
    try {
        await fetch(`/api/workouts/${workoutId}/abandon`, {
            method: 'PUT'
        });
    } catch (error) {
        console.error('Erreur abandon workout:', error);
    }
}

// ===== PROGRAMMES =====
export async function saveProgram(programData) {
    try {
        const response = await fetch(`/api/programs/?user_id=${currentUser.id}`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(programData)
        });
        
        if (!response.ok) throw new Error('Erreur sauvegarde programme');
        
        const result = await response.json();
        showToast('Programme sauvegard√© !', 'success');
        return result;
    } catch (error) {
        console.error('Erreur sauvegarde programme:', error);
        showToast('Erreur lors de la sauvegarde du programme', 'error');
        return null;
    }
}

export async function loadUserPrograms(userId) {
    try {
        const response = await fetch(`/api/users/${userId}/programs`);
        if (!response.ok) throw new Error('Erreur chargement programmes');
        
        const programs = await response.json();
        setUserPrograms(programs);
        return programs;
    } catch (error) {
        console.error('Erreur chargement programmes:', error);
        return [];
    }
}

export async function activateProgram(programId) {
    try {
        const response = await fetch(`/api/programs/${programId}/activate`, {
            method: 'PUT'
        });
        
        if (!response.ok) throw new Error('Erreur activation programme');
        
        showToast('Programme activ√© !', 'success');
        return true;
    } catch (error) {
        console.error('Erreur activation programme:', error);
        showToast('Erreur lors de l\'activation du programme', 'error');
        return false;
    }
}

async function getWorkoutHistory(userId) {
    try {
        const response = await fetch(`/api/workouts/${userId}/history`);
        if (response.ok) {
            return await response.json();
        }
    } catch (error) {
        console.error('Erreur chargement historique:', error);
    }
    return [];
}

async function checkFatigue(workoutId) {
    try {
        const response = await fetch(`/api/workouts/${workoutId}/fatigue-check`, {
            method: 'POST'
        });
        if (response.ok) {
            return await response.json();
        }
    } catch (error) {
        console.error('Erreur check fatigue:', error);
    }
    return null;
}

async function getMuscleDistribution(workoutId) {
    try {
        const response = await fetch(`/api/workouts/${workoutId}/muscle-summary`);
        if (response.ok) {
            return await response.json();
        }
    } catch (error) {
        console.error('Erreur chargement distribution:', error);
    }
    return null;
}

// ===== SETS API =====
async function createSet(setData) {
    try {
        const response = await fetch('/api/sets/', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(setData)
        });
        
        if (response.ok) {
            return await response.json();
        } else {
            // Gestion des erreurs sp√©cifiques
            if (response.status === 422) {
                console.error('Donn√©es de s√©rie invalides');
            }
            return null;
        }
    } catch (error) {
        console.error('Erreur cr√©ation set:', error);
        return null;
    }
}

async function updateSetRestTime(setId, restTime) {
    try {
        const response = await fetch(`/api/sets/${setId}/rest-time`, {
            method: 'PATCH',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ rest_time: restTime })
        });
        return response.ok;
    } catch (error) {
        console.error('Failed to update rest time:', error);
        return false;
    }
}

// ===== REST PERIODS API =====
async function createRestPeriod(restData) {
    try {
        const response = await fetch('/api/workouts/rest-periods/', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(restData)
        });
        return response.ok;
    } catch (error) {
        console.error('Erreur sync repos inter-exercices:', error);
        return false;
    }
}

// ========== API SYST√àME ADAPTATIF ==========

async function saveUserCommitment(userId, commitment) {
    try {
        const response = await fetch(`${API_BASE_URL}/users/${userId}/commitment`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(commitment)
        });
        
        if (!response.ok) throw new Error('Failed to save commitment');
        
        const data = await response.json();
        return data;
    } catch (error) {
        console.error('Error saving commitment:', error);
        showToast('Erreur lors de la sauvegarde des objectifs', 'error');
        throw error;
    }
}

async function getUserCommitment(userId) {
    try {
        const response = await fetch(`${API_BASE_URL}/users/${userId}/commitment`);
        
        if (response.status === 404) {
            return null;
        }
        
        if (!response.ok) throw new Error('Failed to get commitment');
        
        const data = await response.json();
        setUserCommitment(data);
        return data;
    } catch (error) {
        console.error('Error getting commitment:', error);
        return null;
    }
}

async function getAdaptiveTargets(userId) {
    try {
        const response = await fetch(`${API_BASE_URL}/users/${userId}/adaptive-targets`);
        
        if (!response.ok) throw new Error('Failed to get adaptive targets');
        
        const data = await response.json();
        setAdaptiveTargets(data);
        return data;
    } catch (error) {
        console.error('Error getting adaptive targets:', error);
        return [];
    }
}

async function getTrajectoryAnalysis(userId) {
    try {
        const response = await fetch(`${API_BASE_URL}/users/${userId}/trajectory`);
        
        if (!response.ok) {
            // Retourner des donn√©es par d√©faut au lieu de throw
            return {
                status: "error",
                on_track: false,
                sessions_this_week: 0,
                sessions_target: 0,
                volume_adherence: 0.0,
                consistency_score: 0.0,
                muscle_balance: {},
                insights: ["Donn√©es non disponibles"]
            };
        }
        
        const data = await response.json();
        setTrajectoryAnalysis(data);
        return data;
    } catch (error) {
        console.error('Error getting trajectory:', error);
        // Retourner des donn√©es par d√©faut
        return {
            status: "error",
            on_track: false,
            sessions_this_week: 0,
            sessions_target: 0,
            volume_adherence: 0.0,
            consistency_score: 0.0,
            muscle_balance: {},
            insights: ["Erreur de connexion"]
        };
    }
}

async function generateAdaptiveWorkout(userId, timeAvailable = 60) {
    try {
        const response = await fetch(
            `${API_BASE_URL}/users/${userId}/generate-adaptive-workout?time_available=${timeAvailable}`,
            {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                }
            }
        );
        
        if (!response.ok) throw new Error('Failed to generate adaptive workout');
        
        const data = await response.json();
        setCurrentAdaptiveWorkout(data);
        return data;
    } catch (error) {
        console.error('Error generating adaptive workout:', error);
        showToast('Erreur lors de la g√©n√©ration de la s√©ance', 'error');
        throw error;
    }
}

async function completeAdaptiveWorkout(workoutId) {
    try {
        const response = await fetch(
            `${API_BASE_URL}/workouts/${workoutId}/complete-adaptive`,
            {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                }
            }
        );
        
        if (!response.ok) throw new Error('Failed to complete adaptive workout');
        
        const data = await response.json();
        
        // Rafra√Æchir les donn√©es
        await getTrajectoryAnalysis(currentUser.id);
        await getAdaptiveTargets(currentUser.id);
        
        return data;
    } catch (error) {
        console.error('Error completing adaptive workout:', error);
        throw error;
    }
}

async function skipSession(userId, reason = null) {
    try {
        const response = await fetch(
            `${API_BASE_URL}/users/${userId}/skip-session`,
            {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ reason })
            }
        );
        
        if (!response.ok) throw new Error('Failed to skip session');
        
        const data = await response.json();
        
        // Afficher le rappel intelligent
        if (data.reminder) {
            showToast(data.reminder, 'info');
        }
        
        return data;
    } catch (error) {
        console.error('Error skipping session:', error);
        throw error;
    }
}

// Export pour les autres modules
export {
    saveUser,
    loadUserFromAPI,
    getUserStats,
    loadExercises,
    getSuggestedWeight,
    createWorkout,
    getActiveWorkout,
    getWorkoutStatus,
    pauseWorkoutAPI,
    resumeWorkoutAPI,
    completeWorkoutAPI,
    abandonWorkoutAPI,
    getWorkoutHistory,
    checkFatigue,
    getMuscleDistribution,
    createSet,
    updateSetRestTime,
    createRestPeriod,
    getWorkoutAdjustments,
    getUserCommitment,
    getAdaptiveTargets,
    getTrajectoryAnalysis,
    generateAdaptiveWorkout,
    completeAdaptiveWorkout,
    saveUserCommitment,
    skipSession
};

// Export des nouvelles fonctions du syst√®me adaptatif pour utilisation globale
window.saveUserCommitment = saveUserCommitment;
window.getUserCommitment = getUserCommitment;
window.getAdaptiveTargets = getAdaptiveTargets;
window.getTrajectoryAnalysis = getTrajectoryAnalysis;
window.generateAdaptiveWorkout = generateAdaptiveWorkout;
window.completeAdaptiveWorkout = completeAdaptiveWorkout;
window.skipSession = skipSession;
--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\frontend\app-charts.js ---
--- Nom du fichier: app-charts.js ---
--- Contenu ---
// ===== MODULE GRAPHIQUES ET VISUALISATIONS =====
// Ce fichier g√®re tous les graphiques de progression avec Chart.js

import { currentUser } from './app-state.js';

// V√©rifier que Chart.js est charg√©
if (typeof Chart === 'undefined') {
    console.error('Chart.js n\'est pas charg√© !');
}

// Configuration des graphiques
const chartColors = {
    primary: '#3b82f6',
    secondary: '#8b5cf6',
    success: '#10b981',
    warning: '#f59e0b',
    danger: '#ef4444',
    gray: '#6b7280'
};

const chartDefaults = {
    responsive: true,
    maintainAspectRatio: false,
    plugins: {
        legend: {
            labels: {
                color: '#e5e7eb',
                font: {
                    family: "'Inter', sans-serif"
                }
            }
        },
        tooltip: {
            backgroundColor: 'rgba(15, 23, 42, 0.9)',
            titleColor: '#f3f4f6',
            bodyColor: '#e5e7eb',
            borderColor: 'rgba(255, 255, 255, 0.1)',
            borderWidth: 1,
            cornerRadius: 8,
            padding: 12
        }
    },
    scales: {
        x: {
            grid: {
                color: 'rgba(255, 255, 255, 0.05)'
            },
            ticks: {
                color: '#9ca3af'
            }
        },
        y: {
            grid: {
                color: 'rgba(255, 255, 255, 0.05)'
            },
            ticks: {
                color: '#9ca3af'
            }
        }
    }
};

// Stockage des instances de graphiques
let charts = {};

// √âtat pour g√©rer l'initialisation
let chartsInitialized = false;
let isLoadingCharts = false;

// Fonction pour d√©truire TOUS les graphiques Chart.js
function destroyAllCharts() {
    // D√©truire nos r√©f√©rences
    Object.keys(charts).forEach(key => {
        if (charts[key]) {
            try {
                charts[key].destroy();
            } catch (e) {
                console.warn(`Erreur destruction graphique ${key}:`, e);
            }
            charts[key] = null;
        }
    });
    charts = {};
    
    // Nettoyer tous les canvas pour forcer Chart.js √† lib√©rer ses r√©f√©rences
    const canvasIds = ['progressionChart', 'muscleVolumeChart', 'fatigueChart', 'recordsChart'];
    canvasIds.forEach(id => {
        const canvas = document.getElementById(id);
        if (canvas) {
            const context = canvas.getContext('2d');
            if (context) {
                context.clearRect(0, 0, canvas.width, canvas.height);
            }
            // Forcer la r√©initialisation du canvas
            canvas.width = canvas.width;
        }
    });
    
    // Forcer Chart.js √† lib√©rer toutes ses instances
    if (window.Chart && Chart.instances) {
        Object.keys(Chart.instances).forEach(key => {
            try {
                Chart.instances[key].destroy();
            } catch (e) {
                // Ignorer les erreurs
            }
        });
    }
}

// Fonction utilitaire pour cr√©er un graphique en toute s√©curit√©
async function safeCreateChart(canvasId, config, chartKey) {
    const ctx = document.getElementById(canvasId);
    if (!ctx) {
        console.error(`Canvas ${canvasId} non trouv√©`);
        return null;
    }
    
    // S'assurer que l'ancien graphique est d√©truit
    if (charts[chartKey]) {
        try {
            charts[chartKey].destroy();
            charts[chartKey] = null;
        } catch (e) {
            console.warn(`Erreur destruction ${chartKey}:`, e);
        }
    }
    
    // Attendre un cycle de rendu
    await new Promise(resolve => requestAnimationFrame(resolve));
    
    try {
        // Cr√©er le nouveau graphique
        charts[chartKey] = new Chart(ctx, config);
        return charts[chartKey];
    } catch (error) {
        console.error(`Erreur cr√©ation graphique ${chartKey}:`, error);
        return null;
    }
}

// ===== GRAPHIQUE DE PROGRESSION SUR 30 JOURS =====
async function loadProgressionChart(exerciseId = null) {
    const params = exerciseId ? `?exercise_id=${exerciseId}` : '';

    try {
        const response = await fetch(`/api/users/${currentUser.id}/progression${params}`);
        
        if (!response.ok) {
            console.error(`Erreur API progression: ${response.status}`);
            return;
        }
        
        const contentType = response.headers.get("content-type");
        if (!contentType || !contentType.includes("application/json")) {
            console.error("La r√©ponse progression n'est pas du JSON");
            return;
        }
        
        const data = await response.json();

        if (!data.dates || data.dates.length === 0) {
            console.log("Pas de donn√©es de progression");
            const emptyData = {
                labels: ['Aucune donn√©e'],
                datasets: [{
                    label: 'Progression',
                    data: [0],
                    borderColor: chartColors.primary,
                    backgroundColor: 'rgba(59, 130, 246, 0.1)',
                    tension: 0.4,
                    fill: true
                }]
            };
            
            await safeCreateChart('progressionChart', {
                type: 'line',
                data: emptyData,
                options: {
                    ...chartDefaults,
                    plugins: {
                        ...chartDefaults.plugins,
                        title: {
                            display: true,
                            text: 'Aucune donn√©e disponible',
                            color: '#f3f4f6',
                            font: {
                                size: 16,
                                weight: 'bold'
                            }
                        }
                    }
                }
            }, 'progression');
            return;
        }

        const chartData = {
            labels: data.dates.map(d => new Date(d).toLocaleDateString('fr-FR', { day: 'numeric', month: 'short' })),
            datasets: [{
                label: '1RM estim√© (kg)',
                data: data.weights,
                borderColor: chartColors.primary,
                backgroundColor: 'rgba(59, 130, 246, 0.1)',
                tension: 0.4,
                fill: true
            }]
        };

        await safeCreateChart('progressionChart', {
            type: 'line',
            data: chartData,
            options: {
                ...chartDefaults,
                plugins: {
                    ...chartDefaults.plugins,
                    title: {
                        display: true,
                        text: 'Progression sur 30 jours',
                        color: '#f3f4f6',
                        font: {
                            size: 16,
                            weight: 'bold'
                        }
                    }
                }
            }
        }, 'progression');
    } catch (error) {
        console.error('Erreur chargement progression:', error);
    }
}

// ===== GRAPHIQUE VOLUME PAR MUSCLE =====
async function loadMuscleVolumeChart(period = 'week') {
    try {
        const response = await fetch(`/api/users/${currentUser.id}/muscle-volume?period=${period}`);
        
        if (!response.ok) {
            console.error(`Erreur API muscle-volume: ${response.status}`);
            return;
        }
        
        const respContentType = response.headers.get("content-type");
        if (!respContentType || !respContentType.includes("application/json")) {
            console.error("La r√©ponse muscle-volume n'est pas du JSON");
            return;
        }
        
        const data = await response.json();

        if (!data.volumes || Object.keys(data.volumes).length === 0) {
            console.log("Pas de donn√©es de volume musculaire");
            const emptyData = {
                labels: ['Aucune donn√©e'],
                datasets: [{
                    label: 'Volume par muscle',
                    data: [0],
                    backgroundColor: chartColors.primary,
                    borderWidth: 0
                }]
            };
            
            await safeCreateChart('muscleVolumeChart', {
                type: 'bar',
                data: emptyData,
                options: {
                    ...chartDefaults,
                    plugins: {
                        ...chartDefaults.plugins,
                        title: {
                            display: true,
                            text: 'Aucune donn√©e disponible',
                            color: '#f3f4f6',
                            font: {
                                size: 16,
                                weight: 'bold'
                            }
                        }
                    }
                }
            }, 'muscleVolume');
            return;
        }

        const chartData = {
            labels: Object.keys(data.percentages),
            datasets: [{
                label: 'Volume par muscle (%)',
                data: Object.values(data.percentages),
                backgroundColor: chartColors.primary,
                borderColor: chartColors.primary,
                borderWidth: 1
            }]
        };

        await safeCreateChart('muscleVolumeChart', {
            type: 'bar',
            data: chartData,
            options: {
                ...chartDefaults,
                indexAxis: 'y',
                plugins: {
                    ...chartDefaults.plugins,
                    title: {
                        display: true,
                        text: `R√©partition du volume (${period === 'week' ? 'semaine' : 'mois'})`,
                        color: '#f3f4f6',
                        font: {
                            size: 16,
                            weight: 'bold'
                        }
                    }
                },
                scales: {
                    x: {
                        ...chartDefaults.scales.x,
                        max: 100
                    }
                }
            }
        }, 'muscleVolume');
    } catch (error) {
        console.error('Erreur chargement volume muscles:', error);
    }
}

// ===== GRAPHIQUE FATIGUE/PERFORMANCE =====
async function loadFatigueChart() {
    try {
        const response = await fetch(`/api/users/${currentUser.id}/fatigue-trends`);
        
        if (!response.ok) {
            console.error(`Erreur API fatigue-trends: ${response.status}`);
            return;
        }
        
        const contentType = response.headers.get("content-type");
        if (!contentType || !contentType.includes("application/json")) {
            console.error("La r√©ponse fatigue-trends n'est pas du JSON");
            return;
        }
        
        const data = await response.json();

        if (!data.fatigue || data.fatigue.length === 0 || !data.performance || data.performance.length === 0) {
            console.log("Pas de donn√©es de fatigue/performance");
            const emptyData = {
                labels: ['Aucune donn√©e'],
                datasets: [
                    {
                        label: 'Fatigue moyenne',
                        data: [0],
                        borderColor: chartColors.danger,
                        backgroundColor: 'rgba(239, 68, 68, 0.1)',
                        tension: 0.4
                    },
                    {
                        label: 'Performance relative (%)',
                        data: [0],
                        borderColor: chartColors.success,
                        backgroundColor: 'rgba(16, 185, 129, 0.1)',
                        tension: 0.4
                    }
                ]
            };
            
            await safeCreateChart('fatigueChart', {
                type: 'line',
                data: emptyData,
                options: {
                    ...chartDefaults,
                    plugins: {
                        ...chartDefaults.plugins,
                        title: {
                            display: true,
                            text: 'Aucune donn√©e disponible',
                            color: '#f3f4f6',
                            font: {
                                size: 16,
                                weight: 'bold'
                            }
                        }
                    }
                }
            }, 'fatigue');
            return;
        }

        const chartData = {
            labels: data.dates.map(d => new Date(d).toLocaleDateString('fr-FR', { day: 'numeric', month: 'short' })),
            datasets: [
                {
                    label: 'Fatigue moyenne',
                    data: data.fatigue,
                    borderColor: chartColors.danger,
                    backgroundColor: 'rgba(239, 68, 68, 0.1)',
                    yAxisID: 'y',
                    tension: 0.4
                },
                {
                    label: 'Performance relative (%)',
                    data: data.performance,
                    borderColor: chartColors.success,
                    backgroundColor: 'rgba(16, 185, 129, 0.1)',
                    yAxisID: 'y1',
                    tension: 0.4
                }
            ]
        };

        await safeCreateChart('fatigueChart', {
            type: 'line',
            data: chartData,
            options: {
                ...chartDefaults,
                interaction: {
                    mode: 'index',
                    intersect: false,
                },
                scales: {
                    ...chartDefaults.scales,
                    y: {
                        ...chartDefaults.scales.y,
                        type: 'linear',
                        display: true,
                        position: 'left',
                        min: 0,
                        max: 10,
                        title: {
                            display: true,
                            text: 'Fatigue (0-10)',
                            color: '#9ca3af'
                        }
                    },
                    y1: {
                        ...chartDefaults.scales.y,
                        type: 'linear',
                        display: true,
                        position: 'right',
                        min: 0,
                        max: 150,
                        grid: {
                            drawOnChartArea: false,
                        },
                        title: {
                            display: true,
                            text: 'Performance (%)',
                            color: '#9ca3af'
                        }
                    }
                }
            }
        }, 'fatigue');
    } catch (error) {
        console.error('Erreur chargement fatigue:', error);
    }
}

// ===== GRAPHIQUE RECORDS PERSONNELS =====
async function loadPersonalRecordsChart() {
    try {
        const response = await fetch(`/api/users/${currentUser.id}/personal-records`);
        
        if (!response.ok) {
            console.error(`Erreur API personal-records: ${response.status}`);
            return;
        }
        
        const recordsContentType = response.headers.get("content-type");
        if (!recordsContentType || !recordsContentType.includes("application/json")) {
            console.error("La r√©ponse personal-records n'est pas du JSON");
            return;
        }
        
        const data = await response.json();

        if (!data.exercises || data.exercises.length === 0) {
            console.log("Pas de records personnels");
            const emptyData = {
                labels: ['Aucun record'],
                datasets: [{
                    label: 'Records',
                    data: [0],
                    backgroundColor: chartColors.primary,
                    borderWidth: 0
                }]
            };
            
            await safeCreateChart('recordsChart', {
                type: 'bar',
                data: emptyData,
                options: {
                    ...chartDefaults,
                    indexAxis: 'y',
                    plugins: {
                        ...chartDefaults.plugins,
                        title: {
                            display: true,
                            text: 'Commencez √† vous entra√Æner pour voir vos records !',
                            color: '#f3f4f6',
                            font: {
                                size: 16,
                                weight: 'bold'
                            }
                        }
                    }
                }
            }, 'records');
            return;
        }

        const chartData = {
            labels: data.exercises,
            datasets: [
                {
                    label: 'Record actuel (kg)',
                    data: data.current_records,
                    backgroundColor: chartColors.primary,
                    borderWidth: 0
                },
                {
                    label: 'Objectif (kg)',
                    data: data.targets,
                    backgroundColor: 'rgba(59, 130, 246, 0.3)',
                    borderWidth: 0
                }
            ]
        };

        await safeCreateChart('recordsChart', {
            type: 'bar',
            data: chartData,
            options: {
                ...chartDefaults,
                indexAxis: 'y',
                plugins: {
                    ...chartDefaults.plugins,
                    title: {
                        display: true,
                        text: 'Records personnels par exercice',
                        color: '#f3f4f6',
                        font: {
                            size: 16,
                            weight: 'bold'
                        }
                    }
                }
            }
        }, 'records');
    } catch (error) {
        console.error('Erreur chargement records:', error);
    }
}

// ===== S√âLECTEURS DE P√âRIODE =====
let eventListenersInitialized = false;
const eventListeners = {
    volumePeriod: null,
    progressionExercise: null
};

function initializePeriodSelectors() {
    if (eventListenersInitialized) {
        return;
    }
    
    const volumePeriodSelector = document.getElementById('volumePeriodSelector');
    if (volumePeriodSelector) {
        if (eventListeners.volumePeriod) {
            volumePeriodSelector.removeEventListener('change', eventListeners.volumePeriod);
        }
        
        eventListeners.volumePeriod = async (e) => {
            if (!isLoadingCharts) {
                await loadMuscleVolumeChart(e.target.value);
            }
        };
        
        volumePeriodSelector.addEventListener('change', eventListeners.volumePeriod);
    }

    const exerciseSelector = document.getElementById('progressionExerciseSelector');
    if (exerciseSelector) {
        if (eventListeners.progressionExercise) {
            exerciseSelector.removeEventListener('change', eventListeners.progressionExercise);
        }
        
        eventListeners.progressionExercise = async (e) => {
            if (!isLoadingCharts) {
                await loadProgressionChart(e.target.value || null);
            }
        };
        
        exerciseSelector.addEventListener('change', eventListeners.progressionExercise);
    }
    
    eventListenersInitialized = true;
}

function resetPeriodSelectors() {
    eventListenersInitialized = false;
    
    const volumePeriodSelector = document.getElementById('volumePeriodSelector');
    if (volumePeriodSelector && eventListeners.volumePeriod) {
        volumePeriodSelector.removeEventListener('change', eventListeners.volumePeriod);
    }
    
    const exerciseSelector = document.getElementById('progressionExerciseSelector');
    if (exerciseSelector && eventListeners.progressionExercise) {
        exerciseSelector.removeEventListener('change', eventListeners.progressionExercise);
    }
    
    eventListeners.volumePeriod = null;
    eventListeners.progressionExercise = null;
}

// Charger la liste des exercices pour le s√©lecteur
async function loadExerciseSelector() {
    const selector = document.getElementById('progressionExerciseSelector');
    if (!selector) return;
    
    try {
        const response = await fetch(`/api/exercises`);
        if (!response.ok) {
            console.error(`Erreur API exercises: ${response.status}`);
            return;
        }

        const exercises = await response.json();
        if (!Array.isArray(exercises)) {
            console.error('La r√©ponse exercises n\'est pas un tableau:', exercises);
            return;
        }

        selector.innerHTML = '<option value="">Tous les exercices</option>';
        exercises.forEach(exercise => {
            const option = document.createElement('option');
            option.value = exercise.id;
            option.textContent = exercise.name;
            selector.appendChild(option);
        });
    } catch (error) {
        console.error('Erreur chargement exercices:', error);
    }
}

// ===== CHARGEMENT DE TOUS LES GRAPHIQUES =====
async function loadAllCharts() {
    if (!currentUser || isLoadingCharts) return;
    
    isLoadingCharts = true;
    const chartsContainer = document.getElementById('chartsContainer');
    
    if (chartsContainer) {
        chartsContainer.classList.add('loading');
    }

    try {
        // D√©truire TOUS les graphiques existants
        destroyAllCharts();
        
        // Attendre que le DOM soit pr√™t
        await new Promise(resolve => requestAnimationFrame(resolve));
        
        // Charger les graphiques s√©quentiellement
        await loadExerciseSelector();
        await loadProgressionChart();
        await loadMuscleVolumeChart();
        await loadFatigueChart();
        await loadPersonalRecordsChart();
        
        chartsInitialized = true;
    } catch (error) {
        console.error('Erreur lors du chargement des graphiques:', error);
    } finally {
        if (chartsContainer) {
            chartsContainer.classList.remove('loading');
        }
        isLoadingCharts = false;
    }
}

// ===== EXPORT DES GRAPHIQUES =====
function exportChart(chartId) {
    const chartMapping = {
        'progression': 'progression',
        'muscleVolume': 'muscleVolume',
        'fatigue': 'fatigue',
        'records': 'records'
    };
    
    const chartKey = chartMapping[chartId];
    const chart = charts[chartKey];
    
    if (!chart) {
        console.error(`Graphique ${chartId} non trouv√©`);
        return;
    }

    const url = chart.toBase64Image();
    const link = document.createElement('a');
    link.download = `gym-stats-${chartId}-${new Date().toISOString().split('T')[0]}.png`;
    link.href = url;
    link.click();
}

// ===== RAFRA√éCHISSEMENT DES GRAPHIQUES =====
function refreshCharts() {
    loadAllCharts();
}

// ===== NETTOYAGE DES GRAPHIQUES =====
function cleanupCharts() {
    destroyAllCharts();
    chartsInitialized = false;
}

// ===== EXPORT GLOBAL =====
window.loadAllCharts = loadAllCharts;
window.refreshCharts = refreshCharts;
window.exportChart = exportChart;
window.cleanupCharts = cleanupCharts;
window.resetPeriodSelectors = resetPeriodSelectors;

export {
    loadAllCharts,
    loadProgressionChart,
    loadMuscleVolumeChart,
    loadFatigueChart,
    loadPersonalRecordsChart,
    refreshCharts,
    exportChart,
    initializePeriodSelectors,
    resetPeriodSelectors,
    cleanupCharts
};
--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\frontend\app-config.js ---
--- Nom du fichier: app-config.js ---
--- Contenu ---
// ===== CONFIGURATION ET CONSTANTES =====
// Ce fichier contient toutes les constantes de l'application
// Aucune logique m√©tier, juste des valeurs de configuration

// Configuration des exercices
export const EXERCISE_CATEGORIES = {
    BODYWEIGHT_PURE: ['poids_du_corps'],  // Pompes, tractions...
    BODYWEIGHT_WEIGHTED: ['poids_du_corps', 'lest_possible'],  // Peut ajouter du lest
    TIME_BASED: ['gainage', 'planche', 'isometric'],  // En secondes
    WEIGHTED: ['dumbbells', 'barre_olympique', 'barre_ez', 'kettlebell', 'poulies', 'machine']  // Avec poids
};

// D√©tection du type d'exercice bas√©e sur le nom
export const TIME_BASED_KEYWORDS = ['gainage', 'planche', 'plank', 'vacuum', 'isom√©trique'];

// Configuration du mode d√©veloppement
export const DEV_USER_ID = 999;

// Timers et intervalles
export const SYNC_INTERVAL = 30000; // 30 secondes
export const REST_TARGET_TIME = 60; // 60 secondes de repos par d√©faut

// Noms d'√©quipement en fran√ßais
export const EQUIPMENT_NAMES = {
    'dumbbells': 'Halt√®res fixes',
    'barre_olympique': 'Barre olympique',
    'barre_ez': 'Barre EZ',
    'disques': 'Disques',
    'elastiques': '√âlastiques',
    'banc_plat': 'Banc plat',
    'banc_inclinable': 'Banc inclinable',
    'banc_declinable': 'Banc d√©clinable',
    'barre_traction': 'Barre de traction',
    'kettlebell': 'Kettlebells'
};

// Ic√¥nes SVG pour l'√©quipement
export const EQUIPMENT_ICONS = {
    'dumbbells': '<svg fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4"/></svg>',
    'barre_olympique': '<svg fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h8m-4-8v16"/></svg>',
    'disques': '<svg fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/></svg>',    'elastiques': '<svg fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"/></svg>',
    'bench': '<svg fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12h18m-9-9v18"/></svg>',
    'barre_traction': '<svg fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 3h14m-7 0v18"/></svg>',
    'kettlebell': '<svg fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8a4 4 0 100 8 4 4 0 000-8z"/></svg>'
};

// Couleurs des groupes musculaires
export const BODY_PART_COLORS = {
    'Pectoraux': '#3b82f6',      // Bleu
    'Bras': '#8b5cf6',         // Violet
    'Delto√Ødes': '#ec4899',      // Rose
    'Dos': '#ef4444',            // Rouge
    'Abdominaux': '#f97316',     // Orange
    'Jambes': '#eab308',     // Jaune
    'Dos': '#ef4444',       // Cyan
};

// Mapping des couleurs hexad√©cimales vers des noms
export const COLOR_NAMES = {
    '#ff6b6b': 'Rouge',
    '#4ecdc4': 'Turquoise',
    '#45b7d1': 'Bleu',
    '#f7dc6f': 'Jaune',
    '#52c41a': 'Vert',
    '#722ed1': 'Violet',
    '#fa8c16': 'Orange',
    '#000000': 'Noir'
};

// Noms des objectifs
export const GOAL_NAMES = {
    'force': 'üí™ Force',
    'hypertrophie': 'ü¶æ Masse musculaire',
    'endurance': 'üèÉ Endurance',
    'perte_de_poids': '‚öñÔ∏è Perte de poids',
    'forme_generale': '‚ù§Ô∏è Forme g√©n√©rale',
    'cardio': 'üèÉ Cardio',
    'flexibility': 'ü§∏ Souplesse'
};

// Poids communs pour les halt√®res
export const COMMON_DUMBBELL_WEIGHTS = [22.5, 20, 15, 12.5, 10, 8, 6, 5, 4, 2];

// Poids communs pour les disques
export const COMMON_PLATE_WEIGHTS = [40, 25, 15, 10, 5, 2.5, 2, 1.25, 1];

// Poids communs pour les kettlebells
export const COMMON_KETTLEBELL_WEIGHTS = [32, 28, 24, 20, 16, 12, 8, 4];

// ===== FONCTIONS UTILITAIRES DE CONFIGURATION =====

export function getEquipmentName(type) {
    return EQUIPMENT_NAMES[type] || type;
}

export function getEquipmentIcon(type) {
    return EQUIPMENT_ICONS[type] || '';
}

export function getBodyPartColor(bodyPart) {
    return BODY_PART_COLORS[bodyPart] || '#64748b'; // Gris par d√©faut
}

export function getColorName(hexColor) {
    return COLOR_NAMES[hexColor] || hexColor;
}

export function getGoalName(goal) {
    return GOAL_NAMES[goal] || goal;
}

// Fonctions pour d√©terminer le type d'exercice
export function isTimeBasedExercise(exerciseName) {
    return TIME_BASED_KEYWORDS.some(keyword => 
        exerciseName.toLowerCase().includes(keyword)
    );
}

export function isBodyweightExercise(equipment) {
    return equipment.includes('poids_du_corps');
}

// Fonction pour obtenir le nom hexad√©cimal d'une couleur approximative
export function getColorHex(colorName) {
    const colors = {
        'vert': '#22c55e',
        'jaune': '#eab308',
        'rouge': '#ef4444',
        'noir': '#000000',
        'bleu': '#3b82f6',
        'violet': '#a855f7',
        'orange': '#f97316'
    };
    return colors[colorName.toLowerCase()] || '#666666';
}
--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\frontend\app-dashboard.js ---
--- Nom du fichier: app-dashboard.js ---
--- Contenu ---
// ===== MODULE TABLEAU DE BORD =====
// Ce fichier g√®re l'affichage du tableau de bord et des statistiques
// Il coordonne le chargement des donn√©es et leur affichage
import { startGuidedWorkout } from './app-guided-workout.js';
import { loadWorkoutHistory } from './app-history.js';
import { showToast, showLoadingOverlay, hideLoadingOverlay } from './app-ui.js';
import { 
    getUserStats,
    getUserCommitment,
    getTrajectoryAnalysis, 
    getAdaptiveTargets,
    generateAdaptiveWorkout,
    completeAdaptiveWorkout,
    loadUserPrograms
} from './app-api.js';
import { 
    currentUser,
    currentWorkout,
    getCurrentAdaptiveWorkout,
    setCurrentAdaptiveWorkout,
    userCommitment,
    adaptiveTargets, 
    trajectoryAnalysis,
    currentAdaptiveWorkout,
    setCurrentWorkout,
    setCurrentUser,
    getCurrentProgram,
    setCurrentProgram
    } from './app-state.js';

import { showView } from './app-navigation.js';
import { showProgramGenerator } from './app-program-generator.js';


// ===== CHARGEMENT DU DASHBOARD =====
async function loadDashboard() {
    if (!currentUser) return;
    
    const dashboardView = document.getElementById('dashboard');
    if (!dashboardView) return;
    
    try {
        // V√©rifier d'abord si l'utilisateur a un programme actif
        // R√©cup√©rer le programme actif depuis l'API
        let hasActiveProgram = false;
        let activeProgram = null;

        try {
            const programs = await loadUserPrograms(currentUser.id);
            activeProgram = programs.find(p => p.is_active === true);
            if (activeProgram) {
                setCurrentProgram(activeProgram);
                hasActiveProgram = true;
            }
        } catch (error) {
            console.error('Erreur chargement programmes:', error);
        }
        
        // Ensuite v√©rifier s'il a un engagement
        const commitment = await getUserCommitment(currentUser.id);
        
        // Trois cas possibles :
        // 1. Pas d'engagement = Dashboard basique + invitation √† cr√©er un programme
        // 2. Engagement mais pas de programme = Dashboard adaptatif + bouton cr√©er programme
        // 3. Engagement + programme = Dashboard adaptatif complet
        
        if (!commitment) {
            // CAS 1: Dashboard classique simple
            showClassicDashboard(dashboardView, hasActiveProgram);
        } else {
            // CAS 2 & 3: Dashboard adaptatif
            await showAdaptiveDashboard(dashboardView, commitment, hasActiveProgram);
        }
        
    } catch (error) {
        console.error('Erreur loading dashboard:', error);
        // En cas d'erreur, afficher le dashboard classique
        showClassicDashboard(dashboardView, false);
    }
}

// ===== DASHBOARD CLASSIQUE =====
function showClassicDashboard(container, hasProgram) {
    container.innerHTML = `
        <div class="dashboard-header" style="text-align: center; margin-bottom: 2rem;">
            <h1 id="welcomeMessage">Bonjour ${currentUser.name} ! üí™</h1>
            <p style="color: var(--gray);">${new Date().toLocaleDateString('fr-FR', { 
                weekday: 'long', 
                year: 'numeric', 
                month: 'long', 
                day: 'numeric' 
            })}</p>
        </div>
        
        <div class="stats-grid" style="
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(min(250px, 100%), 1fr));
            gap: 1rem;
            margin-bottom: 2rem;
            overflow-x: hidden;
        ">
            <!-- Carte principale d'action -->
            <div class="stat-card" style="
                background: linear-gradient(135deg, #10b981 0%, #059669 100%);
                color: white;
                text-align: center;
                padding: 2rem;
            ">
                ${!hasProgram ? `
                    <h3 style="margin-bottom: 1rem;">üéØ Commencer votre parcours</h3>
                    <p style="margin-bottom: 1.5rem;">Cr√©ez votre programme personnalis√©</p>
                    <button class="btn" onclick="showProgramGenerator()" style="
                        background: white;
                        color: #10b981;
                        width: 100%;
                    ">
                        Cr√©er mon programme
                    </button>
                ` : `
                    <h3 style="margin-bottom: 1rem;">üöÄ Programme actif</h3>
                    <p style="margin-bottom: 1.5rem;">Pr√™t pour votre s√©ance ?</p>
                    <button class="btn" onclick="showView('workout')" style="
                        background: white;
                        color: #10b981;
                        width: 100%;
                    ">
                        Commencer l'entra√Ænement
                    </button>
                `}
            </div>
            
            <!-- Stats de base -->
            <div class="stat-card">
                <h3>üìä S√©ances totales</h3>
                <p class="stat-value" id="totalWorkouts">0</p>
            </div>
            
            <div class="stat-card">
                <h3>üî• S√©rie hebdo</h3>
                <p class="stat-value" id="weekStreak">0</p>
            </div>
            
            <div class="stat-card">
                <h3>üìÖ Derni√®re s√©ance</h3>
                <p class="stat-value" id="lastWorkout">Jamais</p>
            </div>
        </div>
        
        <div id="workoutHistory">
            <!-- L'historique sera charg√© ici -->
        </div>
    `;
    
    // Charger les stats de base
    updateWelcomeMessage();
    loadUserStats();
    
    // Charger l'historique apr√®s un d√©lai
    setTimeout(() => {
        loadWorkoutHistory();
    }, 500);
}

// ===== DASHBOARD ADAPTATIF =====
async function showAdaptiveDashboard(container, commitment, hasProgram) {
    // Initialiser les targets si n√©cessaire
    try {
        await fetch(`/api/users/${currentUser.id}/init-adaptive-targets`, {
            method: 'POST'
        });
    } catch (error) {
        console.log('Targets d√©j√† initialis√©s ou erreur:', error);
    }
    // Charger les donn√©es adaptatives
    const [trajectory, targets] = await Promise.all([
        getTrajectoryAnalysis(currentUser.id),
        getAdaptiveTargets(currentUser.id)
    ]);
    
    // √âtat diff√©rent selon la pr√©sence d'un programme
    const statusMessage = hasProgram 
        ? (trajectory.on_track ? '‚úÖ Sur la bonne voie !' : '‚ö†Ô∏è Ajustons le rythme')
        : 'üéØ Pr√™t √† commencer';
    
    container.innerHTML = `
        <div class="dashboard-header" style="text-align: center; margin-bottom: 2rem;">
            <h1>Bonjour ${currentUser.name} ! üí™</h1>
            <p style="color: var(--gray);">${new Date().toLocaleDateString('fr-FR', { 
                weekday: 'long', 
                year: 'numeric', 
                month: 'long', 
                day: 'numeric' 
            })}</p>
        </div>
        
        <!-- Widget Trajectoire -->
        <div class="trajectory-widget ${trajectory.on_track ? 'on-track' : 'off-track'}" style="
            background: linear-gradient(135deg, 
                ${trajectory.on_track ? 'rgba(16, 185, 129, 0.1)' : 'rgba(245, 158, 11, 0.1)'}, 
                rgba(255, 255, 255, 0.02)
            );
            border-radius: 20px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            border: 2px solid ${trajectory.on_track ? '#10b981' : '#f59e0b'};
            text-align: center;
        ">
            <h2 style="font-size: 1.5rem; margin-bottom: 0.5rem;">${statusMessage}</h2>
            <p style="color: var(--gray); margin: 0;">
                ${trajectory.sessions_this_week}/${commitment.sessions_per_week} s√©ances cette semaine
            </p>
        </div>
        
        <!-- Widget Engagement -->
        <div style="
            background: rgba(255, 255, 255, 0.05);
            border-radius: 16px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
        ">
            <h3 style="margin-bottom: 1rem; display: flex; align-items: center; gap: 0.5rem;">
                üéØ Engagement 
                <span style="font-size: 0.8rem; color: var(--gray);">
                    ${commitment.sessions_per_week} s√©ances/sem
                </span>
            </h3>
            
            <!-- Stats sur une ligne -->
            <div style="
                display: grid;
                grid-template-columns: 1fr 1fr;
                gap: 1rem;
            ">
                <div style="text-align: center;">
                    <div style="font-size: 1.8rem; font-weight: bold; color: ${trajectory.consistency_score >= 0.7 ? '#10b981' : '#f59e0b'};">
                        ${Math.round(trajectory.consistency_score * 100)}%
                    </div>
                    <div style="font-size: 0.85rem; color: var(--gray);">R√©gularit√© (30j)</div>
                </div>
                <div style="text-align: center;">
                    <div style="font-size: 1.8rem; font-weight: bold; color: ${trajectory.volume_adherence >= 0.8 ? '#10b981' : '#f59e0b'};">
                        ${Math.round(trajectory.volume_adherence * 100)}%
                    </div>
                    <div style="font-size: 0.85rem; color: var(--gray);">Adh√©rence volume</div>
                </div>
            </div>
        </div>

        <!-- Progression muscles avec cercles -->
        ${targets && targets.length > 0 ? `
        <div style="
            background: rgba(255, 255, 255, 0.05);
            border-radius: 16px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            backdrop-filter: blur(10px);
        ">
            <h3 style="margin-bottom: 1.5rem; font-size: 1rem; color: var(--gray);">
                üí™ Progression musculaire (7j)
            </h3>
            
            <div style="
                display: grid;
                grid-template-columns: repeat(3, 1fr);
                gap: 1.5rem;
                row-gap: 2rem;
            ">
                ${targets.map((target, index) => {
                    const percentage = target.target_volume > 0 
                        ? Math.round((target.current_volume / target.target_volume) * 100)
                        : 0;
                    
                    // Gradients uniques par muscle
                    const gradients = {
                        'Pectoraux': 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
                        'Dos': 'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)',
                        'Delto√Ødes': 'linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)',
                        'Jambes': 'linear-gradient(135deg, #43e97b 0%, #38f9d7 100%)',
                        'Bras': 'linear-gradient(135deg, #fa709a 0%, #fee140 100%)',
                        'Abdominaux': 'linear-gradient(135deg, #30cfd0 0%, #330867 100%)'
                    };
                    
                    const muscleNames = {
                        'Pectoraux': 'Pectoraux',
                        'Dos': 'Dos',
                        'Delto√Ødes': '√âpaules',
                        'Jambes': 'Jambes',
                        'Bras': 'Bras',
                        'Abdominaux': 'Abdos'
                    };
                    
                    const gradient = gradients[target.muscle_group] || gradients.Pectoraux;
                    const muscleName = muscleNames[target.muscle_group] || target.muscle_group;
                    
                    // Calcul de la circonf√©rence pour l'animation
                    const radius = 45;
                    const circumference = 2 * Math.PI * radius;
                    const strokeDashoffset = circumference - (percentage / 100) * circumference;
                    
                    return `
                        <div style="
                            display: flex;
                            flex-direction: column;
                            align-items: center;
                            text-align: center;
                        ">
                            <div style="
                                position: relative;
                                width: 120px;
                                height: 120px;
                            ">
                                <!-- Cercle de fond -->
                                <svg width="120" height="120" style="
                                    transform: rotate(-90deg);
                                    filter: drop-shadow(0 4px 10px rgba(0,0,0,0.3));
                                ">
                                    <circle
                                        cx="60"
                                        cy="60"
                                        r="${radius}"
                                        stroke="rgba(255, 255, 255, 0.1)"
                                        stroke-width="10"
                                        fill="none"
                                    />
                                    <!-- Cercle de progression avec gradient -->
                                    <defs>
                                        <linearGradient id="gradient-${index}" x1="0%" y1="0%" x2="100%" y2="100%">
                                            <stop offset="0%" style="stop-color:${gradient.match(/#[a-f0-9]{6}/gi)[0]};stop-opacity:1" />
                                            <stop offset="100%" style="stop-color:${gradient.match(/#[a-f0-9]{6}/gi)[1]};stop-opacity:1" />
                                        </linearGradient>
                                    </defs>
                                    <circle
                                        cx="60"
                                        cy="60"
                                        r="${radius}"
                                        stroke="url(#gradient-${index})"
                                        stroke-width="10"
                                        fill="none"
                                        stroke-linecap="round"
                                        stroke-dasharray="${circumference}"
                                        stroke-dashoffset="${strokeDashoffset}"
                                        style="
                                            transition: stroke-dashoffset 1s ease-in-out;
                                            filter: drop-shadow(0 0 6px ${gradient.match(/#[a-f0-9]{6}/gi)[0]}40);
                                        "
                                    />
                                </svg>
                                
                                <!-- Pourcentage au centre -->
                                <div style="
                                    position: absolute;
                                    top: 50%;
                                    left: 50%;
                                    transform: translate(-50%, -50%);
                                    font-size: 1.8rem;
                                    font-weight: bold;
                                    background: ${gradient};
                                    -webkit-background-clip: text;
                                    -webkit-text-fill-color: transparent;
                                    background-clip: text;
                                ">
                                    ${percentage}%
                                </div>
                            </div>
                            
                            <!-- Nom du muscle -->
                            <div style="
                                margin-top: 0.75rem;
                                font-size: 0.9rem;
                                color: #e5e7eb;
                                font-weight: 500;
                            ">
                                ${muscleName}
                            </div>
                        </div>
                    `;
                }).join('')}
            </div>
        </div>
        ` : ''}
                
        <!-- Conseil personnalis√© avec d√©filement automatique -->
        <div id="insightCarousel" style="
            background: linear-gradient(135deg, rgba(59, 130, 246, 0.1), rgba(139, 92, 246, 0.1));
            border-radius: 16px;
            padding: 1.2rem;
            margin-bottom: 1.5rem;
            min-height: 80px;
            display: flex;
            align-items: center;
            justify-content: center;
            position: relative;
            overflow: hidden;
        ">
            <div id="insightText" style="
                text-align: center;
                font-size: 1rem;
                line-height: 1.5;
                transition: opacity 0.5s ease;
            ">
                ${trajectory.insights && trajectory.insights.length > 0 ? trajectory.insights[0] : 'üí™ Continuez vos efforts !'}
            </div>
        </div>
        
        <!-- Actions rapides -->
        <div class="action-grid" style="
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1rem;
            margin-bottom: 2rem;
        ">
            <div class="action-card" onclick="generateQuickWorkout()" style="
                background: linear-gradient(135deg, rgba(16, 185, 129, 0.1), rgba(16, 185, 129, 0.05));
                border: 2px solid #10b981;
                border-radius: 16px;
                padding: 1.5rem;
                text-align: center;
                cursor: pointer;
                transition: all 0.3s ease;
            ">
                <h3 style="margin-bottom: 0.5rem;">‚ö° S√©ance rapide adapt√©e</h3>
                <p style="font-size: 0.9rem; color: var(--gray); margin: 0;">
                    ${trajectory.next_muscles ? `${trajectory.next_muscles.join(' + ')}` : 'Optimis√©e pour vous'}
                </p>
            </div>
            
            <div class="action-card" onclick="window.startWorkout('free')" style="
                background: rgba(255, 255, 255, 0.05);
                border: 2px solid var(--gray);
                border-radius: 16px;
                padding: 1.5rem;
                text-align: center;
                cursor: pointer;
                transition: all 0.3s ease;
            ">
                <h3 style="margin-bottom: 0.5rem;">üèÉ S√©ance libre</h3>
                <p style="font-size: 0.9rem; color: var(--gray); margin: 0;">Choisissez vos exercices</p>
            </div>
        </div>
        
        ${!hasProgram ? `
            <!-- Call to action programme -->
            <div style="
                background: linear-gradient(135deg, rgba(139, 92, 246, 0.1), rgba(59, 130, 246, 0.1));
                border-radius: 20px;
                padding: 2rem;
                text-align: center;
                margin-bottom: 2rem;
            ">
                <h3 style="margin-bottom: 1rem;">üöÄ Cr√©ez votre programme personnalis√©</h3>
                <p style="color: var(--gray); margin-bottom: 1.5rem;">
                    Optimis√© selon vos objectifs et votre emploi du temps
                </p>
                <button class="btn" onclick="showProgramGenerator()" style="
                    background: white;
                    color: #8b5cf6;
                    padding: 0.75rem 2rem;
                ">
                    Cr√©er mon programme
                </button>
            </div>
        ` : ''}
        
        <!-- Stats classiques en bas -->
        <div style="
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 1rem;
            margin-top: 2rem;
        ">
            <div class="stat-card" style="
                background: rgba(255, 255, 255, 0.05);
                border-radius: 12px;
                padding: 1rem;
                text-align: center;
            ">
                <div class="stat-value" id="totalWorkouts">${trajectory.total_workouts || 0}</div>
                <div class="stat-label" style="font-size: 0.85rem; color: var(--gray);">S√©ances totales</div>
            </div>
            <div class="stat-card" style="
                background: rgba(255, 255, 255, 0.05);
                border-radius: 12px;
                padding: 1rem;
                text-align: center;
            ">
                <div class="stat-value" id="weekStreak">${trajectory.week_streak || 0}</div>
                <div class="stat-label" style="font-size: 0.85rem; color: var(--gray);">Semaines d'affil√©e</div>
            </div>
            <div class="stat-card" style="
                background: rgba(255, 255, 255, 0.05);
                border-radius: 12px;
                padding: 1rem;
                text-align: center;
            ">
                <div class="stat-value" id="lastWorkout">
                    ${getLastWorkoutDate()}
                </div>
                <div class="stat-label" style="font-size: 0.85rem; color: var(--gray);">Derni√®re s√©ance</div>
            </div>
        </div>
        
        <!-- Historique -->
        <div id="workoutHistory" style="margin-top: 2rem;">
            <!-- L'historique sera charg√© ici -->
        </div>
    `;
    
    // D√©marrer le carousel des insights
    if (trajectory.insights && trajectory.insights.length > 1) {
        let currentInsightIndex = 0;
        const insightText = document.getElementById('insightText');
        
        setInterval(() => {
            // Fondu sortant
            insightText.style.opacity = '0';
            
            setTimeout(() => {
                // Changer le texte
                currentInsightIndex = (currentInsightIndex + 1) % trajectory.insights.length;
                insightText.textContent = trajectory.insights[currentInsightIndex];
                // Fondu entrant
                insightText.style.opacity = '1';
            }, 500);
        }, 4000); // Change toutes les 4 secondes
    }
    
    // Charger les stats et l'historique
    updateWelcomeMessage();
    loadUserStats();
    
    // Charger l'historique apr√®s un d√©lai
    setTimeout(() => {
        loadWorkoutHistory();
    }, 500);
}

// ========== NOUVELLES FONCTIONS DASHBOARD ADAPTATIF ==========

// Fonction pour afficher l'√©tat des muscles
async function renderMuscleStatus(targets) {
    if (!targets || targets.length === 0) {
        return '<p style="color: var(--gray);">Aucune donn√©e disponible</p>';
    }
    
    const muscleEmojis = {
        Pectoraux: 'üéØ',
        Dos: 'üîô',
        Delto√Ødes: 'üí™',
        Jambes: 'ü¶µ',
        Bras: 'üí™',
        Abdominaux: 'üéØ'
    };
    
    const muscleNames = {
        Pectoraux: 'Pectoraux',
        Dos: 'Dos',
        Delto√Ødes: '√âpaules',
        Jambes: 'Jambes',
        Bras: 'Bras',
        Abdominaux: 'Abdos'
    };
    
    // Construire le HTML directement sans Promise
    let html = '';
    
    targets.forEach(target => {
        const readiness = calculateReadiness(target);
        const statusClass = readiness > 0.7 ? 'ready' : readiness > 0.4 ? 'moderate' : 'tired';
        const statusColor = readiness > 0.7 ? '#10b981' : readiness > 0.4 ? '#f59e0b' : '#ef4444';
        const volumePercent = target.target_volume > 0 
            ? Math.round((target.current_volume / target.target_volume) * 100)
            : 0;
        
        html += `
            <div class="muscle-item ${statusClass}" style="
                background: rgba(255, 255, 255, 0.03);
                border: 1px solid ${statusColor}33;
                border-radius: 12px;
                padding: 1rem;
            ">
                <div class="muscle-header" style="
                    display: flex;
                    align-items: center;
                    gap: 0.5rem;
                    margin-bottom: 0.75rem;
                ">
                    <span class="muscle-emoji" style="font-size: 1.5rem;">${muscleEmojis[target.muscle_group] || 'üí™'}</span>
                    <span class="muscle-name" style="font-weight: 600;">${muscleNames[target.muscle_group] || target.muscle_group}</span>
                </div>
                <div class="muscle-stats">
                    <div class="mini-progress" style="
                        background: rgba(255, 255, 255, 0.1);
                        height: 6px;
                        border-radius: 3px;
                        overflow: hidden;
                        margin-bottom: 0.5rem;
                    ">
                        <div class="mini-progress-fill" style="
                            background: ${statusColor};
                            height: 100%;
                            width: ${volumePercent}%;
                            transition: width 0.3s;
                        "></div>
                    </div>
                    <div style="
                        display: flex;
                        justify-content: space-between;
                        font-size: 0.875rem;
                    ">
                        <span style="color: var(--gray);">${volumePercent}% du volume</span>
                        <span style="color: var(--gray);">
                            ${target.last_trained ? getTimeSinceText(target.last_trained) : 'Jamais'}
                        </span>
                    </div>
                </div>
            </div>
        `;
    });
    
    return html;
}

// Fonction pour calculer la disponibilit√© d'un muscle
function calculateReadiness(target) {
    if (!target.last_trained) return 1.0;
    
    const hoursSince = (new Date() - new Date(target.last_trained)) / (1000 * 60 * 60);
    let readiness = Math.min(1.0, hoursSince / 48); // 48h pour r√©cup√©ration compl√®te
    
    // Ajuster selon la dette de r√©cup√©ration
    if (target.recovery_debt > 0) {
        readiness *= Math.max(0.5, 1 - (target.recovery_debt / 10));
    }
    
    return readiness;
}

// Fonction pour formater le temps √©coul√©
function getTimeSinceText(dateStr) {
    const date = new Date(dateStr);
    const now = new Date();
    const hours = Math.floor((now - date) / (1000 * 60 * 60));
    
    if (hours < 1) return "√Ä l'instant";
    if (hours < 24) return `Il y a ${hours}h`;
    if (hours < 48) return "Hier";
    if (hours < 168) return `Il y a ${Math.floor(hours / 24)}j`;
    return `Il y a ${Math.floor(hours / 168)} sem`;
}

// Fonction pour g√©n√©rer une s√©ance rapide
async function generateQuickWorkout() {
    try {
        // Afficher le modal de s√©lection du temps
        const timeAvailable = await showTimeSelectionModal();
        if (!timeAvailable) return;
        
        showLoadingOverlay('G√©n√©ration de votre s√©ance adaptative...');
        
        // Appel √† l'API
        const response = await fetch(`/api/users/${currentUser.id}/adaptive-workout`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ time_available: timeAvailable })
        });
        
        hideLoadingOverlay();
        
        if (!response.ok) {
            throw new Error('Erreur lors de la g√©n√©ration');
        }
        
        const workout = await response.json();
        console.log('Workout re√ßu:', workout); // V√©rifier la structure
        setCurrentAdaptiveWorkout(workout);

        // V√©rifier que la fonction est bien appel√©e
        console.log('Affichage du modal...');
        showAdaptiveWorkoutModal(workout);
        
    } catch (error) {
        hideLoadingOverlay();
        console.error('Erreur g√©n√©ration s√©ance:', error);
        showToast('Erreur lors de la g√©n√©ration de la s√©ance', 'error');
    }
}


// ===== MODAL DE S√âLECTION DU TEMPS CORRIG√â =====
async function showTimeSelectionModal() {
    return new Promise((resolve) => {
        const modal = document.createElement('div');
        modal.className = 'modal-overlay';
        modal.style.cssText = `
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.8);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 1000;
        `;
        
        modal.innerHTML = `
            <div class="modal-content" style="
                background: var(--surface);
                border-radius: 16px;
                padding: 2rem;
                max-width: 400px;
                width: 90%;
            ">
                <h3 style="margin-bottom: 1.5rem; text-align: center;">Temps disponible aujourd'hui ?</h3>
                <div class="time-options" style="
                    display: grid;
                    grid-template-columns: 1fr 1fr;
                    gap: 1rem;
                    margin-bottom: 1.5rem;
                ">
                    <button class="time-option" data-time="30" style="
                        background: rgba(255, 255, 255, 0.05);
                        border: 2px solid rgba(255, 255, 255, 0.1);
                        border-radius: 12px;
                        padding: 1.5rem;
                        cursor: pointer;
                        transition: all 0.2s;
                        text-align: center;
                    " onmouseover="this.style.borderColor='#3b82f6'" 
                       onmouseout="this.style.borderColor='rgba(255, 255, 255, 0.1)'">
                        <span class="time-value" style="font-size: 2rem; font-weight: 700; display: block;">30</span>
                        <span class="time-label" style="color: var(--gray);">minutes</span>
                    </button>
                    
                    <button class="time-option" data-time="45" style="
                        background: rgba(255, 255, 255, 0.05);
                        border: 2px solid rgba(255, 255, 255, 0.1);
                        border-radius: 12px;
                        padding: 1.5rem;
                        cursor: pointer;
                        transition: all 0.2s;
                        text-align: center;
                    " onmouseover="this.style.borderColor='#3b82f6'" 
                       onmouseout="this.style.borderColor='rgba(255, 255, 255, 0.1)'">
                        <span class="time-value" style="font-size: 2rem; font-weight: 700; display: block;">45</span>
                        <span class="time-label" style="color: var(--gray);">minutes</span>
                    </button>
                    
                    <button class="time-option" data-time="60" style="
                        background: rgba(255, 255, 255, 0.05);
                        border: 2px solid rgba(255, 255, 255, 0.1);
                        border-radius: 12px;
                        padding: 1.5rem;
                        cursor: pointer;
                        transition: all 0.2s;
                        text-align: center;
                    " onmouseover="this.style.borderColor='#3b82f6'" 
                       onmouseout="this.style.borderColor='rgba(255, 255, 255, 0.1)'">
                        <span class="time-value" style="font-size: 2rem; font-weight: 700; display: block;">60</span>
                        <span class="time-label" style="color: var(--gray);">minutes</span>
                    </button>
                    
                    <button class="time-option" data-time="90" style="
                        background: rgba(255, 255, 255, 0.05);
                        border: 2px solid rgba(255, 255, 255, 0.1);
                        border-radius: 12px;
                        padding: 1.5rem;
                        cursor: pointer;
                        transition: all 0.2s;
                        text-align: center;
                    " onmouseover="this.style.borderColor='#3b82f6'" 
                       onmouseout="this.style.borderColor='rgba(255, 255, 255, 0.1)'">
                        <span class="time-value" style="font-size: 2rem; font-weight: 700; display: block;">90</span>
                        <span class="time-label" style="color: var(--gray);">minutes</span>
                    </button>
                </div>
                <button class="btn btn-secondary" onclick="this.closest('.modal-overlay').remove()" style="width: 100%;">
                    Annuler
                </button>
            </div>
        `;
        
        document.body.appendChild(modal);
        
        // Event listeners
        modal.querySelectorAll('.time-option').forEach(btn => {
            btn.addEventListener('click', () => {
                const time = parseInt(btn.dataset.time);
                modal.remove();
                resolve(time);
            });
        });
        
        modal.addEventListener('click', (e) => {
            if (e.target === modal) {
                modal.remove();
                resolve(null);
            }
        });
    });
}

// Modal pour afficher la s√©ance adaptative
function showAdaptiveWorkoutModal(workout) {
    const modal = document.createElement('div');
    modal.className = 'modal-overlay';
    
    modal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.8);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 1000;
        backdrop-filter: blur(4px);
    `;
    
    // Calculer les priorit√©s musculaires
    const musclePriorities = workout.muscles.map((muscle, index) => ({
        muscle,
        priority: index === 0 ? "Priorit√© haute" : index === 1 ? "Priorit√© moyenne" : "Priorit√© basse",
        color: index === 0 ? "#10b981" : index === 1 ? "#f59e0b" : "#6b7280"
    }));
    
    modal.innerHTML = `
        <div class="modal-content" style="
            background: linear-gradient(135deg, #1f2937 0%, #111827 100%);
            border-radius: 20px;
            padding: 0;
            max-width: 700px;
            width: 95%;
            max-height: 90vh;
            overflow: hidden;
            box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
            border: 1px solid rgba(255, 255, 255, 0.1);
        ">
            <!-- Header avec contexte de la s√©ance -->
            <div style="
                background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
                padding: 2rem;
                text-align: center;
                position: relative;
            ">
                <h2 style="
                    margin: 0 0 0.5rem 0;
                    font-size: 1.5rem;
                    font-weight: 700;
                    color: white;
                ">üéØ S√©ance Adaptative</h2>
                <p style="
                    margin: 0;
                    opacity: 0.9;
                    font-size: 0.95rem;
                ">Optimis√©e selon votre √©quipement et objectifs</p>
                
                <!-- Dur√©e et informations cl√©s -->
                <div style="
                    display: flex;
                    justify-content: space-around;
                    margin-top: 1.5rem;
                    background: rgba(255, 255, 255, 0.1);
                    border-radius: 12px;
                    padding: 1rem;
                ">
                    <div style="text-align: center;">
                        <div style="font-size: 1.2rem; font-weight: 700;">‚è±Ô∏è ${workout.estimated_duration}</div>
                        <div style="font-size: 0.8rem; opacity: 0.8;">minutes</div>
                    </div>
                    <div style="text-align: center;">
                        <div style="font-size: 1.2rem; font-weight: 700;">üí™ ${workout.exercises.length}</div>
                        <div style="font-size: 0.8rem; opacity: 0.8;">exercices</div>
                    </div>
                    <div style="text-align: center;">
                        <div style="font-size: 1.2rem; font-weight: 700;">üî• Adaptatif</div>
                        <div style="font-size: 0.8rem; opacity: 0.8;">temps r√©el</div>
                    </div>
                </div>
            </div>
            
            <!-- Muscles cibl√©s avec priorit√©s -->
            <div style="padding: 1.5rem; border-bottom: 1px solid rgba(255, 255, 255, 0.1);">
                <h4 style="margin: 0 0 1rem 0; color: #f3f4f6; font-size: 1rem;">
                    üéØ Muscles cibl√©s & priorit√©s
                </h4>
                <div style="display: flex; gap: 0.75rem; flex-wrap: wrap;">
                    ${musclePriorities.map(mp => `
                        <div style="
                            background: linear-gradient(135deg, ${mp.color}22 0%, ${mp.color}11 100%);
                            border: 1px solid ${mp.color}44;
                            border-radius: 8px;
                            padding: 0.5rem 1rem;
                            flex: 1;
                            min-width: 140px;
                        ">
                            <div style="font-weight: 600; color: ${mp.color}; font-size: 0.9rem;">
                                ${mp.muscle}
                            </div>
                            <div style="font-size: 0.75rem; color: #9ca3af; margin-top: 0.25rem;">
                                ${mp.priority}
                            </div>
                        </div>
                    `).join('')}
                </div>
            </div>
            
            <!-- Programme d'exercices avec interaction -->
            <div style="padding: 1.5rem; max-height: 400px; overflow-y: auto;">
                <div style="
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                    margin-bottom: 1rem;
                ">
                    <h4 style="margin: 0; color: #f3f4f6; font-size: 1rem;">
                        üìã Programme de la s√©ance
                    </h4>
                    <div style="
                        background: rgba(16, 185, 129, 0.1);
                        border: 1px solid rgba(16, 185, 129, 0.3);
                        border-radius: 6px;
                        padding: 0.25rem 0.5rem;
                        font-size: 0.75rem;
                        color: #10b981;
                    ">
                        Glissez pour r√©organiser
                    </div>
                </div>
                
                <div id="exercisesList" style="display: flex; flex-direction: column; gap: 1rem;">
                    ${workout.exercises.map((ex, index) => `
                        <div class="exercise-item" data-exercise-id="${ex.exercise_id}" style="
                            background: linear-gradient(135deg, rgba(255, 255, 255, 0.05) 0%, rgba(255, 255, 255, 0.02) 100%);
                            border: 1px solid rgba(255, 255, 255, 0.1);
                            border-radius: 12px;
                            padding: 1.25rem;
                            cursor: grab;
                            transition: all 0.2s ease;
                            position: relative;
                        "
                        draggable="true"
                        onmouseover="this.style.borderColor='rgba(59, 130, 246, 0.5)'; this.style.transform='translateY(-2px)'"
                        onmouseout="this.style.borderColor='rgba(255, 255, 255, 0.1)'; this.style.transform='translateY(0)'"
                        >
                            <!-- Num√©ro et handle de drag -->
                            <div style="
                                position: absolute;
                                top: 0.75rem;
                                left: 0.75rem;
                                background: #3b82f6;
                                color: white;
                                width: 24px;
                                height: 24px;
                                border-radius: 50%;
                                display: flex;
                                align-items: center;
                                justify-content: center;
                                font-size: 0.8rem;
                                font-weight: 700;
                            ">${index + 1}</div>
                            
                            <div style="
                                position: absolute;
                                top: 0.75rem;
                                right: 0.75rem;
                                color: #6b7280;
                                font-size: 1.2rem;
                                cursor: grab;
                            ">‚ãÆ‚ãÆ</div>
                            
                            <!-- Informations exercice -->
                            <div style="margin-left: 2.5rem; margin-right: 2rem;">
                                <h5 style="
                                    margin: 0 0 0.5rem 0;
                                    color: #f3f4f6;
                                    font-size: 1.1rem;
                                    font-weight: 600;
                                ">${ex.exercise_name}</h5>
                                
                                <div style="
                                    display: flex;
                                    gap: 1rem;
                                    margin-bottom: 1rem;
                                    flex-wrap: wrap;
                                ">
                                    <div style="
                                        background: rgba(16, 185, 129, 0.1);
                                        border: 1px solid rgba(16, 185, 129, 0.3);
                                        border-radius: 6px;
                                        padding: 0.25rem 0.5rem;
                                        font-size: 0.8rem;
                                        color: #10b981;
                                    ">${ex.body_part}</div>
                                    
                                    <div style="color: #9ca3af; font-size: 0.85rem;">
                                        ${ex.sets} s√©ries √ó ${ex.target_reps} reps
                                    </div>
                                    
                                    ${ex.suggested_weight ? `
                                        <div style="color: #f59e0b; font-size: 0.85rem;">
                                            üí™ ${ex.suggested_weight}kg
                                        </div>
                                    ` : ''}
                                    
                                    <div style="color: #6b7280; font-size: 0.85rem;">
                                        ‚è±Ô∏è ${ex.rest_time || 120}s repos
                                    </div>
                                </div>
                                
                                <!-- Bouton d'√©change -->
                                <button 
                                    onclick="showExerciseAlternatives(${ex.exercise_id}, ${index})"
                                    style="
                                        background: rgba(99, 102, 241, 0.1);
                                        border: 1px solid rgba(99, 102, 241, 0.3);
                                        border-radius: 6px;
                                        padding: 0.5rem 1rem;
                                        color: #6366f1;
                                        font-size: 0.8rem;
                                        cursor: pointer;
                                        transition: all 0.2s;
                                    "
                                    onmouseover="this.style.background='rgba(99, 102, 241, 0.2)'"
                                    onmouseout="this.style.background='rgba(99, 102, 241, 0.1)'"
                                >
                                    üîÑ √âchanger cet exercice
                                </button>
                            </div>
                        </div>
                    `).join('')}
                </div>
            </div>
            
            <!-- Actions finales -->
            <div style="
                padding: 1.5rem;
                border-top: 1px solid rgba(255, 255, 255, 0.1);
                background: rgba(0, 0, 0, 0.2);
            ">
                <div style="
                    display: flex;
                    gap: 1rem;
                ">
                    <button onclick="window.modifyAdaptiveWorkout()" style="
                        flex: 1;
                        background: rgba(255, 255, 255, 0.1);
                        border: 1px solid rgba(255, 255, 255, 0.2);
                        border-radius: 10px;
                        padding: 1rem;
                        color: white;
                        font-weight: 600;
                        cursor: pointer;
                        transition: all 0.2s;
                    "
                    onmouseover="this.style.background='rgba(255, 255, 255, 0.15)'"
                    onmouseout="this.style.background='rgba(255, 255, 255, 0.1)'"
                    >
                        üé≤ R√©g√©n√©rer
                    </button>
                    
                    <button onclick="window.startAdaptiveWorkout()" style="
                        flex: 2;
                        background: linear-gradient(135deg, #10b981 0%, #059669 100%);
                        border: none;
                        border-radius: 10px;
                        padding: 1rem;
                        color: white;
                        font-weight: 700;
                        cursor: pointer;
                        transition: all 0.2s;
                        font-size: 1rem;
                    "
                    onmouseover="this.style.transform='translateY(-1px)'; this.style.boxShadow='0 10px 25px rgba(16, 185, 129, 0.3)'"
                    onmouseout="this.style.transform='translateY(0)'; this.style.boxShadow='none'"
                    >
                        üöÄ Commencer la s√©ance
                    </button>
                </div>
                
                <div style="
                    text-align: center;
                    margin-top: 1rem;
                    color: #6b7280;
                    font-size: 0.8rem;
                ">
                    üí° Le programme s'adaptera √† vos performances en temps r√©el
                </div>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    
    // Ajouter la fonctionnalit√© de drag & drop
    setupDragAndDrop();
    
    // Fermer le modal en cliquant √† l'ext√©rieur
    modal.addEventListener('click', (e) => {
        if (e.target === modal) {
            modal.remove();
        }
    });
}

// Fonction pour configurer le drag & drop
function setupDragAndDrop() {
    const exercisesList = document.getElementById('exercisesList');
    if (!exercisesList) return;
    
    let draggedElement = null;
    
    exercisesList.addEventListener('dragstart', (e) => {
        if (e.target.classList.contains('exercise-item')) {
            draggedElement = e.target;
            e.target.style.opacity = '0.5';
            e.target.style.cursor = 'grabbing';
        }
    });
    
    exercisesList.addEventListener('dragend', (e) => {
        if (e.target.classList.contains('exercise-item')) {
            e.target.style.opacity = '1';
            e.target.style.cursor = 'grab';
        }
    });
    
    exercisesList.addEventListener('dragover', (e) => {
        e.preventDefault();
    });
    
    exercisesList.addEventListener('drop', (e) => {
        e.preventDefault();
        if (draggedElement && e.target.closest('.exercise-item')) {
            const dropTarget = e.target.closest('.exercise-item');
            if (dropTarget !== draggedElement) {
                const rect = dropTarget.getBoundingClientRect();
                const midpoint = rect.top + rect.height / 2;
                
                if (e.clientY < midpoint) {
                    exercisesList.insertBefore(draggedElement, dropTarget);
                } else {
                    exercisesList.insertBefore(draggedElement, dropTarget.nextSibling);
                }
                
                // Mettre √† jour les num√©ros d'ordre
                updateExerciseNumbers();
                
                // Sauvegarder le nouvel ordre
                saveReorderedExercises();
            }
        }
    });
}

// Fonction pour mettre √† jour les num√©ros d'exercices
function updateExerciseNumbers() {
    const exercises = document.querySelectorAll('.exercise-item');
    exercises.forEach((item, index) => {
        const numberElement = item.querySelector('div');
        if (numberElement && numberElement.textContent.match(/^\d+$/)) {
            numberElement.textContent = index + 1;
        }
    });
}

// Fonction pour sauvegarder l'ordre modifi√©
function saveReorderedExercises() {
    const exercises = document.querySelectorAll('.exercise-item');
    const newOrder = Array.from(exercises).map(item => 
        parseInt(item.dataset.exerciseId)
    );
    
    // Mettre √† jour l'ordre dans le workout adaptatif
    const currentWorkout = getCurrentAdaptiveWorkout();
    if (currentWorkout) {
        const reorderedExercises = newOrder.map(exerciseId => 
            currentWorkout.exercises.find(ex => ex.exercise_id === exerciseId)
        ).filter(Boolean);
        
        currentWorkout.exercises = reorderedExercises;
        setCurrentAdaptiveWorkout(currentWorkout);
        
        showToast('Ordre des exercices mis √† jour', 'success');
    }
}

// Fonction pour afficher les alternatives d'exercices
async function showExerciseAlternatives(exerciseId, exerciseIndex) {
    showLoadingOverlay('Recherche d\'alternatives...');
    
    try {
        // Appel API pour r√©cup√©rer les exercices alternatifs
        const response = await fetch(`/api/exercises/${exerciseId}/alternatives?user_id=${currentUser.id}`);
        if (!response.ok) throw new Error('Erreur API');
        
        const alternatives = await response.json();
        hideLoadingOverlay();
        
        showAlternativesModal(alternatives, exerciseId, exerciseIndex);
        
    } catch (error) {
        hideLoadingOverlay();
        console.error('Erreur r√©cup√©ration alternatives:', error);
        
        // Fallback : afficher quelques exercices du m√™me muscle
        const currentWorkout = getCurrentAdaptiveWorkout();
        const currentExercise = currentWorkout.exercises.find(ex => ex.exercise_id === exerciseId);
        
        if (currentExercise) {
            showToast(`Recherche d'alternatives pour ${currentExercise.body_part}...`, 'info');
            // TODO: Impl√©menter le fallback
        }
    }
}

// Modal pour s√©lectionner un exercice alternatif
function showAlternativesModal(alternatives, originalExerciseId, exerciseIndex) {
    const modal = document.createElement('div');
    modal.className = 'modal-overlay';
    modal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.9);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 1001;
    `;
    
    modal.innerHTML = `
        <div style="
            background: #1f2937;
            border-radius: 16px;
            padding: 2rem;
            max-width: 500px;
            width: 90%;
            max-height: 70vh;
            overflow-y: auto;
        ">
            <h3 style="margin: 0 0 1.5rem 0; color: white;">
                üîÑ Choisir un exercice alternatif
            </h3>
            
            <div style="display: flex; flex-direction: column; gap: 1rem;">
                ${alternatives.slice(0, 5).map(alt => `
                    <button 
                        onclick="replaceExercise(${originalExerciseId}, ${alt.id}, ${exerciseIndex})"
                        style="
                            background: rgba(255, 255, 255, 0.05);
                            border: 1px solid rgba(255, 255, 255, 0.1);
                            border-radius: 8px;
                            padding: 1rem;
                            color: white;
                            text-align: left;
                            cursor: pointer;
                            transition: all 0.2s;
                        "
                        onmouseover="this.style.borderColor='#3b82f6'"
                        onmouseout="this.style.borderColor='rgba(255, 255, 255, 0.1)'"
                    >
                        <div style="font-weight: 600; margin-bottom: 0.5rem;">
                            ${alt.name_fr}
                        </div>
                        <div style="font-size: 0.8rem; color: #9ca3af;">
                            Cible : ${alt.body_part} ‚Ä¢ Niveau : ${alt.level}
                        </div>
                    </button>
                `).join('')}
            </div>
            
            <button onclick="this.closest('.modal-overlay').remove()" style="
                background: rgba(255, 255, 255, 0.1);
                border: 1px solid rgba(255, 255, 255, 0.2);
                border-radius: 8px;
                padding: 0.75rem;
                color: white;
                width: 100%;
                margin-top: 1rem;
                cursor: pointer;
            ">
                Annuler
            </button>
        </div>
    `;
    
    document.body.appendChild(modal);
}

// Fonction pour remplacer un exercice
async function replaceExercise(oldExerciseId, newExerciseId, exerciseIndex) {
    const currentWorkout = getCurrentAdaptiveWorkout();
    if (!currentWorkout) return;
    
    // Fermer le modal des alternatives
    document.querySelector('.modal-overlay[style*="z-index: 1001"]')?.remove();
    
    showLoadingOverlay('Remplacement de l\'exercice...');
    
    try {
        // R√©cup√©rer les d√©tails du nouvel exercice depuis l'API
        const response = await fetch(`/api/exercises/${newExerciseId}`);
        if (!response.ok) throw new Error('Erreur r√©cup√©ration exercice');
        
        const newExercise = await response.json();
        
        // Conserver les param√®tres de l'ancien exercice (sets, reps, etc.)
        const oldExerciseData = currentWorkout.exercises[exerciseIndex];
        
        // Mettre √† jour l'exercice dans le workout avec TOUTES les nouvelles donn√©es
        currentWorkout.exercises[exerciseIndex] = {
            exercise_id: newExercise.id,
            exercise_name: newExercise.name_fr,
            body_part: newExercise.body_part,
            sets: oldExerciseData.sets,
            target_reps: oldExerciseData.target_reps,
            suggested_weight: oldExerciseData.suggested_weight, // Garder le poids ou recalculer ?
            rest_time: oldExerciseData.rest_time
        };
        
        // Sauvegarder le workout modifi√©
        setCurrentAdaptiveWorkout(currentWorkout);
        
        hideLoadingOverlay();
        
        // Fermer et rouvrir le modal principal avec les nouvelles donn√©es
        document.querySelector('.modal-overlay')?.remove();
        
        // Attendre un peu pour que le DOM se mette √† jour
        setTimeout(() => {
            showAdaptiveWorkoutModal(currentWorkout);
        }, 100);
        
        showToast(`Exercice remplac√© par "${newExercise.name_fr}"`, 'success');
        
    } catch (error) {
        hideLoadingOverlay();
        console.error('Erreur remplacement exercice:', error);
        showToast('Erreur lors du remplacement', 'error');
    }
}

// Fonction pour d√©marrer la s√©ance adaptative
async function startAdaptiveWorkout() {
    const adaptiveWorkout = getCurrentAdaptiveWorkout();
    if (!adaptiveWorkout) {
        showToast('Aucune s√©ance adaptative s√©lectionn√©e', 'error');
        return;
    }
    
    try {
        console.log('üéØ D√©marrage s√©ance adaptative:', adaptiveWorkout);
        
        // √âTAPE 1: Sauvegarder le plan adaptatif AVANT de cr√©er la s√©ance
        localStorage.setItem('guidedWorkoutPlan', JSON.stringify(adaptiveWorkout));
        localStorage.setItem('workoutType', 'adaptive');
        localStorage.removeItem('adaptiveWorkoutPlan');
        
        // √âTAPE 2: Fermer le modal
        document.querySelector('.modal-overlay')?.remove();
        
        // √âTAPE 3: Basculer vers la vue workout
        showView('workout');
        
        // √âTAPE 4: Attendre que la vue soit charg√©e puis d√©marrer
        setTimeout(async () => {
            try {
                // V√©rifier s'il y a d√©j√† une s√©ance active
                const activeResponse = await fetch(`/api/users/${currentUser.id}/active-workout`);
                const activeData = await activeResponse.json();
                
                if (activeData.workout) {
                    console.log('üîÑ Abandon de la s√©ance active existante');
                    // Abandonner l'ancienne s√©ance
                    await fetch(`/api/workouts/${activeData.workout.id}/abandon`, {
                        method: 'PUT'
                    });
                }
                
                // Cr√©er une nouvelle s√©ance avec le type adaptatif
                const workoutResponse = await fetch('/api/workouts/', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        user_id: currentUser.id,
                        type: 'adaptive'  // IMPORTANT: Marquer comme adaptatif
                    })
                });
                
                if (!workoutResponse.ok) {
                    throw new Error('Erreur cr√©ation s√©ance');
                }
                
                const newWorkout = await workoutResponse.json();
                console.log('‚úÖ Nouvelle s√©ance adaptative cr√©√©e:', newWorkout);
                
                // Mettre √† jour l'√©tat global
                setCurrentWorkout(newWorkout);
                
                // D√©marrer le mode guid√©
                setTimeout(() => {
                    startGuidedWorkout(adaptiveWorkout);
                }, 500);
                
                showToast('S√©ance adaptative d√©marr√©e !', 'success');
                
            } catch (error) {
                console.error('Erreur d√©marrage s√©ance:', error);
                showToast('Erreur lors du d√©marrage', 'error');
            }
        }, 300);
        
    } catch (error) {
        console.error('Erreur startAdaptiveWorkout:', error);
        showToast('Erreur lors du d√©marrage', 'error');
    }
}

// Ajouter les exports pour les nouvelles fonctions
window.generateQuickWorkout = generateQuickWorkout;
window.startAdaptiveWorkout = startAdaptiveWorkout;


// ===== MISE √Ä JOUR DU MESSAGE DE BIENVENUE =====
function updateWelcomeMessage() {
    const welcomeElement = document.getElementById('welcomeMessage');
    if (welcomeElement && currentUser) {
        welcomeElement.textContent = `Bonjour ${currentUser.name} !`;
    }
}

function updateProfileSummary() {
    const summaryEl = document.getElementById('profileSummary');
    if (summaryEl && currentUser) {
        summaryEl.textContent = `${currentUser.height}cm ‚Ä¢ ${currentUser.weight}kg`;
    }
}

// ===== CHARGEMENT DES STATISTIQUES UTILISATEUR =====
async function loadUserStats() {
    if (!currentUser) return;
    
    const stats = await getUserStats(currentUser.id);
    
    if (stats) {
        displayStats(stats);
    } else {
        // Valeurs par d√©faut si erreur
        displayStats({
            total_workouts: 0,
            week_streak: 0,
            last_workout: null
        });
    }
}

// ===== AFFICHAGE DES STATISTIQUES =====
function displayStats(stats) {
    // Total des s√©ances
    const totalWorkoutsElement = document.getElementById('totalWorkouts');
    if (totalWorkoutsElement) {
        totalWorkoutsElement.textContent = stats.total_workouts || '0';
    }
    
    // S√©rie hebdomadaire
    const weekStreakElement = document.getElementById('weekStreak');
    if (weekStreakElement) {
        weekStreakElement.textContent = stats.week_streak || '0';
    }
    
    // Derni√®re s√©ance
    const lastWorkoutElement = document.getElementById('lastWorkout');
    if (lastWorkoutElement) {
        if (!stats.last_workout) {
            lastWorkoutElement.textContent = 'Jamais';
        } else {
            const date = new Date(stats.last_workout);
            // V√©rifier que la date est valide
            if (isNaN(date.getTime())) {
                lastWorkoutElement.textContent = 'Jamais';
            } else {
                const today = new Date();
                const diffDays = Math.floor((today - date) / (1000 * 60 * 60 * 24));
                
                if (diffDays === 0) {
                    lastWorkoutElement.textContent = "Aujourd'hui";
                } else if (diffDays === 1) {
                    lastWorkoutElement.textContent = "Hier";
                } else if (diffDays < 7) {
                    lastWorkoutElement.textContent = `Il y a ${diffDays} jours`;
                } else {
                    lastWorkoutElement.textContent = date.toLocaleDateString('fr-FR');
                }
            }
        }
    }
}

// ===== AFFICHAGE DES CARTES DE PR√âDICTION =====
function addPredictionCards(predictions) {
    const container = document.querySelector('.dashboard-grid');
    if (!container || !predictions.predictions) return;
    
    // Cr√©er une carte pour les tendances musculaires
    const trendCard = document.createElement('div');
    trendCard.className = 'stat-card prediction-card';
    trendCard.innerHTML = `
        <h3 style="color: var(--primary); margin-bottom: 1rem;">
            üìà Tendances sur 30 jours
        </h3>
        <div class="prediction-grid">
            ${Object.entries(predictions.predictions)
                .filter(([muscle, data]) => data.trend === 'improving')
                .slice(0, 3)
                .map(([muscle, data]) => `
                    <div class="trend-item">
                        <span class="muscle-name">${muscle}</span>
                        <span class="trend-indicator" style="color: #22c55e;">
                            ‚Üó +${((data.predicted_max - data.current_max) / data.current_max * 100).toFixed(0)}%
                        </span>
                    </div>
                `).join('')}
        </div>
    `;
    
    // Ajouter la carte seulement s'il y a des tendances positives
    const improvingMuscles = Object.entries(predictions.predictions)
        .filter(([muscle, data]) => data.trend === 'improving');
    
    if (improvingMuscles.length > 0) {
        container.appendChild(trendCard);
    }
    
    // Cr√©er une carte pour les muscles √† surveiller
    const declineMuscles = Object.entries(predictions.predictions)
        .filter(([muscle, data]) => data.trend === 'declining');
    
    if (declineMuscles.length > 0) {
        const warningCard = document.createElement('div');
        warningCard.className = 'stat-card warning-card';
        warningCard.innerHTML = `
            <h3 style="color: var(--warning); margin-bottom: 1rem;">
                ‚ö†Ô∏è √Ä surveiller
            </h3>
            <div class="prediction-grid">
                ${declineMuscles.map(([muscle, data]) => `
                    <div class="trend-item">
                        <span class="muscle-name">${muscle}</span>
                        <span class="trend-indicator" style="color: #ef4444;">
                            ‚Üò ${((data.predicted_max - data.current_max) / data.current_max * 100).toFixed(0)}%
                        </span>
                    </div>
                `).join('')}
            </div>
        `;
        container.appendChild(warningCard);
    }

    // Carte suggestions d'adaptation du programme
    if (getCurrentProgram()) {
        (async () => {
            try {
                const response = await fetch(
                    `/api/programs/${getCurrentProgram().id}/adjustments?user_id=${currentUser.id}`
                );
                
                if (response.ok) {
                    const suggestions = await response.json();
                    
                    if (suggestions.status === 'ready') {
                        const adaptCard = document.createElement('div');
                        adaptCard.className = 'stat-card adaptation-card';
                        
                        let suggestionsHTML = '<h3 style="color: var(--primary); margin-bottom: 1rem;">üîß Adaptation du programme</h3>';
                        
                        // Recommandations globales
                        if (suggestions.global_recommendations && suggestions.global_recommendations.length > 0) {
                            suggestionsHTML += '<div class="alert" style="background: rgba(255,193,7,0.1); padding: 1rem; border-radius: 0.5rem; margin-bottom: 1rem;">';
                            suggestions.global_recommendations.forEach(rec => {
                                suggestionsHTML += `
                                    <p style="margin: 0.5rem 0;"><strong>${rec.action}</strong></p>
                                    <small style="color: var(--gray-light);">${rec.reason}</small>
                                `;
                            });
                            suggestionsHTML += '</div>';
                        }
                        
                        // Suggestions par muscle (max 3)
                        const muscleEntries = Object.entries(suggestions.muscle_specific || {}).slice(0, 3);
                        if (muscleEntries.length > 0) {
                            suggestionsHTML += '<div class="muscle-suggestions">';
                            muscleEntries.forEach(([muscle, recs]) => {
                                suggestionsHTML += `<h5 style="color: var(--gray-light); text-transform: uppercase; font-size: 0.85rem;">${muscle}</h5>`;
                                recs.forEach(rec => {
                                    const iconMap = {
                                        'increase_volume': 'üìà',
                                        'change_exercises': 'üîÑ',
                                        'reduce_volume': 'üìâ'
                                    };
                                    suggestionsHTML += `
                                        <p style="margin: 0.5rem 0;">
                                            ${iconMap[rec.type] || '‚Ä¢'} ${rec.action}
                                        </p>
                                    `;
                                });
                            });
                            suggestionsHTML += '</div>';
                        }
                        
                        // Changements d'exercices sugg√©r√©s
                        if (suggestions.exercises_to_change && suggestions.exercises_to_change.length > 0) {
                            suggestionsHTML += '<div style="margin-top: 1rem;">';
                            suggestionsHTML += '<h5 style="color: var(--gray-light); font-size: 0.85rem;">EXERCICES √Ä VARIER</h5>';
                            suggestions.exercises_to_change.slice(0, 2).forEach(change => {
                                suggestionsHTML += `
                                    <p style="margin: 0.5rem 0; font-size: 0.9rem;">
                                        ‚Ä¢ ${change.current[0]} ‚Üí ${change.alternatives[0]}
                                    </p>
                                `;
                            });
                            suggestionsHTML += '</div>';
                        }
                        
                        // Bouton d'action
                        suggestionsHTML += `
                            <button class="btn btn-primary" onclick="showProgramAdjustments()" style="margin-top: 1.5rem; width: 100%;">
                                üîß Voir toutes les suggestions
                            </button>
                        `;
                        
                        adaptCard.innerHTML = suggestionsHTML;
                        container.appendChild(adaptCard);
                    }
                }
            } catch (error) {
                console.error('Erreur chargement suggestions adaptation:', error);
            }
        })();
    }
}

function logout() {
    localStorage.clear();
    setCurrentUser(null);
    showView('onboarding');
}
window.logout = logout;

// ===== RAFRA√éCHISSEMENT DU DASHBOARD =====
async function refreshDashboard() {
    await loadDashboard();
}

// ===== AFFICHAGE DES STATISTIQUES D√âTAILL√âES =====
function showDetailedStats() {
    // TODO: Impl√©menter une vue d√©taill√©e des statistiques
    console.log('Statistiques d√©taill√©es √† impl√©menter');
}

async function clearWorkoutHistory() {
    if (!currentUser) return;
    
    // Double confirmation
    const firstConfirm = confirm(
        "‚ö†Ô∏è ATTENTION ‚ö†Ô∏è\n\n" +
        "Voulez-vous vraiment supprimer TOUT l'historique de vos s√©ances ?\n\n" +
        "Cette action est IRR√âVERSIBLE."
    );
    
    if (!firstConfirm) return;
    
    const secondConfirm = confirm("Derni√®re confirmation - Cette action ne peut pas √™tre annul√©e.");
    
    if (!secondConfirm) return;
    
    try {
        const response = await fetch(`/api/users/${currentUser.id}/workout-history`, {
            method: 'DELETE'
        });
        
        if (response.ok) {
            const result = await response.json();
            showToast(`${result.deleted_workouts} s√©ances supprim√©es`, 'success');
            await loadDashboard();
        } else {
            showToast('Erreur lors de la suppression', 'error');
        }
    } catch (error) {
        console.error('Erreur suppression historique:', error);
        showToast('Erreur de connexion', 'error');
    }
}

async function getLastWorkoutDate() {
    try {
        const response = await fetch(`/api/users/${currentUser.id}/stats`);
        const stats = await response.json();
        return stats.last_workout || 'Jamais';
    } catch {
        return 'Jamais';
    }
}

// ===== AFFICHER LES AJUSTEMENTS DE PROGRAMME =====
async function showProgramAdjustments() {
    // Pour l'instant, rediriger vers le g√©n√©rateur
    // TODO: Cr√©er une interface d√©di√©e pour les ajustements
    showProgramGenerator();
    showToast('Analysez votre programme actuel depuis cette page', 'info');
}

async function modifyAdaptiveWorkout() {
    const adaptiveWorkout = getCurrentAdaptiveWorkout();
    if (!adaptiveWorkout) {
        showToast('Aucune s√©ance √† modifier', 'error');
        return;
    }
    
    // Fermer le modal actuel AVANT de r√©g√©n√©rer
    document.querySelector('.modal-overlay')?.remove();
    
    // D√©terminer le temps initialement s√©lectionn√©
    const estimatedTime = adaptiveWorkout.estimated_duration;
    
    showLoadingOverlay('G√©n√©ration d\'une nouvelle s√©ance...');
    
    try {
        const response = await fetch(`/api/users/${currentUser.id}/adaptive-workout`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ 
                time_available: estimatedTime,
                // AJOUTER un param√®tre pour forcer la r√©g√©n√©ration
                force_regenerate: true,
                // Optionnel : exclure les exercices d√©j√† s√©lectionn√©s pour plus de vari√©t√©
                exclude_exercises: adaptiveWorkout.exercises.map(ex => ex.exercise_id)
            })
        });
        
        hideLoadingOverlay();
        
        if (!response.ok) {
            throw new Error('Erreur lors de la r√©g√©n√©ration');
        }
        
        const newWorkout = await response.json();
        
        // Mettre √† jour le workout actuel
        setCurrentAdaptiveWorkout(newWorkout);
        
        // Afficher le nouveau modal
        showAdaptiveWorkoutModal(newWorkout);
        
        showToast('Nouvelle s√©ance g√©n√©r√©e !', 'success');
        
    } catch (error) {
        hideLoadingOverlay();
        console.error('Erreur r√©g√©n√©ration:', error);
        showToast('Erreur lors de la r√©g√©n√©ration', 'error');
    }
}


// ===== EXPORT GLOBAL =====
window.clearWorkoutHistory = clearWorkoutHistory;
window.loadDashboard = loadDashboard;
window.refreshDashboard = refreshDashboard;
window.showDetailedStats = showDetailedStats;
window.showProgramAdjustments = showProgramAdjustments;
window.generateQuickWorkout = generateQuickWorkout;
window.startAdaptiveWorkout = startAdaptiveWorkout;
window.modifyAdaptiveWorkout = modifyAdaptiveWorkout;
window.showExerciseAlternatives = showExerciseAlternatives;
window.replaceExercise = replaceExercise;

// Export pour les autres modules
export {
    loadDashboard,
    refreshDashboard,
    updateWelcomeMessage,
    loadUserStats,
    displayStats,
    addPredictionCards
};


--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\frontend\app-dev.js ---
--- Nom du fichier: app-dev.js ---
--- Contenu ---
// ===== MODULE D√âVELOPPEMENT =====
// Ce fichier g√®re le mode d√©veloppement et les outils de debug
// Il fournit des raccourcis et des fonctions utiles pour le d√©veloppement

import {
    setCurrentUser,
    setIsDevMode,
    currentUser,
    currentWorkout,
    sessionHistory,
    isDevMode
} from './app-state.js';

import { showMainInterface } from './app-navigation.js';
import { showToast } from './app-ui.js';
import { checkDevMode as checkDevAPI, initDevMode, loadUserFromAPI } from './app-api.js';

// ===== V√âRIFICATION DU MODE D√âVELOPPEMENT =====
async function checkDevMode() {
    const devMode = await checkDevAPI();
    setIsDevMode(devMode);
    
    if (devMode) {
        console.log('Mode d√©veloppement activ√©');
        setupDevShortcuts();
    }
}

// ===== CONFIGURATION DES RACCOURCIS D√âVELOPPEMENT =====
function setupDevShortcuts() {
    // Afficher un indicateur visuel du mode dev
    const devBadge = document.createElement('div');
    devBadge.id = 'devModeBadge';
    devBadge.style.cssText = `
        position: fixed;
        top: 10px;
        right: 10px;
        background: #f59e0b;
        color: white;
        padding: 5px 10px;
        border-radius: 5px;
        font-size: 12px;
        z-index: 9999;
        cursor: pointer;
    `;
    devBadge.textContent = 'DEV MODE';
    devBadge.onclick = showDevMenu;
    document.body.appendChild(devBadge);
    
    // Raccourcis clavier
    document.addEventListener('keydown', async (e) => {
        // Ctrl+D : Charger le profil dev
        if (e.ctrlKey && e.key === 'd') {
            e.preventDefault();
            await loadDevProfile();
        }
        
        // Ctrl+H : Afficher l'historique dans la console
        if (e.ctrlKey && e.key === 'h') {
            e.preventDefault();
            logState();
        }
        
        // Ctrl+R : Reset le workout en cours (sans recharger la page)
        if (e.ctrlKey && e.key === 'r') {
            e.preventDefault();
            if (confirm('R√©initialiser le workout en cours ?')) {
                resetCurrentWorkout();
            }
        }
        
        // Ctrl+L : Logger localStorage
        if (e.ctrlKey && e.key === 'l') {
            e.preventDefault();
            logLocalStorage();
        }
        
        // Ctrl+S : Simuler une s√©rie
        if (e.ctrlKey && e.key === 's') {
            e.preventDefault();
            simulateSet();
        }
    });
}

// ===== MENU D√âVELOPPEMENT =====
function showDevMenu() {
    const menu = document.createElement('div');
    menu.style.cssText = `
        position: fixed;
        top: 50px;
        right: 10px;
        background: white;
        border: 2px solid #f59e0b;
        border-radius: 8px;
        padding: 15px;
        z-index: 10000;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        min-width: 200px;
    `;
    
    menu.innerHTML = `
        <h3 style="margin: 0 0 10px 0; color: #f59e0b;">Outils Dev</h3>
        <button onclick="loadDevProfile()" style="display: block; margin: 5px 0; width: 100%;">
            Charger profil dev
        </button>
        <button onclick="logState()" style="display: block; margin: 5px 0; width: 100%;">
            Log √©tat complet
        </button>
        <button onclick="logLocalStorage()" style="display: block; margin: 5px 0; width: 100%;">
            Log localStorage
        </button>
        <button onclick="clearLocalStorage()" style="display: block; margin: 5px 0; width: 100%;">
            Clear localStorage
        </button>
        <button onclick="simulateSet()" style="display: block; margin: 5px 0; width: 100%;">
            Simuler une s√©rie
        </button>
        <button onclick="this.parentElement.remove()" style="display: block; margin: 5px 0; width: 100%;">
            Fermer
        </button>
    `;
    
    document.body.appendChild(menu);
    
    // Fermer le menu en cliquant ailleurs
    setTimeout(() => {
        document.addEventListener('click', function closeMenu(e) {
            if (!menu.contains(e.target) && e.target.id !== 'devModeBadge') {
                menu.remove();
                document.removeEventListener('click', closeMenu);
            }
        });
    }, 100);
}

// ===== CHARGEMENT DU PROFIL D√âVELOPPEMENT =====
async function loadDevProfile() {
    try {
        // Initialiser le profil dev c√¥t√© serveur
        const devData = await initDevMode();
        
        if (!devData) {
            throw new Error('Impossible d\'initialiser le mode dev');
        }
        
        // Charger l'utilisateur dev
        const user = await loadUserFromAPI(devData.user_id);
        
        if (!user) {
            throw new Error('Impossible de charger le profil dev');
        }
        
        setCurrentUser(user);
        localStorage.setItem('userProfile', JSON.stringify(user));
        localStorage.setItem('userId', user.id);
        
        showMainInterface();
        showToast(`Profil dev charg√© (${devData.workouts_count} workouts historiques)`, 'success');
        
    } catch (error) {
        console.error('Erreur chargement profil dev:', error);
        showToast('Erreur lors du chargement du profil dev', 'error');
    }
}

// ===== LOGGING DE L'√âTAT =====
function logState() {
    console.group('üîß √âtat de l\'application');
    console.log('Current User:', currentUser);
    console.log('Current Workout:', currentWorkout);
    console.log('Session History:', sessionHistory);
    console.log('Workout History (localStorage):', localStorage.getItem('currentWorkoutHistory'));
    console.log('Pending Sets:', localStorage.getItem('pendingSets'));
    console.log('Dev Mode:', isDevMode);
    console.groupEnd();
}

// ===== LOGGING DU LOCALSTORAGE =====
function logLocalStorage() {
    console.group('üíæ LocalStorage');
    for (let i = 0; i < localStorage.length; i++) {
        const key = localStorage.key(i);
        const value = localStorage.getItem(key);
        console.log(`${key}:`, value);
    }
    console.groupEnd();
}

// ===== NETTOYAGE DU LOCALSTORAGE =====
function clearLocalStorage() {
    if (confirm('Effacer tout le localStorage ?')) {
        localStorage.clear();
        showToast('LocalStorage effac√©', 'success');
        console.log('LocalStorage cleared');
    }
}

// ===== RESET DU WORKOUT EN COURS =====
function resetCurrentWorkout() {
    if (currentWorkout && window.abandonWorkout) {
        window.abandonWorkout();
    } else if (currentWorkout) {
        console.warn('abandonWorkout non disponible');
    }
    
    showMainInterface();
    showToast('Workout r√©initialis√©', 'info');
}

// ===== SIMULATION D'UNE S√âRIE =====
function simulateSet() {
    if (!currentWorkout) {
        showToast('Aucune s√©ance active', 'error');
        return;
    }
    
    if (!window.currentExercise) {
        showToast('S√©lectionnez d\'abord un exercice', 'error');
        return;
    }
    
    // Remplir automatiquement les champs
    const weightInput = document.getElementById('setWeight');
    const repsInput = document.getElementById('setReps');
    
    if (weightInput && repsInput) {
        weightInput.value = 60; // Poids par d√©faut
        repsInput.value = 10; // Reps par d√©faut
        
        // S√©lectionner fatigue et effort moyens
        if (window.selectFatigue) window.selectFatigue(3);
        if (window.selectEffort) window.selectEffort(3);
        
        showToast('S√©rie pr√©-remplie - Cliquez sur Valider', 'info');
    } else {
        showToast('Interface de s√©rie non trouv√©e', 'error');
    }
}

// ===== EXPORT GLOBAL POUR LE MENU DEV =====
window.loadDevProfile = loadDevProfile;
window.logState = logState;
window.logLocalStorage = logLocalStorage;
window.clearLocalStorage = clearLocalStorage;
window.simulateSet = simulateSet;
window.showDevMenu = showDevMenu;

// ===== AUTO-INITIALISATION =====
// V√©rifier automatiquement le mode dev au chargement
checkDevMode();

// Export pour les autres modules
export {
    checkDevMode,
    setupDevShortcuts,
    loadDevProfile,
    logState
};
--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\frontend\app-equipment.js ---
--- Nom du fichier: app-equipment.js ---
--- Contenu ---
// ===== GESTIONNAIRE D'√âQUIPEMENT =====
// Ce fichier centralise tous les calculs li√©s √† l'√©quipement et aux poids disponibles
// Il d√©termine quels poids sont accessibles pour chaque type d'exercice

import { currentUser } from './app-state.js';
import { TIME_BASED_KEYWORDS } from './app-config.js';
import { showToast } from './app-ui.js';

// ===== CALCUL DES POIDS DISPONIBLES =====
function calculateAvailableWeights(exercise) {
    if (!currentUser || !currentUser.equipment_config) return [20, 40, 60];
    
    const config = currentUser.equipment_config;
    let weights = new Set();
    
    // D√©terminer si c'est un exercice temporel
    const isTimeBased = TIME_BASED_KEYWORDS.some(keyword => 
        exercise.name_fr.toLowerCase().includes(keyword)
    );
    
    // Exercices au poids du corps
    if (exercise.equipment.includes('poids_du_corps')) {
        // Pour les exercices temporels, seulement l'option sans poids
        if (isTimeBased) {
            return [0];
        }
        
        // Poids du corps de base
        const bodyWeight = currentUser.weight || 75;
        
        // Commencer avec l'option sans charge (0 = poids du corps seul)
        weights.add(0);
        
        // Si l'utilisateur a des lests, ajouter les options avec charge additionnelle
        if (config.autres?.lest_corps?.weights?.length > 0) {
            // Pour chaque lest disponible, ajouter l'option
            config.autres.lest_corps.weights.forEach(lestWeight => {
                weights.add(lestWeight); // Stocker juste le poids du lest
            });
        }
        
        // Retourner les poids tri√©s
        return Array.from(weights).sort((a, b) => a - b);
    }
    
    // Barres + disques
    if (exercise.equipment.some(eq => eq.includes('barbell'))) {
        let barWeight = 0;
        
        if (exercise.equipment.includes('barre_olympique')) {
            if (config.barres?.olympique?.available) barWeight = 20;
            else if (config.barres?.courte?.available) barWeight = 2.5;
        } else if (exercise.equipment.includes('barre_ez')) {
            if (config.barres?.ez?.available) barWeight = 10;
        }
        
        if (barWeight > 0) {
            weights.add(barWeight);

            // Calculer uniquement les poids VRAIMENT possibles avec les disques disponibles
            if (config.disques?.weights && Object.keys(config.disques.weights).length > 0) {
                const possibleWeights = calculateAllPossibleBarWeights(barWeight, config.disques.weights);
                
                // Si on a plus de 3 options, exclure la barre seule pour √©viter les sauts bizarres
                if (possibleWeights.length > 3) {
                    possibleWeights.forEach(w => {
                        if (w !== barWeight || possibleWeights.length === 1) {
                            weights.add(w);
                        }
                    });
                } else {
                    possibleWeights.forEach(w => weights.add(w));
                }
            } else {
                // Pas de disques, seulement la barre
                weights.add(barWeight);
            }
        }
    }
    
    // Halt√®res (dumbbells classiques OU halt√®res courtes + disques)
    if (exercise.equipment.includes('dumbbells')) {
        // Option 1: Halt√®res fixes classiques
        if (config.dumbbells?.weights?.length > 0) {
            config.dumbbells.weights.forEach(w => {
                weights.add(w * 2); // Paire d'halt√®res
            });
        }
        
        // Option 2: Halt√®res courtes + disques (fallback intelligent)
        if (config.barres?.courte?.available && config.disques?.weights) {
            const shortBarbellWeight = 2.5; // Poids d'une halt√®re courte
            const basePairWeight = shortBarbellWeight * 2; // Paire vide
            
            // Ajouter la paire vide
            weights.add(basePairWeight);
            
            // Calculer tous les poids possibles avec des disques
            const plateWeights = Object.keys(config.disques.weights)
                .map(w => parseFloat(w))
                .filter(w => config.disques.weights[w] >= 2); // Au moins 2 disques par poids
            
            // Pour chaque combinaison de disques possibles
            for (let totalPlateWeight = 0; totalPlateWeight <= 100; totalPlateWeight += 2.5) {
                if (canMakePlateWeightForDumbbells(totalPlateWeight, plateWeights)) {
                    weights.add(basePairWeight + totalPlateWeight);
                }
            }
        }
    }
    
    // Kettlebells
    if (exercise.equipment.includes('kettlebell') && config.autres?.kettlebell?.weights) {
        config.autres.kettlebell.weights.forEach(w => weights.add(w));
    }
    
    // Filtrer et trier
    return Array.from(weights)
        .filter(w => w <= 300 && w >= 0)
        .sort((a, b) => a - b);
}


// Nouvelle fonction helper sp√©cifique aux halt√®res courtes
function canMakePlateWeightForDumbbells(targetPlateWeight, availablePlates) {
    if (targetPlateWeight === 0) return true;
    
    // Algorithme simple : essayer de faire le poids avec les disques disponibles
    // Chaque disque doit √™tre utilis√© en paire (un sur chaque halt√®re)
    let remaining = targetPlateWeight;
    const sortedPlates = [...availablePlates].sort((a, b) => b - a);
    
    for (const plate of sortedPlates) {
        const pairWeight = plate * 2; // Paire de disques
        const maxPairs = Math.floor(remaining / pairWeight);
        if (maxPairs > 0) {
            remaining -= maxPairs * pairWeight;
        }
    }
    
    return remaining === 0;
}

// ===== VALIDATION DU POIDS =====
function validateWeight(exercise, weight) {
    const availableWeights = calculateAvailableWeights(exercise);
    
    if (availableWeights.length > 0 && !availableWeights.includes(weight)) {
        // Trouver le poids disponible le plus proche
        const closest = getClosestPossibleWeight(exercise, weight);
        
        // V√©rifier si c'est vraiment r√©alisable
        if (!isWeightPossible(exercise, closest)) {
            // Message plus informatif
            const availableWeights = calculateAvailableWeights(exercise);
            const nearbyOptions = availableWeights
                .filter(w => Math.abs(w - weight) <= 10)
                .slice(0, 3)
                .join(', ');

            showToast(
                `‚ö†Ô∏è ${weight}kg impossible avec vos disques. Suggestion : ${closest}kg${nearbyOptions ? ` (autres options : ${nearbyOptions}kg)` : ''}`, 
                'warning'
            );
        }
        
        return closest;
    }
    
    return weight;
}

// ===== OBTENIR LE POIDS POSSIBLE LE PLUS PROCHE =====
export function getClosestPossibleWeight(exercise, targetWeight) {
    const availableWeights = calculateAvailableWeights(exercise);
    
    if (availableWeights.length === 0) {
        return targetWeight;
    }
    
    // Si le poids exact existe, parfait
    if (availableWeights.includes(targetWeight)) {
        return targetWeight;
    }
    
    // Trouver les options au-dessus et en-dessous
    let bestLower = null;
    let bestHigher = null;
    
    for (const weight of availableWeights) {
        if (weight < targetWeight && (bestLower === null || weight > bestLower)) {
            bestLower = weight;
        } else if (weight > targetWeight && (bestHigher === null || weight < bestHigher)) {
            bestHigher = weight;
        }
    }
    
    // Logique de s√©lection intelligente
    if (bestLower !== null && bestHigher !== null) {
        const lowerDiff = targetWeight - bestLower;
        const higherDiff = bestHigher - targetWeight;
        
        // Pr√©f√©rer le poids inf√©rieur sauf si :
        // - La diff√©rence est > 5kg ET le poids sup√©rieur est plus proche
        // - Le poids inf√©rieur est < 50% du poids cible
        if (bestLower < targetWeight * 0.5) {
            return bestHigher;
        }
        
        return (lowerDiff <= 5 || lowerDiff <= higherDiff) ? bestLower : bestHigher;
    }
    
    // Si on n'a qu'une option
    return bestLower || bestHigher || availableWeights[0];
}

// ===== V√âRIFIER SI UN POIDS EST R√âALISABLE =====
export function isWeightPossible(exercise, weight, config) {
    const equipmentConfig = config || currentUser?.equipment_config;
    if (!equipmentConfig) return true; // Pas de validation sans config
    
    // Pour barres + disques
    if (exercise.equipment.some(eq => eq.includes('barbell'))) {
        // V√©rifier qu'on a une barre
        const hasBarbell = Object.values(equipmentConfig.barres || {})
            .some(b => b.available && b.count > 0);
        
        if (!hasBarbell) return false;
        
        // Calculer si on peut atteindre ce poids avec les disques disponibles
        const barWeight = getBarWeight(exercise, equipmentConfig);
        const targetPlateWeight = weight - barWeight;
        
        if (targetPlateWeight < 0) return false; // Poids demand√© < poids de la barre
        if (targetPlateWeight === 0) return true; // Juste la barre
        
        // V√©rifier si on peut faire cette combinaison avec les disques
        return canMakePlateWeightOptimal(targetPlateWeight / 2, equipmentConfig.disques?.weights || {});
    }
    
    // Pour halt√®res et kettlebells, v√©rifier directement
    const availableWeights = calculateAvailableWeights(exercise);
    return availableWeights.includes(weight);
}

// ===== FONCTIONS HELPER PRIV√âES =====
function getBarWeight(exercise, config) {
    if (exercise.equipment.includes('barre_olympique')) {
        if (config.barres?.olympique?.available) return 20;
        if (config.barres?.courte?.available) return 2.5;
    } else if (exercise.equipment.includes('barre_ez')) {
        if (config.barres?.ez?.available) return 10;
    }
    return 0;
}

// ===== CALCUL INTELLIGENT DES POIDS POSSIBLES =====
function calculateAllPossibleBarWeights(barWeight, availablePlates) {
    // Si pas de disques, retourner seulement la barre
    if (!availablePlates || Object.keys(availablePlates).length === 0) {
        return [barWeight];
    }
    
    // Cr√©er un inventaire des disques disponibles par c√¥t√©
    const platesInventory = [];
    Object.entries(availablePlates).forEach(([weight, count]) => {
        const w = parseFloat(weight);
        const c = parseInt(count);
        if (c > 0) {
            // Nombre de disques disponibles par c√¥t√©
            const perSide = Math.floor(c / 2);
            if (perSide > 0) {
                platesInventory.push({ weight: w, count: perSide });
            }
        }
    });
    
    if (platesInventory.length === 0) {
        return [barWeight];
    }
    
    // Utiliser un Set pour √©viter les doublons
    const possibleWeightsPerSide = new Set([0]); // Commencer avec 0 (juste la barre)
    
    // Pour chaque type de disque
    for (const plate of platesInventory) {
        const currentWeights = Array.from(possibleWeightsPerSide);
        
        // Pour chaque poids existant
        for (const baseWeight of currentWeights) {
            // Essayer d'ajouter 1, 2, 3... disques de ce type
            for (let i = 1; i <= plate.count; i++) {
                const newWeight = baseWeight + (plate.weight * i);
                
                // Limite raisonnable
                if (newWeight <= 200) {
                    possibleWeightsPerSide.add(newWeight);
                }
            }
        }
    }
    
    // Convertir en poids total et trier
    const allWeights = Array.from(possibleWeightsPerSide)
        .map(perSide => barWeight + (perSide * 2))
        .sort((a, b) => a - b);
    
    // Filtrer la barre seule si on a beaucoup d'autres options
    if (allWeights.length > 10 && barWeight >= 10) {
        return allWeights.filter(w => w !== barWeight);
    }
    
    return allWeights;
}

// ===== V√âRIFICATION OPTIMALE SI UN POIDS EST POSSIBLE =====
function canMakePlateWeightOptimal(targetPerSide, availablePlates) {
    // Si le poids cible est 0, c'est toujours possible
    if (targetPerSide === 0) return true;
    
    // Cr√©er liste des disques utilisables (par paires)
    const usablePlates = [];
    Object.entries(availablePlates).forEach(([weight, count]) => {
        const w = parseFloat(weight);
        const c = parseInt(count);
        const pairs = Math.floor(c / 2);
        for (let i = 0; i < pairs; i++) {
            usablePlates.push(w);
        }
    });
    
    if (usablePlates.length === 0) return false;
    
    // Programmation dynamique : peut-on atteindre exactement targetPerSide ?
    const dp = new Array(Math.floor(targetPerSide) + 1).fill(false);
    dp[0] = true;
    
    for (const plate of usablePlates) {
        // Parcourir en sens inverse pour ne pas r√©utiliser le m√™me disque
        for (let weight = targetPerSide; weight >= plate; weight--) {
            if (dp[Math.floor(weight - plate)]) {
                dp[Math.floor(weight)] = true;
            }
        }
    }
    
    // V√©rifier avec tol√©rance pour les arrondis
    return dp[Math.floor(targetPerSide)] || 
           (targetPerSide % 1 !== 0 && dp[Math.floor(targetPerSide + 0.5)]);
}

// ===== FILTRAGE DES EXERCICES PAR √âQUIPEMENT =====
export function filterExercisesByEquipment(exercises) {
    const config = currentUser?.equipment_config;
    if (!config) return exercises;
    
    return exercises.filter(exercise => {
        const required = exercise.equipment || [];
        if (required.length === 0) return true; // Bodyweight
        
        // AJOUTER CE BLOC - V√©rifier si on a des barres courtes qui peuvent remplacer les halt√®res
        const hasShortBarbells = config.barres?.courte?.available && 
                                config.barres?.courte?.count >= 2;
        
        // V√©rifier si on a AU MOINS UN √©quipement requis (logique OR)
        return required.some(eq => {
            // Si l'exercice demande des dumbbells et qu'on a des barres courtes, c'est OK
            if (eq === 'dumbbells' && hasShortBarbells) {
                return true;
            }

            // Sinon, v√©rifier normalement
            switch(eq) {
                case 'poids_du_corps':
                    return true;
                case 'dumbbells':
                    // V√©rifier dumbbells fixes OU √©quivalence barres courtes + disques
                    const hasDumbbells = config.dumbbells?.available && 
                        config.dumbbells?.weights?.length > 0;
                    const hasEquivalence = config.barres?.courte?.available && 
                        config.barres?.courte?.count >= 2 && 
                        config.disques?.available && 
                        Object.keys(config.disques?.weights || {}).length > 0;
                    return hasDumbbells || hasEquivalence;
                case 'barre_olympique':
                    return config.barres?.olympique?.available || 
                        config.barres?.courte?.available;
                case 'barre_ez':
                    return config.barres?.ez?.available;
                case 'banc_plat':
                    return config.banc?.available;
                case 'banc_inclinable':
                    return config.banc?.available && config.banc?.inclinable_haut;
                case 'banc_declinable':
                    return config.banc?.available && config.banc?.inclinable_bas;
                case 'poulies':
                    return false; // Pas dans la config actuelle
                case 'elastiques':  // Alias pour compatibilit√©
                    return config.elastiques?.available && 
                        config.elastiques?.bands?.length > 0;
                case 'barre_traction':
                    return config.autres?.barre_traction?.available;
                case 'kettlebell':
                    return config.autres?.kettlebell?.available &&
                        config.autres?.kettlebell?.weights?.length > 0;
                case 'disques':
                    return config.disques?.available && 
                        Object.keys(config.disques?.weights || {}).length > 0;
                case 'machine_convergente':
                case 'machine_pectoraux':
                case 'machine_developpe':
                    return false; // Machines non g√©r√©es actuellement
                default:
                    console.warn(`√âquipement non g√©r√©: ${eq}`);
                    return false;
            }
        });
    });
}

// ===== D√âTERMINATION DU TYPE D'EXERCICE =====
function getExerciseType(exercise) {
    const isTimeBased = TIME_BASED_KEYWORDS.some(keyword => 
        exercise.name_fr.toLowerCase().includes(keyword)
    );
    
    const isBodyweight = exercise.equipment.includes('poids_du_corps');
    
    if (isTimeBased) {
        return 'time_based';
    } else if (isBodyweight) {
        return exercise.equipment.some(eq => eq.includes('lest')) ? 
            'bodyweight_weighted' : 'bodyweight_pure';
    } else {
        return 'weighted';
    }
}

// ===== CALCUL DU POIDS SUGG√âR√â =====
function calculateSuggestedWeight(exercise, lastSet = null) {
    const availableWeights = calculateAvailableWeights(exercise);
    
    if (availableWeights.length === 0) {
        return 20; // Valeur par d√©faut
    }
    
    // Si on a une s√©rie pr√©c√©dente
    if (lastSet) {
        let adjustedWeight;
        
        // Ajustement bas√© sur la fatigue et les performances
        if (lastSet.fatigue_level >= 8) {
            adjustedWeight = Math.max(0, lastSet.weight * 0.9);
        } else if (lastSet.actual_reps > lastSet.target_reps + 2) {
            adjustedWeight = lastSet.weight + 2.5;
        } else {
            adjustedWeight = lastSet.weight;
        }
        
        // Arrondir au poids disponible le plus proche
        return availableWeights.reduce((prev, curr) => 
            Math.abs(curr - adjustedWeight) < Math.abs(prev - adjustedWeight) ? curr : prev
        );
    }
    
    // Sinon, prendre un poids au milieu de la gamme
    const exerciseType = getExerciseType(exercise);
    
    // Exercices au poids du corps
    if (exercise.equipment.includes('poids_du_corps')) {
        // Pour les exercices temporels, pas de poids
        if (getExerciseType(exercise) === 'time_based') {
            return 0;
        }
        
        // Pour les exercices bodyweight, commencer sans charge additionnelle
        return 0;
    }

// Si on arrive ici, prendre un poids au milieu de la gamme disponible
return availableWeights[Math.floor(availableWeights.length / 2)] || 20;
}

// ===== FORMATAGE DE L'AFFICHAGE DU POIDS =====
function formatWeightDisplay(weight, exercise) {
    const exerciseType = getExerciseType(exercise);
    const userWeight = currentUser?.weight || 75;
    
    if (exerciseType === 'time_based' && weight === 0) {
        return 'Sans charge';
    } else if (exerciseType === 'bodyweight_pure' || exerciseType === 'bodyweight_weighted') {
        if (weight === 0) {
            return `Poids du corps (${userWeight}kg)`;
        } else {
            // Pour bodyweight, weight repr√©sente le lest ajout√©
            const totalWeight = userWeight + weight;
            return `${totalWeight}kg (corps ${userWeight}kg + lest ${weight}kg)`;
        }
    } else {
        return `${weight}kg`;
    }
}

// Export pour les autres modules
export {
    calculateAvailableWeights,
    validateWeight,
    getExerciseType,
    calculateSuggestedWeight,
    formatWeightDisplay
};
--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\frontend\app-exercises.js ---
--- Nom du fichier: app-exercises.js ---
--- Contenu ---
// ===== GESTIONNAIRE D'EXERCICES =====
// Ce fichier g√®re la s√©lection et l'affichage des exercices
// Il filtre les exercices disponibles selon l'√©quipement de l'utilisateur

import {
    currentUser,
    allExercises,
    currentExercise,
    setCurrentExercise,
    currentSetNumber,
    setCurrentSetNumber,
    setCurrentTargetReps,
    lastExerciseEndTime,
    setLastExerciseEndTime,
    interExerciseRestTime,
    setInterExerciseRestTime,
    currentWorkout,
    setSelectedFatigue,
    setSelectedEffort,
    setSetStartTime,
    setLastSetEndTime
} from './app-state.js';

import { filterExercisesByEquipment } from './app-equipment.js';
import { createRestPeriod } from './app-api.js';
import { addToSessionHistory } from './app-history.js';

// ===== AFFICHAGE DU S√âLECTEUR D'EXERCICES =====
function showExerciseSelector() {
    const container = document.getElementById('exerciseArea');
    if (!container) return;

    // Validation de la configuration d'√©quipement
    if (!currentUser?.equipment_config) {
        container.innerHTML = '<p style="color: var(--gray-light);">Configuration d\'√©quipement requise</p>';
        return;
    }
    
    // Filtrer les exercices disponibles selon l'√©quipement
    const availableExercises = filterExercisesByEquipment(allExercises);
    
    // Grouper par partie du corps
    const grouped = {};
    availableExercises.forEach(ex => {
        if (!grouped[ex.body_part]) grouped[ex.body_part] = [];
        grouped[ex.body_part].push(ex);
    });
    
    container.innerHTML = `
        <div class="exercise-selector">
            <h3>S√©lectionner un exercice</h3>
            <input type="text" id="exerciseSearch" placeholder="Rechercher..." 
                   onkeyup="filterExerciseList()" class="form-input">
            
            <div id="exerciseListSelector" class="exercise-list-selector">
                ${Object.entries(grouped).map(([part, exercises]) => `
                    <div class="exercise-group">
                        <h4>${part}</h4>
                        ${exercises.map(ex => `
                            <div class="exercise-option" onclick="selectExercise(${ex.id})">
                                <div class="exercise-name">${ex.name_fr}</div>
                                <div class="exercise-equipment">${ex.equipment.join(', ')}</div>
                            </div>
                        `).join('')}
                    </div>
                `).join('')}
            </div>
        </div>
    `;
}

// ===== FILTRAGE DE LA LISTE D'EXERCICES =====
function filterExerciseList() {
    const searchInput = document.getElementById('exerciseSearch');
    if (!searchInput) return;
    
    const searchTerm = searchInput.value.toLowerCase();
    const groups = document.querySelectorAll('.exercise-group');
    
    groups.forEach(group => {
        const exercises = group.querySelectorAll('.exercise-option');
        let hasVisible = false;
        
        exercises.forEach(ex => {
            const name = ex.querySelector('.exercise-name').textContent.toLowerCase();
            if (name.includes(searchTerm)) {
                ex.style.display = 'block';
                hasVisible = true;
            } else {
                ex.style.display = 'none';
            }
        });
        
        group.style.display = hasVisible ? 'block' : 'none';
    });
}

// ===== S√âLECTION D'UN EXERCICE =====
function selectExercise(exerciseId) {
    // Calculer le repos inter-exercices si applicable
    if (lastExerciseEndTime) {
        const restTime = Math.floor((new Date() - lastExerciseEndTime) / 1000);
        setInterExerciseRestTime(restTime);
        
        if (restTime > 10) {
            // Ajouter le repos inter-exercices √† l'historique
            addToSessionHistory('rest', {
                duration: restTime,
                type: 'inter_exercise'
            });
            
            const restData = {
                workout_id: currentWorkout.id,
                rest_type: 'inter_exercise',
                duration: restTime,
                timestamp: new Date().toISOString()
            };
            
            const interExerciseRests = JSON.parse(localStorage.getItem('interExerciseRests') || '[]');
            interExerciseRests.push(restData);
            localStorage.setItem('interExerciseRests', JSON.stringify(interExerciseRests));
            
            createRestPeriod(restData).catch(err => 
                console.error('Erreur sync repos inter-exercices:', err)
            );
        }
        
        setLastExerciseEndTime(null);
    }
    
    const exercise = allExercises.find(ex => ex.id === exerciseId);
    if (!exercise) return;
    
    setCurrentExercise(exercise);
    // Nettoyer l'ID de la derni√®re s√©rie compl√©t√©e (nouveau exercice)
    localStorage.removeItem('lastCompletedSetId');
    
    // Ajouter le changement d'exercice √† l'historique
    addToSessionHistory('exercise_change', {
        exerciseId: exercise.id,
        exerciseName: exercise.name_fr,
        bodyPart: exercise.body_part
    });
    
    setCurrentSetNumber(1);
    
    // D√©terminer les r√©p√©titions cibles selon le niveau de l'utilisateur
    if (currentUser && exercise.sets_reps) {
        const userLevel = currentUser.experience_level;
        const levelConfig = exercise.sets_reps.find(sr => sr.level === userLevel);
        if (levelConfig) {
            setCurrentTargetReps(levelConfig.reps);
        } else {
            setCurrentTargetReps(10);
        }
    }
    
    // Afficher l'interface de saisie des s√©ries
    if (window.showSetInput) {
        window.showSetInput();
    }
}

// ===== FIN D'UN EXERCICE =====
function finishExercise() {
    // Nettoyer l'ID de la derni√®re s√©rie (exercice termin√©)
    localStorage.removeItem('lastCompletedSetId');
    // Capturer le temps de fin de l'exercice
    setLastExerciseEndTime(new Date());
    
    // Arr√™ter les timers
    if (window.timerInterval) {
        clearInterval(window.timerInterval);
        window.setTimerInterval && window.setTimerInterval(null);
    }
    if (window.restTimerInterval) {
        clearInterval(window.restTimerInterval);
        window.setRestTimerInterval && window.setRestTimerInterval(null);
    }
    
    // Sauvegarder l'historique de l'exercice
    if (currentExercise && currentSetNumber > 1) {
        const exerciseHistory = {
            exerciseId: currentExercise.id,
            exerciseName: currentExercise.name_fr,
            totalSets: currentSetNumber - 1,
            timestamp: new Date().toISOString()
        };
        const workoutHistory = JSON.parse(localStorage.getItem('currentWorkoutHistory') || '[]');
        workoutHistory.push(exerciseHistory);
        localStorage.setItem('currentWorkoutHistory', JSON.stringify(workoutHistory));
    }
    
    // R√©initialiser
    setCurrentExercise(null);
    setCurrentSetNumber(1);
    setSetStartTime(null);
    setLastSetEndTime(null);
    setSelectedFatigue(3);
    setSelectedEffort(3);
    
    // V√©rifier le mode de s√©ance et afficher l'interface appropri√©e
    if (currentWorkout && currentWorkout.status === 'started') {
        const guidedPlan = localStorage.getItem('guidedWorkoutPlan');
        if (currentWorkout.type === 'adaptive' && guidedPlan) {
            // Mode guid√© - passer √† l'exercice suivant
            import('./app-guided-workout.js').then(module => {
                if (module.nextGuidedExercise) {
                    module.nextGuidedExercise();  // G√®re progression compl√®te
                } else if (window.nextGuidedExercise) {
                    window.nextGuidedExercise();  // Fallback global
                } else {
                    console.warn('nextGuidedExercise non disponible, retour au s√©lecteur');
                    showExerciseSelector();
                }
            }).catch(error => {
                console.error('Erreur import module guid√©:', error);
                showExerciseSelector(); // Fallback
            });
        } else {
            // Mode libre - afficher le s√©lecteur
            showExerciseSelector();
        }
    }
}

// ===== AFFICHAGE DES D√âTAILS D'UN EXERCICE =====
function showExerciseDetail(exerciseId) {
    const exercise = allExercises.find(e => e.id === exerciseId);
    if (!exercise) return;
    
    // Afficher les d√©tails de l'exercice dans une modal
    console.log('D√©tails exercice:', exercise);
    // TODO: Impl√©menter la modal de d√©tails
}

// ===== EXPORT GLOBAL =====
window.showExerciseSelector = showExerciseSelector;
window.filterExerciseList = filterExerciseList;
window.selectExercise = selectExercise;
window.finishExercise = finishExercise;
window.showExerciseDetail = showExerciseDetail;

// Export pour les autres modules
export {
    showExerciseSelector,
    filterExerciseList,
    selectExercise,
    finishExercise,
    showExerciseDetail
};
--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\frontend\app-guided-workout.js ---
--- Nom du fichier: app-guided-workout.js ---
--- Contenu ---
// ===== MODULE S√âANCE GUID√âE ADAPTATIVE =====
import { showToast } from './app-ui.js';
import { showView } from './app-navigation.js';

let currentExerciseIndex = 0;
let guidedWorkoutPlan = null;


// Make functions available for onclick handlers in HTML
window.nextExercise = () => nextExercise();
window.previousExercise = () => previousExercise();
window.startCurrentExercise = () => startCurrentExercise();


// Point d'entr√©e unique pour d√©marrer le mode guid√©
function startGuidedWorkout(adaptiveWorkout) {
    console.log('üéØ D√©marrage mode guid√© avec:', adaptiveWorkout);
    
    guidedWorkoutPlan = adaptiveWorkout;
    currentExerciseIndex = 0;
    
    // Cacher l'interface standard
    const standardInterface = document.getElementById('exerciseSelection');
    if (standardInterface) {
        standardInterface.style.display = 'none';
    }
    
    // Afficher l'interface guid√©e
    showGuidedInterface();
}

// Afficher l'interface de progression guid√©e
function showGuidedInterface() {
    // Ensure we're in the training view
    if (!document.getElementById('training')) {
        console.error('‚ùå Vue training non active');
        showView('training');
        setTimeout(() => showGuidedInterface(), 100);
        return;
    }
    // Chercher d'abord dans training-view, sinon dans workout
    let container = document.querySelector('#training #mainContent');
    if (!container) {
        container = document.querySelector('#workout #mainContent');
    }
    if (!container) {
        container = document.getElementById('mainContent');
    }
    
    if (!container || !guidedWorkoutPlan) {
        console.error('‚ùå Container ou plan manquant:', { container, guidedWorkoutPlan });
        return;
    }
    
    const currentExercise = guidedWorkoutPlan.exercises[currentExerciseIndex];
    const totalExercises = guidedWorkoutPlan.exercises.length;
    const progressPercent = ((currentExerciseIndex) / totalExercises) * 100;
    
    container.innerHTML = `
        <div class="guided-workout-container" style="
            max-width: 600px;
            margin: 0 auto;
            padding: 1rem;
        ">
            <!-- Header avec progression -->
            <div style="
                background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
                border-radius: 16px;
                padding: 2rem;
                text-align: center;
                margin-bottom: 2rem;
                color: white;
            ">
                <h2 style="margin: 0 0 1rem 0;">üéØ S√©ance Adaptative</h2>
                
                <!-- Barre de progression -->
                <div style="
                    background: rgba(255, 255, 255, 0.2);
                    border-radius: 10px;
                    height: 8px;
                    margin: 1rem 0;
                    overflow: hidden;
                ">
                    <div style="
                        background: #10b981;
                        height: 100%;
                        width: ${progressPercent}%;
                        transition: width 0.3s ease;
                    "></div>
                </div>
                
                <div style="opacity: 0.9;">
                    Exercice ${currentExerciseIndex + 1} sur ${totalExercises}
                </div>
            </div>
            
            <!-- Exercice actuel -->
            <div style="
                background: linear-gradient(135deg, rgba(255, 255, 255, 0.05) 0%, rgba(255, 255, 255, 0.02) 100%);
                border: 1px solid rgba(255, 255, 255, 0.1);
                border-radius: 16px;
                padding: 2rem;
                margin-bottom: 2rem;
            ">
                <h3 style="
                    color: #f3f4f6;
                    margin: 0 0 1rem 0;
                    font-size: 1.5rem;
                ">${currentExercise.exercise_name}</h3>
                
                <div style="
                    display: grid;
                    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
                    gap: 1rem;
                    margin-bottom: 2rem;
                ">
                    <div style="text-align: center;">
                        <div style="color: #10b981; font-size: 2rem; font-weight: 700;">
                            ${currentExercise.sets}
                        </div>
                        <div style="color: #9ca3af; font-size: 0.9rem;">S√©ries</div>
                    </div>
                    
                    <div style="text-align: center;">
                        <div style="color: #3b82f6; font-size: 2rem; font-weight: 700;">
                            ${currentExercise.target_reps}
                        </div>
                        <div style="color: #9ca3af; font-size: 0.9rem;">R√©p√©titions</div>
                    </div>
                    
                    <div style="text-align: center;">
                        <div style="color: #f59e0b; font-size: 2rem; font-weight: 700;">
                            ${currentExercise.suggested_weight}kg
                        </div>
                        <div style="color: #9ca3af; font-size: 0.9rem;">Poids sugg√©r√©</div>
                    </div>
                    
                    <div style="text-align: center;">
                        <div style="color: #6b7280; font-size: 2rem; font-weight: 700;">
                            ${Math.floor(currentExercise.rest_time / 60)}'${currentExercise.rest_time % 60 < 10 ? '0' : ''}${currentExercise.rest_time % 60}"
                        </div>
                        <div style="color: #9ca3af; font-size: 0.9rem;">Repos</div>
                    </div>
                </div>
                
                <button onclick="startCurrentExercise()" style="
                    background: linear-gradient(135deg, #10b981 0%, #059669 100%);
                    border: none;
                    border-radius: 12px;
                    padding: 1rem 2rem;
                    color: white;
                    font-weight: 700;
                    font-size: 1.1rem;
                    cursor: pointer;
                    width: 100%;
                    transition: all 0.2s;
                "
                onmouseover="this.style.transform='translateY(-2px)'"
                onmouseout="this.style.transform='translateY(0)'"
                >
                    üöÄ Commencer cet exercice
                </button>
            </div>
            
            <!-- Navigation -->
            <div style="
                display: flex;
                gap: 1rem;
                justify-content: space-between;
            ">
                <button onclick="previousExercise()" 
                    ${currentExerciseIndex === 0 ? 'disabled' : ''}
                    style="
                        background: rgba(255, 255, 255, 0.1);
                        border: 1px solid rgba(255, 255, 255, 0.2);
                        border-radius: 8px;
                        padding: 0.75rem 1.5rem;
                        color: white;
                        cursor: pointer;
                        opacity: ${currentExerciseIndex === 0 ? '0.5' : '1'};
                    ">
                    ‚Üê Pr√©c√©dent
                </button>
                
                <button onclick="nextExercise()" 
                    ${currentExerciseIndex === totalExercises - 1 ? 'disabled' : ''}
                    style="
                        background: rgba(255, 255, 255, 0.1);
                        border: 1px solid rgba(255, 255, 255, 0.2);
                        border-radius: 8px;
                        padding: 0.75rem 1.5rem;
                        color: white;
                        cursor: pointer;
                        opacity: ${currentExerciseIndex === totalExercises - 1 ? '0.5' : '1'};
                    ">
                    Suivant ‚Üí
                </button>
            </div>
        </div>
    `;
}

// Fonction pour commencer l'exercice actuel
async function startCurrentExercise() {
    if (!guidedWorkoutPlan || currentExerciseIndex >= guidedWorkoutPlan.exercises.length) {
        showToast('Exercice non disponible', 'error');
        return;
    }
    
    const currentExercise = guidedWorkoutPlan.exercises[currentExerciseIndex];
    console.log('üéØ D√©marrage exercice guid√©:', currentExercise);
    
    try {
        // Masquer l'interface guid√©e
        const guidedContainer = document.querySelector('.guided-workout-container');
        if (guidedContainer) {
            guidedContainer.style.display = 'none';
        }
        
        // Charger l'interface d'exercice avec pr√©-configuration
        const exerciseModule = await import('./app-exercises.js');
        
        if (exerciseModule.selectExercise) {
            // S√©lectionner l'exercice
            exerciseModule.selectExercise(currentExercise.exercise_id);
            
            // Attendre que l'interface soit charg√©e puis pr√©-configurer
            setTimeout(() => {
                preConfigureExerciseInterface(currentExercise);
            }, 500);
            
        } else {
            throw new Error('Module exercices incomplet');
        }
        
    } catch (error) {
        console.error('‚ùå Erreur d√©marrage exercice:', error);
        showToast('Erreur lors du d√©marrage de l\'exercice', 'error');
        
        // R√©afficher l'interface guid√©e en cas d'erreur
        const guidedContainer = document.querySelector('.guided-workout-container');
        if (guidedContainer) {
            guidedContainer.style.display = 'block';
        }
    }
}

// Pr√©-configurer l'interface avec les param√®tres guid√©s
function preConfigureExerciseInterface(exerciseData) {
    console.log('‚öôÔ∏è Pr√©-configuration interface:', exerciseData);
    
    // Afficher les objectifs guid√©s
    const exerciseInfo = document.querySelector('.exercise-info');
    if (exerciseInfo) {
        const targetInfo = document.createElement('div');
        targetInfo.className = 'guided-targets';
        targetInfo.innerHTML = `
            <strong>üéØ Objectifs :</strong> 
            ${exerciseData.sets} s√©ries √ó ${exerciseData.target_reps} reps @ ${exerciseData.suggested_weight}kg
            <br>
            <small>Repos : ${Math.round(exerciseData.rest_time / 60)}min entre s√©ries</small>
        `;
        exerciseInfo.appendChild(targetInfo);
    }
    
    // Pr√©-remplir le poids sugg√©r√©
    const weightInput = document.getElementById('weightInput');
    if (weightInput && exerciseData.suggested_weight) {
        weightInput.value = exerciseData.suggested_weight;
    }
    
    // Pr√©-remplir les r√©p√©titions cibles
    const repsInput = document.getElementById('repsInput');
    if (repsInput && exerciseData.target_reps) {
        repsInput.value = exerciseData.target_reps;
    }
    
    // Ajouter un bouton de retour vers l'interface guid√©e
    addReturnToGuidedButton();
}

// Ajouter bouton retour interface guid√©e
function addReturnToGuidedButton() {
    const exerciseControls = document.querySelector('.exercise-controls');
    if (exerciseControls && !document.getElementById('returnToGuided')) {
        const returnButton = document.createElement('button');
        returnButton.id = 'returnToGuided';
        returnButton.className = 'btn btn-secondary';
        returnButton.innerHTML = '‚Üê Retour au plan';
        returnButton.onclick = returnToGuidedInterface;
        
        exerciseControls.insertBefore(returnButton, exerciseControls.firstChild);
    }
}

// Retour √† l'interface guid√©e
function returnToGuidedInterface() {
    // Masquer l'interface d'exercice
    const exerciseArea = document.getElementById('exerciseArea');
    if (exerciseArea) {
        exerciseArea.innerHTML = '';
    }
    
    // R√©afficher l'interface guid√©e
    showGuidedInterface();
}

// Navigation simple entre exercices
function nextExercise() {
    if (currentExerciseIndex < guidedWorkoutPlan.exercises.length - 1) {
        currentExerciseIndex++;
        showGuidedInterface();
    }
}

function previousExercise() {
    if (currentExerciseIndex > 0) {
        currentExerciseIndex--;
        showGuidedInterface();
    }
}

// Navigation avec progression (appel√©e apr√®s fin d'exercice)
function nextGuidedExercise() {
    if (currentExerciseIndex < guidedWorkoutPlan.exercises.length - 1) {
        currentExerciseIndex++;
        
        // Sauvegarder la progression
        localStorage.setItem('guidedWorkoutProgress', JSON.stringify({
            currentIndex: currentExerciseIndex,
            completedExercises: currentExerciseIndex
        }));
        
        showGuidedInterface();
        showToast(`Exercice ${currentExerciseIndex + 1}/${guidedWorkoutPlan.exercises.length}`, 'info');
    } else {
        // Tous les exercices termin√©s
        showWorkoutCompletion();
    }
}

// Interface de fin de s√©ance guid√©e
function showWorkoutCompletion() {
    const container = document.getElementById('mainContent');
    if (!container) return;
    
    container.innerHTML = `
        <div style="text-align: center; padding: 2rem;">
            <div style="font-size: 4rem; margin-bottom: 1rem;">üéâ</div>
            <h2>S√©ance adaptative termin√©e !</h2>
            <p>F√©licitations ! Vous avez compl√©t√© tous les exercices.</p>
            
            <div style="margin: 2rem 0;">
                <div class="stat-card" style="display: inline-block; margin: 0 1rem;">
                    <h3>Exercices</h3>
                    <p class="stat-value">${guidedWorkoutPlan.exercises.length}</p>
                </div>
                <div class="stat-card" style="display: inline-block; margin: 0 1rem;">
                    <h3>Dur√©e estim√©e</h3>
                    <p class="stat-value">${guidedWorkoutPlan.estimated_duration}min</p>
                </div>
            </div>
            
            <button class="btn btn-primary" onclick="completeWorkout()" style="margin: 0.5rem;">
                ‚úÖ Terminer la s√©ance
            </button>
            
            <button class="btn btn-secondary" onclick="returnToGuidedInterface()" style="margin: 0.5rem;">
                ‚Üê Revoir les exercices
            </button>
        </div>
    `;
}

// ES6 Module exports
export {
    startGuidedWorkout,
    showGuidedInterface,
    startCurrentExercise,
    preConfigureExerciseInterface,
    addReturnToGuidedButton,
    returnToGuidedInterface,
    nextGuidedExercise,
    showWorkoutCompletion
};
--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\frontend\app-history.js ---
--- Nom du fichier: app-history.js ---
--- Contenu ---
// ===== GESTIONNAIRE D'HISTORIQUE =====
// Ce fichier g√®re l'historique de la session en cours et l'historique global
// Il affiche les s√©ries, les repos et la distribution musculaire

import {
    sessionHistory,
    addToSessionHistory as addToState,
    currentWorkout,
    currentUser
} from './app-state.js';

import {
    getBodyPartColor,
    BODY_PART_COLORS
} from './app-config.js';

import {
    getWorkoutHistory,
    getMuscleDistribution
} from './app-api.js';

// ===== AJOUT √Ä L'HISTORIQUE DE SESSION =====
function addToSessionHistory(type, data) {
    const historyEntry = {
        type: type, // 'set', 'rest', 'exercise_change'
        timestamp: new Date(),
        data: data
    };
    
    addToState(historyEntry);
    
    // Sauvegarder √©galement en localStorage pour r√©cup√©ration en cas de crash
    localStorage.setItem('currentSessionHistory', JSON.stringify(sessionHistory));
    
    // Reconstruire l'affichage complet
    updateHistoryDisplay();
}

// ===== MISE √Ä JOUR DE L'AFFICHAGE DE L'HISTORIQUE =====
function updateHistoryDisplay() {
    const container = document.getElementById('previousSets');
    if (!container) return;
    
    container.innerHTML = '';
    let currentExercise = null;
    
    // Parcourir l'historique dans l'ordre chronologique inverse
    for (let i = sessionHistory.length - 1; i >= 0; i--) {
        const entry = sessionHistory[i];
        
        if (entry.type === 'exercise_change') {
            // Afficher un s√©parateur d'exercice
            const separator = document.createElement('div');
            separator.className = 'exercise-separator';
            separator.innerHTML = `
                <div class="exercise-change-indicator">
                    <span class="exercise-name">${entry.data.exerciseName}</span>
                    <span class="body-part-badge" style="background-color: ${getBodyPartColor(entry.data.bodyPart)}">
                        ${entry.data.bodyPart}
                    </span>
                </div>
            `;
            container.appendChild(separator);
            currentExercise = entry.data;
            
        } else if (entry.type === 'set') {
            const setElement = document.createElement('div');
            setElement.className = 'set-history-item';
            setElement.style.borderLeftColor = getBodyPartColor(entry.data.bodyPart);
            setElement.innerHTML = `
                <div class="set-number">S√©rie ${entry.data.set_number}</div>
                <div class="set-details">
                    ${entry.data.weight}kg √ó ${entry.data.actual_reps} reps
                    ${entry.data.duration ? `<span class="set-duration">${entry.data.duration}s</span>` : ''}
                    <span class="fatigue-badge fatigue-${entry.data.fatigue_level}">
                        Fatigue: ${entry.data.fatigue_level}/10
                    </span>
                </div>
            `;
            container.appendChild(setElement);
            
        } else if (entry.type === 'rest') {
            const restElement = document.createElement('div');
            restElement.className = 'rest-history-item';
            restElement.innerHTML = `
                <div class="rest-indicator">
                    <span class="rest-icon">‚è±Ô∏è</span>
                    <span class="rest-duration">Repos: ${Math.floor(entry.data.duration / 60)}:${(entry.data.duration % 60).toString().padStart(2, '0')}</span>
                </div>
            `;
            container.appendChild(restElement);
        }
    }
}

// ===== CHARGEMENT DE L'HISTORIQUE DES S√âANCES =====
async function loadWorkoutHistory() {
    if (!currentUser) return;
    
    let retries = 0;
    const maxRetries = 3;
    
    while (retries < maxRetries) {
        try {
            const history = await getWorkoutHistory(currentUser.id);
            if (history) {
                displayWorkoutHistory(history);
                return;
            }
        } catch (error) {
            console.error(`Erreur chargement historique (tentative ${retries + 1}):`, error);
        }
        retries++;
        await new Promise(resolve => setTimeout(resolve, 500));
    }
}

// ===== AFFICHAGE DE L'HISTORIQUE DES S√âANCES =====
function displayWorkoutHistory(history) {
    const container = document.getElementById('workoutHistory');
    if (!container) return;
    
    if (history.length === 0) {
        container.innerHTML = '<p class="no-history">Aucune s√©ance enregistr√©e</p>';
        return;
    }
    
    container.innerHTML = history.map(workout => `
        <div class="workout-history-item">
            <div class="workout-date">
                ${new Date(workout.date).toLocaleDateString('fr-FR', { 
                    weekday: 'short', 
                    day: 'numeric', 
                    month: 'short' 
                })}
            </div>
            <div class="workout-details">
                <div class="workout-type">${workout.type === 'program' ? 'Programme' : 'Libre'}</div>
                <div class="workout-stats">
                    ${workout.total_sets} s√©ries ‚Ä¢ ${workout.total_volume ? Math.round(workout.total_volume) : 0}kg total
                </div>
                <div class="workout-exercises">
                    ${workout.exercises.join(', ')}
                </div>
            </div>
        </div>
    `).join('');
}

// ===== MISE √Ä JOUR DE LA DISTRIBUTION MUSCULAIRE =====
async function updateMuscleDistribution() {
    if (!currentWorkout) return;
    
    const data = await getMuscleDistribution(currentWorkout.id);
    if (data) {
        displayMuscleHeatmap(data);
    }
}

// ===== AFFICHAGE DE LA HEATMAP MUSCULAIRE =====
function displayMuscleHeatmap(data) {
    const container = document.getElementById('muscleDistribution');
    if (!container) {
        const workoutInterface = document.getElementById('workoutInterface');
        if (!workoutInterface) return;
        
        const heatmapDiv = document.createElement('div');
        heatmapDiv.id = 'muscleDistribution';
        heatmapDiv.className = 'muscle-heatmap';
        workoutInterface.appendChild(heatmapDiv);
    }
    
    const heatmap = document.getElementById('muscleDistribution');
    const maxVolume = Math.max(...Object.values(data.volumes), 1);
    
    heatmap.innerHTML = `
        <h4>Muscles travaill√©s</h4>
        <div class="muscle-bars">
            ${Object.entries(data.volumes).map(([muscle, volume]) => {
                const percentage = (volume / maxVolume) * 100;
                const color = percentage > 70 ? '#ef4444' : 
                             percentage > 40 ? '#f97316' : '#22c55e';
                return `
                    <div class="muscle-bar">
                        <span class="muscle-name">${muscle}</span>
                        <div class="muscle-progress">
                            <div class="muscle-fill" style="width: ${percentage}%; background: ${color}"></div>
                        </div>
                    </div>
                `;
            }).join('')}
        </div>
        ${data.warning ? `<p class="muscle-warning">‚ö†Ô∏è ${data.warning}</p>` : ''}
    `;
}

// ===== STATISTIQUES DE LA SESSION =====
function getSessionStats() {
    const stats = {
        totalSets: 0,
        totalVolume: 0,
        muscleGroups: {},
        duration: 0
    };
    
    sessionHistory.forEach(entry => {
        if (entry.type === 'set' && !entry.data.skipped) {
            stats.totalSets++;
            stats.totalVolume += (entry.data.weight * entry.data.actual_reps);
            
            const muscle = entry.data.bodyPart;
            if (!stats.muscleGroups[muscle]) {
                stats.muscleGroups[muscle] = 0;
            }
            stats.muscleGroups[muscle] += (entry.data.weight * entry.data.actual_reps);
        }
    });
    
    if (sessionHistory.length > 0) {
        const firstEntry = sessionHistory[0];
        const lastEntry = sessionHistory[sessionHistory.length - 1];
        stats.duration = Math.floor((lastEntry.timestamp - firstEntry.timestamp) / 1000 / 60); // minutes
    }
    
    return stats;
}

// ===== EXPORT GLOBAL =====
window.addToSessionHistory = addToSessionHistory;
window.updateHistoryDisplay = updateHistoryDisplay;
window.loadWorkoutHistory = loadWorkoutHistory;
window.updateMuscleDistribution = updateMuscleDistribution;

// Export pour les autres modules
export {
    addToSessionHistory,
    updateHistoryDisplay,
    loadWorkoutHistory,
    displayWorkoutHistory,
    updateMuscleDistribution,
    displayMuscleHeatmap,
    getSessionStats
};
--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\frontend\app-init.js ---
--- Nom du fichier: app-init.js ---
--- Contenu ---
// ===== INITIALISATION DE L'APPLICATION =====
// Ce fichier est le point d'entr√©e principal qui charge tous les modules
// et initialise l'application dans le bon ordre

// Import des modules dans l'ordre de d√©pendance
import './app-state.js';        // √âtat global (aucune d√©pendance)
import './app-config.js';       // Configuration (aucune d√©pendance)
import './app-ui.js';           // Utilitaires UI (d√©pend de config et state)
import './app-api.js';          // API (d√©pend de state et ui)
import './app-navigation.js';   // Navigation (d√©pend de state)
import './app-equipment.js';    // √âquipement (d√©pend de state et config)
import './app-history.js';      // Historique (d√©pend de state, config et api)
import './app-rest.js';         // Repos (d√©pend de state et api)
import './app-dashboard.js';    // Dashboard (d√©pend de state, api et history)
import './app-workout.js';      // Workout (d√©pend de state, navigation, ui et api)
import './app-exercises.js';    // Exercices (d√©pend de state et equipment)
import './app-sets.js';         // Sets (d√©pend de state, ui, equipment et api)
import './app-program-generator.js';  // G√©n√©rateur de programmes
import './app-onboarding.js';   // Onboarding (d√©pend de tous les modules pr√©c√©dents)
import './app-profile.js';     // Profil

// Import des fonctions n√©cessaires √† l'initialisation
import { loadExercises, loadUserFromAPI } from './app-api.js';
import { 
    setCurrentUser, 
    setIsSilentMode,
    getCurrentUser,
    getCurrentWorkout
} from './app-state.js';
import { showView, showMainInterface, showProfileForm } from './app-navigation.js';
import { checkActiveWorkout } from './app-workout.js';
import { showToast } from './app-ui.js';



// ===== FONCTION D'INITIALISATION PRINCIPALE =====
async function initializeApp() {
    console.log('üöÄ Initialisation de l\'application...');
    
    try {
        // 1. Configurer la date max pour la date de naissance
        setupBirthDateInput();
        
        // 2. Charger la pr√©f√©rence du mode silencieux
        loadSilentModePreference();
        
        // 3. Charger les exercices depuis l'API
        console.log('üìã Chargement des exercices...');
        await loadExercises();
        
        // 4. V√©rifier si un utilisateur existe
        const userId = localStorage.getItem('userId');
        
        if (!userId) {
            // Pas d'utilisateur connect√©, afficher l'√©cran d'accueil
            showWelcomeScreen();
            return;
        }
        
        // Si utilisateur connect√©, charger son profil
        try {
            const response = await fetch(`/api/users/${userId}`);
            if (response.ok) {
                const userData = await response.json();
                setCurrentUser(userData);
                showMainInterface();
                
                // V√©rifier s'il y a une session active
                const activeWorkout = await checkActiveWorkout();
                if (activeWorkout) {
                    showToast('Session en cours r√©cup√©r√©e', 'info');
                    showView('training');
                }
            } else {
                // Utilisateur introuvable, retour √† l'accueil
                localStorage.removeItem('userId');
                showWelcomeScreen();
            }
        } catch (error) {
            console.error('Erreur lors du chargement du profil:', error);
            showWelcomeScreen();
        }
        
        // 5. Enregistrer le Service Worker pour PWA
        registerServiceWorker();
        
        console.log('‚úÖ Application initialis√©e avec succ√®s');
        
    } catch (error) {
        console.error('‚ùå Erreur lors de l\'initialisation:', error);
        showToast('Erreur lors de l\'initialisation de l\'application', 'error');
    }
}

// ===== √âCRAN D'ACCUEIL =====
async function showWelcomeScreen() {
    // Masquer tous les √©l√©ments UI
    document.getElementById('onboarding').classList.remove('active');
    document.getElementById('bottomNav').style.display = 'none';
    document.getElementById('progressContainer').style.display = 'none';
    document.getElementById('userInitial').style.display = 'none';
    
    // Masquer toutes les vues
    document.querySelectorAll('.view').forEach(view => {
        view.classList.remove('active');
        view.style.display = '';
    });
    
    // Afficher le welcome panel
    const welcomeView = document.getElementById('welcome');
    if (welcomeView) {
        welcomeView.classList.add('active');
        // Charger la liste des profils
        await loadProfiles();
    }
}

async function loadProfiles() {
    try {
        const response = await fetch('/api/users/');
        const profiles = await response.json();
        
        const container = document.getElementById('profilesList');
        if (!container) return;
        
        if (profiles.length === 0) {
            container.innerHTML = '<p style="color: var(--gray);">Aucun profil existant</p>';
            return;
        }
        
        container.innerHTML = profiles.map(profile => `
            <div class="profile-card" onclick="loadProfile(${profile.id})">
                <div class="profile-info">
                    <h4>${profile.name}</h4>
                    <p>Cr√©√© le ${new Date(profile.created_at).toLocaleDateString('fr-FR')}</p>
                </div>
                <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                </svg>
            </div>
        `).join('');
    } catch (error) {
        console.error('Erreur lors du chargement des profils:', error);
    }
}

async function loadProfile(userId) {
    localStorage.setItem('userId', userId);
    window.location.reload();
}

function startNewProfile() {
    showProfileForm();
}

// Export des nouvelles fonctions
window.showWelcomeScreen = showWelcomeScreen;
window.loadProfile = loadProfile;
window.startNewProfile = startNewProfile;

// ===== CONFIGURATION DE L'INPUT DATE DE NAISSANCE =====
function setupBirthDateInput() {
    const birthDateInput = document.getElementById('userBirthDate');
    if (birthDateInput) {
        const today = new Date();
        const maxDate = new Date(today.getFullYear() - 18, today.getMonth(), today.getDate());
        birthDateInput.max = maxDate.toISOString().split('T')[0];
    }
}

// ===== CHARGEMENT DES PR√âF√âRENCES =====
function loadSilentModePreference() {
    const isSilentMode = localStorage.getItem('silentMode') === 'true';
    setIsSilentMode(isSilentMode);
}

// ===== CHARGEMENT DE L'UTILISATEUR =====
async function loadUser(userId) {
    try {
        const user = await loadUserFromAPI(userId);
        
        if (user) {
            setCurrentUser(user);
            
            // Sauvegarder le profil complet en localStorage
            localStorage.setItem('userProfile', JSON.stringify(user));
            
            // V√©rifier s'il y a une session active
            const activeWorkout = await checkActiveWorkout();
            if (activeWorkout) {
                showToast('Session en cours r√©cup√©r√©e', 'info');
                showView('training');
                if (window.updateTrainingInterface) {
                    window.updateTrainingInterface();
                }
            } else {
                showMainInterface();
            }
        } else {
            // Essayer de charger depuis le cache local
            loadFromCache();
        }
    } catch (error) {
        console.error('Erreur chargement utilisateur:', error);
        // Essayer le cache local en cas d'erreur r√©seau
        loadFromCache();
    }
}

// ===== CHARGEMENT DEPUIS LE CACHE =====
function loadFromCache() {
    const cachedProfile = localStorage.getItem('userProfile');
    if (cachedProfile) {
        const user = JSON.parse(cachedProfile);
        setCurrentUser(user);
        showToast('Profil charg√© depuis le cache', 'info');
        showMainInterface();
    } else {
        localStorage.removeItem('userId');
        showView('onboarding');
    }
}

// ===== ENREGISTREMENT DU SERVICE WORKER =====
function registerServiceWorker() {
    if ('serviceWorker' in navigator) {
        navigator.serviceWorker.register('/sw.js')
            .then(registration => {
                console.log('Service Worker enregistr√©:', registration);
            })
            .catch(error => {
                console.error('Erreur Service Worker:', error);
            });
    }
}

// ===== GESTION DES ERREURS GLOBALES =====
window.addEventListener('error', (event) => {
    console.error('Erreur globale:', event.error);
    // En production, on pourrait envoyer ces erreurs √† un service de monitoring
});

window.addEventListener('unhandledrejection', (event) => {
    console.error('Promise rejet√©e non g√©r√©e:', event.reason);
    // En production, on pourrait envoyer ces erreurs √† un service de monitoring
});

// ===== D√âTECTION DE LA CONNEXION =====
let isOnline = navigator.onLine;
let syncRetryTimeout = null;

window.addEventListener('online', () => {
    isOnline = true;
    showToast('Connexion r√©tablie', 'success');
    
    // Synchroniser les donn√©es en attente avec un d√©lai
    if (syncRetryTimeout) clearTimeout(syncRetryTimeout);
    syncRetryTimeout = setTimeout(() => {
        if (window.syncPendingSets) {
            window.syncPendingSets();
        }
        if (window.syncInterExerciseRests) {
            window.syncInterExerciseRests();
        }
    }, 2000); // Attendre 2 secondes que la connexion se stabilise
});

window.addEventListener('offline', () => {
    isOnline = false;
    showToast('Mode hors-ligne - Les donn√©es seront synchronis√©es plus tard', 'warning');
});

// V√©rification p√©riodique de la connexion
setInterval(() => {
    const wasOnline = isOnline;
    isOnline = navigator.onLine;
    
    if (!wasOnline && isOnline) {
        // Connexion r√©tablie
        window.dispatchEvent(new Event('online'));
    } else if (wasOnline && !isOnline) {
        // Connexion perdue
        window.dispatchEvent(new Event('offline'));
    }
}, 5000); // V√©rifier toutes les 5 secondes

// ===== PR√âVENTION DE LA PERTE DE DONN√âES =====
window.addEventListener('beforeunload', (event) => {
    // V√©rifier s'il y a une s√©ance en cours
    if (getCurrentUser && getCurrentUser.id && getCurrentWorkout && getCurrentWorkout.status === 'started') {
        event.preventDefault();
        event.returnValue = 'Une s√©ance est en cours. Voulez-vous vraiment quitter ?';
    }
    
    // V√©rifier s'il y a des donn√©es non synchronis√©es
    const pendingSets = localStorage.getItem('pendingSets');
    if (pendingSets && JSON.parse(pendingSets).length > 0) {
        event.preventDefault();
        event.returnValue = 'Des donn√©es n\'ont pas √©t√© synchronis√©es. Voulez-vous vraiment quitter ?';
    }
});

// Gestion du bouton retour
window.addEventListener('popstate', (event) => {
    const user = getCurrentUser();
    if (user && user.id && window.currentWorkout && window.currentWorkout.status === 'started') {
        if (!confirm('Une s√©ance est en cours. Voulez-vous vraiment quitter cette page ?')) {
            // Emp√™cher la navigation arri√®re
            window.history.pushState(null, '', window.location.href);
        }
    }
});

// ===== KEEP-ALIVE POUR RENDER =====
function startKeepAlive() {
    // Ping le serveur toutes les 5 minutes pour √©viter qu'il s'endorme
    const keepAliveInterval = setInterval(async () => {
        try {
            // Utiliser une route l√©g√®re qui ne fait que r√©pondre OK
            await fetch('/api/health', {
                method: 'GET',
                headers: {
                    'Cache-Control': 'no-cache'
                }
            });
            console.log('Keep-alive ping sent');
        } catch (error) {
            console.error('Keep-alive failed:', error);
        }
    }, 5 * 60 * 1000); // 5 minutes
    
    // Nettoyer l'interval si la page est ferm√©e
    window.addEventListener('beforeunload', () => {
        clearInterval(keepAliveInterval);
    });
}

// ===== LANCEMENT DE L'APPLICATION =====
document.addEventListener('DOMContentLoaded', () => {
    console.log('DOM charg√© - Initialisation de l\'application');
    
    // V√©rification que les fonctions critiques sont disponibles
    const criticalFunctions = ['nextStep', 'prevStep', 'showView', 'toggleGoal', 'toggleEquipment'];
    const missingFunctions = criticalFunctions.filter(fn => !window[fn]);
    
    if (missingFunctions.length > 0) {
        console.error('Fonctions critiques manquantes:', missingFunctions);
        // Tenter de recharger les modules
        setTimeout(() => {
            if (!window.nextStep) {
                console.error('nextStep toujours manquant apr√®s d√©lai');
                // Fonction de secours
                window.nextStep = () => {
                    console.error('nextStep appel√© mais non charg√© correctement');
                    showToast('Erreur de chargement, veuillez rafra√Æchir la page', 'error');
                };
            }
        }, 1000);
    }
    
    initializeApp();
    startKeepAlive();
});

// Export de la fonction d'initialisation si n√©cessaire
export { initializeApp, showWelcomeScreen, loadProfile, startNewProfile };
export { loadUser, loadFromCache, registerServiceWorker, setupBirthDateInput, loadSilentModePreference };
--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\frontend\app-navigation.js ---
--- Nom du fichier: app-navigation.js ---
--- Contenu ---
// ===== NAVIGATION ET VUES =====
// Ce fichier g√®re toute la navigation entre les vues et les √©tapes de l'onboarding

import { 
    currentStep, 
    totalSteps,
    setCurrentStep,
    getCurrentStep,
    currentUser,
    timerInterval,
    restTimerInterval,
    setTimerInterval,
    setRestTimerInterval
} from './app-state.js';
import { loadProfileInfo } from './app-profile.js';

// ===== NAVIGATION & VUES =====
function showView(viewName) {
    // Clean up any running timers when leaving training view
    if (viewName !== 'training') {
        if (timerInterval) {
            clearInterval(timerInterval);
            setTimerInterval(null);
        }
        if (restTimerInterval) {
            clearInterval(restTimerInterval);
            setRestTimerInterval(null);
        }
    }
    
    // Masquer toutes les vues et l'onboarding
    document.querySelectorAll('.view, .onboarding').forEach(view => {
        view.classList.remove('active');
        view.style.display = '';
    });
    
    // Afficher la vue demand√©e
    const view = document.getElementById(viewName) || document.querySelector(`.${viewName}`);
    if (view) {
        view.classList.add('active');
        
        if (viewName === 'onboarding') {
            showStep(currentStep);
        }
    }
    
    // Si on va vers training, v√©rifier s'il y a une session active
    if (viewName === 'training' && window.currentWorkout && window.updateTrainingInterface) {
        setTimeout(() => {
            window.updateTrainingInterface();
        }, 100);
    }
    
    // Charger les graphiques stats quand on arrive sur la vue
    if (viewName === 'stats' && window.initializeStatsPage) {
        setTimeout(() => {
            window.initializeStatsPage();
        }, 100);
    }

    // Ajouter apr√®s l'affichage de la vue
    if (viewName === 'profile' && currentUser) {
        // Charger les informations du profil
        loadProfileInfo();
    }
}

function showStep(step) {
    document.querySelectorAll('.onboarding-step').forEach(s => {
        s.classList.remove('active');
    });
    document.getElementById(`step${step}`).classList.add('active');
}

// Navigation dans l'onboarding - version simple sans validation
function nextStepSimple() {
    if (currentStep < totalSteps) {
        setCurrentStep(currentStep + 1);
        showStep(currentStep);
        updateProgressBar();
    }
}

// Navigation avec validation (sera remplac√©e par app-onboarding.js)
function nextStep() {
    nextStepSimple();
}

function prevStep() {
    if (currentStep > 1) {
        setCurrentStep(currentStep - 1);
        showStep(currentStep);
        updateProgressBar();
    }
}

function updateProgressBar() {
    const progress = (currentStep - 1) / (totalSteps - 1) * 100;
    const progressBar = document.getElementById('progressBar');
    if (progressBar) {
        progressBar.style.width = `${progress}%`;
    }
}

// Affichage de l'interface principale apr√®s connexion
function showMainInterface() {
    if (!currentUser) {
        console.error('Aucun utilisateur charg√©');
        showProfileForm();
        return;
    }
    
    document.getElementById('onboarding').classList.remove('active');
    document.getElementById('progressContainer').style.display = 'none';
    document.getElementById('bottomNav').style.display = 'flex';
    
    if (currentUser) {
        document.getElementById('userInitial').textContent = currentUser.name[0].toUpperCase();
        document.getElementById('userInitial').style.display = 'flex';
    }
    
    showView('dashboard');
    // loadDashboard sera appel√© depuis app-dashboard.js
    if (window.loadDashboard) {
        window.loadDashboard();
    }
}

function showProfileForm() {
    // R√©initialiser l'√©tat est g√©r√© dans app-onboarding.js
    // Ici on g√®re juste l'affichage
    
    // Masquer l'interface principale
    document.getElementById('bottomNav').style.display = 'none';
    document.getElementById('userInitial').style.display = 'none';
    
    // Afficher l'onboarding avec la barre de progression
    document.getElementById('onboarding').classList.add('active');
    document.getElementById('progressContainer').style.display = 'block';
    
    // R√©initialiser les vues
    document.querySelectorAll('.view').forEach(view => {
        view.classList.remove('active');
    });
    
    // Afficher la premi√®re √©tape
    setCurrentStep(1);
    showStep(1);
    updateProgressBar();
}

// Export des fonctions pour utilisation globale dans le HTML
window.showView = showView;
window.showStep = showStep;
window.nextStep = nextStep;
window.prevStep = prevStep;
window.showMainInterface = showMainInterface;
window.showProfileForm = showProfileForm;
window.updateProgressBar = updateProgressBar;

// Export pour les autres modules
export { 
    showView, 
    showStep, 
    nextStep,
    nextStepSimple,
    prevStep, 
    updateProgressBar,
    showMainInterface,
    showProfileForm
};
--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\frontend\app-onboarding.js ---
--- Nom du fichier: app-onboarding.js ---
--- Contenu ---
// ===== MODULE D'ONBOARDING =====
// Ce fichier g√®re tout le processus d'inscription et de configuration initiale
import {showWelcomeScreen} from './app-init.js';
import { 
    selectedGoals,
    selectedEquipment,
    equipmentConfig,
    currentStep,
    totalSteps,
    setCurrentUser,
    setSelectedGoals,
    setSelectedEquipment,
    setEquipmentConfig,
    resetState,
    currentUser    
} from './app-state.js';

import { 
    nextStep as navigationNextStep,
    prevStep,
    nextStepSimple as navigateNext,
    prevStep as navigatePrev,
    updateProgressBar,
    showMainInterface,
    showProfileForm,
    showStep,
    } from './app-navigation.js';

import { showToast, getEquipmentIcon, getEquipmentName } from './app-ui.js';
import { saveUser } from './app-api.js';
import { 
    GOAL_NAMES,
    COMMON_DUMBBELL_WEIGHTS,
    COMMON_PLATE_WEIGHTS,
    COMMON_KETTLEBELL_WEIGHTS,
    getColorName
} from './app-config.js';

// ===== GESTION DES OBJECTIFS =====
function toggleGoal(goalElement) {
    const goal = goalElement.dataset.goal;
    goalElement.classList.toggle('selected');
    
    if (goalElement.classList.contains('selected')) {
        if (!selectedGoals.includes(goal)) {
            selectedGoals.push(goal);
        }
    } else {
        const index = selectedGoals.indexOf(goal);
        if (index > -1) selectedGoals.splice(index, 1);
    }
}

// ===== GESTION DE L'√âQUIPEMENT =====
function toggleEquipment(card) {
    const equipment = card.dataset.equipment;
    card.classList.toggle('selected');
    
    if (card.classList.contains('selected')) {
        if (!selectedEquipment.includes(equipment)) {
            selectedEquipment.push(equipment);
        }
    } else {
        const index = selectedEquipment.indexOf(equipment);
        if (index > -1) selectedEquipment.splice(index, 1);
    }
}


// ===== VALIDATION DES DONN√âES =====
function validateEmail(email) {
    const pattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
    return pattern.test(email);
}

function validatePersonalInfo() {
    const name = document.getElementById('userName').value.trim();
    const birthDate = document.getElementById('userBirthDate').value;
    const height = document.getElementById('userHeight').value;
    const weight = document.getElementById('userWeight').value;
    const experience = document.getElementById('experienceLevel').value;
    const email = document.getElementById('userEmail')?.value.trim();
    
    // Validation du nom
    if (!name || name.length < 2) {
        showToast('Le nom doit contenir au moins 2 caract√®res', 'error');
        return false;
    }
    
    // Validation de l'email si pr√©sent
    if (email && !validateEmail(email)) {
        showToast('Adresse email invalide', 'error');
        return false;
    }
    
    // Validation de l'√¢ge (minimum 16 ans)
    if (birthDate) {
        const age = new Date().getFullYear() - new Date(birthDate).getFullYear();
        if (age < 16) {
            showToast('Vous devez avoir au moins 16 ans', 'error');
            return false;
        }
    }
    
    // Validation de la taille et du poids
    const heightNum = parseFloat(height);
    const weightNum = parseFloat(weight);
    
    if (!heightNum || heightNum < 100 || heightNum > 250) {
        showToast('La taille doit √™tre entre 100 et 250 cm', 'error');
        return false;
    }
    
    if (!weightNum || weightNum < 30 || weightNum > 300) {
        showToast('Le poids doit √™tre entre 30 et 300 kg', 'error');
        return false;
    }
    
    return true;
}

// D√©finir notre propre version de nextStep
function nextStep() {

    const currentStepEl = document.querySelector('.onboarding-step.active');

    // G√©rer le passage depuis l'√©tape 3 (√©quipement)
    if (currentStepEl && currentStepEl.id === 'step3') {
        // V√©rifier si l'√©quipement s√©lectionn√© n√©cessite une configuration d√©taill√©e
        const needsDetailedConfig = selectedEquipment.some(eq => 
            ['halteres', 'barbell', 'elastiques', 'kettlebell', 'bench'].includes(eq)
        );
        
        if (needsDetailedConfig) {
            // Afficher l'√©tape 4 et g√©n√©rer la configuration
            currentStepEl.classList.remove('active');
            const step4 = document.getElementById('step4');
            if (step4) {
                step4.classList.add('active');
                generateDetailedEquipmentConfig();
                updateProgressBar();
                return;
            }
        } else {
            // Passer directement √† l'√©tape 5 (r√©capitulatif)
            currentStepEl.classList.remove('active');
            const step5 = document.getElementById('step5');
            if (step5) {
                step5.classList.add('active');
                updateProfileSummary();
                updateProgressBar();
                return;
            }
        }
    }
    
    // NOUVEAU : G√©rer le passage depuis l'√©tape 4
    if (currentStepEl && currentStepEl.id === 'step4') {
        if (validateDetailedConfig()) {
            currentStepEl.classList.remove('active');
            const step5 = document.getElementById('step5');
            if (step5) {
                step5.classList.add('active');
                updateProfileSummary();
                updateProgressBar();
                return;
            }
        }
        return; // Ne pas continuer si la validation √©choue
    }
    
    // Sinon, utiliser la navigation normale
    navigationNextStep();
}

// ===== CONFIGURATION D√âTAILL√âE DE L'√âQUIPEMENT =====
function generateDetailedEquipmentConfig() {
    const container = document.getElementById('detailedEquipmentConfig');
    
    let html = `
        <div class="equipment-categories-grid">
            ${selectedEquipment.map(eq => `
                <div class="equipment-category selected" data-equipment="${eq}">
                    <div class="equipment-icon">
                        ${getEquipmentIcon(eq)}
                    </div>
                    <div class="equipment-name">${getEquipmentName(eq)}</div>
                    <div class="equipment-status" id="status-${eq}">√Ä configurer</div>
                </div>
            `).join('')}
        </div>
        <div id="configPanels"></div>
    `;
    
    container.innerHTML = html;
    
    // Auto-configurer les √©quipements simples
    if (selectedEquipment.includes('barre_traction')) {
        equipmentConfig.autres.barre_traction = true;
        updateEquipmentStatus('barre_traction');
    }
    
    // Afficher les panneaux de configuration pour chaque √©quipement s√©lectionn√©
    selectedEquipment.forEach(eq => {
        if (eq === 'halteres' || eq === 'barbell' || eq === 'elastiques' || eq === 'kettlebell' || eq === 'bench') {
            showConfigPanel(eq);
        }
    });
}

function showConfigPanel(equipmentType) {
    const panelsContainer = document.getElementById('configPanels');
    const panel = document.createElement('div');
    panel.className = 'config-panel';
    panel.id = `panel-${equipmentType}`;
    
    switch(equipmentType) {
        case 'barbell':
            panel.innerHTML = createBarbellPanel();
            break;
        case 'halteres':
            panel.innerHTML = createDumbbellsPanel();
            break;
        case 'elastiques':
            panel.innerHTML = createBandsPanel();
            break;
        case 'bench':
            panel.innerHTML = createBenchPanel();
            break;
        case 'kettlebell':
            panel.innerHTML = createKettlebellPanel();
            break;
    }
    
    if (panel.innerHTML) {
        panelsContainer.appendChild(panel);
    }
}

function createBarbellPanel() {
    return `
        <div class="config-header">
            <div class="config-icon">
                <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h8m-4-8v16"/>
                </svg>
            </div>
            <h3 class="config-title">Barres et disques</h3>
        </div>
        
        <h4 style="margin-bottom: 16px; color: var(--gray-light);">Types de barres disponibles</h4>
        <div class="barbell-types">
            <label class="checkbox-label">
                <input type="checkbox" onchange="updateBarbell('olympique', this.checked)">
                <span>Barre olympique (20kg)</span>
            </label>
            <label class="checkbox-label">
                <input type="checkbox" onchange="updateBarbell('ez', this.checked)">
                <span>Barre EZ/Curl (10kg)</span>
            </label>
            <label class="checkbox-label">
                <input type="checkbox" onchange="updateBarbell('courte', this.checked)">
                <label>Barres courtes (paire, 2.5kg/unit√©)</label>
                <small style="color: var(--gray); display: block; margin-top: -5px;">
                    Peuvent remplacer les halt√®res
                </small>
            </label>
        </div>
        
        <h4 style="margin-top: 24px; margin-bottom: 16px; color: var(--gray-light);">Poids des disques disponibles</h4>
        <div class="weight-grid">
            ${COMMON_PLATE_WEIGHTS.map(weight => `
                <div class="weight-item">
                    <div class="weight-value">${weight}kg</div>
                    <input type="number" class="weight-input" placeholder="0" min="0" max="10" 
                           value="${equipmentConfig.disques[weight] || 0}"
                           onchange="updateDisqueWeight(${weight}, this.value)">
                </div>
            `).join('')}
        </div>
    `;
}

function createDumbbellsPanel() {
    return `
        <div class="config-header">
            <div class="config-icon">
                <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                          d="M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4"/>
                </svg>
            </div>
            <h3 class="config-title">Configuration des halt√®res</h3>
        </div>
        
        <div class="weight-grid">
            ${COMMON_DUMBBELL_WEIGHTS.map(weight => `
                <div class="weight-item">
                    <div class="weight-value">${weight}kg</div>
                    <input type="number" 
                           class="weight-input" 
                           placeholder="0" 
                           min="0" 
                           max="10"
                           value="${equipmentConfig.dumbbells[weight] || 0}"
                           onchange="updateDumbbellWeight(${weight}, this.value)">
                </div>
            `).join('')}
            <div class="add-custom" onclick="addCustomDumbbell()">
                <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"/>
                </svg>
            </div>
        </div>
    `;
}

function createBandsPanel() {
    return `
        <div class="config-header">
            <div class="config-icon">
                <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"/>
                </svg>
            </div>
            <h3 class="config-title">Configuration des √©lastiques</h3>
        </div>
        
        <div id="bandsList"></div>
        
        <div class="band-input-group">
            <input type="color" id="bandColor" value="#ff6b6b" class="band-color-input">
            <input type="number" id="bandResistance" placeholder="R√©sistance (kg)" class="band-resistance-input">
            <input type="number" id="bandCount" placeholder="Nombre" value="1" min="1" class="band-count-input">
            <button onclick="addBand()" class="btn-add">+</button>
        </div>
    `;
}

function createBenchPanel() {
    return `
        <div class="config-header">
            <div class="config-icon">
                <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12h18m-9-9v18"/>
                </svg>
            </div>
            <h3 class="config-title">Configuration du banc</h3>
        </div>
        
        <div class="bench-options">
            <div class="bench-option ${equipmentConfig.banc.available ? 'active' : ''}" onclick="toggleBenchFeature(this, 'flat')">
                <h4>Banc plat</h4>
                <p style="color: #64748b; font-size: 14px;">Position horizontale standard</p>
            </div>
            <div class="bench-option ${equipmentConfig.banc.inclinable ? 'active' : ''}" onclick="toggleBenchFeature(this, 'incline')">
                <h4>Inclinable</h4>
                <p style="color: #64748b; font-size: 14px;">Angles positifs (15¬∞, 30¬∞, 45¬∞...)</p>
            </div>
            <div class="bench-option ${equipmentConfig.banc.declinable ? 'active' : ''}" onclick="toggleBenchFeature(this, 'decline')">
                <h4>D√©clinable</h4>
                <p style="color: #64748b; font-size: 14px;">Angles n√©gatifs (-15¬∞, -30¬∞...)</p>
            </div>
        </div>
    `;
}

function createKettlebellPanel() {
    return `
        <div class="config-header">
            <div class="config-icon">
                <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8a4 4 0 100 8 4 4 0 000-8z"/>
                </svg>
            </div>
            <h3 class="config-title">Kettlebells</h3>
        </div>
        
        <div class="weight-grid">
            ${COMMON_KETTLEBELL_WEIGHTS.map(weight => `
                <div class="weight-item">
                    <div class="weight-value">${weight}kg</div>
                    <input type="number" class="weight-input" placeholder="0" min="0" max="10" 
                           value="${equipmentConfig.kettlebells[weight] || 0}"
                           onchange="updateKettlebellWeight(${weight}, this.value)">
                </div>
            `).join('')}
        </div>
    `;
}

// ===== MISE √Ä JOUR DE L'√âQUIPEMENT =====
function updateBarbell(type, checked) {
    equipmentConfig.barres[type].available = checked;
    if (checked) {
        equipmentConfig.barres[type].count = 1;
    } else {
        equipmentConfig.barres[type].count = 0;
    }
    updateEquipmentStatus('barbell');
}

function updateDisqueWeight(weight, count) {
    const value = parseInt(count) || 0;
    if (value > 0) {
        equipmentConfig.disques[weight] = value;
    } else {
        delete equipmentConfig.disques[weight];
    }
    updateEquipmentStatus('barbell');
}

function updateDumbbellWeight(weight, count) {
    const value = parseInt(count) || 0;
    if (value > 0) {
        equipmentConfig.dumbbells[weight] = value;
    } else {
        delete equipmentConfig.dumbbells[weight];
    }
    updateEquipmentStatus('halteres');
}

function updateKettlebellWeight(weight, count) {
    const value = parseInt(count) || 0;
    if (value > 0) {
        equipmentConfig.kettlebells[weight] = value;
    } else {
        delete equipmentConfig.kettlebells[weight];
    }
    updateEquipmentStatus('kettlebell');
}

function addBand() {
    const color = document.getElementById('bandColor').value;
    const resistance = document.getElementById('bandResistance').value;
    const count = document.getElementById('bandCount').value;
    
    if (resistance && count) {
        equipmentConfig.elastiques.push({
            color: getColorName(color),
            resistance: parseFloat(resistance),
            count: parseInt(count)
        });
        
        updateBandsList();
        updateEquipmentStatus('elastiques');
        
        // Reset inputs
        document.getElementById('bandResistance').value = '';
        document.getElementById('bandCount').value = '1';
    }
}

function updateBandsList() {
    const container = document.getElementById('bandsList');
    if (!container) return;
    
    container.innerHTML = equipmentConfig.elastiques.map((band, index) => `
        <div class="band-item">
            <div class="band-color" style="background-color: ${band.color}"></div>
            <div class="band-info">
                <div class="band-resistance">${band.resistance}kg</div>
                <div class="band-count">${band.count} √©lastique${band.count > 1 ? 's' : ''}</div>
            </div>
            <div class="band-remove" onclick="removeBand(${index})">
                <svg width="16" height="16" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
                </svg>
            </div>
        </div>
    `).join('');
}

function removeBand(index) {
    equipmentConfig.elastiques.splice(index, 1);
    updateBandsList();
    updateEquipmentStatus('elastiques');
}

function toggleBenchFeature(element, feature) {
    element.classList.toggle('active');
    
    switch(feature) {
        case 'flat':
            equipmentConfig.banc.available = element.classList.contains('active');
            break;
        case 'incline':
            equipmentConfig.banc.inclinable = element.classList.contains('active');
            break;
        case 'decline':
            equipmentConfig.banc.declinable = element.classList.contains('active');
            break;
    }
    
    updateEquipmentStatus('bench');
}

// ===== STATUT DE L'√âQUIPEMENT =====
function updateEquipmentStatus(type) {
    const statusEl = document.getElementById(`status-${type}`);
    if (!statusEl) return;
    
    let isConfigured = false;
    
    switch(type) {
        case 'halteres':
            isConfigured = Object.keys(equipmentConfig.dumbbells).length > 0;
            break;
        case 'barbell':
            const hasBarbell = Object.values(equipmentConfig.barres).some(b => b.available);
            const hasDisques = Object.keys(equipmentConfig.disques).length > 0;
            isConfigured = hasBarbell && hasDisques;
            break;
        case 'elastiques':
            isConfigured = equipmentConfig.elastiques.length > 0;
            break;
        case 'bench':
            isConfigured = true;
            equipmentConfig.banc.available = true;
            break;
        case 'barre_traction':
            isConfigured = true;
            equipmentConfig.autres.barre_traction = true;
            break;
        case 'kettlebell':
            isConfigured = Object.keys(equipmentConfig.kettlebells).length > 0;
            break;
    }
    
    statusEl.textContent = isConfigured ? 'Configur√© ‚úì' : '√Ä configurer';
    statusEl.style.color = isConfigured ? '#10b981' : '#94a3b8';
    
    updateProgressIndicator();
}

function updateProgressIndicator() {
    const total = selectedEquipment.length;
    let configured = 0;
    
    selectedEquipment.forEach(eq => {
        const status = document.getElementById(`status-${eq}`);
        if (status && status.textContent.includes('‚úì')) {
            configured++;
        }
    });
    
    const indicator = document.getElementById('equipmentProgress');
    if (indicator) {
        indicator.textContent = `${configured} / ${total} configur√©s`;
    }
}

// ===== VALIDATION =====
function validateDetailedConfig() {
    let isValid = true;
    let errors = [];
    
    if (selectedEquipment.includes('halteres')) {
        const dumbellCount = Object.keys(equipmentConfig.dumbbells).length;
        if (dumbellCount === 0) {
            errors.push('Veuillez ajouter au moins un poids d\'halt√®re');
            isValid = false;
        }
    }
    
    if (selectedEquipment.includes('barbell')) {
        const hasBarbell = Object.values(equipmentConfig.barres).some(b => b.available && b.count > 0);
        const hasDisques = Object.keys(equipmentConfig.disques).length > 0;
        
        if (!hasBarbell) {
            errors.push('Veuillez s√©lectionner au moins un type de barre');
            isValid = false;
        }
        if (!hasDisques) {
            errors.push('Veuillez ajouter au moins un poids de disque');
            isValid = false;
        }
    }
    
    if (selectedEquipment.includes('elastiques')) {
        if (equipmentConfig.elastiques.length === 0) {
            errors.push('Veuillez ajouter au moins un √©lastique');
            isValid = false;
        }
    }
    
    if (selectedEquipment.includes('kettlebell')) {
        const kettlebellCount = Object.keys(equipmentConfig.kettlebells).length;
        if (kettlebellCount === 0) {
            errors.push('Veuillez ajouter au moins un poids de kettlebell');
            isValid = false;
        }
    }
    
    if (!isValid && errors.length > 0) {
        errors.forEach(error => showToast(error, 'error'));
    }
    
    return isValid;
}

// ===== R√âSUM√â DU PROFIL =====
function updateProfileSummary() {
    const container = document.getElementById('profileSummary');
    if (!container) return;
    
    let summaryHTML = '<div class="summary-sections">';
    
    // Section informations personnelles
    summaryHTML += `
        <div class="summary-section">
            <h4 class="summary-title">üë§ Informations personnelles</h4>
            <div class="summary-content">
                <div class="summary-row">
                    <span class="summary-label">Nom:</span>
                    <span class="summary-value">${document.getElementById('userName').value}</span>
                </div>
                <div class="summary-row">
                    <span class="summary-label">Date de naissance:</span>
                    <span class="summary-value">${new Date(document.getElementById('userBirthDate').value).toLocaleDateString('fr-FR')}</span>
                </div>
                <div class="summary-row">
                    <span class="summary-label">Taille:</span>
                    <span class="summary-value">${document.getElementById('userHeight').value} cm</span>
                </div>
                <div class="summary-row">
                    <span class="summary-label">Poids:</span>
                    <span class="summary-value">${document.getElementById('userWeight').value} kg</span>
                </div>
                <div class="summary-row">
                    <span class="summary-label">Niveau:</span>
                    <span class="summary-value">${document.getElementById('experienceLevel').selectedOptions[0]?.text || 'Non d√©fini'}</span>
                </div>
            </div>
        </div>
    `;
    
    // Section objectifs
    summaryHTML += `
        <div class="summary-section">
            <h4 class="summary-title">üéØ Objectifs</h4>
            <div class="summary-content">
                <div class="goals-summary">
                    ${selectedGoals.map(goal => `
                        <span class="goal-badge">${GOAL_NAMES[goal] || goal}</span>
                    `).join('')}
                </div>
            </div>
        </div>
    `;
    
    // Section √©quipement
    summaryHTML += `
        <div class="summary-section">
            <h4 class="summary-title">üí™ √âquipement disponible</h4>
            <div class="summary-content">
    `;
    
    selectedEquipment.forEach(eq => {
        summaryHTML += `<div class="equipment-summary-item">`;
        summaryHTML += `<strong>${getEquipmentName(eq)}</strong>`;
        
        switch(eq) {
            case 'halteres':
                const dumbbellWeights = Object.keys(equipmentConfig.dumbbells).filter(w => equipmentConfig.dumbbells[w] > 0);
                if (dumbbellWeights.length > 0) {
                    summaryHTML += `<div class="equipment-detail">Poids: ${dumbbellWeights.join(', ')}kg</div>`;
                }
                break;
                
            case 'barbell':
                const barres = Object.entries(equipmentConfig.barres)
                    .filter(([_, config]) => config.available)
                    .map(([type, config]) => `${type} (${config.weight}kg)`);
                if (barres.length > 0) {
                    summaryHTML += `<div class="equipment-detail">Barres: ${barres.join(', ')}</div>`;
                }
                const disques = Object.entries(equipmentConfig.disques)
                    .filter(([_, count]) => count > 0)
                    .map(([weight, count]) => `${weight}kg√ó${count}`);
                if (disques.length > 0) {
                    summaryHTML += `<div class="equipment-detail">Disques: ${disques.join(', ')}</div>`;
                }
                break;
                
            case 'elastiques':
                if (equipmentConfig.elastiques.length > 0) {
                    const bands = equipmentConfig.elastiques.map(e => 
                        `${e.color} (${e.resistance}kg)`
                    );
                    summaryHTML += `<div class="equipment-detail">${bands.join(', ')}</div>`;
                }
                break;
                
            case 'bench':
                const benchFeatures = [];
                if (equipmentConfig.banc.inclinable) benchFeatures.push('inclinable');
                if (equipmentConfig.banc.declinable) benchFeatures.push('d√©clinable');
                if (benchFeatures.length > 0) {
                    summaryHTML += `<div class="equipment-detail">Options: ${benchFeatures.join(', ')}</div>`;
                }
                break;
                
            case 'kettlebell':
                const kettlebellWeights = Object.keys(equipmentConfig.kettlebells).filter(w => equipmentConfig.kettlebells[w] > 0);
                if (kettlebellWeights.length > 0) {
                    summaryHTML += `<div class="equipment-detail">Poids: ${kettlebellWeights.join(', ')}kg</div>`;
                }
                break;
        }
        
        summaryHTML += `</div>`;
    });
    
    summaryHTML += `
            </div>
        </div>
    </div>`;
    
    container.innerHTML = summaryHTML;
}

// ===== SAUVEGARDE UTILISATEUR =====
async function saveUserProfile() {
    // Transformer la structure equipment_config au format attendu par l'API
    const transformedEquipmentConfig = {
        barres: equipmentConfig.barres,
        disques: {
            available: Object.keys(equipmentConfig.disques).length > 0,
            weights: equipmentConfig.disques
        },
        dumbbells: {
            available: Object.keys(equipmentConfig.dumbbells).length > 0,
            weights: Object.keys(equipmentConfig.dumbbells).map(w => parseFloat(w))
        },
        banc: {
            available: equipmentConfig.banc.available,
            inclinable_haut: equipmentConfig.banc.inclinable || false,
            inclinable_bas: equipmentConfig.banc.declinable || false
        },
        elastiques: {
            available: equipmentConfig.elastiques.length > 0,
            bands: equipmentConfig.elastiques.map(e => ({
                color: e.color,
                resistance: e.resistance,
                count: e.count
            }))
        },
        autres: {
            kettlebell: {
                available: Object.keys(equipmentConfig.kettlebells || {}).length > 0,
                weights: Object.keys(equipmentConfig.kettlebells || {}).map(w => parseFloat(w))
            },
            barre_traction: {
                available: equipmentConfig.autres.barre_traction || false
            },
            lest_corps: {
                available: (equipmentConfig.autres.lest_corps || []).length > 0,
                weights: equipmentConfig.autres.lest_corps || []
            },
            lest_chevilles: {
                available: (equipmentConfig.autres.lest_chevilles || []).length > 0,
                weights: equipmentConfig.autres.lest_chevilles || []
            },
            lest_poignets: {
                available: (equipmentConfig.autres.lest_poignets || []).length > 0,
                weights: equipmentConfig.autres.lest_poignets || []
            }
        }
    };
    
    const userData = {
        name: document.getElementById('userName').value.trim(),
        birth_date: document.getElementById('userBirthDate').value + 'T00:00:00',
        height: parseFloat(document.getElementById('userHeight').value),
        weight: parseFloat(document.getElementById('userWeight').value),
        experience_level: document.getElementById('experienceLevel').value,
        goals: selectedGoals,
        equipment_config: transformedEquipmentConfig
    };
    
    // Validation finale
    if (!userData.name || !userData.birth_date || !userData.experience_level || 
        isNaN(userData.height) || isNaN(userData.weight) || 
        userData.height <= 0 || userData.weight <= 0) {
        showToast('Informations personnelles incompl√®tes', 'error');
        return;
    }
    
    if (userData.goals.length === 0) {
        showToast('Aucun objectif s√©lectionn√©', 'error');
        return;
    }

    // VALIDATION: V√©rifier que equipment_config n'est pas vide
    if (!transformedEquipmentConfig || Object.keys(transformedEquipmentConfig).length === 0) {
        showToast('Configuration d\'√©quipement requise', 'error');
        return;
    }

    // VALIDATION: V√©rifier que goals existe
    if (!userData.goals || userData.goals.length === 0) {
        showToast('Au moins un objectif doit √™tre s√©lectionn√©', 'error');
        return;
    }

    const user = await saveUser(userData);
    
    if (user) {
        setCurrentUser(user);
        localStorage.setItem('userId', user.id);
        localStorage.setItem('userProfile', JSON.stringify(user));
        
        // R√©initialiser l'interface
        document.getElementById('progressContainer').style.display = 'none';
        
        showMainInterface();
        showToast('Profil cr√©√© avec succ√®s !', 'success');
    }
}

// ===== LOGOUT =====
function logout() {
    if (confirm('√ätes-vous s√ªr de vouloir vous d√©connecter ?')) {
        localStorage.removeItem('userId');
        localStorage.removeItem('userProfile');
        resetState();
        
        // R√©initialiser l'interface
        document.getElementById('bottomNav').style.display = 'none';
        document.getElementById('progressContainer').style.display = 'block';
        document.getElementById('userInitial').style.display = 'none';
        
        // R√©initialiser les formulaires
        document.getElementById('userName').value = '';
        document.getElementById('userBirthDate').value = '';
        document.getElementById('userHeight').value = '';
        document.getElementById('userWeight').value = '';
        document.getElementById('experienceLevel').value = '';
        
        document.querySelectorAll('.chip.selected, .equipment-card.selected').forEach(el => {
            el.classList.remove('selected');
        });
        
        updateProgressBar();
        showStep(1);
        showWelcomeScreen();
        showToast('D√©connexion r√©ussie', 'success');
    }
}

// ===== EXPORT GLOBAL =====
// Export toutes les fonctions utilis√©es dans le HTML
window.toggleGoal = toggleGoal;
window.toggleEquipment = toggleEquipment;
window.nextStep = nextStep;  // Utilise notre version locale
window.prevStep = prevStep;  // Utilise notre version locale
window.saveUser = saveUserProfile;
window.updateBarbell = updateBarbell;
window.updateDisqueWeight = updateDisqueWeight;
window.updateDumbbellWeight = updateDumbbellWeight;
window.updateKettlebellWeight = updateKettlebellWeight;
window.addBand = addBand;
window.removeBand = removeBand;
window.toggleBenchFeature = toggleBenchFeature;
window.showConfigPanel = showConfigPanel;
window.logout = logout;

// Export pour les autres modules
export {
    generateDetailedEquipmentConfig,
    updateProfileSummary,
    validateDetailedConfig
};

--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\frontend\app-profile.js ---
--- Nom du fichier: app-profile.js ---
--- Contenu ---
// ===== MODULE PROFIL =====
import { currentUser } from './app-state.js';
import { showToast } from './app-ui.js';
// Ne pas importer showWelcomeScreen - elle est d√©j√† globale

// ===== AFFICHAGE DES INFORMATIONS DU PROFIL =====
function loadProfileInfo() {
    const container = document.querySelector('#profile .profile-info');
    if (!container || !currentUser) return;
    
    const age = currentUser.birth_date ? 
        Math.floor((new Date() - new Date(currentUser.birth_date)) / (365.25 * 24 * 60 * 60 * 1000)) : 
        'N/A';
    
    container.innerHTML = `
        <div style="background: rgba(255, 255, 255, 0.05); padding: 2rem; border-radius: var(--radius); margin-bottom: 2rem;">
            <h2 style="margin-bottom: 1.5rem;">üë§ ${currentUser.name}</h2>
            
            <div style="display: grid; gap: 1rem;">
                <div class="profile-row">
                    <span style="color: var(--gray);">√Çge:</span>
                    <strong>${age} ans</strong>
                </div>
                
                <div class="profile-row">
                    <span style="color: var(--gray);">Taille:</span>
                    <strong>${currentUser.height || 'Non renseign√©e'} ${currentUser.height ? 'cm' : ''}</strong>
                </div>

                <div class="profile-row">
                    <span style="color: var(--gray);">Poids:</span>
                    <strong>${currentUser.weight || 'Non renseign√©'} ${currentUser.weight ? 'kg' : ''}</strong>
                </div>
                
                <div class="profile-row">
                    <span style="color: var(--gray);">Niveau:</span>
                    <strong>${currentUser.experience_level}</strong>
                </div>
                
                <div class="profile-row">
                    <span style="color: var(--gray);">Membre depuis:</span>
                    <strong>${new Date(currentUser.created_at).toLocaleDateString('fr-FR')}</strong>
                </div>
            </div>
        </div>
    `;
}

// ===== SUPPRESSION DU PROFIL =====
async function deleteProfile() {
    if (!currentUser) return;
    
    // Triple confirmation pour √©viter les accidents
    const firstConfirm = confirm(
        `‚ö†Ô∏è ATTENTION ‚ö†Ô∏è\n\n` +
        `√ätes-vous s√ªr de vouloir supprimer d√©finitivement votre profil "${currentUser.name}" ?\n\n` +
        `Cette action supprimera :\n` +
        `‚Ä¢ Toutes vos informations personnelles\n` +
        `‚Ä¢ Tout votre historique d'entra√Ænement\n` +
        `‚Ä¢ Tous vos programmes\n\n` +
        `Cette action est IRR√âVERSIBLE !`
    );
    
    if (!firstConfirm) return;
    
    const secondConfirm = confirm(
        `‚ö†Ô∏è DERNI√àRE CHANCE ‚ö†Ô∏è\n\n` +
        `Voulez-vous VRAIMENT supprimer votre profil ?\n\n` +
        `Tapez OK pour confirmer la suppression d√©finitive.`
    );
    
    if (!secondConfirm) return;
    
    try {
        const response = await fetch(`/api/users/${currentUser.id}`, {
            method: 'DELETE'
        });
        
        if (response.ok) {
            // Nettoyer le localStorage
            localStorage.removeItem('userId');
            localStorage.removeItem('userProfile');
            localStorage.removeItem('currentWorkout');
            localStorage.removeItem('silentMode');
            
            showToast('Profil supprim√©', 'success');
            
            // Retourner √† l'√©cran d'accueil - showWelcomeScreen est globale
            if (window.showWelcomeScreen) {
                window.showWelcomeScreen();
            } else {
                // Fallback : recharger la page
                window.location.reload();
            }
        } else {
            showToast('Erreur lors de la suppression', 'error');
        }
    } catch (error) {
        console.error('Erreur suppression profil:', error);
        showToast('Erreur de connexion', 'error');
    }
}

// Export des fonctions
window.loadProfileInfo = loadProfileInfo;
window.deleteProfile = deleteProfile;

export { loadProfileInfo, deleteProfile };
--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\frontend\app-program-generator.js ---
--- Nom du fichier: app-program-generator.js ---
--- Contenu ---
import { currentUser, setCurrentProgram, setUserPrograms } from './app-state.js';
import { showToast } from './app-ui.js';
import { showView } from './app-navigation.js';
import { activateProgram, loadUserPrograms, saveProgram, getUserCommitment, saveUserCommitment } from './app-api.js';
import { loadDashboard } from './app-dashboard.js';

// Variable pour stocker temporairement les param√®tres du programme
let pendingProgramParams = null;
let currentGeneratedProgramId = null;

// ===== AFFICHAGE DE L'INTERFACE DE G√âN√âRATION =====
async function showProgramGenerator() {
    const container = document.getElementById('mainContent');
    if (!container) {
        const mainDiv = document.createElement('div');
        mainDiv.className = 'view';
        mainDiv.id = 'program-generator';
        mainDiv.innerHTML = '<div id="mainContent"></div>';
        document.querySelector('.container').appendChild(mainDiv);
    }
    
    const content = document.getElementById('mainContent') || container;
    
    // V√©rifier si l'utilisateur a d√©j√† un engagement
    const commitment = await getUserCommitment(currentUser.id);
    
    if (!commitment) {
        // Afficher le formulaire d'engagement d'abord
        showCommitmentForm(content);
    } else {
        // Afficher directement le formulaire de g√©n√©ration
        showProgramForm(content, commitment);
    }
    
    showView('program-generator');
}

// ===== FORMULAIRE D'ENGAGEMENT =====
function showCommitmentForm(container, existingCommitment = null) {
    container.innerHTML = `
        <h2>üéØ D√©finir vos objectifs d'entra√Ænement</h2>
        <p style="color: var(--gray-light); margin-bottom: 2rem;">
            Avant de cr√©er votre programme, d√©finissons vos disponibilit√©s
        </p>
        
        <form id="commitmentForm" onsubmit="submitCommitment(event)">
            <div class="commitment-section">
                <h3>Fr√©quence d'entra√Ænement</h3>
                <p style="color: var(--gray); font-size: 0.9rem; margin-bottom: 1rem;">
                    Combien de s√©ances par semaine pouvez-vous faire de mani√®re r√©aliste ?
                </p>
                <div class="frequency-selector">
                    <button type="button" class="frequency-btn" data-frequency="2" onclick="selectFrequency(this)">
                        2<small>2 jours/sem</small>
                    </button>
                    <button type="button" class="frequency-btn" data-frequency="3" onclick="selectFrequency(this)">
                        3<small>3 jours/sem</small>
                    </button>
                    <button type="button" class="frequency-btn selected" data-frequency="4" onclick="selectFrequency(this)">
                        4<small>4 jours/sem</small>
                    </button>
                    <button type="button" class="frequency-btn" data-frequency="5" onclick="selectFrequency(this)">
                        5<small>5 jours/sem</small>
                    </button>
                    <button type="button" class="frequency-btn" data-frequency="6" onclick="selectFrequency(this)">
                        6<small>6 jours/sem</small>
                    </button>
                </div>
            </div>
            
            <div class="commitment-section">
                <h3>Dur√©e par s√©ance</h3>
                <p style="color: var(--gray); font-size: 0.9rem; margin-bottom: 1rem;">
                    Combien de temps pouvez-vous consacrer √† chaque s√©ance ?
                </p>
                <div class="time-selector">
                    <button type="button" class="time-btn" data-time="30" onclick="selectTime(this)">
                        30 min<small>Court</small>
                    </button>
                    <button type="button" class="time-btn" data-time="45" onclick="selectTime(this)">
                        45 min<small>Standard</small>
                    </button>
                    <button type="button" class="time-btn selected" data-time="60" onclick="selectTime(this)">
                        60 min<small>Complet</small>
                    </button>
                    <button type="button" class="time-btn" data-time="90" onclick="selectTime(this)">
                        90 min<small>Long</small>
                    </button>
                </div>
            </div>
            
            <div class="commitment-section">
                <h3>Priorit√©s musculaires (optionnel)</h3>
                <p style="color: var(--gray); font-size: 0.9rem; margin-bottom: 1rem;">
                    Y a-t-il des muscles que vous souhaitez d√©velopper en priorit√© ?
                </p>
                <div class="muscle-priority-grid">
                    <div class="muscle-priority-item">
                        <span>Pectoraux</span>
                        <select name="Pectoraux_priority">
                        <option value="never">Jamais</option>
                        <option value="normal" selected>Normal</option>
                        <option value="priority">Priorit√©</option>
                        <option value="always">Toujours</option>
                        </select>
                    </div>
                    <div class="muscle-priority-item">
                        <span>Dos</span>
                        <select name="Dos_priority">
                        <option value="never">Jamais</option>
                        <option value="normal" selected>Normal</option>
                        <option value="priority">Priorit√©</option>
                        <option value="always">Toujours</option>
                        </select>
                    </div>
                    <div class="muscle-priority-item">
                        <span>√âpaules</span>
                        <select name="Delto√Ødes_priority">
                        <option value="never">Jamais</option>
                        <option value="normal" selected>Normal</option>
                        <option value="priority">Priorit√©</option>
                        <option value="always">Toujours</option>
                        </select>
                    </div>
                    <div class="muscle-priority-item">
                        <span>Jambes</span>
                        <select name="Jambes_priority">
                        <option value="never">Jamais</option>
                        <option value="normal" selected>Normal</option>
                        <option value="priority">Priorit√©</option>
                        <option value="always">Toujours</option>
                        </select>
                    </div>
                    <div class="muscle-priority-item">
                        <span>Bras</span>
                        <select name="Bras_priority">
                        <option value="never">Jamais</option>
                        <option value="normal" selected>Normal</option>
                        <option value="priority">Priorit√©</option>
                        <option value="always">Toujours</option>
                        </select>
                    </div>
                    <div class="muscle-priority-item">
                        <span>Abdos</span>
                        <select name="Abdominaux_priority">
                        <option value="never">Jamais</option>
                        <option value="normal" selected>Normal</option>
                        <option value="priority">Priorit√©</option>
                        <option value="always">Toujours</option>
                        </select>
                    </div>
                </div>
            </div>
            
            <button type="submit" class="btn btn-primary" style="margin-top: 2rem;">
                Continuer vers la cr√©ation du programme
            </button>
        </form>
    `;
    // Pr√©-s√©lectionner les valeurs existantes
        setTimeout(() => {
            if (existingCommitment) {
                // Pr√©-s√©lectionner la fr√©quence
                const freqBtn = document.querySelector(`[data-frequency="${existingCommitment.sessions_per_week}"]`);
                if (freqBtn) freqBtn.click();
                
                // Pr√©-s√©lectionner le temps
                const timeBtn = document.querySelector(`[data-time="${existingCommitment.time_per_session}"]`);
                if (timeBtn) timeBtn.click();
                
                // Pr√©-s√©lectionner les priorit√©s musculaires
                if (existingCommitment.focus_muscles) {
                    Object.entries(existingCommitment.focus_muscles).forEach(([muscle, priority]) => {
                        const select = document.querySelector(`select[name="${muscle}_priority"]`);
                        if (select) select.value = priority;
                    });
                }
            }
        }, 100);
    // Ajouter les styles si pas d√©j√† pr√©sents
    if (!document.getElementById('commitment-styles')) {
        const style = document.createElement('style');
        style.id = 'commitment-styles';
        style.textContent = `
            .commitment-section {
                background: rgba(255, 255, 255, 0.05);
                border: 1px solid rgba(255, 255, 255, 0.1);
                padding: 2rem;
                border-radius: 16px;
                margin-bottom: 2rem;
            }
            
            .commitment-section h3 {
                color: white;
                margin-bottom: 0.5rem;
                font-size: 1.25rem;
            }
            
            .frequency-selector, .time-selector {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
                gap: 1rem;
                margin-top: 1rem;
            }
            
            .frequency-btn, .time-btn {
                padding: 1rem;
                background: rgba(255, 255, 255, 0.05);
                border: 2px solid rgba(255, 255, 255, 0.1);
                border-radius: 12px;
                cursor: pointer;
                transition: all 0.2s;
                text-align: center;
                font-weight: 600;
                color: rgba(255, 255, 255, 0.7);
                display: flex;
                flex-direction: column;
                align-items: center;
                gap: 0.25rem;
            }
            
            .frequency-btn:hover, .time-btn:hover {
                border-color: #3b82f6;
                background: rgba(59, 130, 246, 0.1);
                transform: translateY(-2px);
            }
            
            .frequency-btn.selected, .time-btn.selected {
                background: #3b82f6;
                color: white;
                border-color: #3b82f6;
            }
            
            .frequency-btn small, .time-btn small {
                display: block;
                font-size: 0.75rem;
                font-weight: 400;
                opacity: 0.8;
            }
            
            .muscle-priority-grid {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
                gap: 1rem;
                margin-top: 1rem;
            }
            
            .muscle-priority-item {
                display: flex;
                justify-content: space-between;
                align-items: center;
                padding: 1rem;
                background: rgba(255, 255, 255, 0.03);
                border-radius: 8px;
                border: 1px solid rgba(255, 255, 255, 0.1);
            }
            
            .muscle-priority-item span {
                color: rgba(255, 255, 255, 0.9);
            }
            
            .muscle-priority-item select {
                padding: 0.5rem;
                background: rgba(255, 255, 255, 0.1);
                border: 1px solid rgba(255, 255, 255, 0.2);
                border-radius: 6px;
                color: white;
                font-size: 0.875rem;
                cursor: pointer;
            }
            
            .muscle-priority-item select option {
                background: #1e293b;
                color: white;
            }
            
            .btn-primary {
                background: #10b981;
                color: white;
                border: none;
                padding: 1rem 2rem;
                border-radius: 12px;
                font-size: 1.1rem;
                font-weight: 600;
                cursor: pointer;
                transition: all 0.2s;
                width: 100%;
            }
            
            .btn-primary:hover {
                background: #059669;
                transform: translateY(-2px);
            }
            
            .loading-container {
                text-align: center;
                padding: 3rem;
                color: rgba(255, 255, 255, 0.7);
            }
            
            .loading-spinner {
                width: 48px;
                height: 48px;
                border: 3px solid rgba(255, 255, 255, 0.1);
                border-top-color: #3b82f6;
                border-radius: 50%;
                animation: spin 1s linear infinite;
                margin: 0 auto 1rem;
            }
            
            @keyframes spin {
                to { transform: rotate(360deg); }
            }
        `;
        document.head.appendChild(style);
    }
}

// ===== FORMULAIRE DE G√âN√âRATION DE PROGRAMME =====
function showProgramForm(container, commitment) {
    // Dur√©e par d√©faut bas√©e sur la fr√©quence
    const defaultWeeks = commitment.sessions_per_week <= 3 ? 8 : 6;
    
    container.innerHTML = `
        <h2>üìã G√©n√©rer un programme</h2>
        <p style="color: var(--gray-light); margin-bottom: 2rem;">
            Programme bas√© sur ${commitment.sessions_per_week} s√©ances/semaine de ${commitment.time_per_session} minutes
        </p>
        
        <form id="programForm" onsubmit="generateProgram(event)">
            <div class="form-group">
                <label>Dur√©e du programme</label>
                <select name="weeks" class="form-input">
                    <option value="4">4 semaines</option>
                    <option value="6" ${defaultWeeks === 6 ? 'selected' : ''}>6 semaines</option>
                    <option value="8" ${defaultWeeks === 8 ? 'selected' : ''}>8 semaines</option>
                    <option value="12">12 semaines</option>
                </select>
            </div>
            
            <button type="submit" class="btn btn-primary" style="margin-top: 1.5rem;">
                üöÄ G√©n√©rer le programme
            </button>
            
            <button type="button" class="btn btn-secondary" style="margin-top: 1rem;" onclick="resetCommitment()">
                Modifier mes pr√©f√©rences
            </button>
        </form>
        
        <div id="programResult" style="margin-top: 2rem;"></div>
    `;
}

// ===== GESTION DES S√âLECTIONS =====
function selectFrequency(btn) {
    document.querySelectorAll('.frequency-btn').forEach(b => b.classList.remove('selected'));
    btn.classList.add('selected');
}

function selectTime(btn) {
    document.querySelectorAll('.time-btn').forEach(b => b.classList.remove('selected'));
    btn.classList.add('selected');
}

// ===== SOUMISSION DE L'ENGAGEMENT =====
async function submitCommitment(event) {
    event.preventDefault();
    
    const selectedFrequency = document.querySelector('.frequency-btn.selected');
    const selectedTime = document.querySelector('.time-btn.selected');
    
    if (!selectedFrequency || !selectedTime) {
        showToast('Veuillez s√©lectionner une fr√©quence et une dur√©e', 'error');
        return;
    }
    
    // Collecter les priorit√©s musculaires
    const focusMuscles = {};
    const muscles = ['Pectoraux', 'Dos', 'Delto√Ødes', 'Jambes', 'Bras', 'Abdominaux'];
    
    muscles.forEach(muscle => {
        const priority = document.querySelector(`select[name="${muscle}_priority"]`).value;
        if (priority !== 'normal') {
            focusMuscles[muscle] = priority;
        }
    });
    
    const commitment = {
        sessions_per_week: parseInt(selectedFrequency.dataset.frequency),
        time_per_session: parseInt(selectedTime.dataset.time),
        focus_muscles: focusMuscles
    };
    
    try {
        await saveUserCommitment(currentUser.id, commitment);
        showToast('Pr√©f√©rences enregistr√©es !', 'success');
        
        // Afficher maintenant le formulaire de g√©n√©ration
        const container = document.getElementById('mainContent');
        showProgramForm(container, commitment);
    } catch (error) {
        console.error('Error saving commitment:', error);
        showToast('Erreur lors de la sauvegarde', 'error');
    }
}

// ===== TRANSFORMATION DU PROGRAMME POUR SAUVEGARDE =====
function transformProgramForSaving(program, weeks, frequency) {
    const programData = {
        name: `Programme ${weeks} semaines - ${frequency}j/sem`,
        duration_weeks: weeks,
        frequency: frequency,
        program_days: []
    };
    
    // Grouper par semaine et jour
    const groupedDays = {};
    
    program.forEach(item => {
        const key = `${item.week}-${item.day}`;
        if (!groupedDays[key]) {
            groupedDays[key] = {
                week_number: item.week,
                day_number: item.day,
                muscle_group: item.muscle_group,
                exercises: []
            };
        }
        
        item.exercises.forEach((ex, index) => {
            groupedDays[key].exercises.push({
                exercise_id: ex.exercise_id,
                sets: ex.sets,
                target_reps: ex.target_reps,
                rest_time: ex.rest_time,
                order_index: index,
                predicted_weight: ex.predicted_weight
            });
        });
    });
    
    programData.program_days = Object.values(groupedDays);
    
    return programData;
}



// ===== R√âINITIALISER L'ENGAGEMENT =====
async function resetCommitment() {
    const container = document.getElementById('mainContent');
    
    // R√©cup√©rer les pr√©f√©rences existantes
    try {
        const commitment = await getUserCommitment(currentUser.id);
        showCommitmentForm(container, commitment);
    } catch (error) {
        // Si aucune pr√©f√©rence n'existe, afficher le formulaire vide
        showCommitmentForm(container);
    }
}


// ===== G√âN√âRATION DU PROGRAMME =====
async function generateProgram(event) {
    event.preventDefault();
    
    const formData = new FormData(event.target);
    const weeks = parseInt(formData.get('weeks'));
    const resultDiv = document.getElementById('programResult');
    // V√©rifier que l'utilisateur a un engagement
    const commitment = await getUserCommitment(currentUser.id);
    if (!commitment) {
        resultDiv.innerHTML = `
            <div style="
                background: rgba(239, 68, 68, 0.1);
                border: 1px solid rgba(239, 68, 68, 0.3);
                border-radius: 12px;
                padding: 2rem;
                text-align: center;
            ">
                <h3 style="color: #ef4444;">‚ö†Ô∏è Configuration incompl√®te</h3>
                <p>Veuillez d'abord d√©finir vos pr√©f√©rences d'entra√Ænement</p>
                <button class="btn btn-primary" onclick="showCommitmentForm()">
                    Configurer mes pr√©f√©rences
                </button>
            </div>
        `;
        return;
    }
    
    const frequency = commitment.sessions_per_week;
    

    resultDiv.innerHTML = `
        <div class="loading-container">
            <div class="loading-spinner"></div>
            <p>G√©n√©ration du programme en cours...</p>
        </div>
    `;
    
    try {
        const response = await fetch(`/api/users/${currentUser.id}/program`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ weeks, frequency })
        });
        
        if (!response.ok) {
            throw new Error('Erreur lors de la g√©n√©ration');
        }
        
        const data = await response.json();
        const program = data.program;

        // ‚úÖ VALIDATION EN PREMIER - AVANT displayProgram()
        if (!program || program.length === 0) {
            const totalExercises = program ? program.reduce((total, workout) => 
                total + (workout.exercises ? workout.exercises.length : 0), 0
            ) : 0;
            
            resultDiv.innerHTML = `
                <div style="
                    background: rgba(239, 68, 68, 0.1);
                    border: 1px solid rgba(239, 68, 68, 0.3);
                    border-radius: 12px;
                    padding: 2rem;
                    text-align: center;
                    margin-top: 2rem;
                ">
                    <h3 style="color: #ef4444; margin-bottom: 1rem;">
                        ‚ö†Ô∏è Programme incomplet
                    </h3>
                    <p style="color: rgba(255, 255, 255, 0.7);">
                        ${totalExercises === 0 ? 
                            'Aucun exercice trouv√© avec votre √©quipement actuel.' : 
                            `Seulement ${totalExercises} exercice(s) trouv√©(s).`
                        }
                    </p>
                    <button onclick="showView('equipment')" class="btn btn-primary" style="margin-top: 1rem;">
                        üîß Modifier mon √©quipement
                    </button>
                </div>
            `;
            return; // ‚ùå STOP ICI - displayProgram() ne sera PAS appel√©
        }

        // ‚úÖ Seulement si le programme est valide :
        // Afficher le programme
        displayProgram(program);

        // Transformer et sauvegarder le programme
        const programToSave = transformProgramForSaving(program, weeks, frequency);
        const savedProgram = await saveProgram(programToSave);
                
        if (savedProgram) {
            currentGeneratedProgramId = savedProgram.id;
            // Ajouter les boutons d'action styl√©s
            resultDiv.innerHTML += `
                <div style="
                    background: linear-gradient(135deg, rgba(16, 185, 129, 0.1), rgba(59, 130, 246, 0.1));
                    border: 1px solid rgba(16, 185, 129, 0.3);
                    border-radius: 20px;
                    padding: 2.5rem;
                    text-align: center;
                    margin: 2rem 0;
                    backdrop-filter: blur(10px);
                    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
                ">
                    <h3 style="
                        color: #10b981; 
                        margin: 0 0 1rem 0;
                        font-size: 1.8rem;
                        font-weight: 700;
                    ">üéØ Programme pr√™t !</h3>
                    
                    <p style="
                        color: rgba(255, 255, 255, 0.9); 
                        margin-bottom: 2rem;
                        font-size: 1.1rem;
                    ">
                        Votre programme personnalis√© est maintenant disponible
                    </p>
                    
                    <div style="
                        display: flex; 
                        gap: 1.5rem; 
                        justify-content: center; 
                        flex-wrap: wrap;
                    ">
                        <button onclick="activateProgramAndStart(${savedProgram.id})" style="
                            background: linear-gradient(135deg, #10b981, #059669);
                            color: white;
                            border: none;
                            padding: 1rem 2.5rem;
                            border-radius: 15px;
                            font-size: 1.1rem;
                            font-weight: 600;
                            cursor: pointer;
                            transition: all 0.3s ease;
                            box-shadow: 0 4px 15px rgba(16, 185, 129, 0.3);
                        " onmouseover="this.style.transform='translateY(-2px)'" 
                        onmouseout="this.style.transform='translateY(0)'">
                            üöÄ Commencer maintenant
                        </button>
                        
                        <button onclick="saveForLater()" style="
                            background: rgba(255, 255, 255, 0.1);
                            color: white;
                            border: 2px solid rgba(255, 255, 255, 0.2);
                            padding: 1rem 2.5rem;
                            border-radius: 15px;
                            font-size: 1.1rem;
                            font-weight: 600;
                            cursor: pointer;
                            transition: all 0.3s ease;
                        " onmouseover="this.style.background='rgba(255, 255, 255, 0.15)'" 
                        onmouseout="this.style.background='rgba(255, 255, 255, 0.1)'">
                            üíæ Sauvegarder pour plus tard
                        </button>
                    </div>
                </div>
            `;
        }
        
        showToast('Programme g√©n√©r√© avec succ√®s !', 'success');
        
    } catch (error) {
        console.error('Erreur:', error);
        resultDiv.innerHTML = `
            <div class="error-message">
                <p>‚ùå Erreur lors de la g√©n√©ration du programme</p>
                <p>Veuillez r√©essayer</p>
            </div>
        `;
    }
}



// ===== AFFICHAGE DU PROGRAMME G√âN√âR√â =====
function displayProgram(program) {
    const resultDiv = document.getElementById('programResult');
    
    // DEBUG: Logger les informations re√ßues
    console.group('üîç Debug g√©n√©ration programme');
    console.log('Programme complet re√ßu:', program);
    console.log('Nombre de semaines:', program.length > 0 ? Math.max(...program.map(w => w.week)) : 0);
    console.log('√âquipement utilisateur:', currentUser.equipment_config);
    
    // Compter les exercices par groupe musculaire
    const muscleGroups = {};
    program.forEach(workout => {
        if (!muscleGroups[workout.muscle_group]) {
            muscleGroups[workout.muscle_group] = 0;
        }
        muscleGroups[workout.muscle_group] += (workout.exercises?.length || 0);
    });
    console.log('Exercices par groupe musculaire:', muscleGroups);
    console.groupEnd();
    
    // V√©rifier que le programme contient des donn√©es
    if (!program || program.length === 0) {
        resultDiv.innerHTML = `
            <div style="
                text-align: center;
                padding: 2rem;
                color: var(--gray);
            ">
                <p>‚ùå Aucun exercice g√©n√©r√©</p>
                <p>Veuillez r√©essayer</p>
            </div>
        `;
        return;
    }
    
    // Compter le nombre total d'exercices
    const totalExercises = program.reduce((total, workout) => 
        total + (workout.exercises ? workout.exercises.length : 0), 0
    );
    
    if (totalExercises === 0) {
        resultDiv.innerHTML = `
            <div style="
                background: rgba(239, 68, 68, 0.1);
                border: 1px solid rgba(239, 68, 68, 0.3);
                border-radius: 12px;
                padding: 2rem;
                text-align: center;
                margin-top: 2rem;
            ">
                <h3 style="color: #ef4444; margin-bottom: 1rem;">
                    ‚ö†Ô∏è Programme incomplet
                </h3>
                <p style="color: rgba(255, 255, 255, 0.7);">
                    Le programme a √©t√© g√©n√©r√© mais ne contient aucun exercice.
                    ${!currentUser.equipment_config.dumbbells.available ? 
                      '<br><strong>üí° Conseil :</strong> Activez les halt√®res dans votre configuration pour plus d\'exercices.' : 
                      'Cela peut √™tre d√ª √† une incompatibilit√© avec votre √©quipement.'}
                </p>
                <button onclick="generateProgram(event)" class="button-primary" style="margin-top: 1rem;">
                    üîÑ R√©essayer avec d'autres param√®tres
                </button>
            </div>
        `;
        return;
    }
    
    // Grouper par semaine
    const weeklyProgram = {};
    program.forEach(workout => {
        if (!weeklyProgram[workout.week]) {
            weeklyProgram[workout.week] = [];
        }
        weeklyProgram[workout.week].push(workout);
    });
    
    let html = `
        <h3 style="
            color: white; 
            margin: 2rem 0 1rem 0;
            text-align: center;
        ">Votre programme personnalis√©</h3>
        
        <p style="
            text-align: center;
            color: var(--gray);
            margin-bottom: 2rem;
            font-size: 0.9rem;
        ">
            üí° Cliquez sur une semaine pour voir le d√©tail des exercices
        </p>
    `;
    
    Object.entries(weeklyProgram).forEach(([week, workouts], index) => {
        // D√©plier automatiquement la premi√®re semaine
        const isFirstWeek = index === 0;
        
        html += `
            <div class="week-section" style="
                background: rgba(255, 255, 255, 0.05);
                border: 1px solid rgba(255, 255, 255, 0.1);
                border-radius: 12px;
                margin-bottom: 1rem;
                overflow: hidden;
                transition: all 0.3s;
            ">
                <h4 onclick="toggleWeek(${week})" style="
                    cursor: pointer;
                    margin: 0;
                    padding: 1.25rem;
                    color: #3b82f6;
                    display: flex;
                    align-items: center;
                    gap: 0.75rem;
                    background: rgba(59, 130, 246, 0.1);
                    transition: background 0.2s;
                    user-select: none;
                " onmouseover="this.style.background='rgba(59, 130, 246, 0.2)'" 
                   onmouseout="this.style.background='rgba(59, 130, 246, 0.1)'">
                    <span class="week-toggle" id="toggle-week-${week}" style="
                        font-size: 0.8rem;
                        transition: transform 0.2s;
                        ${isFirstWeek ? 'transform: rotate(90deg);' : ''}
                    ">‚ñ∂</span>
                    Semaine ${week}
                    <span style="
                        margin-left: auto;
                        font-size: 0.9rem;
                        color: rgba(255, 255, 255, 0.6);
                        font-weight: normal;
                    ">${workouts.length} s√©ances</span>
                </h4>
                
                <div id="week-content-${week}" style="
                    padding: 0 1.25rem 1.25rem 1.25rem;
                    ${isFirstWeek ? '' : 'display: none;'}
                ">
                    ${workouts.map(workout => {
                        // Couleurs diff√©rentes selon le type de s√©ance
                        const colors = {
                            'Pectoraux/Triceps': '#60a5fa',
                            'Dos/Biceps': '#34d399',
                            'Jambes': '#f59e0b',
                            '√âpaules/Abdos': '#a78bfa',
                            'Haut du corps': '#60a5fa',
                            'Bas du corps': '#f59e0b',
                            'Full body': '#ec4899'
                        };
                        const color = colors[workout.muscle_group] || '#60a5fa';
                        
                        return `
                            <div style="
                                margin-top: 1rem;
                                padding: 1rem;
                                background: rgba(255, 255, 255, 0.03);
                                border-radius: 8px;
                                border: 1px solid rgba(255, 255, 255, 0.1);
                            ">
                                <p style="
                                    color: ${color};
                                    margin: 0 0 1rem 0;
                                    display: flex;
                                    justify-content: space-between;
                                    align-items: center;
                                ">
                                    <strong>Jour ${workout.day} - ${workout.muscle_group}</strong>
                                    <span style="
                                        font-size: 0.9rem;
                                        color: rgba(255, 255, 255, 0.6);
                                    ">${workout.exercises.length} exercices</span>
                                </p>
                                
                                ${workout.exercises.map((ex, idx) => `
                                    <div style="
                                        background: rgba(255, 255, 255, 0.03);
                                        border: 1px solid rgba(255, 255, 255, 0.1);
                                        border-radius: 8px;
                                        padding: 1rem;
                                        margin-bottom: 0.75rem;
                                        display: flex;
                                        align-items: center;
                                        gap: 1rem;
                                    ">
                                        <div style="
                                            color: #3b82f6;
                                            font-weight: bold;
                                            font-size: 1.1rem;
                                            min-width: 25px;
                                        ">${idx + 1}.</div>
                                        
                                        <div style="flex: 1; min-width: 0;">
                                            <div style="
                                                font-weight: 500;
                                                color: white;
                                                margin-bottom: 0.25rem;
                                                word-wrap: break-word;
                                                overflow-wrap: break-word;
                                                hyphens: auto;
                                                line-height: 1.4;
                                            ">${ex.exercise_name}</div>
                                            
                                            <div style="
                                                display: flex;
                                                gap: 1rem;
                                                align-items: center;
                                                flex-wrap: wrap;
                                                font-size: 0.85rem;
                                                color: rgba(255, 255, 255, 0.7);
                                            ">
                                                <span style="
                                                    background: rgba(59, 130, 246, 0.1);
                                                    padding: 0.2rem 0.6rem;
                                                    border-radius: 4px;
                                                    white-space: nowrap;
                                                ">${ex.sets} √ó ${ex.target_reps}</span>
                                                <span style="
                                                    color: #60a5fa;
                                                    font-weight: 500;
                                                    white-space: nowrap;
                                                ">${ex.predicted_weight}kg</span>
                                                <span style="
                                                    color: rgba(255, 255, 255, 0.5);
                                                    white-space: nowrap;
                                                ">${ex.rest_time}s repos</span>
                                            </div>
                                        </div>
                                    </div>
                                `).join('')}
                            </div>
                        `;
                    }).join('')}
                </div>
            </div>
        `;
    });    
    resultDiv.innerHTML = html;
}


// ===== TOGGLE SEMAINE =====
function toggleWeek(week) {
    const content = document.getElementById(`week-content-${week}`);
    const toggle = document.getElementById(`toggle-week-${week}`);
    
    if (content.style.display === 'none' || !content.style.display) {
        content.style.display = 'block';
        toggle.style.transform = 'rotate(90deg)';
        
        // Animation d'ouverture
        content.style.opacity = '0';
        content.style.transform = 'translateY(-10px)';
        setTimeout(() => {
            content.style.transition = 'opacity 0.3s, transform 0.3s';
            content.style.opacity = '1';
            content.style.transform = 'translateY(0)';
        }, 10);
    } else {
        // Animation de fermeture
        content.style.opacity = '0';
        content.style.transform = 'translateY(-10px)';
        setTimeout(() => {
            content.style.display = 'none';
            toggle.style.transform = 'rotate(0deg)';
        }, 300);
    }
}

// ===== ACTIVATION ET D√âMARRAGE DU PROGRAMME =====
async function activateProgramAndStart(programId) {
    const success = await activateProgram(programId);
    if (success) {
        // Charger le programme actif
        const programs = await loadUserPrograms(currentUser.id);
        const activeProgram = programs.find(p => p.id === programId);
        if (activeProgram) {
            setCurrentProgram(activeProgram);
        }
        
        // Forcer le rechargement complet du dashboard
        await loadDashboard();  // ‚Üê AJOUTER CETTE LIGNE
        
        // Retourner au dashboard
        showView('dashboard');
    }
}

// ===== SAUVEGARDER POUR PLUS TARD =====
async function saveForLater() {
    if (!currentGeneratedProgramId) {
        showToast('Aucun programme √† sauvegarder', 'error');
        return;
    }
    
    showToast('Programme sauvegard√© dans vos programmes !', 'success');
    showView('dashboard');
}


// ===== EXPORTS GLOBAUX =====
window.activateProgramAndStart = activateProgramAndStart;
window.saveForLater = saveForLater;
window.showProgramGenerator = showProgramGenerator;
window.generateProgram = generateProgram;
window.selectFrequency = selectFrequency;  
window.selectTime = selectTime;            
window.submitCommitment = submitCommitment;
window.resetCommitment = resetCommitment;  
window.toggleWeek = toggleWeek;
window.activateProgramAndStart = activateProgramAndStart;

// Export pour les modules
export { showProgramGenerator };
--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\frontend\app-rest.js ---
--- Nom du fichier: app-rest.js ---
--- Contenu ---
// ===== GESTIONNAIRE DE REPOS =====
// Ce fichier g√®re les p√©riodes de repos entre s√©ries et exercices
// Il inclut les timers, les notifications sonores et les vibrations

import {
    currentExercise,
    currentUser,
    lastSetEndTime,
    setLastSetEndTime,
    restTimerInterval,
    setRestTimerInterval,
    isInRestPeriod,
    setIsInRestPeriod,
    audioContext,
    setAudioContext,
    isSilentMode,
    incrementSetNumber,
    setSetStartTime
} from './app-state.js';

import { updateSetRestTime } from './app-api.js';
import { REST_TARGET_TIME } from './app-config.js';
import { formatWeightDisplay } from './app-equipment.js';
import { addToSessionHistory } from './app-history.js';

// ===== AFFICHAGE DE L'INTERFACE DE REPOS =====
function showRestInterface(setData) {
    const container = document.getElementById('exerciseArea');
    if (!container) return;
    
    setIsInRestPeriod(true);
    setLastSetEndTime(new Date());
    
    container.innerHTML = `
        <div class="current-exercise">
            <h2>${currentExercise.name_fr}</h2>
            <p class="exercise-info">${currentExercise.body_part} ‚Ä¢ ${currentExercise.level}</p>
        </div>
        
        <div class="rest-timer active">
            <div class="rest-timer-label">Temps de repos</div>
            <div class="rest-timer-display" id="restTimer">0:00</div>
            <div class="rest-info">
                S√©rie ${setData.set_number} termin√©e : ${formatSetDisplay(setData)}
            </div>
            <button class="btn btn-secondary btn-skip-rest" onclick="skipRestPeriod()">
                ‚è≠Ô∏è Passer le repos
            </button>
        </div>
        
        <div id="previousSets" class="previous-sets">
            ${document.getElementById('previousSets')?.innerHTML || ''}
        </div>
        
        <button class="btn btn-secondary" onclick="finishExerciseDuringRest()">
            Changer d'exercice
        </button>
    `;
    
    startRestTimer(REST_TARGET_TIME);
}

// ===== FORMATAGE DE L'AFFICHAGE D'UNE S√âRIE =====
function formatSetDisplay(setData) {
    // D√©terminer le type d'exercice
    const isTimeBased = currentExercise && currentExercise.name_fr.toLowerCase().match(/gainage|planche|plank|vacuum|isom√©trique/);
    const isBodyweight = currentExercise && currentExercise.equipment.includes('poids_du_corps');
    
    if (isTimeBased) {
        return `${setData.actual_reps} secondes${setData.weight > 0 ? ` avec ${setData.weight}kg` : ''}`;
    } else if (isBodyweight) {
        // Pour bodyweight, utiliser le formatage centralis√©
        const weightDisplay = formatWeightDisplay(setData.weight, currentExercise);
        return `${weightDisplay} √ó ${setData.actual_reps} reps`;
    } else {
        return `${setData.weight}kg √ó ${setData.actual_reps} reps`;
    }
}

// ===== GESTION DU TIMER DE REPOS =====
function startRestTimer(seconds = 60) {
    // Clear any existing timer first
    if (restTimerInterval) {
        clearInterval(restTimerInterval);
        setRestTimerInterval(null);
    }

    // Ajouter une classe pour l'√©tat actif du repos
    const restTimerContainer = document.querySelector('.rest-timer');
    if (restTimerContainer) {
        restTimerContainer.classList.add('active');
    }
    
    const restStartTime = new Date();
    let targetReached = false;
    let lastSecond = -1; // Pour √©viter les mises √† jour inutiles

    const interval = setInterval(() => {
        const restTimerEl = document.getElementById('restTimer');
        if (!restTimerEl) {
            clearInterval(interval);
            setRestTimerInterval(null);
            return;
        }

        const elapsed = Math.floor((new Date() - restStartTime) / 1000);
        
        // √âviter les mises √† jour inutiles
        if (elapsed === lastSecond) return;
        lastSecond = elapsed;
        
        const remaining = Math.max(0, seconds - elapsed);
        
        updateRestTimerDisplay(elapsed);
        
        // Afficher le bouton Continuer apr√®s 60 secondes
        if (elapsed >= seconds && !targetReached) {
            targetReached = true;
            showContinueButton();
            
            // Audio/vibration uniquement √† 60 secondes
            if (!isSilentMode) {
                playBeep(1000, 300);
            }
            vibrateDevice([200, 100, 200]);
        }
        
        // Audio cues avant 60 secondes
        if (!targetReached && !isSilentMode) {
            if (remaining === 30 || remaining === 10) {
                playBeep(800, 100);
            } else if (remaining === 3 || remaining === 2 || remaining === 1) {
                playBeep(600, 150);
            }
        }
    }, 1000);
    
    setRestTimerInterval(interval);
    
    // Retourner une fonction de cleanup
    return () => {
        if (interval) {
            clearInterval(interval);
            setRestTimerInterval(null);
        }
    };
}

// ===== MISE √Ä JOUR DE L'AFFICHAGE DU TIMER =====
function updateRestTimerDisplay(seconds) {
    const minutes = Math.floor(seconds / 60);
    const secs = seconds % 60;
    const display = `${minutes}:${secs.toString().padStart(2, '0')}`;
    
    const restTimerEl = document.getElementById('restTimer');
    if (restTimerEl) {
        restTimerEl.textContent = display;
        
        // Vert jusqu'√† 60s, puis orange
        if (seconds <= 60) {
            restTimerEl.style.color = '#10b981';
            restTimerEl.style.fontSize = '1.25rem';
        } else {
            restTimerEl.style.color = '#fb923c'; // Orange apr√®s 60s
            restTimerEl.style.fontSize = '1.5rem';
        }
    }
}

// ===== NOTIFICATIONS SONORES =====
function playBeep(frequency, duration) {
    if (!audioContext || isSilentMode) {
        if (!isSilentMode && !audioContext) {
            const context = new (window.AudioContext || window.webkitAudioContext)();
            setAudioContext(context);
        } else {
            return;
        }
    }
        
    const oscillator = audioContext.createOscillator();
    const gainNode = audioContext.createGain();
    
    oscillator.connect(gainNode);
    gainNode.connect(audioContext.destination);
    
    oscillator.frequency.value = frequency;
    oscillator.type = 'sine';
    
    gainNode.gain.setValueAtTime(0.3, audioContext.currentTime);
    gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + duration / 1000);
    
    oscillator.start(audioContext.currentTime);
    oscillator.stop(audioContext.currentTime + duration / 1000);
}

// ===== VIBRATION =====
function vibrateDevice(pattern) {
    if ('vibrate' in navigator) {
        navigator.vibrate(pattern);
    }
}

// ===== AFFICHAGE DU BOUTON CONTINUER =====
function showContinueButton() {
    const restTimerContainer = document.querySelector('.rest-timer');
    if (!restTimerContainer) return;
    
    const existingButton = restTimerContainer.querySelector('.btn-continue-rest');
    if (existingButton) return;
    
    const continueBtn = document.createElement('button');
    continueBtn.className = 'btn btn-primary btn-continue-rest';
    continueBtn.textContent = 'Continuer vers la s√©rie suivante';
    continueBtn.onclick = () => {
        skipRestPeriod();
    };
    
    restTimerContainer.appendChild(continueBtn);
}

// ===== PASSER LA P√âRIODE DE REPOS =====
function skipRestPeriod() {
    if (restTimerInterval) {
        clearInterval(restTimerInterval);
        setRestTimerInterval(null);
    }
    
    const restDuration = lastSetEndTime ? Math.floor((new Date() - lastSetEndTime) / 1000) : 0;
    const lastSetId = localStorage.getItem('lastCompletedSetId');
    
    if (lastSetId && restDuration > 0) {
        updateSetRestTime(lastSetId, restDuration).catch(err => 
            console.error('Failed to update rest time:', err)
        );
    }
    
    // Ajouter le temps de repos √† l'historique
    addRestToHistory(restDuration);
    
    if (!isSilentMode) {
        playBeep(600, 100);
    }
    
    setIsInRestPeriod(false);
    incrementSetNumber();
    setSetStartTime(new Date());
    
    // V√©rification de s√©curit√© avant d'appeler showSetInput
    if (window.showSetInput) {
        window.showSetInput();
    } else {
        console.error('showSetInput non disponible - v√©rifiez que app-sets.js est charg√©');
    }
}

// ===== CHANGER D'EXERCICE PENDANT LE REPOS =====
function finishExerciseDuringRest() {
    const restDuration = lastSetEndTime ? Math.floor((new Date() - lastSetEndTime) / 1000) : 0;
    const lastSetId = localStorage.getItem('lastCompletedSetId');
    
    if (lastSetId && restDuration > 0) {
        updateSetRestTime(lastSetId, restDuration).catch(err => 
            console.error('Failed to update rest time:', err)
        );
        
        // Ajouter le temps de repos √† l'historique avant de changer d'exercice
        addRestToHistory(restDuration);
    }
    
    if (restTimerInterval) {
        clearInterval(restTimerInterval);
        setRestTimerInterval(null);
    }
    
    if (window.finishExercise) {
        window.finishExercise();
    }
}

// ===== AJOUT DU REPOS √Ä L'HISTORIQUE =====
function addRestToHistory(duration) {
    if (duration < 5) return; // Ignorer les repos tr√®s courts
    
    addToSessionHistory('rest', {
        duration: duration,
        type: 'between_sets'
    });
}

// ===== EXPORT GLOBAL =====
window.showRestInterface = showRestInterface;
window.skipRestPeriod = skipRestPeriod;
window.finishExerciseDuringRest = finishExerciseDuringRest;
window.playBeep = playBeep;
window.addRestToHistory = addRestToHistory;

// Export pour les autres modules
export {
    showRestInterface,
    startRestTimer,
    playBeep,
    vibrateDevice,
    addRestToHistory
};
--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\frontend\app-sets.js ---
--- Nom du fichier: app-sets.js ---
--- Contenu ---
// ===== GESTIONNAIRE DE S√âRIES =====
// Ce fichier g√®re l'ex√©cution et l'enregistrement des s√©ries
// Il contient toute la logique de l'interface de saisie et de validation

import {
    currentUser,
    currentWorkout,
    currentExercise,
    currentSetNumber,
    currentTargetReps,
    selectedFatigue,
    selectedEffort,
    setStartTime,
    lastSetEndTime,
    timerInterval,
    setTimerInterval,
    setSelectedFatigue,
    setSelectedEffort,
    setSetStartTime,
    incrementSetNumber,
    setLastSetEndTime,
    isInRestPeriod,
    setIsInRestPeriod,
    isSilentMode,
    isAutoWeightEnabled,
    setIsAutoWeightEnabled
} from './app-state.js';

import { showToast, showFatigueModal } from './app-ui.js';
import {
    calculateAvailableWeights,
    validateWeight,
    getExerciseType,
    calculateSuggestedWeight,
    formatWeightDisplay,
    isWeightPossible
} from './app-equipment.js';
import {
    createSet,
    updateSetRestTime,
    checkFatigue,
    getSuggestedWeight,
    getWorkoutAdjustments
} from './app-api.js';
import { TIME_BASED_KEYWORDS } from './app-config.js';
import { addToSessionHistory } from './app-history.js';


// ===== MISE √Ä JOUR VISUELLE DES SUGGESTIONS =====
async function updateWeightSuggestionVisual() {
    const mlSuggestion = window.currentMLSuggestion;
    const currentWeight = parseFloat(document.getElementById('setWeight').value);
    
    const decreaseBtn = document.getElementById('weightDecreaseBtn');
    const increaseBtn = document.getElementById('weightIncreaseBtn');
    
    // Retirer les classes existantes
    if (decreaseBtn) {
        decreaseBtn.classList.remove('suggest-decrease', 'suggest-pulse');
    }
    if (increaseBtn) {
        increaseBtn.classList.remove('suggest-increase', 'suggest-pulse');
    }
    
    // NOUVEAU : G√©rer l'aspect visuel du texte de suggestion
    const suggestionDiv = document.getElementById('weightSuggestion');
    if (suggestionDiv) {
        if (!isAutoWeightEnabled) {
            suggestionDiv.style.opacity = '0.5';
            suggestionDiv.style.textDecoration = 'line-through';
        } else {
            suggestionDiv.style.opacity = '1';
            suggestionDiv.style.textDecoration = 'none';
        }
    }
    
    // Animation des boutons seulement si auto d√©sactiv√©
    if (!isAutoWeightEnabled && mlSuggestion && Math.abs(mlSuggestion - currentWeight) > 0.1) {
        if (mlSuggestion < currentWeight && decreaseBtn) {
            // Le poids sugg√©r√© est INF√âRIEUR, donc sugg√©rer une DIMINUTION
            decreaseBtn.classList.add('suggest-decrease', 'suggest-pulse');
        } else if (mlSuggestion > currentWeight && increaseBtn) {
            // Le poids sugg√©r√© est SUP√âRIEUR, donc sugg√©rer une AUGMENTATION
            increaseBtn.classList.add('suggest-increase', 'suggest-pulse');
        }
    }
    
    // Mettre √† jour le texte de suggestion
    if (suggestionDiv && mlSuggestion) {
        const diff = mlSuggestion - currentWeight;
        const sign = diff > 0 ? '+' : '';
        suggestionDiv.innerHTML = `üí° Suggestion ML : ${mlSuggestion}kg${Math.abs(diff) > 0.1 ? ` (${sign}${diff.toFixed(1)}kg)` : ''}`;
    }
}

// ===== AFFICHAGE DE L'INTERFACE DE SAISIE =====
async function showSetInput() {
    const container = document.getElementById('exerciseArea');
    if (!container) return;
    
    // DEBUG
    console.log('=== DEBUG showSetInput ===');
    console.log('currentSetNumber:', currentSetNumber);
    console.log('currentWorkout:', currentWorkout);
    console.log('lastCompletedSetId from localStorage:', localStorage.getItem('lastCompletedSetId'));
    console.log('currentExercise:', currentExercise);
    
    const existingHistory = document.getElementById('previousSets');
    const savedHistory = existingHistory ? existingHistory.innerHTML : '';
    const lastCompletedSetId = localStorage.getItem('lastCompletedSetId');
    console.log('DEBUG - lastCompletedSetId r√©cup√©r√©:', lastCompletedSetId);

    // D√âCLARATION DE TOUTES LES VARIABLES ICI
    let mlRepsSuggestion = null;
    let mlSuggestion = null;
    let adjustments = null;
    let adjustmentsError = null;

    // NOUVEAU : R√©cup√©rer les param√®tres guid√©s si disponibles
    const guidedParams = localStorage.getItem('guidedExerciseParams');
    let isGuidedMode = false;
    let targetSets = null;
    let targetReps = null;
    let suggestedWeight = null;
    let guidedRestTime = null;

    if (guidedParams && currentWorkout && currentWorkout.type === 'adaptive') {
        const params = JSON.parse(guidedParams);
        isGuidedMode = true;
        targetSets = params.targetSets;
        targetReps = params.targetReps;
        suggestedWeight = params.suggestedWeight;
        guidedRestTime = params.restTime;
    }

    // R√©cup√©rer les suggestions ML uniquement si on a une s√©rie valide pour cet exercice
    if (currentSetNumber > 1 && currentWorkout && lastCompletedSetId) {
        // V√©rifier que la derni√®re s√©rie appartient bien √† cet exercice ET ce workout
        const sessionHistory = JSON.parse(localStorage.getItem('currentWorkoutHistory') || '[]');
        const currentExerciseHistory = sessionHistory.find(h => h.exerciseId === currentExercise.id);
        
        // Si on a bien des s√©ries pour CET exercice dans CE workout
        if (currentExerciseHistory && currentExerciseHistory.sets && currentExerciseHistory.sets.length > 0) {
            const lastSet = currentExerciseHistory.sets[currentExerciseHistory.sets.length - 1];
            
            // V√©rifier que le lastCompletedSetId correspond au workout actuel
            if (lastSet.workout_id === currentWorkout.id) {
                try {
                    const remainingSets = (currentExercise.sets_reps?.[0]?.sets || 3) - currentSetNumber + 1;
                    
                    console.log('DEBUG - Appel getWorkoutAdjustments avec:', {
                        workoutId: currentWorkout.id,
                        setId: lastCompletedSetId,
                        remainingSets: remainingSets,
                        exerciseId: currentExercise.id
                    });
                    
                    adjustments = await getWorkoutAdjustments(
                        currentWorkout.id,
                        lastCompletedSetId,
                        remainingSets
                    );
                    
                    console.log('DEBUG - R√©ponse adjustments:', adjustments);
                    
                    if (adjustments && adjustments.adjustments) {
                        if (adjustments.adjustments.suggested_reps) {
                            mlRepsSuggestion = {
                                optimal: adjustments.adjustments.suggested_reps,
                                min: adjustments.adjustments.rep_range?.min || adjustments.adjustments.suggested_reps - 2,
                                max: adjustments.adjustments.rep_range?.max || adjustments.adjustments.suggested_reps + 2,
                                confidence: adjustments.adjustments.rep_confidence || 0.5
                            };
                        }
                        
                        // AJOUT : Afficher les recommandations
                        if (adjustments.recommendations && adjustments.recommendations.length > 0) {
                            const firstRecommendation = adjustments.recommendations[0];
                            showToast(`üí° ${firstRecommendation}`, 'info');
                        }
                    }
                } catch (error) {
                    console.error('DEBUG - Erreur getWorkoutAdjustments:', error);
                    localStorage.removeItem('lastCompletedSetId');
                }
            } else {
                console.log('DEBUG - lastCompletedSetId ne correspond pas au workout actuel, nettoyage');
                localStorage.removeItem('lastCompletedSetId');
            }
        } else {
            console.log('DEBUG - Pas d\'historique pour cet exercice, nettoyage lastCompletedSetId');
            localStorage.removeItem('lastCompletedSetId');
        }
    }
    
    setSetStartTime(new Date());
    setLastSetEndTime(null);
    
    // D√©terminer le type d'exercice
    const isTimeBased = TIME_BASED_KEYWORDS.some(keyword => 
        currentExercise.name_fr.toLowerCase().includes(keyword)
    );
    const isBodyweight = currentExercise.equipment.includes('poids_du_corps');
    
    // Calculer les poids disponibles pour cet exercice
    let availableWeights = calculateAvailableWeights(currentExercise);
    
    // Toujours obtenir la suggestion ML (ind√©pendamment du toggle)
    try {
        mlSuggestion = await getSuggestedWeight(currentUser.id, currentExercise.id);
    } catch (error) {
        console.warn('Impossible de r√©cup√©rer la suggestion ML:', error);
    }

    // Si pas de suggestion ML, utiliser le calcul local
    if (!mlSuggestion && mlSuggestion !== 0) {
        mlSuggestion = calculateSuggestedWeight(currentExercise);
    }
    
    // AJOUT : Appliquer le multiplicateur de poids APR√àS avoir obtenu mlSuggestion
    if (adjustments && adjustments.adjustments && adjustments.adjustments.weight_multiplier && mlSuggestion) {
        mlSuggestion = Math.round(mlSuggestion * adjustments.adjustments.weight_multiplier);
        console.log('DEBUG - Nouvelle suggestion de poids ajust√©e:', mlSuggestion);
    }

    // CORRECTION : V√©rifier que la suggestion ML n'est pas inf√©rieure au poids de la barre
    if (mlSuggestion && currentExercise.equipment.some(eq => eq.includes('barbell'))) {
        const barWeight = getBarWeightForExercise(currentExercise);
        if (mlSuggestion < barWeight) {
            console.warn(`Suggestion ML (${mlSuggestion}kg) inf√©rieure au poids de la barre (${barWeight}kg). Ajustement √† ${barWeight}kg`);
            mlSuggestion = barWeight;
        }
    }

    // NOUVEAU : En mode guid√©, privil√©gier le poids sugg√©r√© du plan
    if (isGuidedMode && suggestedWeight) {
        // Si on a un poids sugg√©r√© par le plan guid√© et pas de ML ou si c'est la premi√®re s√©rie
        if (!mlSuggestion || currentSetNumber === 1) {
            mlSuggestion = suggestedWeight;
        }
    }

    // Stocker globalement pour r√©f√©rence
    window.currentMLRepsSuggestion = mlRepsSuggestion;
    window.currentMLSuggestion = mlSuggestion;
    
    // Le reste de votre code reste identique...
    // D√©terminer le poids √† afficher dans l'input
    let defaultWeight = 0;
    
    if (isAutoWeightEnabled && mlSuggestion) {
        defaultWeight = mlSuggestion;
    } else {
        const previousSetHistory = JSON.parse(localStorage.getItem('currentWorkoutHistory') || '[]');
        const lastSetForExercise = previousSetHistory
            .filter(h => h.exerciseId === currentExercise.id)
            .flatMap(h => h.sets || [])
            .slice(-1)[0];
        
        if (lastSetForExercise) {
            defaultWeight = lastSetForExercise.weight;
        } else if (availableWeights.length > 0) {
            defaultWeight = availableWeights[Math.floor(availableWeights.length / 2)];
        } else {
            defaultWeight = 20;
        }
    }
    
    // Adapter les labels selon le type d'exercice
    const weightLabel = isBodyweight && !isTimeBased ? 
        'Charge additionnelle (kg)' : 
        isTimeBased ? 
        'Charge additionnelle (kg)' : 
        'Poids total (kg)';
    
    const repsLabel = isTimeBased ? 'Dur√©e (secondes)' : 'R√©p√©titions';
    
    // NOUVEAU : En mode guid√©, utiliser les r√©p√©titions cibles comme valeur par d√©faut
    const defaultReps = isGuidedMode && targetReps && currentSetNumber === 1 ? 
        (typeof targetReps === 'string' ? parseInt(targetReps.split('-')[0]) : targetReps) : 
        (isTimeBased ? 30 : currentTargetReps);
    
    container.innerHTML = `
        <div class="current-exercise">
            <h2>${currentExercise.name_fr}</h2>
            <p class="exercise-info">${currentExercise.body_part} ‚Ä¢ ${currentExercise.level}</p>
        </div>
        
        <div class="set-tracker">
            <h3>S√©rie ${currentSetNumber}${isGuidedMode && targetSets ? ` / ${targetSets}` : ''}</h3>
            ${isGuidedMode ? `
                <div class="guided-targets" style="
                    text-align: center;
                    color: var(--primary);
                    margin-bottom: 1rem;
                    padding: 0.75rem;
                    background: rgba(59, 130, 246, 0.1);
                    border-radius: 8px;
                ">
                    <span style="font-weight: 600;">Objectif :</span> 
                    ${targetReps} reps @ ${suggestedWeight ? suggestedWeight + 'kg' : '√Ä d√©terminer'}
                    ${guidedRestTime ? ` ‚Ä¢ Repos : ${guidedRestTime}s` : ''}
                </div>
            ` : ''}
            <div class="set-timer">Dur√©e: <span id="setTimer">0:00</span></div>
            
            <div class="set-input-grid-vertical">
                ${!(isTimeBased && isBodyweight) ? `
                    <div class="input-group">
                        <label>${weightLabel}</label>
                        <input type="hidden" id="setWeight" value="${defaultWeight}">
                            <div class="weight-info">
                                ${isBodyweight ? 
                                    `Poids du corps: ${currentUser?.weight || 75}kg${availableWeights.length > 1 ? ' ‚Ä¢ Lest disponible: ' + availableWeights.filter(w => w > 0).join(', ') + 'kg' : ''}` :
                                    currentExercise.equipment.some(eq => eq.includes('barbell')) ?
                                    `<div id="barbell-visualization" class="barbell-viz"></div>` :
                                    availableWeights.length > 0 ? 
                                    `Poids disponibles: ${availableWeights.slice(0, 5).join(', ')}${availableWeights.length > 5 ? '...' : ''} kg` : 
                                    'Aucun poids configur√©'}
                            </div>
                            <div class="weight-suggestion-line">
                                <div id="weightSuggestion" class="suggestion-hint">
                                    ${mlSuggestion ? `üí° Suggestion ML : ${mlSuggestion}kg${mlSuggestion !== defaultWeight ? ` (${mlSuggestion > defaultWeight ? '+' : ''}${(mlSuggestion - defaultWeight).toFixed(1)}kg)` : ''}` : ''}
                                </div>
                                <label class="toggle-switch">
                                    <input type="checkbox" id="autoWeightToggle" 
                                        ${isAutoWeightEnabled ? 'checked' : ''} 
                                        onchange="toggleAutoWeight(this.checked)">
                                    <span class="toggle-slider"></span>
                                    <span class="toggle-label">Auto</span>
                                </label>
                            </div>
                    </div>
                ` : '<input type="hidden" id="setWeight" value="0">'}
                
                <div class="input-group">
                    <label>${repsLabel}</label>
                    <div class="reps-selector">
                        <button onclick="adjustReps(${isTimeBased ? -5 : -1})" 
                                class="btn-adjust ${mlRepsSuggestion && mlRepsSuggestion.optimal < defaultReps ? 'suggest-decrease' : ''}"
                                id="repsDecreaseBtn">-</button>
                        <input type="number" id="setReps" value="${mlRepsSuggestion ? mlRepsSuggestion.optimal : defaultReps}" 
                            min="1" max="${isTimeBased ? 300 : 50}" class="reps-display">
                        <button onclick="adjustReps(${isTimeBased ? 5 : 1})" 
                                class="btn-adjust ${mlRepsSuggestion && mlRepsSuggestion.optimal > defaultReps ? 'suggest-increase' : ''}"
                                id="repsIncreaseBtn">+</button>
                    </div>
                    ${mlRepsSuggestion ? `
                        <div class="suggestion-info" style="margin-top: 0.5rem; font-size: 0.85rem; color: var(--primary);">
                            üí° ML sugg√®re : ${mlRepsSuggestion.optimal} reps 
                            ${mlRepsSuggestion.confidence > 0.7 ? '(haute confiance)' : ''}
                        </div>
                    ` : ''}
                </div>
                
                <div class="selector-group">
                    <label>Fatigue</label>
                    <div class="emoji-selector" id="fatigueSelector">
                        <span class="emoji-option" data-value="1" onclick="selectFatigue(1)">üòÑ</span>
                        <span class="emoji-option" data-value="2" onclick="selectFatigue(2)">üôÇ</span>
                        <span class="emoji-option ${selectedFatigue === 3 ? 'selected' : ''}" data-value="3" onclick="selectFatigue(3)">üòê</span>
                        <span class="emoji-option" data-value="4" onclick="selectFatigue(4)">üòì</span>
                        <span class="emoji-option" data-value="5" onclick="selectFatigue(5)">üòµ</span>
                    </div>
                </div>
                
                <div class="selector-group">
                    <label>Effort per√ßu</label>
                    <div class="emoji-selector" id="effortSelector">
                        <span class="emoji-option" data-value="1" onclick="selectEffort(1)">üö∂</span>
                        <span class="emoji-option" data-value="2" onclick="selectEffort(2)">üèÉ</span>
                        <span class="emoji-option ${selectedEffort === 3 ? 'selected' : ''}" data-value="3" onclick="selectEffort(3)">üèãÔ∏è</span>
                        <span class="emoji-option" data-value="4" onclick="selectEffort(4)">üî•</span>
                        <span class="emoji-option" data-value="5" onclick="selectEffort(5)">üåã</span>
                    </div>
                </div>
            </div>
            
            <div class="set-actions">
                <button class="btn btn-primary" onclick="completeSet()">
                    ‚úì Valider la s√©rie
                </button>
                <button class="btn btn-secondary btn-sm" onclick="skipSet()">
                    ‚è≠Ô∏è Passer
                </button>
            </div>
        </div>
        
        <div id="previousSets" class="previous-sets">${savedHistory}</div>
        
        <button class="btn btn-secondary" onclick="finishExercise()">
            Terminer cet exercice
        </button>
    `;
    
    startTimers();
    
    // Restaurer les valeurs de fatigue et effort s√©lectionn√©es
    selectFatigue(Math.round(selectedFatigue));
    selectEffort(selectedEffort);
    
    // Gestion des suggestions de poids bas√©es sur l'historique
    loadWeightSuggestion();
    
    // Scroll automatique vers les inputs sur mobile
    setTimeout(() => {
        const setTracker = document.querySelector('.set-tracker');
        if (setTracker && window.innerWidth <= 768) {
            setTracker.scrollIntoView({ behavior: 'smooth', block: 'start' });
        }
    }, 100);
    
    // G√©rer le redimensionnement du viewport (clavier virtuel)
    const handleViewportChange = () => {
        const viewportHeight = window.visualViewport ? window.visualViewport.height : window.innerHeight;
        const isKeyboardOpen = viewportHeight < window.screen.height * 0.75;
        const setTracker = document.querySelector('.set-tracker');
        
        if (setTracker) {
            if (isKeyboardOpen) {
                setTracker.style.paddingBottom = '260px';
                // Scroll vers l'input actif
                const activeElement = document.activeElement;
                if (activeElement && (activeElement.tagName === 'INPUT' || activeElement.tagName === 'SELECT')) {
                    setTimeout(() => {
                        activeElement.scrollIntoView({ behavior: 'smooth', block: 'center' });
                    }, 100);
                }
            } else {
                setTracker.style.paddingBottom = '';
            }
        }
    };
    
    if (window.visualViewport) {
        window.visualViewport.addEventListener('resize', handleViewportChange);
    } else {
        window.addEventListener('resize', handleViewportChange);
    }
    
    // Mettre √† jour les suggestions visuelles apr√®s un court d√©lai
    setTimeout(() => {
        updateWeightSuggestionVisual();
    }, 500);
    
    attachWeightChangeListeners();
    
    // Forcer la mise √† jour des suggestions visuelles apr√®s un court d√©lai
    setTimeout(() => {
        updateWeightSuggestionVisual();
    }, 100);
}

// ===== VISUALISATION DE LA BARRE =====
function updateBarbellVisualization() {
    const container = document.getElementById('barbell-visualization');
    if (!container) return;
    
    const weightInput = document.getElementById('setWeight');
    if (!weightInput) return; // V√©rifier que l'input existe
    
    const totalWeight = parseFloat(weightInput.value) || 0;
    
    // Si pas de poids valide, ne pas afficher d'erreur
    if (totalWeight === 0 && !currentExercise.equipment.includes('poids_du_corps')) {
        container.innerHTML = '<div class="barbell-info">S√©lectionnez un poids</div>';
        return;
    }
    
    // D√©terminer le poids de la barre
    const barWeight = getBarWeightForExercise(currentExercise);
    const platesWeight = totalWeight - barWeight;
    
    if (platesWeight < 0) {
        // Afficher l'interface quand m√™me, mais avec juste la barre
        container.innerHTML = createSimplifiedWeightInterface(barWeight);
        return;
    }
    
    // Calculer la distribution optimale des disques
    const platesPerSide = calculateOptimalPlateDistribution(platesWeight / 2);

    // Si pas de disques configur√©s, afficher une interface simplifi√©e
    if (!currentUser?.equipment_config?.disques?.weights || Object.keys(currentUser.equipment_config.disques.weights).length === 0) {
        container.innerHTML = createSimplifiedWeightInterface(totalWeight);
        return;
    }

    // Cr√©er la visualisation normale
    container.innerHTML = createBarbellHTML(barWeight, platesPerSide);
}

function getBarWeightForExercise(exercise) {
    if (!currentUser?.equipment_config) return 20;
    const config = currentUser.equipment_config;
    
    if (exercise.equipment.includes('barre_olympique')) {
        if (config.barres?.olympique?.available) return 20;
        if (config.barres?.courte?.available) return 2.5;
    } else if (exercise.equipment.includes('barre_ez')) {
        if (config.barres?.ez?.available) return 10;
    }
    return 20;
}

function calculateOptimalPlateDistribution(targetPerSide) {
    if (!currentUser?.equipment_config?.disques?.weights) {
    console.warn('Aucune configuration de disques trouv√©e pour l\'utilisateur');
    return [];
    }
    
    const availablePlates = currentUser.equipment_config.disques.weights;
    const result = [];
    let remaining = targetPerSide;
    
    // Trier les disques par poids d√©croissant
    const sortedPlates = Object.entries(availablePlates)
        .filter(([w, count]) => count > 0)
        .map(([w, count]) => ({weight: parseFloat(w), count: Math.floor(count / 2)}))
        .sort((a, b) => b.weight - a.weight);
    
    // Algorithme glouton optimis√©
    for (const plate of sortedPlates) {
        while (remaining >= plate.weight && plate.count > 0) {
            const used = result.find(p => p.weight === plate.weight);
            if (used) {
                used.count++;
            } else {
                result.push({weight: plate.weight, count: 1});
            }
            remaining -= plate.weight;
            plate.count--;
        }
    }
    
    // Si on n'a pas pu faire le poids exact, retourner la meilleure approximation
    if (remaining > 0.1) {
        return [{weight: 0, count: 0, error: true}];
    }
    
    return result;
}

function createBarbellHTML(barWeight, platesPerSide) {
    // Calculer le poids total
    const totalPlatesWeight = platesPerSide.reduce((sum, p) => sum + (p.weight * p.count * 2), 0);
    const totalWeight = barWeight + totalPlatesWeight;
    
    // Cr√©er le HTML avec le nouveau layout
    let html = `
        <div class="barbell-card-integrated">
            <div class="weight-control-row">
                <button class="weight-btn decrease" id="weightDecreaseBtn" onclick="adjustWeightToNext(-1)">
                    <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4"></path>
                    </svg>
                </button>
                
                <div class="barbell-total-integrated">${totalWeight}<span class="weight-unit">kg</span></div>
                
                <button class="weight-btn increase" id="weightIncreaseBtn" onclick="adjustWeightToNext(1)">
                    <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
                    </svg>
                </button>
            </div>
            
            <div class="barbell-plates-visualization">
    `;
    
    // Disques c√¥t√© gauche (ordre invers√© pour la sym√©trie)
    platesPerSide.slice().reverse().forEach(plate => {
        for (let i = 0; i < plate.count; i++) {
            html += `<div class="plate-integrated left" data-weight="${plate.weight}">${plate.weight}</div>`;
        }
    });
    
    // Barre centrale
    html += `<div class="bar-integrated">${barWeight}</div>`;
    
    // Disques c√¥t√© droit
    platesPerSide.forEach(plate => {
        for (let i = 0; i < plate.count; i++) {
            html += `<div class="plate-integrated right" data-weight="${plate.weight}">${plate.weight}</div>`;
        }
    });
    
    html += `
            </div>
            
            <div class="barbell-detail">
                ${platesPerSide.map(p => `${p.count}√ó${p.weight}kg`).join(' + ')} par c√¥t√©
            </div>
        </div>
    `;
    
    return html;
}

function createSimplifiedWeightInterface(totalWeight) {
    return `
        <div class="barbell-card-integrated">
            <div class="weight-control-row">
                <button class="weight-btn decrease" id="weightDecreaseBtn" onclick="adjustWeightToNext(-1)">
                    <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4"></path>
                    </svg>
                </button>
                
                <div class="barbell-total-integrated">${totalWeight}<span class="weight-unit">kg</span></div>
                
                <button class="weight-btn increase" id="weightIncreaseBtn" onclick="adjustWeightToNext(1)">
                    <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
                    </svg>
                </button>
            </div>
            
            <div class="barbell-detail" style="color: var(--warning); margin-top: 10px;">
                ‚ö†Ô∏è Configurez vos disques dans votre profil pour voir la r√©partition
            </div>
        </div>
    `;
}

// Ajouter un listener pour mettre √† jour la visualisation
function attachWeightChangeListeners() {
    const weightInput = document.getElementById('setWeight');
    if (weightInput) {
        // Mettre √† jour √† chaque changement
        weightInput.addEventListener('input', updateBarbellVisualization);
        // Mise √† jour initiale
        updateBarbellVisualization();
        
        // Mettre √† jour le scintillement apr√®s un court d√©lai pour s'assurer que les boutons sont dans le DOM
        setTimeout(() => {
            updateWeightSuggestionVisual();
        }, 100);
    }
}

// ===== CHARGEMENT DES SUGGESTIONS DE POIDS =====
async function loadWeightSuggestion() {
    // Cette fonction ne fait plus rien si appel√©e directement
    // Les suggestions sont maintenant g√©r√©es dans showSetInput()
    return;
}

// ===== GESTION DES TIMERS =====
function startTimers() {
    // Nettoyer l'ancien timer avant d'en cr√©er un nouveau
    if (timerInterval) {
        clearInterval(timerInterval);
        setTimerInterval(null);
    }
    
    const interval = setInterval(() => {
        // V√©rifier que le document est visible et que l'√©l√©ment existe
        if (document.hidden || !document.getElementById('setTimer')) {
            clearInterval(interval);
            setTimerInterval(null);
            return;
        }
        
        // Timer de s√©rie UNIQUEMENT
        if (setStartTime) {
            const elapsed = Math.floor((new Date() - setStartTime) / 1000);
            const minutes = Math.floor(elapsed / 60);
            const seconds = elapsed % 60;
            const setTimer = document.getElementById('setTimer');
            if (setTimer) {
                setTimer.textContent = `${minutes}:${seconds.toString().padStart(2, '0')}`;
            }
        }
    }, 1000);
    
    setTimerInterval(interval);
    
    // Nettoyer automatiquement si la page devient invisible
    const handleVisibilityChange = () => {
        if (document.hidden && timerInterval) {
            clearInterval(timerInterval);
            setTimerInterval(null);
        }
    };
    
    document.addEventListener('visibilitychange', handleVisibilityChange);
    
    // Retourner une fonction de nettoyage
    return () => {
        if (timerInterval) {
            clearInterval(timerInterval);
            setTimerInterval(null);
        }
        document.removeEventListener('visibilitychange', handleVisibilityChange);
    };
}

// ===== S√âLECTION DE LA FATIGUE ET DE L'EFFORT =====
function selectFatigue(value) {
    setSelectedFatigue(value);
    document.querySelectorAll('#fatigueSelector .emoji-option').forEach(el => {
        el.classList.remove('selected');
    });
    const selectedEl = document.querySelector(`#fatigueSelector .emoji-option[data-value="${value}"]`);
    if (selectedEl) {
        selectedEl.classList.add('selected');
    }
}

function selectEffort(value) {
    setSelectedEffort(value);
    document.querySelectorAll('#effortSelector .emoji-option').forEach(el => {
        el.classList.remove('selected');
    });
    const selectedEl = document.querySelector(`#effortSelector .emoji-option[data-value="${value}"]`);
    if (selectedEl) {
        selectedEl.classList.add('selected');
    }
}

// ===== AJUSTEMENT DES POIDS ET R√âP√âTITIONS =====
function adjustWeightToNext(direction) {
    const input = document.getElementById('setWeight');
    const currentWeight = parseFloat(input.value) || 0;
    
    // Utiliser la fonction d'app-equipment qui calcule TOUS les poids possibles
    const availableWeights = calculateAvailableWeights(currentExercise);
    
    if (availableWeights.length === 0) {
        return;
    }
    
    // Trouver l'index actuel
    let currentIndex = availableWeights.findIndex(w => Math.abs(w - currentWeight) < 0.1);
    
    if (currentIndex === -1) {
        // Trouver le plus proche
        let minDiff = Infinity;
        for (let i = 0; i < availableWeights.length; i++) {
            const diff = Math.abs(availableWeights[i] - currentWeight);
            if (diff < minDiff) {
                minDiff = diff;
                currentIndex = i;
            }
        }
    }
    
    // Naviguer dans la liste
    const newIndex = currentIndex + direction;
    
    if (newIndex >= 0 && newIndex < availableWeights.length) {
        input.value = availableWeights[newIndex];
        updateBarbellVisualization();
        updateWeightSuggestionVisual();
    }
}

function adjustReps(delta) {
    const input = document.getElementById('setReps');
    const newValue = parseInt(input.value) + delta;
    if (newValue > 0) input.value = newValue;
}

// ===== VALIDATION DU POIDS SAISI =====
function validateWeightInput() {
    const weightInput = document.getElementById('setWeight');
    const currentWeight = parseFloat(weightInput.value);
    
    if (isNaN(currentWeight)) return;
    
    const validated = validateWeight(currentExercise, currentWeight);
    
    if (validated !== currentWeight) {
        weightInput.value = validated;
        
        // Message explicatif si le poids n'est pas possible
        if (!isWeightPossible(currentExercise, currentWeight)) {
            let availableWeights = calculateAvailableWeights(currentExercise);  
            // Pour les exercices avec barbell, filtrer les poids inf√©rieurs √† la barre
            if (currentExercise.equipment.some(eq => eq.includes('barbell'))) {
                const barWeight = getBarWeightForExercise(currentExercise);
                const filteredWeights = availableWeights.filter(w => w >= barWeight);
                if (filteredWeights.length > 0) {
                    availableWeights = filteredWeights;  
                }
            }
            const nearbyWeights = availableWeights
                .filter(w => Math.abs(w - currentWeight) <= 10)
                .slice(0, 5);
            
            showToast(
                `Poids ${currentWeight}kg impossible. Alternatives : ${nearbyWeights.join(', ')}kg`,
                'warning'
            );
        }
    }
}

// ===== HELPERS POUR LA GESTION DES SETS =====

// Fonction helper pour sauvegarder localement
function saveSetLocally(setData) {
    const pendingSets = JSON.parse(localStorage.getItem('pendingSets') || '[]');
    
    // √âviter les doublons
    const exists = pendingSets.some(s => 
        s.exercise_id === setData.exercise_id && 
        s.set_number === setData.set_number &&
        s.workout_id === setData.workout_id
    );
    
    if (!exists) {
        pendingSets.push({
            ...setData,
            timestamp: new Date().toISOString(),
            syncStatus: 'pending'
        });
        localStorage.setItem('pendingSets', JSON.stringify(pendingSets));
    }
}

// Fonction helper pour g√©rer le succ√®s d'une s√©rie
function handleSetSuccess(setData, setDuration) {
    // Ajouter √† l'historique local avec la dur√©e
    addSetToHistory({...setData, duration: setDuration});
    
    // Sauvegarder dans l'historique de la session
    updateSessionHistory(setData);
    
    // Notification de succ√®s
    showToast(`S√©rie ${currentSetNumber} enregistr√©e ! (${setDuration}s)`, 'success');
    
    // Son de validation de s√©rie
    if (!isSilentMode && window.playBeep) {
        window.playBeep(800, 150);
    }
    
    // V√©rification fatigue toutes les 3 s√©ries
    if (currentSetNumber % 3 === 0) {
        checkFatigue(currentWorkout.id).then(fatigue => {
            if (fatigue && fatigue.risk === 'high') {
                showToast(`‚ö†Ô∏è ${fatigue.message}`, 'warning');
                showFatigueModal(fatigue);
            }
        }).catch(() => {
            // Ignorer les erreurs de v√©rification de fatigue
        });
    }
    
    // Arr√™ter le timer de s√©rie
    if (timerInterval) {
        clearInterval(timerInterval);
        setTimerInterval(null);
    }
    
    // Augmenter l√©g√®rement la fatigue pour la prochaine s√©rie
    setSelectedFatigue(Math.min(5, selectedFatigue + 0.3));

    // Mettre √† jour le temps de repos de la s√©rie PR√âC√âDENTE
    updatePreviousSetRestTime().catch(() => {
        // Ignorer les erreurs de mise √† jour du temps de repos
    });
    
    // Afficher l'interface de repos
    if (window.showRestInterface) {
        window.showRestInterface({...setData, duration: setDuration});
    }
    
    // Mettre √† jour la distribution musculaire
    if (window.updateMuscleDistribution) {
        window.updateMuscleDistribution();
    }
}

// ===== VALIDATION ET ENREGISTREMENT D'UNE S√âRIE =====
async function completeSet() {
    // Validation stricte des entr√©es
    const weightInput = document.getElementById('setWeight');
    const repsInput = document.getElementById('setReps');
    
    if (!weightInput || !repsInput) {
        showToast('Interface non pr√™te, veuillez patienter', 'error');
        return;
    }
    
    const setDuration = setStartTime ? Math.floor((new Date() - setStartTime) / 1000) : 0;
    
    // R√©cup√©rer et valider les valeurs
    let weight = parseFloat(weightInput.value);
    const reps = parseInt(repsInput.value);
    
    // Validation stricte
    if (isNaN(weight)) weight = 0;
    if (isNaN(reps) || reps <= 0) {
        showToast('Veuillez indiquer un nombre de r√©p√©titions valide', 'error');
        return;
    }
    
    // Pour les exercices au poids du corps, ajuster si n√©cessaire
    const isBodyweight = currentExercise.equipment.includes('poids_du_corps');
    const isTimeBased = TIME_BASED_KEYWORDS.some(keyword => 
        currentExercise.name_fr.toLowerCase().includes(keyword)
    );
    
    // Validation adapt√©e au type d'exercice
    if (!isTimeBased && weight === 0 && !isBodyweight) {
        showToast('Veuillez indiquer un poids', 'error');
        return;
    }
    
    // Limites raisonnables
    if (weight > 500) {
        showToast('Le poids semble incorrect (max 500kg)', 'error');
        return;
    }
    
    if (!isTimeBased && reps > 100) {
        showToast('Le nombre de r√©p√©titions semble incorrect (max 100)', 'error');
        return;
    }
    
    if (isTimeBased && reps > 600) {
        showToast('La dur√©e semble incorrecte (max 10 minutes)', 'error');
        return;
    }
    
    // Pr√©parer les donn√©es
    const setData = {
        workout_id: currentWorkout.id,
        exercise_id: currentExercise.id,
        set_number: currentSetNumber,
        target_reps: currentTargetReps,
        actual_reps: reps,
        weight: weight, // Pour bodyweight, c'est le poids du lest (0 = sans lest)
        rest_time: 0,
        fatigue_level: selectedFatigue * 2,
        perceived_exertion: selectedEffort * 2,
        skipped: false,
        // Ajouter des m√©tadonn√©es pour clarifier
        is_bodyweight: isBodyweight,
        is_time_based: isTimeBased,
        body_weight: isBodyweight ? currentUser.weight : null,
        total_weight: isBodyweight ? (currentUser.weight + weight) : weight
    };
    
    try {
        const result = await createSet(setData);
        
        if (result) {
            // Stocker l'ID pour mise √† jour ult√©rieure du temps de repos
            console.log('DEBUG - Stockage lastCompletedSetId:', result.id);
            localStorage.setItem('lastCompletedSetId', result.id);
            window.lastCompletedSetId = result.id;  // Pour usage imm√©diat
            
            // Supprimer cette s√©rie des donn√©es en attente si elle y √©tait
            const pendingSets = JSON.parse(localStorage.getItem('pendingSets') || '[]');
            const filteredPending = pendingSets.filter(s => 
                !(s.exercise_id === setData.exercise_id && 
                  s.set_number === setData.set_number &&
                  s.workout_id === setData.workout_id)
            );
            localStorage.setItem('pendingSets', JSON.stringify(filteredPending));
            
            handleSetSuccess(setData, setDuration);
        } else {
            throw new Error('√âchec de l\'enregistrement');
        }
    } catch (error) {
        console.error('Erreur lors de l\'enregistrement:', error);
        
        // Sauvegarder localement en mode hors-ligne
        saveSetLocally(setData);
        
        // Continuer malgr√© l'erreur
        handleSetSuccess(setData, setDuration);
        
        showToast('S√©rie sauvegard√©e localement (hors-ligne)', 'warning');
    }
}

// ===== MISE √Ä JOUR DU TEMPS DE REPOS DE LA S√âRIE PR√âC√âDENTE =====
async function updatePreviousSetRestTime() {
    if (currentSetNumber > 1) {
        const previousSetId = localStorage.getItem('lastCompletedSetId');
        const restTime = lastSetEndTime ? Math.floor((new Date() - lastSetEndTime) / 1000) : 0;
        
        if (previousSetId && restTime > 0) {
            await updateSetRestTime(previousSetId, restTime);
        }
    }
}

// ===== PASSER UNE S√âRIE =====
async function skipSet() {
    const setData = {
        workout_id: currentWorkout.id,
        exercise_id: currentExercise.id,
        set_number: currentSetNumber,
        target_reps: 0,
        actual_reps: 0,
        weight: 0,
        rest_time: 0,
        fatigue_level: 0,
        perceived_exertion: 0,
        skipped: true
    };
    
    const result = await createSet(setData);
    
    if (result) {
        showToast('S√©rie pass√©e', 'info');
        incrementSetNumber();
        showSetInput();
    }
}

// ===== TOGGLE AUTO POIDS =====
function toggleAutoWeight(enabled) {
    setIsAutoWeightEnabled(enabled);
    
    if (!enabled) {
        showToast('Ajustement automatique d√©sactiv√©', 'info');
        updateWeightSuggestionVisual();  // REMPLACER le commentaire
    } else {
        showToast('Ajustement automatique activ√©', 'info');
        const mlSuggestion = window.currentMLSuggestion;
        if (mlSuggestion) {
            document.getElementById('setWeight').value = mlSuggestion;
            updateBarbellVisualization();
        }
        updateWeightSuggestionVisual();  // AJOUTER ICI AUSSI
    }
}

window.toggleAutoWeight = toggleAutoWeight;

// ===== HISTORIQUE LOCAL =====
function addSetToHistory(setData) {
    // Enrichir les donn√©es avec les informations de l'exercice
    const enrichedData = {
        ...setData,
        bodyPart: currentExercise.body_part,
        exerciseName: currentExercise.name_fr
    };
    
    // Utiliser la fonction import√©e depuis app-history.js
    addToSessionHistory('set', enrichedData);
}

function updateSessionHistory(setData) {
    const sessionHistory = JSON.parse(localStorage.getItem('currentWorkoutHistory') || '[]');
    
    // Trouver ou cr√©er l'entr√©e pour cet exercice
    let exerciseEntry = sessionHistory.find(h => h.exerciseId === currentExercise.id);
    
    if (!exerciseEntry) {
        exerciseEntry = {
            exerciseId: currentExercise.id,
            exerciseName: currentExercise.name_fr,
            sets: [],
            timestamp: new Date().toISOString()
        };
        sessionHistory.push(exerciseEntry);
    }
    
    // Ajouter la s√©rie
    exerciseEntry.sets.push(setData);
    exerciseEntry.totalSets = exerciseEntry.sets.length;
    
    localStorage.setItem('currentWorkoutHistory', JSON.stringify(sessionHistory));
}

// ===== EXPORT GLOBAL =====
window.showSetInput = showSetInput;
window.selectFatigue = selectFatigue;
window.selectEffort = selectEffort;
window.adjustWeightToNext = adjustWeightToNext;
window.adjustReps = adjustReps;
window.validateWeightInput = validateWeightInput;
window.completeSet = completeSet;
window.skipSet = skipSet;

// Export pour les autres modules (pas d'export pour ce module car toutes les fonctions sont globales)
--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\frontend\app-state.js ---
--- Nom du fichier: app-state.js ---
--- Contenu ---
// ===== √âTAT GLOBAL =====
// Ce fichier contient toutes les variables d'√©tat de l'application
// Aucune logique complexe, juste des variables et des accesseurs simples

let currentUser = null;
let currentStep = 1;
const totalSteps = 5;
let selectedGoals = [];
let selectedEquipment = [];
let equipmentConfig = {
    barres: {
        olympique: { available: false, count: 0, weight: 20 },
        ez: { available: false, count: 0, weight: 10 },
        courte: { available: false, count: 0, weight: 2.5 }
    },
    disques: {}, // {"5": 4, "10": 2} - poids en kg -> nombre
    dumbbells: {}, // {"5": 2, "10": 2} - poids -> nombre
    kettlebells: {}, // {"8": 1, "12": 1} - poids -> nombre
    elastiques: [], // [{color: "vert", resistance: 10, count: 1}]
    banc: {
        available: false,
        inclinable: false,
        declinable: false
    },
    autres: {
        barre_traction: false,
        lest_corps: [],
        lest_chevilles: [],
        lest_poignets: []
    }
};
let selectedFatigue = 3;
let selectedEffort = 3;
let currentWorkout = null;
let workoutCheckInterval = null;
let lastSyncTime = null;
let restTimerInterval = null;
let lastSetEndTime = null;
let allExercises = [];
let lastExerciseEndTime = null;
let interExerciseRestTime = 0;
let isInRestPeriod = false;
let currentSetData = null;
let sessionHistory = [];

// Variables pour les exercices et s√©ries
let currentExercise = null;
let currentSetNumber = 1;
let currentTargetReps = 10;
let setStartTime = null;
let currentRestTime = 0;

// Variables pour les timers
let timerInterval = null;
let audioContext = null;
let isSilentMode = false;
let currentProgram = null;

let isAutoWeightEnabled = localStorage.getItem('isAutoWeightEnabled') !== 'false'; // true par d√©faut
// Variables pour le syst√®me adaptatif (Phase 2.2)
let userCommitment = null;
let adaptiveTargets = [];
let trajectoryAnalysis = null;
let currentAdaptiveWorkout = null;

// √âtat des suggestions ML
export let lastCompletedSetId = parseInt(localStorage.getItem('lastCompletedSetId')) || null;
export let userPrograms = [];

export function setLastCompletedSetId(id) {
    lastCompletedSetId = id;
    localStorage.setItem('lastCompletedSetId', id);
}

// ===== ACCESSEURS SIMPLES =====
// Pas de classes complexes, juste des fonctions directes

export function getCurrentUser() {
    return currentUser;
}

export function setCurrentUser(user) {
    currentUser = user;
}

export function getCurrentWorkout() {
    return currentWorkout;
}

export function setCurrentWorkout(workout) {
    currentWorkout = workout;
}

export function getCurrentStep() {
    return currentStep;
}

export function setCurrentStep(step) {
    currentStep = step;
}

export function getSelectedGoals() {
    return selectedGoals;
}

export function setSelectedGoals(goals) {
    selectedGoals = goals;
}

export function getSelectedEquipment() {
    return selectedEquipment;
}

export function setSelectedEquipment(equipment) {
    selectedEquipment = equipment;
}

export function getEquipmentConfig() {
    return equipmentConfig;
}

export function setEquipmentConfig(config) {
    equipmentConfig = config;
}

export function getAllExercises() {
    return allExercises;
}

export function setAllExercises(exercises) {
    allExercises = exercises;
}

export function getCurrentExercise() {
    return currentExercise;
}

export function setCurrentExercise(exercise) {
    currentExercise = exercise;
}

export function getSessionHistory() {
    return sessionHistory;
}

export function addToSessionHistory(entry) {
    sessionHistory.push(entry);
}

export function clearSessionHistory() {
    sessionHistory = [];
}

export function setUserPrograms(programs) {
    userPrograms = programs;
}

// Variables accessibles directement pour simplicit√©
export {
    currentUser,
    currentStep,
    totalSteps,
    selectedGoals,
    selectedEquipment,
    equipmentConfig,
    selectedFatigue,
    selectedEffort,
    currentWorkout,
    workoutCheckInterval,
    lastSyncTime,
    restTimerInterval,
    lastSetEndTime,
    allExercises,
    lastExerciseEndTime,
    interExerciseRestTime,
    isInRestPeriod,
    currentSetData,
    sessionHistory,
    currentExercise,
    currentSetNumber,
    currentTargetReps,
    setStartTime,
    currentRestTime,
    timerInterval,
    audioContext,
    isSilentMode,
    currentProgram,
    currentAdaptiveWorkout,
    isAutoWeightEnabled,
    userCommitment,
    adaptiveTargets,
    trajectoryAnalysis
};

// R√©initialisation de l'√©tat pour logout ou nouveau profil
export function resetState() {
    currentUser = null;
    currentStep = 1;
    selectedGoals = [];
    selectedEquipment = [];
    equipmentConfig = {
        barres: {
            olympique: { available: false, count: 0, weight: 20 },
            ez: { available: false, count: 0, weight: 10 },
            courte: { available: false, count: 0, weight: 2.5 }
        },
        disques: {},
        dumbbells: {},
        kettlebells: {},
        elastiques: [],
        banc: {
            available: false,
            inclinable: false,
            declinable: false
        },
        autres: {
            barre_traction: false,
            lest_corps: [],
            lest_chevilles: [],
            lest_poignets: []
        }
    };
    selectedFatigue = 3;
    selectedEffort = 3;
    currentWorkout = null;
    sessionHistory = [];
    currentExercise = null;
    currentSetNumber = 1;
    currentTargetReps = 10;
    lastExerciseEndTime = null;
    interExerciseRestTime = 0;

    userCommitment = null;
    adaptiveTargets = [];
    trajectoryAnalysis = null;
    currentAdaptiveWorkout = null;
}

// Setters pour les variables qui n'en ont pas encore
export function setSelectedFatigue(value) {
    selectedFatigue = value;
}

export function setSelectedEffort(value) {
    selectedEffort = value;
}

export function setCurrentSetNumber(number) {
    currentSetNumber = number;
}

export function incrementSetNumber() {
    currentSetNumber++;
}

export function setLastExerciseEndTime(time) {
    lastExerciseEndTime = time;
}

export function setInterExerciseRestTime(time) {
    interExerciseRestTime = time;
}

export function setIsInRestPeriod(value) {
    isInRestPeriod = value;
}

export function setLastSetEndTime(time) {
    lastSetEndTime = time;
}

export function setSetStartTime(time) {
    setStartTime = time;
}

export function setTimerInterval(interval) {
    timerInterval = interval;
}

export function setRestTimerInterval(interval) {
    restTimerInterval = interval;
}

export function setWorkoutCheckInterval(interval) {
    workoutCheckInterval = interval;
}

export function setAudioContext(context) {
    audioContext = context;
}

export function setIsSilentMode(value) {
    isSilentMode = value;
}

export function setLastSyncTime(time) {
    lastSyncTime = time;
}

export function setCurrentTargetReps(reps) {
    currentTargetReps = reps;
}

export function getCurrentProgram() {
    return currentProgram;
}

export function setCurrentProgram(program) {
    currentProgram = program;
}

export function getUserPrograms() {
    return userPrograms;
}

export function getIsAutoWeightEnabled() {
    return isAutoWeightEnabled;
}

export function setIsAutoWeightEnabled(enabled) {
    isAutoWeightEnabled = enabled;
    localStorage.setItem('isAutoWeightEnabled', enabled);
}

// Ajoutez ces fonctions apr√®s setIsAutoWeightEnabled :

export function getUserCommitment() {
    return userCommitment;
}

export function setUserCommitment(commitment) {
    userCommitment = commitment;
}

export function getAdaptiveTargets() {
    return adaptiveTargets;
}

export function setAdaptiveTargets(targets) {
    adaptiveTargets = targets;
}

export function getTrajectoryAnalysis() {
    return trajectoryAnalysis;
}

export function setTrajectoryAnalysis(analysis) {
    trajectoryAnalysis = analysis;
}

export function getCurrentAdaptiveWorkout() {
    return currentAdaptiveWorkout;
}

export function setCurrentAdaptiveWorkout(workout) {
    currentAdaptiveWorkout = workout;
}

// Export de getters pour les variables globales n√©cessaires
Object.defineProperty(window, 'currentWorkout', {
    get: function() { return currentWorkout; }
});

Object.defineProperty(window, 'currentExercise', {
    get: function() { return currentExercise; }
});
--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\frontend\app-stats.js ---
--- Nom du fichier: app-stats.js ---
--- Contenu ---
// ===== MODULE STATISTIQUES AVANC√âES =====
// Ce fichier g√®re les graphiques avanc√©s de la page stats

import { currentUser } from './app-state.js';

// D√©claration des biblioth√®ques globales charg√©es via <script>
/* global Chart */
/* global d3 */

const statsCharts = {};

// Configuration des graphiques
// Palette de couleurs moderne avec gradients
const chartColors = {
    primary: '#3b82f6',
    secondary: '#8b5cf6',
    success: '#10b981',
    warning: '#f59e0b',
    danger: '#ef4444',
    gray: '#6b7280',
    pink: '#ec4899',
    cyan: '#06b6d4',
    indigo: '#6366f1'
};

// ===== UTILITAIRES COULEURS =====
function getColorForMuscle(muscle, opacity = 1) {
    // Palette moderne avec des couleurs vibrantes
    const colorMap = {
        'Pectoraux': '#3b82f6',    // Bleu vif
        'Dos': '#8b5cf6',          // Violet
        '√âpaules': '#f59e0b',      // Orange
        'Biceps': '#10b981',       // Vert √©meraude
        'Triceps': '#ef4444',      // Rouge
        'Jambes': '#ec4899',       // Rose
        'Abdominaux': '#06b6d4',   // Cyan
        'Mollets': '#6366f1',      // Indigo
        'Avant-bras': '#84cc16',   // Vert lime
        'Fessiers': '#a855f7'      // Purple
    };
    
    const color = colorMap[muscle] || chartColors.gray;
    
    if (opacity < 1) {
        const hex = color.replace('#', '');
        const r = parseInt(hex.substring(0, 2), 16);
        const g = parseInt(hex.substring(2, 4), 16);
        const b = parseInt(hex.substring(4, 6), 16);
        return `rgba(${r}, ${g}, ${b}, ${opacity})`;
    }
    
    return color;
}

// Fonction pour cr√©er des gradients
function createGradient(ctx, color, opacity = 0.3) {
    const gradient = ctx.createLinearGradient(0, 0, 0, 400);
    const rgb = hexToRgb(color);
    gradient.addColorStop(0, `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${opacity})`);
    gradient.addColorStop(1, `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, 0.01)`);
    return gradient;
}

function hexToRgb(hex) {
    const result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
    return result ? {
        r: parseInt(result[1], 16),
        g: parseInt(result[2], 16),
        b: parseInt(result[3], 16)
    } : null;
}

const chartDefaults = {
    responsive: true,
    maintainAspectRatio: false,
    interaction: {
        mode: 'index',
        intersect: false
    },
    animation: {
        duration: 1000,
        easing: 'easeInOutCubic',
        delay: (context) => {
            let delay = 0;
            if (context.type === 'data' && context.mode === 'default') {
                delay = context.dataIndex * 100 + context.datasetIndex * 100;
            }
            return delay;
        }
    },
    plugins: {
        legend: {
            display: true,
            position: 'top',
            align: 'end',
            labels: {
                color: '#e5e7eb',
                font: {
                    family: "'Inter', sans-serif",
                    size: 12,
                    weight: '500'
                },
                padding: 15,
                usePointStyle: true,
                pointStyle: 'circle',
                boxWidth: 8,
                boxHeight: 8
            }
        },
        tooltip: {
            backgroundColor: 'rgba(15, 23, 42, 0.95)',
            titleColor: '#f3f4f6',
            bodyColor: '#e5e7eb',
            borderColor: 'rgba(59, 130, 246, 0.3)',
            borderWidth: 1,
            cornerRadius: 12,
            padding: 16,
            displayColors: true,
            boxPadding: 6,
            caretSize: 8,
            caretPadding: 10
        }
    },
    scales: {
        x: {
            grid: {
                color: 'rgba(255, 255, 255, 0.03)',
                drawBorder: false,
                tickLength: 0
            },
            ticks: {
                color: '#94a3b8',
                font: {
                    size: 11,
                    weight: '400'
                },
                padding: 8
            },
            border: {
                display: false
            }
        },
        y: {
            grid: {
                color: 'rgba(255, 255, 255, 0.05)',
                drawBorder: false,
                tickLength: 0
            },
            ticks: {
                color: '#94a3b8',
                font: {
                    size: 11,
                    weight: '400'
                },
                padding: 12,
                callbacks: function(value) {
                    return value.toLocaleString('fr-FR');
                }
            },
            border: {
                display: false
            }
        }
    }
};

// ===== 1. PROGRESSION PAR GROUPE MUSCULAIRE =====
async function updateMuscleProgression() {
    const period = document.getElementById('muscleProgressionPeriod').value;
    
    try {
        const response = await fetch(`/api/users/${currentUser.id}/muscle-progression?period=${period}`);
        const data = await response.json();
        
        if (statsCharts.muscleProgression) {
            statsCharts.muscleProgression.destroy();
        }
        
        const ctx = document.getElementById('muscleProgressionChart').getContext('2d');
        
        // Cr√©er des datasets avec gradients et effets
        const datasets = Object.entries(data.muscle_groups).map(([muscle, values], index) => {
            const color = getColorForMuscle(muscle);
            return {
                label: muscle,
                data: values,
                borderColor: color,
                backgroundColor: createGradient(ctx, color, 0.2),
                borderWidth: 3,
                pointBackgroundColor: color,
                pointBorderColor: '#1e293b',
                pointBorderWidth: 2,
                pointRadius: 5,
                pointHoverRadius: 7,
                pointHoverBackgroundColor: color,
                pointHoverBorderColor: '#fff',
                pointHoverBorderWidth: 2,
                tension: 0.4,
                fill: true,
                // Effet d'animation d√©cal√©
                animation: {
                    delay: index * 200
                }
            };
        });
        
        statsCharts.muscleProgression = new Chart(ctx, {
            type: 'line',
            data: {
                labels: data.dates.map(d => {
                    const date = new Date(d);
                    return date.toLocaleDateString('fr-FR', { 
                        day: 'numeric', 
                        month: 'short' 
                    });
                }),
                datasets: datasets
            },
            options: {
                ...chartDefaults,
                plugins: {
                    ...chartDefaults.plugins,
                    title: {
                        display: false
                    }
                },
                // Effet de survol am√©lior√©
                onHover: (event, activeElements) => {
                    ctx.canvas.style.cursor = activeElements.length > 0 ? 'pointer' : 'default';
                }
            }
        });
    } catch (error) {
        console.error('Erreur chargement progression musculaire:', error);
    }
}

// ===== 2. DASHBOARD DE R√âCUP√âRATION =====
async function refreshMuscleRecovery() {
    try {
        const response = await fetch(`/api/users/${currentUser.id}/muscle-recovery`);
        const data = await response.json();
        
        if (statsCharts.muscleRecovery) {
            statsCharts.muscleRecovery.destroy();
        }
        
        const ctx = document.getElementById('muscleRecoveryChart').getContext('2d');
        
        // Transformer les donn√©es pour le graphique
        const muscles = data.muscles.map(m => m.muscle);
        const hoursSince = data.muscles.map(m => m.hours_since_last > 168 ? 168 : m.hours_since_last);
        const colors = data.muscles.map(m => {
            if (m.status === 'ready') return chartColors.success;
            if (m.status === 'recovering') return chartColors.warning;
            return chartColors.danger;
        });
        
        statsCharts.muscleRecovery = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: muscles,
                datasets: [{
                    label: 'Heures depuis dernier entra√Ænement',
                    data: hoursSince,
                    backgroundColor: colors,
                    borderWidth: 0
                }]
            },
            options: {
                ...chartDefaults,
                indexAxis: 'y',
                scales: {
                    x: {
                        ...chartDefaults.scales.x,
                        max: 168,
                        ticks: {
                            callbacks: function(value) {
                                if (value === 168) return '7j+';
                                if (value % 24 === 0) return `${value/24}j`;
                                return `${value}h`;
                            }
                        }
                    }
                },
                plugins: {
                    ...chartDefaults.plugins,
                    annotation: {
                        annotations: {
                            line1: {
                                type: 'line',
                                xMin: 48,
                                xMax: 48,
                                borderColor: 'rgba(16, 185, 129, 0.5)',
                                borderWidth: 2,
                                label: {
                                    enabled: true,
                                    content: 'R√©cup√©r√©',
                                    position: 'end'
                                }
                            }
                        }
                    }
                }
            }
        });
    } catch (error) {
        console.error('Erreur chargement r√©cup√©ration musculaire:', error);
    }
}

// ===== 3. VOLUME PROGRESSIF =====
async function updateVolumeChart() {
    const period = document.getElementById('volumePeriod')?.value || 'month';
    
    try {
        const response = await fetch(`/api/users/${currentUser.id}/muscle-volume?period=${period}`);
        const data = await response.json();
        
        const ctx = document.getElementById('muscleVolumeChart');
        if (!ctx) return;
        
        // D√©truire l'ancien graphique
        if (statsCharts['muscleVolume']) {
            statsCharts['muscleVolume'].destroy();
        }
        
        // Cr√©er le nouveau graphique
        statsCharts['muscleVolume'] = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: Object.keys(data.volumes || {}),
                datasets: [{
                    label: 'Volume (kg)',
                    data: Object.values(data.volumes || {}),
                    backgroundColor: Object.keys(data.volumes || {}).map(muscle => 
                        getColorForMuscle(muscle, 0.7)
                    ),
                    borderColor: Object.keys(data.volumes || {}).map(muscle => 
                        getColorForMuscle(muscle)
                    ),
                    borderWidth: 2
                }]
            },
            options: {
                ...chartDefaults,
                plugins: {
                    ...chartDefaults.plugins,
                    title: {
                        display: true,
                        text: `Volume total par muscle (${period === 'week' ? 'Semaine' : 'Mois'})`,
                        color: '#f3f4f6',
                        font: { size: 14, weight: '600' }
                    }
                },
                scales: {
                    ...chartDefaults.scales,
                    y: {
                        ...chartDefaults.scales.y,
                        title: {
                            display: true,
                            text: 'Volume (kg)',
                            color: '#94a3b8'
                        }
                    }
                }
            }
        });
    } catch (error) {
        console.error('Erreur chargement volume:', error);
    }
}

// ===== 4. SUNBURST UTILISATION √âQUIPEMENT =====
// ===== 4. SUNBURST PARTIES DU CORPS =====
async function updateBodyPartDistribution() {
    const period = document.getElementById('bodyPartPeriod').value;
    
    try {
        const response = await fetch(`/api/users/${currentUser.id}/muscle-distribution-detailed?period=${period}`);
        const data = await response.json();
        
        // Nettoyer et cr√©er le sunburst
        const container = document.getElementById('bodyPartSunburst');
        container.innerHTML = '';
        createBodyPartSunburst(data, container);
        
    } catch (error) {
        console.error('Erreur chargement distribution:', error);
    }
}

function createBodyPartSunburst(data, container) {
    const width = container.offsetWidth;
    const height = 400;
    const radius = Math.min(width, height) / 2;
    
    const svg = d3.select(container)
        .append('svg')
        .attr('width', width)
        .attr('height', height)
        .append('g')
        .attr('transform', `translate(${width/2},${height/2})`);
    
    const partition = d3.partition()
        .size([2 * Math.PI, radius]);
    
    const root = d3.hierarchy(data)
        .sum(d => d.value)
        .sort((a, b) => b.value - a.value);
    
    partition(root);
    
    const arc = d3.arc()
        .startAngle(d => d.x0)
        .endAngle(d => d.x1)
        .innerRadius(d => {
            if (d.depth === 0) return 0;
            if (d.depth === 1) return radius * 0.4;
            return radius * 0.7;
        })
        .outerRadius(d => {
            if (d.depth === 0) return 0;
            if (d.depth === 1) return radius * 0.65;
            return radius * 0.95;
        });
    
    const g = svg.selectAll('g')
        .data(root.descendants().filter(d => d.depth > 0))
        .enter().append('g');
    
    const paths = g.append('path')
        .attr('d', arc)
        .style('fill', d => {
            // Couleur par muscle (depth 1) ou version plus claire pour exercices (depth 2)
            const muscle = d.depth === 1 ? d.data.name : d.parent.data.name;
            return getColorForMuscle(muscle, d.depth === 1 ? 1 : 0.7);
        })
        .style('stroke', '#1e293b')
        .style('stroke-width', 2)
        .attr('opacity', 0);
    
    // Animation
    paths.transition()
        .duration(750)
        .attr('opacity', 1);
    
    // Labels uniquement pour les muscles (depth 1)
    g.filter(d => d.depth === 1)
        .append('text')
        .attr('transform', d => {
            const [x, y] = arc.centroid(d);
            return `translate(${x},${y})`;
        })
        .attr('text-anchor', 'middle')
        .attr('fill', 'white')
        .style('font-size', '12px')
        .style('font-weight', '600')
        .text(d => {
            const rootValue = root.value || 1;
            const percentage = rootValue > 0 ? ((d.value / rootValue) * 100).toFixed(0) : '0';
            return percentage > 5 ? d.data.name : '';
        });
    
    // Tooltip am√©lior√©
    paths.on('mouseover', function(event, d) {
        const totalVolume = root.value || 1; // √âviter division par 0
        const percentage = totalVolume > 0 ? ((d.value / totalVolume) * 100).toFixed(1) : '0';
        
        const tooltip = d3.select('body').append('div')
            .attr('class', 'sunburst-tooltip')
            .style('opacity', 0);
        
        tooltip.transition()
            .duration(200)
            .style('opacity', .9);
        
        let content = '';
        if (d.depth === 1) {
            // Tooltip pour muscle avec r√©partition des exercices
            content = `<strong>${d.data.name}</strong><br/>
                      Volume: ${Math.round(d.value)}kg (${percentage}%)<br/>`;
            
            if (d.children && d.children.length > 0) {
                content += '<br/><strong>Exercices:</strong><br/>';
                d.children
                    .sort((a, b) => b.value - a.value)
                    .forEach(child => {
                        const exercisePercentage = ((child.value / d.value) * 100).toFixed(0);
                        content += `‚Ä¢ ${child.data.name}: ${exercisePercentage}%<br/>`;
                    });
            }
        } else {
            // Tooltip pour exercice
            const muscleVolume = d.parent.value || 1; // √âviter division par 0
            const exercisePercentage = muscleVolume > 0 ? ((d.value / muscleVolume) * 100).toFixed(0) : '0';
            content = `<strong>${d.data.name}</strong><br/>
                      Muscle: ${d.parent.data.name}<br/>
                      Volume: ${Math.round(d.value)}kg<br/>
                      ${exercisePercentage}% du muscle<br/>
                      ${percentage}% du total`;
        }
        
        tooltip.html(content)
            .style('left', (event.pageX + 10) + 'px')
            .style('top', (event.pageY - 28) + 'px');
        
        // Effet de survol
        d3.select(this)
            .transition()
            .duration(200)
            .attr('opacity', 0.8);
        
        // Mettre en √©vidence les √©l√©ments li√©s
        if (d.depth === 1) {
            // Mettre en √©vidence tous les exercices de ce muscle
            paths.filter(p => p.depth === 2 && p.parent === d)
                .transition()
                .duration(200)
                .attr('opacity', 0.8);
        } else if (d.depth === 2) {
            // Mettre en √©vidence le muscle parent
            paths.filter(p => p === d.parent)
                .transition()
                .duration(200)
                .attr('opacity', 0.8);
        }
    })
    .on('mouseout', function(event, d) {
        d3.selectAll('.sunburst-tooltip').remove();
        
        // Restaurer l'opacit√©
        paths.transition()
            .duration(200)
            .attr('opacity', 1);
    });
}



// ===== 5. PR√âDICTION DE PERFORMANCE =====
async function updatePerformancePrediction() {
    try {
        const response = await fetch(`/api/users/${currentUser.id}/muscle-performance-prediction`);
        const data = await response.json();
        
        if (statsCharts.performancePrediction) {
            statsCharts.performancePrediction.destroy();
        }
        
        const ctx = document.getElementById('performancePredictionChart').getContext('2d');
        
        // Pr√©parer les donn√©es
        const muscles = Object.keys(data.predictions);
        const currentMax = muscles.map(m => data.predictions[m].current_max);
        const predictedMax = muscles.map(m => data.predictions[m].predicted_max);
        const confidence = muscles.map(m => data.predictions[m].confidence);
        
        statsCharts.performancePrediction = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: muscles,
                datasets: [
                    {
                        label: 'Charge actuelle (kg)',
                        data: currentMax,
                        backgroundColor: muscles.map(m => getColorForMuscle(m)),
                        borderWidth: 0,
                        borderRadius: 8,
                        borderSkipped: false,
                        barThickness: 40
                    },
                    {
                        label: 'Pr√©diction 30j (kg)',
                        data: predictedMax,
                        backgroundColor: muscles.map(m => getColorForMuscle(m, 0.3)),
                        borderColor: muscles.map(m => getColorForMuscle(m)),
                        borderWidth: 2,
                        borderRadius: 8,
                        borderSkipped: false,
                        borderDash: [5, 5],
                        barThickness: 40
                    }
                ]
            },
            options: {
                ...chartDefaults,
                plugins: {
                    ...chartDefaults.plugins,
                    tooltip: {
                        ...chartDefaults.plugins.tooltip,
                        callbacks: {
                            afterLabel: function(context) {
                                if (context.datasetIndex === 1) {
                                    const muscle = muscles[context.dataIndex];
                                    const conf = data.predictions[muscle].confidence;
                                    const trend = data.predictions[muscle].trend;
                                    return `Confiance: ${conf}%\nTendance: ${trend}`;
                                }
                            }
                        }
                    }
                }
            }
        });
    } catch (error) {
        console.error('Erreur chargement pr√©dictions:', error);
    }
}



// ===== INITIALISATION =====
async function initializeStatsPage() {
    if (!currentUser) return;
    
    await updateMuscleProgression();
    await refreshMuscleRecovery();
    await updateVolumeChart();
    await updateBodyPartDistribution(); // Chang√© ici
    await updatePerformancePrediction();
}

// ===== EXPORT GLOBAL =====
window.updateMuscleProgression = updateMuscleProgression;
window.refreshMuscleRecovery = refreshMuscleRecovery;
window.updateVolumeChart = updateVolumeChart;
window.updateBodyPartDistribution = updateBodyPartDistribution;
window.updatePerformancePrediction = updatePerformancePrediction;
window.initializeStatsPage = initializeStatsPage;

export {
    initializeStatsPage,
    updateMuscleProgression,
    updateVolumeChart,
    refreshMuscleRecovery,
    updateBodyPartDistribution,
    updatePerformancePrediction
};
--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\frontend\app-ui.js ---
--- Nom du fichier: app-ui.js ---
--- Contenu ---
// ===== UTILITAIRES INTERFACE =====
// Ce fichier contient toutes les fonctions d'interface r√©utilisables
// Toast, ic√¥nes, et autres √©l√©ments UI communs

import { 
    getEquipmentIcon as getIconFromConfig,
    getEquipmentName as getNameFromConfig,
    getColorName as getColorNameFromConfig,
    getColorHex as getColorHexFromConfig
} from './app-config.js';

import { isSilentMode, setIsSilentMode } from './app-state.js';

// ===== NOTIFICATIONS TOAST =====
function showToast(message, type = 'info') {
    const toast = document.createElement('div');
    toast.className = `toast toast-${type}`;
    toast.textContent = message;
    
    document.body.appendChild(toast);
    
    setTimeout(() => {
        toast.classList.add('show');
    }, 100);
    
    setTimeout(() => {
        toast.classList.remove('show');
        setTimeout(() => toast.remove(), 300);
    }, 3000);
}

// ===== OVERLAY DE CHARGEMENT =====
function showLoadingOverlay(message = 'Chargement...') {
    // Supprimer tout overlay existant
    hideLoadingOverlay();
    
    const overlay = document.createElement('div');
    overlay.id = 'loadingOverlay';
    overlay.className = 'loading-overlay';
    overlay.innerHTML = `
        <div class="loading-content">
            <div class="spinner"></div>
            <p>${message}</p>
        </div>
    `;
    document.body.appendChild(overlay);
}

function hideLoadingOverlay() {
    const overlay = document.getElementById('loadingOverlay');
    if (overlay) {
        overlay.remove();
    }
}

// ===== MODAL DE FATIGUE =====
function showFatigueModal(fatigue) {
    const modal = document.createElement('div');
    modal.className = 'fatigue-modal';
    modal.innerHTML = `
        <div class="fatigue-content">
            <h3>‚ö†Ô∏è Fatigue √©lev√©e d√©tect√©e</h3>
            <p>${fatigue.message}</p>
            <div class="fatigue-options">
                <button onclick="reduceSetsRemaining()">R√©duire les s√©ries</button>
                <button onclick="switchToLighterExercise()">Exercice plus l√©ger</button>
                <button onclick="dismissFatigueModal()">Continuer</button>
            </div>
        </div>
    `;
    document.body.appendChild(modal);
}

// Export global
window.showFatigueModal = showFatigueModal;

// ===== GESTION DU MODE SILENCIEUX =====
function toggleSilentMode() {
    const newValue = !isSilentMode;
    setIsSilentMode(newValue);
    localStorage.setItem('silentMode', newValue);
    showToast(newValue ? 'Mode silencieux activ√©' : 'Sons activ√©s', 'info');
}

// ===== FONCTIONS D'√âQUIPEMENT =====
// Ces fonctions sont des wrappers pour √©viter les imports directs depuis config dans le HTML
function getEquipmentIcon(type) {
    return getIconFromConfig(type);
}

function getEquipmentName(type) {
    return getNameFromConfig(type);
}

function getColorName(hexColor) {
    return getColorNameFromConfig(hexColor);
}

function getColorHex(colorName) {
    return getColorHexFromConfig(colorName);
}

// ===== EXPORT GLOBAL =====
// Export pour utilisation dans le HTML
window.showToast = showToast;
window.toggleSilentMode = toggleSilentMode;
window.getEquipmentIcon = getEquipmentIcon;
window.getEquipmentName = getEquipmentName;
window.getColorName = getColorName;
window.getColorHex = getColorHex;

// Export pour les autres modules
export { 
    showToast,
    showLoadingOverlay,
    hideLoadingOverlay,
    showFatigueModal,
    toggleSilentMode,
    getEquipmentIcon,
    getEquipmentName,
    getColorName,
    getColorHex
};
--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\frontend\app-workout.js ---
--- Nom du fichier: app-workout.js ---
--- Contenu ---
// ===== GESTIONNAIRE DE S√âANCES =====
// Ce fichier g√®re le cycle de vie complet des s√©ances d'entra√Ænement
// Il coordonne la cr√©ation, le suivi, la synchronisation et la fin des s√©ances

import { 
    currentUser,
    currentWorkout,
    setCurrentWorkout,
    workoutCheckInterval,
    setWorkoutCheckInterval,
    lastSyncTime,
    setLastSyncTime,
    timerInterval,
    setTimerInterval,
    restTimerInterval,
    setRestTimerInterval,
    audioContext,
    setAudioContext,
    lastExerciseEndTime,
    setLastExerciseEndTime,
    interExerciseRestTime,
    setInterExerciseRestTime,
    getCurrentAdaptiveWorkout,
    clearSessionHistory,
    currentSetNumber
} from './app-state.js';
import { startGuidedWorkout } from './app-guided-workout.js';
import { showView, showProfileForm } from './app-navigation.js';
import { showToast } from './app-ui.js';
import { 
    createWorkout,
    getActiveWorkout,
    getWorkoutStatus,
    pauseWorkoutAPI,
    resumeWorkoutAPI,
    completeWorkoutAPI,
    abandonWorkoutAPI,
    createRestPeriod,
    createSet
} from './app-api.js';
import { finishExercise } from './app-exercises.js';
import { SYNC_INTERVAL } from './app-config.js';

// ===== D√âMARRAGE D'UNE S√âANCE =====
export async function startWorkout(type) {
    console.log(`üöÄ D√©marrage s√©ance type: ${type}`);
    
    if (!currentUser) {
        showToast('Veuillez vous connecter', 'error');
        if (window.showProfileForm) {
            window.showProfileForm();
        }
        return;
    }
    
    // Nettoyer l'√©tat pr√©c√©dent
    cleanupWorkout();
    
    // V√©rifier s'il y a d√©j√† une session active
    const activeWorkout = await checkActiveWorkout();
    if (activeWorkout) {
        console.log('üîÑ Session active trouv√©e:', activeWorkout);
        setCurrentWorkout(activeWorkout);
        showView('training');
        updateTrainingInterface();
        showToast('Session en cours r√©cup√©r√©e', 'info');
        return;
    }
    
    // Gestion sp√©cifique des s√©ances adaptatives
    if (type === 'adaptive') {
        const adaptiveData = getCurrentAdaptiveWorkout();
        if (!adaptiveData) {
            console.error('‚ùå Aucune donn√©e adaptative disponible');
            showToast('Aucune s√©ance adaptative s√©lectionn√©e', 'error');
            return;
        }
        
        console.log('üéØ Donn√©es adaptatives trouv√©es:', adaptiveData);
        
        // Sauvegarder le plan avant de cr√©er la s√©ance
        localStorage.setItem('guidedWorkoutPlan', JSON.stringify(adaptiveData));
        localStorage.setItem('workoutType', 'adaptive');
    }
    
    try {
        // Cr√©er la nouvelle s√©ance
        const workout = await createWorkout(currentUser.id, type);
        
        if (!workout) {
            throw new Error('Impossible de cr√©er la s√©ance');
        }
        
        console.log('‚úÖ S√©ance cr√©√©e:', workout);
        
        // Configurer l'√©tat global
        setCurrentWorkout(workout);
        
        // D√©marrer la surveillance
        startWorkoutMonitoring();
        
        // Afficher l'interface
        showView('training');
        updateTrainingInterface();
        
        showToast(`S√©ance ${type === 'adaptive' ? 'adaptative' : 'libre'} d√©marr√©e !`, 'success');
        
    } catch (error) {
        console.error('‚ùå Erreur cr√©ation s√©ance:', error);
        showToast('Erreur lors de la cr√©ation de la s√©ance', 'error');
        
        // Nettoyer en cas d'erreur
        localStorage.removeItem('guidedWorkoutPlan');
        localStorage.removeItem('workoutType');
    }
}

// ===== V√âRIFICATION DE S√âANCE ACTIVE =====
export async function checkActiveWorkout() {
    if (!currentUser) return null;
    
    try {
        // D'abord v√©rifier localStorage
        const savedWorkout = localStorage.getItem('currentWorkout');
        if (savedWorkout) {
            const workout = JSON.parse(savedWorkout);
            
            // V√©rifier que c'est bien pour cet utilisateur
            if (workout.user_id === currentUser.id && workout.status !== 'completed') {
                // V√©rifier avec le serveur que la session existe toujours
                const serverWorkout = await getWorkoutStatus(workout.id);
                if (serverWorkout && (serverWorkout.status === 'started' || serverWorkout.status === 'paused')) {
                    setCurrentWorkout(serverWorkout);
                    startWorkoutMonitoring();
                    syncPendingSets();
                    
                    // R√©cup√©rer l'historique de session si disponible
                    const savedHistory = localStorage.getItem('currentSessionHistory');
                    if (savedHistory) {
                        const history = JSON.parse(savedHistory);
                        history.forEach(entry => {
                            if (window.addToSessionHistory) {
                                window.addToSessionHistory(entry.type, entry.data);
                            }
                        });
                    }
                    
                    syncInterExerciseRests();
                    return serverWorkout;
                }
            }
            
            // Si pas valide, nettoyer
            localStorage.removeItem('currentWorkout');
        }
        
        // V√©rifier c√¥t√© serveur
        const activeWorkout = await getActiveWorkout(currentUser.id);
        if (activeWorkout) {
            setCurrentWorkout(activeWorkout);
            localStorage.setItem('currentWorkout', JSON.stringify(activeWorkout));
            startWorkoutMonitoring();
            syncPendingSets();
            
            // R√©cup√©rer l'historique de session si disponible
            const savedHistory = localStorage.getItem('currentSessionHistory');
            if (savedHistory) {
                const history = JSON.parse(savedHistory);
                history.forEach(entry => {
                    if (window.addToSessionHistory) {
                        window.addToSessionHistory(entry.type, entry.data);
                    }
                });
            }
            
            return activeWorkout;
        }
    } catch (error) {
        console.error('Erreur v√©rification workout actif:', error);
    }
    
    // Si on arrive ici, il n'y a pas de session active
    // Nettoyer le localStorage pour √©viter des incoh√©rences futures
    localStorage.removeItem('currentWorkout');
    localStorage.removeItem('currentSessionHistory');
    return null;
}

// ===== MONITORING DE LA S√âANCE =====
export function startWorkoutMonitoring() {
    // Sync toutes les 30 secondes pour g√©rer Render qui s'endort
    if (workoutCheckInterval) clearInterval(workoutCheckInterval);
    
    const interval = setInterval(async () => {
        if (currentWorkout && currentWorkout.status === 'started') {
            try {
                // Ping pour garder le serveur √©veill√© sur Render
                await getWorkoutStatus(currentWorkout.id);
                setLastSyncTime(new Date());
            } catch (error) {
                console.error('Erreur sync workout:', error);
                showToast('Connexion perdue, donn√©es en local', 'warning');
            }
        }
    }, SYNC_INTERVAL);
    
    setWorkoutCheckInterval(interval);
}

// ===== PAUSE DE LA S√âANCE =====
export async function pauseWorkout() {
    if (!currentWorkout) return;
    
    const result = await pauseWorkoutAPI(currentWorkout.id);
    
    if (result) {
        currentWorkout.status = 'paused';
        currentWorkout.paused_at = result.paused_at;
        
        localStorage.setItem('currentWorkout', JSON.stringify(currentWorkout));
        showToast('S√©ance mise en pause', 'info');
        updateTrainingInterface();
    } else {
        // Sauvegarder l'√©tat localement m√™me si le serveur ne r√©pond pas
        currentWorkout.status = 'paused';
        currentWorkout.paused_at = new Date().toISOString();
        localStorage.setItem('currentWorkout', JSON.stringify(currentWorkout));
        showToast('Pause sauvegard√©e localement', 'warning');
    }
}

// ===== REPRISE DE LA S√âANCE =====
export async function resumeWorkout() {
    if (!currentWorkout) return;
    
    const result = await resumeWorkoutAPI(currentWorkout.id);
    
    if (result) {
        currentWorkout.status = 'started';
        currentWorkout.paused_at = null;
        
        localStorage.setItem('currentWorkout', JSON.stringify(currentWorkout));
        showToast('S√©ance reprise', 'success');
        updateTrainingInterface();
    } else {
        showToast('Erreur de connexion', 'error');
    }
}

// ===== FIN DE LA S√âANCE =====
export async function completeWorkout() {
    if (!currentWorkout) return;
    
    if (!confirm('Terminer la s√©ance ?')) return;
    
    const success = await completeWorkoutAPI(currentWorkout.id);
    
    if (success) {
        showToast('S√©ance termin√©e !', 'success');
        cleanupWorkout();
        showView('dashboard');
        
        // Add delay to ensure server has processed the completion
        setTimeout(() => {
            if (window.loadDashboard) {
                window.loadDashboard(); // Rafra√Æchir les stats
            }
        }, 500);
    } else {
        showToast('Erreur, donn√©es sauvegard√©es localement', 'error');
        // TODO: impl√©menter une queue de sync pour plus tard
    }
}

// ===== ABANDON DE LA S√âANCE =====
export async function abandonWorkout() {
    if (!currentWorkout) return;
    
    if (!confirm('Abandonner la s√©ance ? Les donn√©es seront perdues.')) return;
    
    await abandonWorkoutAPI(currentWorkout.id);
    
    showToast('S√©ance abandonn√©e', 'info');
    cleanupWorkout();
    showView('dashboard');
}

// ===== NETTOYAGE DES DONN√âES =====
export function cleanupWorkout() {
    setCurrentWorkout(null);
    localStorage.removeItem('currentWorkout');
    
    if (workoutCheckInterval) {
        clearInterval(workoutCheckInterval);
        setWorkoutCheckInterval(null);
    }
    if (timerInterval) {
        clearInterval(timerInterval);
        setTimerInterval(null);
    }
    if (restTimerInterval) {
        clearInterval(restTimerInterval);
        setRestTimerInterval(null);
    }
    
    localStorage.removeItem('lastCompletedSetId');
    localStorage.removeItem('pendingSets');
    localStorage.removeItem('interExerciseRests');
    
    setLastExerciseEndTime(null);
    setInterExerciseRestTime(0);
    
    if (audioContext) {
        audioContext.close();
        setAudioContext(null);
    }
    
    // Nettoyer l'historique de session
    clearSessionHistory();
    localStorage.removeItem('currentSessionHistory');

    // Nettoyer les donn√©es de s√©ance guid√©e
    localStorage.removeItem('guidedWorkoutPlan');
    localStorage.removeItem('guidedWorkoutProgress');
    localStorage.removeItem('workoutType');
}

// ===== GESTION DES ACTIONS FATIGUE =====
export function reduceSetsRemaining() {
    // R√©duire le nombre de s√©ries restantes
    if (currentSetNumber > 0) {
        showToast('Programme adapt√© - R√©duction des s√©ries', 'info');
        dismissFatigueModal();
        finishExercise(); // Terminer l'exercice actuel
    }
}

export function switchToLighterExercise() {
    // Proposer un exercice plus l√©ger
    dismissFatigueModal();
    
    // Terminer l'exercice actuel
    if (currentSetNumber > 1) {
        finishExercise();
    }
    
    showToast('S√©lectionnez un exercice plus adapt√©', 'info');
}

export function dismissFatigueModal() {
    const modals = document.querySelectorAll('.fatigue-modal');
    modals.forEach(modal => modal.remove());
}

// ===== SYNCHRONISATION DES DONN√âES EN ATTENTE =====
export async function syncPendingSets() {
    const pendingSets = JSON.parse(localStorage.getItem('pendingSets') || '[]');
    if (pendingSets.length === 0) return;
    
    const successfullySynced = [];
    const failedSets = [];
    
    for (const set of pendingSets) {
        try {
            const result = await createSet(set);
            if (result) {
                successfullySynced.push(set);
            } else {
                failedSets.push(set);
            }
        } catch (error) {
            console.error('Erreur sync set:', error);
            failedSets.push(set);
        }
    }
    
    // Ne conserver que les sets qui ont √©chou√©
    if (failedSets.length > 0) {
        localStorage.setItem('pendingSets', JSON.stringify(failedSets));
    } else {
        localStorage.removeItem('pendingSets');
    }
    
    if (successfullySynced.length > 0) {
        showToast(`${successfullySynced.length} s√©rie(s) synchronis√©e(s)`, 'success');
    }
}

export async function syncInterExerciseRests() {
    const pendingRests = JSON.parse(localStorage.getItem('pendingInterExerciseRests') || '[]');
    
    if (pendingRests.length === 0) return;
    
    for (const rest of pendingRests) {
        const synced = await createRestPeriod(rest);
        if (synced) {
            // Retirer de la liste des repos en attente
            const remaining = pendingRests.filter(r => r !== rest);
            localStorage.setItem('pendingInterExerciseRests', JSON.stringify(remaining));
        }
    }
}

// ===== MISE √Ä JOUR DE L'INTERFACE DE TRAINING =====
export function updateTrainingInterface() {
    const container = document.getElementById('workoutInterface');
    if (!container || !currentWorkout) return;
    
    const isPaused = currentWorkout.status === 'paused';
    
    // Interface de base commune
    container.innerHTML = `
        <div class="workout-status">
            <h2>S√©ance ${getWorkoutTypeLabel()}</h2>
            <div class="status-badge status-${currentWorkout.status}">
                ${currentWorkout.status === 'started' ? 'üü¢ En cours' : '‚è∏Ô∏è En pause'}
            </div>
        </div>
        
        <div class="workout-controls">
            ${isPaused ? 
                `<button class="btn btn-primary" onclick="resumeWorkout()">
                    ‚ñ∂Ô∏è Reprendre
                </button>` :
                `<button class="btn btn-secondary" onclick="pauseWorkout()">
                    ‚è∏Ô∏è Pause
                </button>`
            }
            
            <button class="btn btn-primary" onclick="completeWorkout()">
                ‚úÖ Terminer
            </button>
            
            <button class="btn btn-secondary" onclick="abandonWorkout()">
                ‚ùå Abandonner
            </button>
        </div>
        
        <div class="sync-status">
            ${lastSyncTime ? 
                `Derni√®re sync: ${new Date(lastSyncTime).toLocaleTimeString()}` : 
                'En attente de synchronisation...'
            }
        </div>
        
        <div id="exerciseArea"></div>
        <div id="mainContent"></div>
    `;
    
    // LOGIQUE DE ROUTAGE SELON LE TYPE DE S√âANCE
    const guidedPlan = localStorage.getItem('guidedWorkoutPlan');
    const isAdaptiveType = currentWorkout.type === 'adaptive';
    
    if (isAdaptiveType && guidedPlan) {
        console.log('üéØ Mode adaptatif d√©tect√©');
        // Import direct et appel de la fonction
        import('./app-guided-workout.js').then(module => {
            if (module && module.startGuidedWorkout) {
                module.startGuidedWorkout(JSON.parse(guidedPlan));
            } else {
                console.error('Module guid√© incomplet');
                initializeFreeMode();
            }
        }).catch(error => {
            console.error('Erreur chargement mode guid√©:', error);
            showToast('Erreur chargement interface guid√©e', 'error');
            initializeFreeMode();
        });
    } else {
        initializeFreeMode();
    }
}

// ===== FONCTIONS HELPERS =====
function getWorkoutTypeLabel() {
    if (!currentWorkout) return 'Inconnue';
    
    switch(currentWorkout.type) {
        case 'adaptive': return 'Adaptative';
        case 'program': return 'Programme';
        case 'free': return 'Libre';
        default: return 'Libre';
    }
}

function initializeFreeMode() {
    // Charger l'interface de s√©lection d'exercices standard
    if (typeof window.showExerciseSelector === 'function') {
        window.showExerciseSelector();
    } else {
        // Import de secours si la fonction n'est pas disponible
        import('./app-exercises.js').then(module => {
            if (module.showExerciseSelector) {
                module.showExerciseSelector();
            } else {
                console.error('‚ùå Interface exercices non disponible');
                showToast('Erreur interface exercices', 'error');
            }
        }).catch(error => {
            console.error('‚ùå Erreur import module exercices:', error);
            showFallbackInterface();
        });
    }
}

function showFallbackInterface() {
    const exerciseArea = document.getElementById('exerciseArea');
    if (exerciseArea) {
        exerciseArea.innerHTML = `
            <div style="text-align: center; padding: 2rem;">
                <h3>‚ö†Ô∏è Erreur de chargement</h3>
                <p>L'interface n'a pas pu se charger correctement.</p>
                <button class="btn btn-primary" onclick="location.reload()">
                    üîÑ Recharger la page
                </button>
            </div>
        `;
    }
}

// ===== NAVIGATION VERS L'ENTRAINEMENT =====
export async function handleTrainingNavigation() {
    if (!currentUser) {
        showToast('Veuillez vous connecter', 'error');
        showProfileForm();
        return;
    }
    
    // V√©rifier s'il y a une session active
    const activeWorkout = await checkActiveWorkout();
    if (activeWorkout) {
        setCurrentWorkout(activeWorkout);
        showView('training');
        updateTrainingInterface();
    } else {
        showView('training');
    }
}

// ===== EXPORTS GLOBAUX (window) =====
window.handleTrainingNavigation = handleTrainingNavigation;
window.startWorkout = startWorkout;
window.pauseWorkout = pauseWorkout;
window.resumeWorkout = resumeWorkout;
window.completeWorkout = completeWorkout;
window.abandonWorkout = abandonWorkout;
window.reduceSetsRemaining = reduceSetsRemaining;
window.switchToLighterExercise = switchToLighterExercise;
window.dismissFatigueModal = dismissFatigueModal;
--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\frontend\index.html ---
--- Nom du fichier: index.html ---
--- Contenu ---
<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Fitness Coach</title>
    <link rel="manifest" href="/manifest.json">
    <meta name="theme-color" content="#2563eb">
    <link rel="stylesheet" href="styles.css">
    <link rel="icon" href="data:,">
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>
    <script src="https://d3js.org/d3.v7.min.js"></script>
</head>
<body>
    <!-- Header -->
    <div class="header">
        <div class="header-content">
            <div class="logo">Fitness Coach</div>
            <div class="user-avatar" id="userInitial" style="display: none;"></div>
        </div>
    </div>

    <!-- Progress Bar pour Onboarding -->
    <div class="progress-container" id="progressContainer" style="display: none;">
        <div class="progress-bar">
            <div class="progress-fill" id="progressBar"></div>
        </div>
    </div>

    <!-- Main Container -->
    <div class="container">
        <!-- Onboarding -->
        <div class="onboarding active" id="onboarding">
            <!-- √âtape 1: Informations personnelles -->
            <div class="onboarding-step active" id="step1">
                <h2>Bienvenue ! üëã</h2>
                <p style="color: var(--gray); margin-bottom: 2rem;">Commen√ßons par faire connaissance</p>
                
                <div class="form-group">
                    <label for="userName">Votre nom</label>
                    <input type="text" id="userName" placeholder="John Doe" class="form-input">
                </div>
                
                <div class="form-group">
                    <label for="userBirthDate">Date de naissance</label>
                    <input type="date" id="userBirthDate" class="form-input" max="">
                </div>
                
                <div class="form-group">
                    <label for="userHeight">Taille (cm)</label>
                    <input type="number" id="userHeight" min="120" max="250" placeholder="175" class="form-input">
                </div>

                <div class="form-group">
                    <label for="userWeight">Poids (kg)</label>
                    <input type="number" id="userWeight" min="30" max="300" step="0.5" placeholder="75" class="form-input">
                </div>
                
                <div class="form-group">
                    <label for="experienceLevel">Niveau d'exp√©rience</label>
                    <select id="experienceLevel" class="form-input">
                        <option value="">S√©lectionnez votre niveau</option>
                        <option value="d√©butant">D√©butant (moins de 6 mois)</option>
                        <option value="interm√©diaire">Interm√©diaire (6 mois - 2 ans)</option>
                        <option value="avanc√©">Avanc√© (2-5 ans)</option>
                        <option value="√©lite">Elite (5+ ans)</option>
                    </select>
                </div>
                
                <button class="btn" onclick="nextStep()">
                    Continuer
                    <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                    </svg>
                </button>
            </div>

            <!-- √âtape 2: Objectifs -->
            <div class="onboarding-step" id="step2">
                <h2>Vos objectifs üéØ</h2>
                <p style="color: var(--gray); margin-bottom: 2rem;">Que souhaitez-vous accomplir ?</p>
                
                <div class="chip-group">
                    <div class="chip" data-goal="force" onclick="toggleGoal(this)">üí™ Force</div>
                    <div class="chip" data-goal="hypertrophie" onclick="toggleGoal(this)">ü¶æ Masse musculaire</div>
                    <div class="chip" data-goal="cardio" onclick="toggleGoal(this)">üèÉ Cardio</div>
                    <div class="chip" data-goal="perte_de_poids" onclick="toggleGoal(this)">‚öñÔ∏è Perte de poids</div>
                    <div class="chip" data-goal="endurance" onclick="toggleGoal(this)">üîã Endurance</div>
                    <div class="chip" data-goal="flexibility" onclick="toggleGoal(this)">ü§∏ Souplesse</div>
                </div>
                
                <div style="display: flex; gap: 1rem; margin-top: 2rem;">
                    <button class="btn btn-secondary" onclick="prevStep()">
                        <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                        </svg>
                        Retour
                    </button>
                    <button class="btn" onclick="nextStep()">
                        Continuer
                        <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                        </svg>
                    </button>
                </div>
            </div>
<!-- √âtape 3: √âquipement de base -->
<div class="onboarding-step" id="step3">
    <h2>Votre √©quipement üèãÔ∏è</h2>
    <p style="color: var(--gray); margin-bottom: 2rem;">S√©lectionnez ce que vous avez √† disposition</p>
    
    <div class="equipment-grid-square">
        <div class="equipment-card" data-equipment="halteres" onclick="toggleEquipment(this)">
            <svg width="48" height="48" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4"/>
            </svg>
            <div>Halt√®res</div>
        </div>
        
        <div class="equipment-card" data-equipment="barbell" onclick="toggleEquipment(this)">
            <svg width="48" height="48" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12h18M8 6h8M7 18h10"/>
            </svg>
            <div>Barres & Disques</div>
        </div>
        
        <div class="equipment-card" data-equipment="elastiques" onclick="toggleEquipment(this)">
            <svg width="48" height="48" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"/>
            </svg>
            <div>√âlastiques</div>
        </div>
        
        <div class="equipment-card" data-equipment="bench" onclick="toggleEquipment(this)">
            <svg width="48" height="48" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h18v6H3zM3 12h18v9H3z"/>
            </svg>
            <div>Banc</div>
        </div>
        
        <div class="equipment-card" data-equipment="barre_traction" onclick="toggleEquipment(this)">
            <svg width="48" height="48" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h18M5 3v9m14-9v9"/>
            </svg>
            <div>Barre de traction</div>
        </div>
        
        <div class="equipment-card" data-equipment="kettlebell" onclick="toggleEquipment(this)">
            <svg width="48" height="48" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <circle cx="12" cy="15" r="7" stroke-width="2"/>
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8V4m-2 4h4"/>
            </svg>
            <div>Kettlebells</div>
        </div>
    </div>
    
    <div style="display: flex; gap: 1rem; margin-top: 2rem;">
        <button class="btn btn-secondary" onclick="prevStep()">
            <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
            </svg>
            Retour
        </button>
        <button class="btn" onclick="nextStep()">
            Continuer
            <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
            </svg>
        </button>
    </div>
</div>

<!-- √âtape 4: Configuration d√©taill√©e -->
<div class="onboarding-step" id="step4">
    <h2>Configuration d√©taill√©e üîß</h2>
    <p style="color: var(--gray); margin-bottom: 2rem;">Pr√©cisez votre √©quipement</p>
    
    <div id="detailedEquipmentConfig">
        <!-- Contenu g√©n√©r√© dynamiquement -->
    </div>
    
    <div id="equipmentProgress" style="display: none;">0 / 0 configur√©s</div>
    
    <div style="display: flex; gap: 1rem; margin-top: 2rem;">
        <button class="btn btn-secondary" onclick="prevStep()">
            <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
            </svg>
            Retour
        </button>
        <button class="btn" onclick="nextStep()">
            Valider
            <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
            </svg>
        </button>
    </div>
</div>

            <!-- √âtape 5: R√©capitulatif -->
            <div class="onboarding-step" id="step5">
                <h2>R√©capitulatif üìã</h2>
                <p style="color: var(--gray); margin-bottom: 2rem;">V√©rifiez vos informations</p>
                
                <div class="profile-summary" id="profileSummary">
                    <!-- Contenu g√©n√©r√© dynamiquement -->
                </div>
                
                <div style="display: flex; gap: 1rem; margin-top: 2rem;">
                    <button class="btn btn-secondary" onclick="prevStep()">
                        <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                        </svg>
                        Retour
                    </button>
                    <button class="btn btn-primary" onclick="saveUser()">
                        Commencer l'aventure !
                        <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                        </svg>
                    </button>
                </div>
            </div>
        </div>

        <!-- Dashboard -->
        <div class="view" id="dashboard">
            <h1 id="welcomeMessage">Bonjour !</h1>
            
            <div class="dashboard-grid">
                <div class="stat-card">
                    <div class="stat-value" id="totalWorkouts">0</div>
                    <div class="stat-label">S√©ances totales</div>
                </div>
                <div class="stat-card">
                    <div class="stat-value" id="weekStreak">0</div>
                    <div class="stat-label">Semaines d'affil√©e</div>
                </div>
            </div>
            
            <div class="action-grid">
                <div class="action-card" onclick="window.startWorkout('free')">
                    <h3>üèÉ S√©ance libre</h3>
                    <p>Entra√Ænement sans programme</p>
                </div>
                <div class="action-card" onclick="showProgramGenerator()">
                    <h3>üìã Programme</h3>
                    <p>G√©n√©rer un programme</p>
                </div>
            </div>
            
            <div class="section-title">Historique r√©cent</div>
            <div id="workoutHistory" class="workout-history">
                <!-- Historique charg√© ici -->
            </div>
        </div>

        <!-- Entra√Ænement -->
        <div class="view" id="training">
            <h1>Entra√Ænement en cours</h1>
            <div class="training-controls">
                <button class="btn-icon" onclick="toggleSilentMode()" title="Mode silencieux">
                    <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z" clip-rule="evenodd"/>
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2"/>
                    </svg>
                </button>
            </div>
            <div id="workoutInterface">
                <!-- Interface g√©n√©r√©e dynamiquement -->
            </div>
        </div>
        <!-- G√©n√©rateur de programmes -->
        <div class="view" id="program-generator">
            <div class="program-header">
                <button class="btn-icon" onclick="showView('dashboard')" style="margin-bottom: 1rem;">
                    <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
                    </svg>
                    Retour
                </button>
            </div>
            <div id="mainContent"></div>
        </div>



<!-- Statistiques d√©taill√©es -->
<div class="view" id="stats">
    <div class="stats-container">
        <div class="stats-header">
            <h1>Statistiques d√©taill√©es</h1>
            <button class="btn-secondary" onclick="showView('dashboard')">
                <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
                </svg>
                Retour
            </button>
        </div>
        
        <!-- IMPORTANT: chartsContainer DOIT √™tre ICI, DANS stats-container -->
        <div id="chartsContainer" class="charts-container">
            <!-- 1. Progression par groupe musculaire -->
            <div class="chart-card">
                <div class="chart-header">
                    <h3>Progression par groupe musculaire</h3>
                    <div class="chart-controls">
                        <select id="muscleProgressionPeriod" class="chart-select" onchange="updateMuscleProgression()">
                            <option value="week">Semaine</option>
                            <option value="month" selected>Mois</option>
                            <option value="year">Ann√©e</option>
                        </select>
                    </div>
                </div>
                <div class="chart-wrapper">
                    <canvas id="muscleProgressionChart"></canvas>
                </div>
            </div>

            <!-- 2. √âtat de r√©cup√©ration musculaire -->
            <div class="chart-card">
                <div class="chart-header">
                    <h3>√âtat de r√©cup√©ration musculaire</h3>
                    <button class="btn-icon" onclick="refreshMuscleRecovery()">
                        <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
                        </svg>
                    </button>
                </div>
                <div class="chart-wrapper">
                    <canvas id="muscleRecoveryChart"></canvas>
                </div>
            </div>

            <!-- 3. Volume progressif (tonnage) -->
            <div class="chart-card">
                <div class="chart-header">
                    <h3>Volume d'entra√Ænement progressif</h3>
                    <div class="chart-controls">
                        <select id="volumePeriod" class="chart-select" onchange="updateVolumeChart()">
                            <option value="week">Semaine</option>
                            <option value="month" selected>Mois</option>
                        </select>
                    </div>
                </div>
                <div class="chart-wrapper">
                    <canvas id="muscleVolumeChart"></canvas>
                </div>
            </div>

            <!-- 4. Sunburst utilisation √©quipement -->
            <div class="chart-card">
                <div class="chart-header">
                    <h3>R√©partition par partie du corps</h3>
                    <div class="chart-controls">
                        <select id="bodyPartPeriod" class="chart-select" onchange="updateBodyPartDistribution()">
                            <option value="week">Semaine</option>
                            <option value="month" selected>Mois</option>
                            <option value="year">Ann√©e</option>
                        </select>
                    </div>
                </div>
                <div class="chart-wrapper" id="bodyPartSunburst">
                    <!-- D3.js sunburst sera inject√© ici -->
                </div>
            </div>

            <!-- 5. Pr√©diction de performance -->
            <div class="chart-card chart-card-wide">
                <div class="chart-header">
                    <h3>Pr√©diction de performance par muscle</h3>
                    <button class="btn-icon" onclick="updatePerformancePrediction()">
                        <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
                        </svg>
                    </button>
                </div>
                <div class="chart-wrapper">
                    <canvas id="performancePredictionChart"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

        <!-- Profil -->
        <div class="view" id="profile">
            <h1>Mon Profil</h1>
            <div class="profile-info">
                <!-- Informations g√©n√©r√©es dynamiquement -->
            </div>
            
            <div style="display: flex; flex-direction: column; gap: 1rem;">
                <button class="btn btn-danger" onclick="clearWorkoutHistory()">
                    <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                    </svg>
                    Supprimer l'historique
                </button>
                
                <button class="btn btn-danger" onclick="deleteProfile()" style="background: #dc2626; border-color: #dc2626;">
                    <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"></path>
                    </svg>
                    Supprimer mon profil
                </button>
                
                <button class="btn btn-secondary" onclick="logout()">
                    <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"></path>
                    </svg>
                    D√©connexion
                </button>
            </div>
        </div>
    </div>

    <!-- Welcome Screen -->
    <div class="view" id="welcome">
        <div class="welcome-container">
            <h1>üí™ Fitness Coach</h1>
            <p style="color: var(--gray); margin-bottom: 3rem;">Choisissez une option pour continuer</p>
            
            <button class="btn btn-primary" onclick="startNewProfile()">
                <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                </svg>
                Cr√©er un nouveau profil
            </button>
            
            <div class="profiles-section" style="margin-top: 3rem;">
                <h3 style="margin-bottom: 1.5rem;">Profils existants</h3>
                <div id="profilesList" class="profiles-list">
                    <!-- Charg√© dynamiquement -->
                </div>
            </div>
        </div>
    </div>

    <!-- Bottom Navigation -->
    <div class="bottom-nav" id="bottomNav" style="display: none;">
        <button class="nav-item active" onclick="showView('dashboard')">
            <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"></path>
            </svg>
            <span>Accueil</span>
        </button>
        <button class="nav-item" onclick="showView('stats')">
            <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
            </svg>
            <span>Stats</span>
        </button>
        <button class="nav-item" onclick="showView('exercises')">
            <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
            </svg>
            <span>Exercices</span>
        </button>
        <button class="nav-item" onclick="handleTrainingNavigation()">
            <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
            </svg>
            <span>S'entra√Æner</span>
        </button>
        <button class="nav-item" onclick="showView('profile')">
            <svg width="24" height="24" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
            </svg>
            <span>Profil</span>
        </button>
    </div>

    <script type="module">
        import './app-init.js';
        import './app-stats.js';
    </script>
    <script type="module" src="app-guided-workout.js"></script>
</body>
</html>
--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\frontend\manifest.json ---
--- Nom du fichier: manifest.json ---
--- Contenu ---
{
    "name": "Fitness Coach - Personal Trainer",
    "short_name": "Fitness Coach",
    "description": "Application de coaching fitness personnalis√©e avec suivi de performance et IA",
    "start_url": "/",
    "display": "standalone",
    "theme_color": "#3b82f6",
    "background_color": "#0f172a",
    "orientation": "portrait",
    "scope": "/",
    "lang": "fr",
    "categories": ["fitness", "health", "sports"],
    "icons": [
        {
            "src": "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 192 192'%3E%3Crect width='192' height='192' rx='24' fill='%233b82f6'/%3E%3Ctext x='50%25' y='50%25' text-anchor='middle' dy='.3em' fill='white' font-size='96' font-weight='bold'%3Eüí™%3C/text%3E%3C/svg%3E",
            "sizes": "192x192",
            "type": "image/svg+xml",
            "purpose": "any maskable"
        },
        {
            "src": "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3E%3Crect width='512' height='512' rx='64' fill='%233b82f6'/%3E%3Ctext x='50%25' y='50%25' text-anchor='middle' dy='.3em' fill='white' font-size='256' font-weight='bold'%3Eüí™%3C/text%3E%3C/svg%3E",
            "sizes": "512x512",
            "type": "image/svg+xml",
            "purpose": "any maskable"
        }
    ],
    "screenshots": [
        {
            "src": "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 540 720'%3E%3Crect width='540' height='720' fill='%230f172a'/%3E%3Ctext x='50%25' y='50%25' text-anchor='middle' dy='.3em' fill='%233b82f6' font-size='32' font-weight='bold'%3EFitness Coach%3C/text%3E%3C/svg%3E",
            "sizes": "540x720",
            "type": "image/svg+xml",
            "label": "Page d'accueil"
        }
    ],
    "shortcuts": [
        {
            "name": "Nouvelle s√©ance",
            "short_name": "S√©ance",
            "description": "D√©marrer une nouvelle s√©ance d'entra√Ænement",
            "url": "/?action=new-workout",
            "icons": [
                {
                    "src": "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 96 96'%3E%3Ctext x='50%25' y='50%25' text-anchor='middle' dy='.3em' font-size='64'%3EüèÉ%3C/text%3E%3C/svg%3E",
                    "sizes": "96x96"
                }
            ]
        },
        {
            "name": "Programme",
            "short_name": "Programme",
            "description": "Voir mon programme d'entra√Ænement",
            "url": "/?action=program",
            "icons": [
                {
                    "src": "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 96 96'%3E%3Ctext x='50%25' y='50%25' text-anchor='middle' dy='.3em' font-size='64'%3Eüìã%3C/text%3E%3C/svg%3E",
                    "sizes": "96x96"
                }
            ]
        }
    ],
    "prefer_related_applications": false
}
--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\frontend\offline.html ---
--- Nom du fichier: offline.html ---
--- Contenu ---
<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Fitness Coach - Hors ligne</title>
    <style>
        :root {
            --primary: #3b82f6;
            --dark: #0f172a;
            --gray: #64748b;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: var(--dark);
            color: white;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 2rem;
        }
        
        .offline-container {
            text-align: center;
            max-width: 400px;
        }
        
        .offline-icon {
            font-size: 5rem;
            margin-bottom: 2rem;
            filter: grayscale(50%);
        }
        
        h1 {
            font-size: 2rem;
            margin-bottom: 1rem;
            background: linear-gradient(135deg, var(--primary), #10b981);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }
        
        p {
            color: var(--gray);
            margin-bottom: 2rem;
            line-height: 1.5;
        }
        
        .btn {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 1rem 2rem;
            background: var(--primary);
            color: white;
            border: none;
            border-radius: 0.75rem;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            text-decoration: none;
            transition: all 0.3s ease;
        }
        
        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px -5px rgba(59, 130, 246, 0.5);
        }
        
        .tips {
            margin-top: 3rem;
            padding: 1.5rem;
            background: rgba(255, 255, 255, 0.05);
            border-radius: 0.75rem;
            text-align: left;
        }
        
        .tips h2 {
            font-size: 1.25rem;
            margin-bottom: 1rem;
        }
        
        .tips ul {
            list-style: none;
            color: var(--gray);
        }
        
        .tips li {
            margin-bottom: 0.5rem;
            padding-left: 1.5rem;
            position: relative;
        }
        
        .tips li::before {
            content: 'üí°';
            position: absolute;
            left: 0;
        }
    </style>
</head>
<body>
    <div class="offline-container">
        <div class="offline-icon">üì°</div>
        <h1>Vous √™tes hors ligne</h1>
        <p>Impossible de se connecter au serveur. V√©rifiez votre connexion internet et r√©essayez.</p>
        
        <button class="btn" onclick="window.location.reload()">
            <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"/>
            </svg>
            R√©essayer
        </button>
        
        <div class="tips">
            <h2>En attendant...</h2>
            <ul>
                <li>V√©rifiez votre connexion WiFi ou donn√©es mobiles</li>
                <li>Essayez de red√©marrer l'application</li>
                <li>Les donn√©es de vos s√©ances seront synchronis√©es d√®s que possible</li>
            </ul>
        </div>
    </div>
    
    <script>
        // R√©essayer automatiquement toutes les 30 secondes
        setInterval(() => {
            fetch('/').then(response => {
                if (response.ok) {
                    window.location.reload();
                }
            }).catch(() => {
                // Toujours hors ligne
            });
        }, 30000);
    </script>
</body>
</html>
--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\frontend\styles.css ---
--- Nom du fichier: styles.css ---
--- Contenu ---
/* ===== VARIABLES CSS ===== */
:root {
    --primary: #3b82f6;
    --primary-dark: #2563eb;
    --secondary: #10b981;
    --secondary-dark: #059669;
    --danger: #ef4444;
    --warning: #f59e0b;
    --dark: #0f172a;
    --dark-lighter: #1e293b;
    --gray: #64748b;
    --gray-light: #94a3b8;
    --light: #cbd5e1;
    --white: #ffffff;
    --radius: 0.75rem;
    --radius-sm: 0.375rem;
    --shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
    --shadow-lg: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
}

/* ===== RESET & BASE ===== */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Inter', sans-serif;
    background: linear-gradient(135deg, var(--dark) 0%, var(--dark-lighter) 50%, #334155 100%);
    color: var(--white);
    min-height: 100vh;
    font-size: 16px;
    line-height: 1.5;
    -webkit-font-smoothing: antialiased;
}

/* ===== HEADER ===== */
.header {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    background: rgba(15, 23, 42, 0.95);
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);
    padding: 1rem;
    z-index: 1000;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    box-shadow: var(--shadow);
}

.header-content {
    display: flex;
    justify-content: space-between;
    align-items: center;
    max-width: 480px;
    margin: 0 auto;
}

.logo {
    font-size: 1.5rem;
    font-weight: 700;
    background: linear-gradient(135deg, var(--primary), var(--secondary));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
}

.user-avatar {
    width: 44px;
    height: 44px;
    background: linear-gradient(135deg, var(--primary), var(--secondary));
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: 600;
    color: white;
    box-shadow: var(--shadow);
    border: 2px solid rgba(255, 255, 255, 0.1);
}

/* ===== CONTAINER ===== */
.container {
    max-width: 480px;
    margin: 0 auto;
    padding: 80px 1rem 100px;
    min-height: 100vh;
}

/* ===== PROGRESS BAR ===== */
.progress-container {
    position: fixed;
    top: 73px;
    left: 0;
    right: 0;
    background: rgba(15, 23, 42, 0.95);
    padding: 0.5rem 1rem;
    backdrop-filter: blur(10px);
    z-index: 999;
}

.progress-bar {
    height: 4px;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 2px;
    overflow: hidden;
}

.progress-fill {
    height: 100%;
    background: linear-gradient(90deg, var(--primary), var(--secondary));
    border-radius: 2px;
    transition: width 0.3s ease;
    width: 0%;
}

/* ===== BUTTONS ===== */
.btn {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 1rem 2rem;
    background: linear-gradient(135deg, var(--primary), var(--primary-dark));
    color: white;
    border: none;
    border-radius: var(--radius);
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    text-decoration: none;
    box-shadow: var(--shadow);
}

.btn:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-lg);
}

.btn:active {
    transform: translateY(0);
}

.btn-secondary {
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
}

.btn-secondary:hover {
    background: rgba(255, 255, 255, 0.15);
}

.btn-primary {
    background: linear-gradient(135deg, var(--secondary), var(--secondary-dark));
}

/* ===== FORMS ===== */
.form-group {
    margin-bottom: 1.5rem;
}

.form-group label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: 500;
    color: var(--light);
}

.form-input {
    width: 100%;
    padding: 1rem;
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: var(--radius);
    color: white;
    font-size: 1rem;
    transition: all 0.3s ease;
}

.form-input:focus {
    outline: none;
    border-color: var(--primary);
    background: rgba(255, 255, 255, 0.08);
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
}

.form-input::placeholder {
    color: var(--gray);
}

select.form-input {
    appearance: none;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='20' height='20' viewBox='0 0 20 20' fill='%2394a3b8'%3E%3Cpath fill-rule='evenodd' d='M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z' clip-rule='evenodd'/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: right 1rem center;
    padding-right: 3rem;
}

/* ===== ONBOARDING ===== */
.onboarding {
    display: none;
}

.onboarding.active {
    display: block;
}

.onboarding-step {
    display: none;
    animation: fadeIn 0.3s ease;
}

.onboarding-step.active {
    display: block;
}

.onboarding-step h2 {
    font-size: 2rem;
    margin-bottom: 0.5rem;
}

/* ===== CHIPS ===== */
.chip-group {
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem;
}

.chip {
    padding: 0.75rem 1.25rem;
    background: rgba(255, 255, 255, 0.1);
    border: 2px solid transparent;
    border-radius: 9999px;
    cursor: pointer;
    transition: all 0.3s ease;
    font-weight: 500;
    backdrop-filter: blur(10px);
}

.chip:hover {
    background: rgba(255, 255, 255, 0.15);
    transform: translateY(-1px);
}

.chip.selected {
    background: var(--primary);
    border-color: var(--primary-dark);
    box-shadow: 0 0 15px rgba(59, 130, 246, 0.4);
}

/* ===== EQUIPMENT CARDS ===== */
.equipment-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 1rem;
    margin-bottom: 2rem;
}

.equipment-card {
    padding: 1.5rem;
    background: rgba(255, 255, 255, 0.05);
    border: 2px solid transparent;
    border-radius: var(--radius);
    text-align: center;
    cursor: pointer;
    transition: all 0.3s ease;
    backdrop-filter: blur(10px);
}

.equipment-card:hover {
    background: rgba(255, 255, 255, 0.1);
    transform: translateY(-2px);
}

.equipment-card.selected {
    background: rgba(59, 130, 246, 0.2);
    border-color: var(--primary);
    box-shadow: 0 0 20px rgba(59, 130, 246, 0.3);
}

.equipment-card svg {
    width: 48px;
    height: 48px;
    margin-bottom: 0.5rem;
    stroke: var(--primary);
}

.equipment-card.selected svg {
    stroke: white;
}

/* ===== VIEWS ===== */
.view {
    display: none !important;
}

.view.active {
    display: block !important;
    animation: fadeIn 0.3s ease;
}



/* ===== DASHBOARD ===== */
.dashboard-grid {
    display: grid;
    gap: 1.5rem;
    margin-bottom: 2rem;
    width: 100%;
    overflow-x: hidden;
}

.muscle-status {
    width: 100%;
    box-sizing: border-box;
}

.stat-card {
    background: rgba(255, 255, 255, 0.05);
    padding: 1.5rem;
    border-radius: var(--radius);
    text-align: center;
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
}

.stat-value {
    font-size: 2rem;
    font-weight: 700;
    background: linear-gradient(135deg, var(--primary), var(--secondary));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
}

.stat-label {
    color: var(--gray-light);
    font-size: 0.875rem;
    margin-top: 0.25rem;
}

.action-grid {
    display: grid;
    gap: 1rem;
}

.action-card {
    background: linear-gradient(135deg, var(--primary), var(--primary-dark));
    padding: 2rem;
    border-radius: var(--radius);
    text-align: center;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: var(--shadow);
}

.action-card:hover {
    transform: translateY(-3px);
    box-shadow: var(--shadow-lg);
}

.action-card h3 {
    font-size: 1.25rem;
    margin-bottom: 0.5rem;
}

.action-card p {
    opacity: 0.9;
    font-size: 0.875rem;
}

/* ===== BOTTOM NAVIGATION ===== */
.bottom-nav {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    background: rgba(15, 23, 42, 0.95);
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);
    display: flex;
    justify-content: space-around;
    padding: 0.5rem 0;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
    z-index: 1000;
}

.nav-item {
    flex: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.25rem;
    padding: 0.75rem 0;
    background: none;
    border: none;
    color: var(--gray);
    cursor: pointer;
    transition: all 0.3s ease;
}

.nav-item svg {
    width: 24px;
    height: 24px;
}

.nav-item span {
    font-size: 0.75rem;
}

.nav-item.active,
.nav-item:hover {
    color: var(--primary);
}

/* ===== PROFILE SUMMARY ===== */
.profile-summary {
    background: rgba(255, 255, 255, 0.05);
    padding: 1.5rem;
    border-radius: var(--radius);
    line-height: 1.8;
}

.profile-summary p {
    margin-bottom: 0.5rem;
}

.profile-summary strong {
    color: var(--primary);
}

/* ===== ANIMATIONS ===== */
@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

@keyframes slideIn {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* ===== TOAST NOTIFICATIONS ===== */
.toast {
    position: fixed;
    top: 100px;
    right: 1rem;
    padding: 1rem 1.5rem;
    background: var(--dark-lighter);
    border-radius: var(--radius);
    box-shadow: var(--shadow-lg);
    transform: translateX(400px);
    transition: transform 0.3s ease;
    z-index: 2000;
    border: 1px solid rgba(255, 255, 255, 0.1);
}

.toast.show {
    transform: translateX(0);
}

.toast-success {
    border-left: 4px solid var(--secondary);
}

.toast-error {
    border-left: 4px solid var(--danger);
}

.toast-info {
    border-left: 4px solid var(--primary);
}

/* ===== RESPONSIVE ===== */
@media (max-width: 768px) {
    .container {
        padding: 70px 0.75rem 90px;
    }
    
    .btn {
        padding: 0.875rem 1.5rem;
    }
}

/* ===== WELCOME SCREEN ===== */
.view#welcome {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    display: none;
    align-items: center;
    justify-content: center;
    background: linear-gradient(135deg, var(--dark) 0%, var(--dark-lighter) 50%, #334155 100%);
    z-index: 2000;
}

.view#welcome.active {
    display: flex !important;
}

.welcome-container {
    max-width: 500px;
    width: 90%;
    text-align: center;
    padding: 2rem;
    animation: slideIn 0.5s ease;
}

.welcome-container h1 {
    font-size: 3rem;
    margin-bottom: 1rem;
}

.profiles-section {
    margin-top: 3rem;
    width: 100%;
}

.profiles-list {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    max-height: 300px;
    overflow-y: auto;
}

.profile-card {
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: var(--radius);
    padding: 1rem 1.5rem;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.profile-card:hover {
    background: rgba(255, 255, 255, 0.08);
    border-color: var(--primary);
    transform: translateX(5px);
}

.profile-card .profile-info h4 {
    margin: 0;
    font-size: 1.1rem;
}

.profile-card .profile-info p {
    margin: 0.25rem 0 0;
    font-size: 0.875rem;
    color: var(--gray);
}

/* ===== AJOUTS CSS POUR L'√âQUIPEMENT (votre code existant) ===== */

/* Configuration √©quipement */
.equipment-item-row {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 1rem;
    padding: 0.5rem;
    border-radius: var(--radius);
    transition: background 0.2s;
}

.equipment-item-row:hover {
    background: rgba(255, 255, 255, 0.03);
}

.count-input {
    width: 80px;
    padding: 0.5rem;
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: var(--radius-sm);
    color: white;
    text-align: center;
    transition: all 0.3s ease;
}

.count-input:focus {
    outline: none;
    border-color: var(--primary);
    background: rgba(255, 255, 255, 0.08);
}

/* Grilles pour disques, halt√®res, kettlebells */
.disques-grid,
.dumbbells-grid,
.kettlebell-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
    gap: 1rem;
    margin-top: 1rem;
}

.disque-item,
.dumbbell-item,
.kettlebell-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem;
    background: rgba(255, 255, 255, 0.03);
    border: 1px solid rgba(255, 255, 255, 0.05);
    border-radius: var(--radius);
    transition: all 0.3s ease;
}

.disque-item:hover,
.dumbbell-item:hover,
.kettlebell-item:hover {
    background: rgba(255, 255, 255, 0.05);
    border-color: rgba(255, 255, 255, 0.1);
}

.disque-weight,
.dumbbell-weight,
.kettlebell-weight {
    font-weight: 600;
    color: var(--light);
    font-size: 0.875rem;
}

.count-input-small {
    width: 60px;
    padding: 0.375rem;
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: var(--radius-sm);
    color: white;
    text-align: center;
    font-size: 0.875rem;
    transition: all 0.3s ease;
}

.count-input-small:focus {
    outline: none;
    border-color: var(--primary);
    background: rgba(255, 255, 255, 0.08);
}

/* Items personnalis√©s */
.disque-item.custom,
.dumbbell-item.custom,
.kettlebell-item.custom {
    background: rgba(59, 130, 246, 0.1);
    border-color: rgba(59, 130, 246, 0.3);
}

.custom-weight-input {
    width: 80px;
    padding: 0.375rem;
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: var(--radius-sm);
    color: white;
    text-align: center;
    font-size: 0.875rem;
    transition: all 0.3s ease;
}

.custom-weight-input::placeholder {
    color: rgba(255, 255, 255, 0.5);
    font-size: 0.75rem;
}

/* √âlastiques */
.elastiques-list {
    margin-bottom: 1rem;
}

.elastique-item {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 0.75rem;
    background: rgba(255, 255, 255, 0.03);
    border: 1px solid rgba(255, 255, 255, 0.05);
    border-radius: var(--radius);
    margin-bottom: 0.5rem;
}

.elastique-color {
    width: 20px;
    height: 20px;
    border-radius: 50%;
    border: 2px solid rgba(255, 255, 255, 0.2);
}

.elastique-add {
    display: flex;
    gap: 0.5rem;
    align-items: center;
}

.btn-add {
    width: 40px;
    height: 40px;
    background: linear-gradient(135deg, var(--primary), var(--primary-dark));
    color: white;
    border: none;
    border-radius: 8px;
    font-size: 24px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
}

.btn-add:hover {
    transform: scale(1.1);
    box-shadow: 0 0 20px rgba(59, 130, 246, 0.4);
}

.btn-remove {
    margin-left: auto;
    width: 30px;
    height: 30px;
    padding: 0;
    background: rgba(239, 68, 68, 0.2);
    color: #ef4444;
    border: none;
    border-radius: 50%;
    font-size: 1.25rem;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
}

.btn-remove:hover {
    background: rgba(239, 68, 68, 0.3);
    transform: scale(1.1);
}

/* Lests */
.lest-section h5 {
    margin-top: 1rem;
    margin-bottom: 0.5rem;
    color: var(--light);
    font-size: 0.875rem;
    font-weight: 500;
}

.lest-inputs {
    display: flex;
    gap: 0.5rem;
    align-items: center;
    margin-bottom: 1rem;
}

/* Tags exercices */
.exercise-tags {
    display: flex;
    gap: 0.5rem;
    margin-top: 0.5rem;
    flex-wrap: wrap;
}

.tag {
    padding: 0.25rem 0.75rem;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 9999px;
    font-size: 0.75rem;
    font-weight: 500;
}

.tag-basic {
    background: rgba(59, 130, 246, 0.2);
    color: #60a5fa;
}

.tag-advanced {
    background: rgba(168, 85, 247, 0.2);
    color: #c084fc;
}

.tag-finition {
    background: rgba(251, 146, 60, 0.2);
    color: #fdba74;
}

/* Equipment Categories */
.equipment-categories {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
    gap: 16px;
    margin-bottom: 32px;
}

.equipment-category {
    position: relative;
    background: linear-gradient(135deg, #1a1a1a 0%, #2a2a2a 100%);
    border: 2px solid transparent;
    border-radius: 20px;
    padding: 24px;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    overflow: hidden;
}

.equipment-category::before {
    content: '';
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    background: linear-gradient(45deg, #3b82f6, #8b5cf6, #ec4899);
    border-radius: 20px;
    opacity: 1;
    z-index: -1;
}

.equipment-icon {
    width: 60px;
    height: 60px;
    margin-bottom: 12px;
}

.equipment-icon svg {
    width: 100%;
    height: 100%;
    stroke: #fff;
    filter: drop-shadow(0 0 20px rgba(59, 130, 246, 0.6));
}

.equipment-status {
    font-size: 12px;
    color: #64748b;
    transition: all 0.3s ease;
}

.equipment-name {
    font-size: 16px;
    font-weight: 600;
    margin-bottom: 4px;
}

.config-panel {
    background: #111;
    border-radius: 24px;
    padding: 32px;
    margin-bottom: 24px;
    animation: slideIn 0.5s forwards;
}

.config-header {
    display: flex;
    align-items: center;
    margin-bottom: 24px;
}

.config-icon {
    width: 48px;
    height: 48px;
    background: linear-gradient(135deg, #3b82f6, #8b5cf6);
    border-radius: 16px;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-right: 16px;
}

.config-icon svg {
    width: 28px;
    height: 28px;
    stroke: #fff;
}

.config-title {
    font-size: 24px;
    font-weight: 700;
}

.weight-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
    gap: 12px;
}

.weight-item {
    background: #1a1a1a;
    border: 2px solid #2a2a2a;
    border-radius: 16px;
    padding: 16px;
    text-align: center;
    transition: all 0.2s ease;
}

.weight-item:hover {
    border-color: #3b82f6;
    transform: scale(1.05);
}

.weight-value {
    font-size: 20px;
    font-weight: 700;
    margin-bottom: 8px;
}

.weight-input {
    width: 100%;
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 8px;
    padding: 8px;
    color: #fff;
    text-align: center;
    font-size: 14px;
    transition: all 0.2s ease;
}

.weight-input:focus {
    outline: none;
    border-color: #3b82f6;
    background: rgba(59, 130, 246, 0.1);
}

.add-custom {
    background: linear-gradient(135deg, #1a1a1a, #2a2a2a);
    border: 2px dashed #3b82f6;
    border-radius: 16px;
    padding: 16px;
    cursor: pointer;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 88px;
}

.add-custom:hover {
    background: rgba(59, 130, 246, 0.1);
    transform: scale(1.05);
}

/* Responsive */
@media (max-width: 768px) {
    .disques-grid,
    .dumbbells-grid,
    .kettlebell-grid {
        grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));
        gap: 0.75rem;
    }
    
    .elastique-add {
        flex-wrap: wrap;
    }
    
    .elastique-add input {
        flex: 1;
        min-width: 100px;
    }
}

/* Equipment Grid Square Layout */
.equipment-grid-square {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 1rem;
    margin-bottom: 2rem;
}

@media (min-width: 768px) {
    .equipment-grid-square {
        grid-template-columns: repeat(3, 1fr);
    }
}

/* Equipment Categories Grid for Step 4 */
.equipment-categories-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 16px;
    margin-bottom: 32px;
}

@media (min-width: 768px) {
    .equipment-categories-grid {
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        max-width: 600px;
        margin: 0 auto 32px;
    }
}

/* Improved config panels */
.config-panel {
    background: rgba(17, 17, 17, 0.8);
    border-radius: 24px;
    padding: 32px;
    margin-bottom: 24px;
    animation: slideIn 0.5s forwards;
}

.config-header {
    display: flex;
    align-items: center;
    margin-bottom: 24px;
}

.config-icon {
    width: 48px;
    height: 48px;
    background: linear-gradient(135deg, #3b82f6, #8b5cf6);
    border-radius: 16px;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-right: 16px;
}

/* Elastic bands input fix */
.band-input-group {
    display: grid;
    grid-template-columns: 80px 1fr 100px auto;
    gap: 12px;
    align-items: center;
    margin-top: 16px;
}

.band-color-input {
    width: 60px;
    height: 40px;
    border: none;
    border-radius: 8px;
    cursor: pointer;
}

.band-resistance-input {
    padding: 10px 16px;
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 8px;
    color: white;
    font-size: 16px;
}

.band-count-input {
    padding: 10px;
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 8px;
    color: white;
    text-align: center;
}

.band-item {
    display: flex;
    align-items: center;
    background: #1a1a1a;
    border-radius: 16px;
    padding: 16px;
    margin-bottom: 12px;
    gap: 16px;
}

.band-color {
    width: 40px;
    height: 40px;
    border-radius: 12px;
    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.2);
}

.band-info {
    flex: 1;
}

.band-resistance {
    font-size: 18px;
    font-weight: 600;
    margin-bottom: 4px;
}

.band-count {
    font-size: 14px;
    color: #64748b;
}

.band-remove {
    width: 36px;
    height: 36px;
    background: rgba(239, 68, 68, 0.1);
    border: 2px solid rgba(239, 68, 68, 0.2);
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.2s ease;
}

.band-remove:hover {
    background: rgba(239, 68, 68, 0.2);
    transform: scale(1.1);
}

/* Progress Summary */
#equipmentProgress {
    position: fixed;
    bottom: 100px;
    right: 24px;
    background: rgba(26, 26, 26, 0.95);
    border: 2px solid rgba(59, 130, 246, 0.3);
    border-radius: 20px;
    padding: 16px 24px;
    font-weight: 600;
    color: #3b82f6;
}

/* Barbell types */
.barbell-types {
    display: flex;
    flex-direction: column;
    gap: 12px;
    margin-bottom: 24px;
}

.checkbox-label {
    display: flex;
    align-items: center;
    padding: 12px;
    background: rgba(255, 255, 255, 0.03);
    border-radius: 12px;
    cursor: pointer;
    transition: all 0.2s ease;
}

.checkbox-label:hover {
    background: rgba(255, 255, 255, 0.05);
}

.checkbox-label input[type="checkbox"] {
    margin-right: 12px;
    width: 20px;
    height: 20px;
}

/* Bench Options */
.bench-options {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 16px;
}

.bench-option {
    background: #1a1a1a;
    border: 2px solid #2a2a2a;
    border-radius: 16px;
    padding: 20px;
    cursor: pointer;
    transition: all 0.2s ease;
    position: relative;
    overflow: hidden;
}

.bench-option.active {
    border-color: #3b82f6;
    background: rgba(59, 130, 246, 0.1);
}

.bench-option.active::before {
    content: '‚úì';
    position: absolute;
    top: 12px;
    right: 12px;
    width: 24px;
    height: 24px;
    background: #3b82f6;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 14px;
    font-weight: bold;
}

/* Exercise List */
.body-part-section {
    margin-bottom: 2rem;
}

.body-part-section h3 {
    font-size: 1.25rem;
    margin-bottom: 1rem;
    color: var(--primary);
}

.exercises-grid {
    display: grid;
    gap: 1rem;
}

.exercise-card {
    background: rgba(255, 255, 255, 0.05);
    padding: 1.25rem;
    border-radius: var(--radius);
    cursor: pointer;
    transition: all 0.3s ease;
    border: 1px solid transparent;
    word-break: break-word;
    overflow-wrap: break-word;
}

.exercise-card:hover {
    background: rgba(255, 255, 255, 0.08);
    border-color: rgba(255, 255, 255, 0.1);
    transform: translateX(4px);
}

.exercise-card h4 {
    font-size: 1rem;
    margin-bottom: 0.25rem;
}

.exercise-info {
    font-size: 0.875rem;
    color: var(--gray-light);
    margin-bottom: 0.5rem;
}

/* Equipment Grid Square Layout */
.equipment-grid-square {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 1rem;
    margin-bottom: 2rem;
}

@media (min-width: 768px) {
    .equipment-grid-square {
        grid-template-columns: repeat(3, 1fr);
    }
}

/* Workout Status */
.workout-status {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2rem;
    padding: 1.5rem;
    background: rgba(255, 255, 255, 0.05);
    border-radius: var(--radius);
}

.status-badge {
    padding: 0.5rem 1rem;
    border-radius: 9999px;
    font-weight: 600;
    font-size: 0.875rem;
}

.status-started {
    background: rgba(34, 197, 94, 0.2);
    color: #22c55e;
}

.status-paused {
    background: rgba(251, 146, 60, 0.2);
    color: #fb923c;
}

.workout-controls {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 1rem;
    margin-bottom: 2rem;
}

.sync-status {
    text-align: center;
    color: var(--gray);
    font-size: 0.875rem;
    padding: 1rem;
    background: rgba(255, 255, 255, 0.03);
    border-radius: var(--radius);
}

/* Exercise Selector */
.exercise-selector {
    margin-top: 2rem;
}

.exercise-list-selector {
    max-height: 400px;
    overflow-y: auto;
    margin-top: 1rem;
}

.exercise-group {
    margin-bottom: 1.5rem;
}

.exercise-group h4 {
    color: var(--primary);
    margin-bottom: 0.75rem;
    font-size: 1.1rem;
}

.exercise-option {
    background: rgba(255, 255, 255, 0.05);
    padding: 1rem;
    margin-bottom: 0.5rem;
    border-radius: var(--radius);
    cursor: pointer;
    transition: all 0.2s ease;
}

.exercise-option:hover {
    background: rgba(255, 255, 255, 0.1);
    transform: translateX(4px);
}

.exercise-equipment {
    font-size: 0.875rem;
    color: var(--gray-light);
    margin-top: 0.25rem;
}

/* Set Tracker */
.current-exercise {
    background: linear-gradient(135deg, var(--primary), var(--primary-dark));
    padding: 1.5rem;
    border-radius: var(--radius);
    margin-bottom: 2rem;
    text-align: center;
}

/* Set Tracker */
.set-tracker {
    background: rgba(255, 255, 255, 0.05);
    padding: 1.5rem;
    border-radius: var(--radius);
    margin-bottom: 2rem;
    max-width: 100%;
    overflow: hidden;
}

/* Set Tracker - Disposition verticale */
.set-input-grid-vertical {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    margin-bottom: 2rem;
}

.input-group {
    display: flex;
    flex-direction: column;
}

.input-group label {
    display: block;
    margin-bottom: 0.5rem;
    color: var(--light);
}

.weight-selector,
.reps-selector {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    max-width: 100%;
}

.btn-adjust {
    width: 60px;
    min-width: 60px;
    padding: 0.75rem 0.25rem;
    background: rgba(255, 255, 255, 0.1);
    border: none;
    color: white;
    border-radius: var(--radius);
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s ease;
    font-size: 0.875rem;
}

.weight-display,
.reps-display {
    flex: 1;
    text-align: center;
    font-size: 1.75rem;
    font-weight: 700;
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: var(--radius);
    color: white;
    padding: 0.5rem 0.25rem;
}

/* Effort Selectors verticaux */
.selector-group {
    display: flex;
    flex-direction: column;
    margin-bottom: 1rem;
}

.selector-group label {
    display: block;
    margin-bottom: 0.75rem;
    color: var(--light);
    font-weight: 500;
}

.input-group {
    display: flex;
    flex-direction: column;
}

.input-group label {
    display: block;
    margin-bottom: 0.5rem;
    color: var(--light);
}

.weight-selector,
.reps-selector {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    width: 100%;
}

.btn-adjust {
    width: 50px;
    min-width: 50px;
    padding: 0.75rem 0.5rem;
    background: rgba(255, 255, 255, 0.1);
    border: none;
    color: white;
    border-radius: var(--radius);
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s ease;
    font-size: 0.875rem;
}

.btn-adjust:hover {
    background: rgba(255, 255, 255, 0.2);
}

.weight-display,
.reps-display {
    flex: 1;
    min-width: 60px;
    text-align: center;
    font-size: 1.75rem;
    font-weight: 700;
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: var(--radius);
    color: white;
    padding: 0.5rem 0.25rem;
}

.input-group label {
    display: block;
    margin-bottom: 0.5rem;
    color: var(--light);
}

.weight-selector,
.reps-selector {
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.btn-adjust {
    width: 60px;
    padding: 0.75rem;
    background: rgba(255, 255, 255, 0.1);
    border: none;
    color: white;
    border-radius: var(--radius);
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s ease;
}

.btn-adjust:hover {
    background: rgba(255, 255, 255, 0.2);
}

.weight-display,
.reps-display {
    flex: 1;
    max-width: 120px;
    text-align: center;
    font-size: 2rem;
    font-weight: 700;
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: var(--radius);
    color: white;
    padding: 0.5rem;
}

/* Responsive pour grands √©crans */
@media (min-width: 768px) {
    .set-input-grid {
        max-width: 600px;
        margin: 0 auto 2rem;
    }
    
    .weight-selector,
    .reps-selector {
        max-width: 300px;
        margin: 0 auto;
    }
}

/* Effort Selectors */
.effort-selectors {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 2rem;
    margin-bottom: 2rem;
}

.selector-group label {
    display: block;
    margin-bottom: 0.75rem;
    color: var(--light);
    font-weight: 500;
}

.emoji-selector {
    display: flex;
    justify-content: space-between;
    gap: 0.5rem;
}

.emoji-option {
    font-size: 2rem;
    cursor: pointer;
    padding: 0.5rem;
    border-radius: var(--radius);
    transition: all 0.2s ease;
    opacity: 0.5;
}

.emoji-option:hover {
    opacity: 0.8;
    transform: scale(1.1);
}

.emoji-option.selected {
    opacity: 1;
    background: rgba(255, 255, 255, 0.1);
    transform: scale(1.15);
}

/* Fatigue colors */
#fatigueSelector .emoji-option[data-value="1"] { filter: hue-rotate(120deg); } /* Vert for√™t */
#fatigueSelector .emoji-option[data-value="2"] { filter: hue-rotate(90deg); }  /* Vert clair */
#fatigueSelector .emoji-option[data-value="3"] { filter: hue-rotate(200deg); } /* Bleu */
#fatigueSelector .emoji-option[data-value="4"] { filter: hue-rotate(30deg); }  /* Orange */
#fatigueSelector .emoji-option[data-value="5"] { filter: hue-rotate(0deg); }   /* Rouge */

/* Timers */
.set-timer, .rest-timer {
    text-align: center;
    margin-bottom: 1rem;
    font-size: 1.1rem;
    color: var(--primary);
}

.rest-timer {
    background: rgba(16, 185, 129, 0.1);
    border: 2px solid rgba(16, 185, 129, 0.3);
    border-radius: var(--radius);
    padding: 1.5rem;
    margin: 1.5rem 0;
    text-align: center;
}

.rest-timer-label {
    font-size: 0.875rem;
    color: var(--gray-light);
    margin-bottom: 0.5rem;
}

.rest-timer-display {
    font-size: 2.5rem;
    font-weight: 700;
    font-family: monospace;
    color: var(--secondary);
    margin-bottom: 1rem;
    transition: all 0.3s ease;
}

.rest-timer-display.warning {
    animation: pulse 1s infinite;
}

.btn-start-set {
    width: 100%;
    padding: 1.5rem;
    font-size: 1.25rem;
    background: linear-gradient(135deg, var(--secondary), var(--secondary-dark));
    margin-bottom: 2rem;
    animation: pulse 2s infinite;
}

.rest-timer.active {
    border-color: var(--secondary);
    background: rgba(16, 185, 129, 0.15);
}

.rest-timer-mandatory {
    background: rgba(239, 68, 68, 0.1);
    border-color: rgba(239, 68, 68, 0.3);
}

.btn-continue-rest {
    margin-top: 1rem;
    animation: pulse 2s infinite;
}

.set-actions {
    display: grid;
    grid-template-columns: 2fr 2fr 1fr;
    gap: 0.75rem;
    margin-top: 1.5rem;
}

.btn-secondary.btn-sm {
    font-size: 0.875rem;
    padding: 0.75rem 0.5rem;
}

/* Indicateur de repos inter-exercices */
.inter-exercise-rest-indicator {
    background: rgba(168, 85, 247, 0.1);
    border: 2px solid rgba(168, 85, 247, 0.3);
    border-radius: var(--radius);
    padding: 1rem;
    margin-bottom: 1rem;
    text-align: center;
}

.inter-exercise-rest-time {
    font-size: 1.25rem;
    font-weight: 600;
    color: #a855f7;
}

@keyframes pulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.05); }
}

@keyframes pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.1); }
    100% { transform: scale(1); }
}

.btn-sm {
    padding: 0.5rem 1rem;
    font-size: 0.875rem;
}

.training-controls {
    position: absolute;
    top: 1rem;
    right: 1rem;
}

.btn-icon {
    width: 44px;
    height: 44px;
    padding: 0;
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
}

.btn-icon:hover {
    background: rgba(255, 255, 255, 0.2);
    transform: scale(1.1);
}

.rest-info {
    margin-top: 1rem;
    font-size: 0.875rem;
    color: var(--gray-light);
}

#setTimer, #restTime {
    font-family: monospace;
    font-size: 1.25rem;
    color: var(--secondary);
}

.weight-info {
    font-size: 0.875rem;
    color: var(--gray-light);
    text-align: center;
    margin-top: 0.25rem;
}

/* Fix exercise area */
#exerciseArea {
    margin-top: 2rem;
}

.set-actions {
    display: grid;
    grid-template-columns: 2fr 1fr;
    gap: 1rem;
}

/* Previous Sets */
.previous-sets {
    margin-bottom: 2rem;
}


.exercise-separator {
    margin: 1.5rem 0;
    position: relative;
}

.exercise-change-indicator {
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: var(--radius);
    padding: 0.75rem 1rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.exercise-name {
    font-weight: 600;
    color: var(--white);
}

.body-part-badge {
    padding: 0.25rem 0.75rem;
    border-radius: 9999px;
    font-size: 0.75rem;
    font-weight: 600;
    color: white;
    text-transform: uppercase;
    letter-spacing: 0.05em;
}

.set-history-item {
    border-left-width: 4px;
    border-left-style: solid;
    transition: all 0.2s ease;
}

.set-history-item:hover {
    transform: translateX(4px);
    background: rgba(255, 255, 255, 0.05);
}

.rest-history-item {
    background: linear-gradient(135deg, rgba(16, 185, 129, 0.05), rgba(16, 185, 129, 0.1));
    border-left: 3px solid var(--secondary);
    padding: 0.75rem 1rem;
    margin: 0.75rem 0;
    border-radius: var(--radius);
    position: relative;
    overflow: hidden;
}

.rest-history-item::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 3px;
    height: 100%;
    background: var(--secondary);
    animation: pulse 2s infinite;
}

.rest-indicator {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--secondary);
    font-size: 0.875rem;
}

.rest-icon {
    font-size: 1.25rem;
}

.btn-skip-rest {
    margin-top: 1rem;
    width: 100%;
}

.set-number {
    font-weight: 600;
    color: var(--primary);
}

.set-details {
    display: flex;
    align-items: center;
    gap: 1rem;
}

.fatigue-badge {
    padding: 0.25rem 0.75rem;
    border-radius: 9999px;
    font-size: 0.75rem;
    font-weight: 600;
}

.fatigue-1,
.fatigue-2,
.fatigue-3 {
    background: rgba(34, 197, 94, 0.2);
    color: #22c55e;
}

.fatigue-4,
.fatigue-5,
.fatigue-6 {
    background: rgba(251, 146, 60, 0.2);
    color: #fb923c;
}

.fatigue-7,
.fatigue-8 {
    background: rgba(239, 68, 68, 0.2);
    color: #ef4444;
}

.fatigue-9,
.fatigue-10 {
    background: rgba(220, 38, 38, 0.3);
    color: #dc2626;
}

/* Effort colors - sans filter pour √©viter les probl√®mes */
#effortSelector .emoji-option[data-value="1"] { 
    color: #22c55e; /* Vert */
}
#effortSelector .emoji-option[data-value="2"] { 
    color: #84cc16; /* Vert clair */
}
#effortSelector .emoji-option[data-value="3"] { 
    color: #3b82f6; /* Bleu */
}
#effortSelector .emoji-option[data-value="4"] { 
    color: #f97316; /* Orange */
}
#effortSelector .emoji-option[data-value="5"] { 
    color: #ef4444; /* Rouge */
}

.set-duration {
    padding: 0.25rem 0.5rem;
    background: rgba(59, 130, 246, 0.2);
    color: #60a5fa;
    border-radius: 9999px;
    font-size: 0.75rem;
    font-weight: 600;
    margin: 0 0.5rem;
}

/* Workout History */
.section-title {
    font-size: 1.25rem;
    font-weight: 600;
    margin: 2rem 0 1rem;
    color: var(--primary);
}

.workout-history {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
}

.workout-history-item {
    background: rgba(255, 255, 255, 0.05);
    padding: 1rem;
    border-radius: var(--radius);
    display: flex;
    gap: 1rem;
    transition: all 0.2s ease;
}

.workout-history-item:hover {
    background: rgba(255, 255, 255, 0.08);
    transform: translateX(4px);
}

.workout-date {
    font-weight: 600;
    color: var(--primary);
    min-width: 80px;
}

.workout-details {
    flex: 1;
}

.workout-type {
    font-weight: 500;
    margin-bottom: 0.25rem;
}

.workout-stats {
    font-size: 0.875rem;
    color: var(--gray-light);
    margin-bottom: 0.25rem;
}

.workout-exercises {
    font-size: 0.75rem;
    color: var(--gray);
}

.no-history {
    text-align: center;
    color: var(--gray);
    padding: 2rem;
}

.muscle-heatmap {
    background: rgba(255, 255, 255, 0.05);
    padding: 1.5rem;
    border-radius: var(--radius);
    margin: 1rem 0;
}

.muscle-heatmap h4 {
    margin-bottom: 1rem;
    color: var(--primary);
}

.muscle-bars {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
}

.muscle-bar {
    display: flex;
    align-items: center;
    gap: 1rem;
}

.muscle-name {
    min-width: 100px;
    font-size: 0.875rem;
}

.muscle-progress {
    flex: 1;
    height: 20px;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 10px;
    overflow: hidden;
}

.muscle-fill {
    height: 100%;
    transition: width 0.3s ease;
}

.muscle-warning {
    margin-top: 1rem;
    color: #f97316;
    font-size: 0.875rem;
    text-align: center;
}

/* Styles pour le r√©sum√© du profil */
.summary-sections {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
}

.summary-section {
    background: rgba(255, 255, 255, 0.05);
    padding: 1.5rem;
    border-radius: var(--radius);
    border: 1px solid rgba(255, 255, 255, 0.1);
}

.summary-title {
    font-size: 1.1rem;
    margin-bottom: 1rem;
    color: var(--primary);
}

.summary-row {
    display: flex;
    justify-content: space-between;
    padding: 0.5rem 0;
    border-bottom: 1px solid rgba(255, 255, 255, 0.05);
}

.summary-label {
    color: var(--gray-light);
}

.summary-value {
    font-weight: 600;
    color: var(--light);
}

.goal-badge {
    display: inline-block;
    padding: 0.5rem 1rem;
    background: var(--primary);
    color: white;
    border-radius: var(--radius-sm);
    margin-right: 0.5rem;
    margin-bottom: 0.5rem;
    font-size: 0.9rem;
}

.equipment-summary-item {
    margin-bottom: 1rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid rgba(255, 255, 255, 0.05);
}

.equipment-detail {
    margin-top: 0.5rem;
    padding-left: 1rem;
    color: var(--gray-light);
    font-size: 0.9rem;
}


/* Tooltip pour le sunburst */
.sunburst-tooltip {
    position: absolute;
    text-align: center;
    padding: 8px 12px;
    font-size: 12px;
    background: rgba(15, 23, 42, 0.95);
    color: white;
    border: 1px solid rgba(59, 130, 246, 0.3);
    border-radius: 6px;
    pointer-events: none;
    z-index: 1000;
}


#equipmentSunburst svg {
    width: 100%;
    height: 100%;
}


/* ===== FIX DEFINITIF POUR LES GRAPHIQUES STATS ===== */

/* Override du container g√©n√©ral pour la page stats */
.view#stats .container {
    max-width: 100%;
    padding: 80px 2rem 100px;
}

/* Container sp√©cifique pour les stats */
.view#stats .stats-container {
    width: 100%;
    max-width: 1400px;
    margin: 0 auto;
    padding: 0;
}

/* Grid responsive avec colonnes adaptatives */
.view#stats .charts-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));
    gap: 2rem;
    margin: 2rem 0;
}

/* Cartes de graphiques plus grandes */
.view#stats .chart-card {
    background: rgba(255, 255, 255, 0.05);
    border-radius: var(--radius);
    padding: 1.5rem;
    min-height: 500px;
    display: flex;
    flex-direction: column;
}

/* Wrapper des graphiques */
.view#stats .chart-wrapper {
    flex: 1;
    position: relative;
    margin-top: 1rem;
    min-height: 400px;
}

/* Canvas pleine taille */
.view#stats .chart-wrapper canvas {
    width: 100% !important;
    height: 100% !important;
}

/* Header des graphiques */
.view#stats .chart-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
}

/* Graphiques larges sur toute la largeur */
.view#stats .chart-card-wide {
    grid-column: 1 / -1;
}

/* Mobile - 1 colonne */
@media (max-width: 768px) {
    .view#stats .charts-container {
        grid-template-columns: 1fr;
        gap: 1.5rem;
    }
    
    .view#stats .chart-card {
        min-height: 400px;
    }
}

/* Tablettes - 2 colonnes forc√©es */
@media (min-width: 769px) and (max-width: 1200px) {
    .view#stats .charts-container {
        grid-template-columns: repeat(2, 1fr);
    }
}

/* Desktop large - 2 colonnes avec plus d'espace */
@media (min-width: 1201px) {
    .view#stats .charts-container {
        grid-template-columns: repeat(2, 1fr);
        gap: 3rem;
    }
}

/* ===== STYLE POUR LES SUGGESTIONS DE POIDS ===== */
.suggestion-hint {
    font-size: 0.9em;
    color: var(--primary);
    margin-top: 4px;
    font-style: italic;
    opacity: 0.9;
}

/* ===== MODAL DE FATIGUE ===== */
.fatigue-modal {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.8);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 3000;
    animation: fadeIn 0.3s ease;
}

.fatigue-content {
    background: var(--dark-lighter);
    border: 2px solid rgba(239, 68, 68, 0.5);
    border-radius: var(--radius);
    padding: 2rem;
    max-width: 400px;
    width: 90%;
    text-align: center;
    animation: slideIn 0.3s ease;
}

.fatigue-content h3 {
    color: #ef4444;
    margin-bottom: 1rem;
}

.fatigue-content p {
    color: var(--light);
    margin-bottom: 2rem;
}

.fatigue-options {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.fatigue-options button {
    padding: 1rem;
    border: 1px solid rgba(255, 255, 255, 0.2);
    background: rgba(255, 255, 255, 0.05);
    color: white;
    border-radius: var(--radius);
    cursor: pointer;
    transition: all 0.2s ease;
}

.fatigue-options button:hover {
    background: rgba(255, 255, 255, 0.1);
    transform: translateY(-2px);
}

.fatigue-options button:first-child {
    border-color: rgba(251, 146, 60, 0.5);
    background: rgba(251, 146, 60, 0.1);
}

.fatigue-options button:nth-child(2) {
    border-color: rgba(59, 130, 246, 0.5);
    background: rgba(59, 130, 246, 0.1);
}

.fatigue-options button:last-child {
    border-color: rgba(34, 197, 94, 0.5);
    background: rgba(34, 197, 94, 0.1);
}

/* ===== PROGRAM GENERATOR ===== */
.week-section {
    background: rgba(255, 255, 255, 0.05);
    border-radius: var(--radius);
    padding: 1rem;
    margin-bottom: 1rem;
}

.week-section h4 {
    color: var(--primary);
    margin: 0;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.week-toggle {
    display: inline-block;
    width: 20px;
}

.week-content {
    padding: 1rem;
}

.workout-day {
    background: rgba(255, 255, 255, 0.03);
    padding: 1rem;
    margin-bottom: 1rem;
    border-radius: var(--radius);
}

.workout-day h5 {
    color: var(--secondary);
    margin-bottom: 1rem;
}

.exercise-list {
    list-style: none;
    padding: 0;
}

.exercise-list li {
    padding: 0.75rem;
    margin-bottom: 0.5rem;
    background: rgba(255, 255, 255, 0.05);
    border-radius: var(--radius-sm);
    line-height: 1.6;
}

.spinner {
    width: 40px;
    height: 40px;
    border: 4px solid rgba(255, 255, 255, 0.1);
    border-top-color: var(--primary);
    border-radius: 50%;
    animation: spin 1s linear infinite;
    margin: 0 auto;
}

@keyframes spin {
    to { transform: rotate(360deg); }
}

/* ===== CARTES DE PR√âDICTION ===== */
.prediction-card {
    background: linear-gradient(135deg, rgba(59, 130, 246, 0.1), rgba(16, 185, 129, 0.1));
    border: 1px solid rgba(59, 130, 246, 0.3);
    transition: all 0.3s ease;
}

.prediction-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 24px rgba(59, 130, 246, 0.2);
    border-color: rgba(59, 130, 246, 0.5);
}

.warning-card {
    background: linear-gradient(135deg, rgba(239, 68, 68, 0.1), rgba(245, 158, 11, 0.1));
    border: 1px solid rgba(239, 68, 68, 0.3);
}

.prediction-grid {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
}

.trend-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.75rem;
    background: rgba(255, 255, 255, 0.05);
    border-radius: var(--radius-sm);
    transition: all 0.2s ease;
}

.trend-item:hover {
    background: rgba(255, 255, 255, 0.08);
    transform: translateX(4px);
}

.muscle-name {
    font-weight: 500;
    color: var(--light);
}

.trend-indicator {
    font-weight: 600;
    font-size: 0.9rem;
    display: flex;
    align-items: center;
    gap: 0.25rem;
}

/* Animation pour les indicateurs de tendance */
@keyframes slideInRight {
    from {
        opacity: 0;
        transform: translateX(-20px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

.trend-item {
    animation: slideInRight 0.5s ease forwards;
}

.trend-item:nth-child(1) { animation-delay: 0.1s; }
.trend-item:nth-child(2) { animation-delay: 0.2s; }
.trend-item:nth-child(3) { animation-delay: 0.3s; }

/* Responsive */
@media (max-width: 768px) {
    .prediction-grid {
        gap: 0.5rem;
    }
    
    .trend-item {
        padding: 0.5rem;
        font-size: 0.875rem;
    }
}

/* Toggle Auto Weight */
.auto-weight-toggle {
    margin: 0.5rem 0;
}

.toggle-label {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    cursor: pointer;
    font-size: 0.875rem;
    color: var(--gray-light);
}

.toggle-label input[type="checkbox"] {
    width: 18px;
    height: 18px;
    cursor: pointer;
}

.toggle-label:hover {
    color: var(--white);
}

/* Programme sauvegard√© */
.program-saved-badge {
    display: inline-block;
    background: var(--secondary);
    color: white;
    padding: 0.25rem 0.75rem;
    border-radius: 9999px;
    font-size: 0.75rem;
    font-weight: 600;
    margin-left: 0.5rem;
}

/* Alerte validation poids */
.weight-validation-warning {
    background: rgba(245, 158, 11, 0.1);
    border: 1px solid var(--warning);
    color: var(--warning);
    padding: 0.5rem;
    border-radius: var(--radius-sm);
    margin-top: 0.5rem;
    font-size: 0.875rem;
}

/* ===== SUGGESTION DE POIDS AM√âLIOR√âE ===== */
.weight-suggestion-line {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-top: 0.5rem;
    padding: 0.5rem 0.75rem;
    background: rgba(255, 255, 255, 0.03);
    border-radius: var(--radius-sm);
    min-height: 36px; /* Hauteur minimale pour alignement */
}


.weight-suggestion-line .suggestion-hint.disabled {
    opacity: 0.5;
    text-decoration: line-through;
}

.suggestion-hint {
    font-size: 0.875rem;
    color: var(--warning);
    display: flex;
    align-items: center;
    gap: 0.25rem;
    flex: 1; /* Prend l'espace disponible */
}

/* Toggle Switch Moderne */
.toggle-switch {
    position: relative;
    display: inline-flex;
    align-items: center;
    cursor: pointer;
    user-select: none;
}

.toggle-switch input {
    opacity: 0;
    width: 0;
    height: 0;
}

.toggle-slider {
    position: relative;
    width: 44px;
    height: 24px;
    background-color: rgba(255, 255, 255, 0.1);
    border-radius: 34px;
    transition: all 0.3s ease;
    border: 1px solid rgba(255, 255, 255, 0.2);
}

.toggle-slider:before {
    position: absolute;
    content: "";
    height: 18px;
    width: 18px;
    left: 2px;
    bottom: 2px;
    background-color: var(--gray-light);
    border-radius: 50%;
    transition: all 0.3s ease;
}

.toggle-switch input:checked + .toggle-slider {
    background-color: var(--primary);
    border-color: var(--primary);
}

.toggle-switch input:checked + .toggle-slider:before {
    transform: translateX(20px);
    background-color: white;
}

.toggle-label {
    margin-left: 0.5rem;
    font-size: 0.875rem;
    color: var(--gray-light);
    font-weight: 500;
}

.toggle-switch input:checked ~ .toggle-label {
    color: var(--primary);
}

/* Suggestions visuelles sur les boutons */
.btn-adjust.suggest-increase {
    background: rgba(16, 185, 129, 0.2);
    border-color: var(--secondary);
    color: var(--secondary);
}

.btn-adjust.suggest-decrease {
    background: rgba(239, 68, 68, 0.2);
    border-color: var(--danger);
    color: var(--danger);
}

/* Animation de pulsation */
@keyframes pulse-glow {
    0% {
        box-shadow: 0 0 0 0 currentColor;
        opacity: 1;
    }
    50% {
        opacity: 0.8;
    }
    100% {
        box-shadow: 0 0 0 8px transparent;
        opacity: 1;
    }
}

.suggest-pulse {
    animation: pulse-glow 2s ease-in-out infinite;
}

/* Am√©lioration de l'affichage des poids disponibles */
.weight-info {
    font-size: 0.75rem;
    color: var(--gray);
    margin-top: 0.25rem;
    text-align: center;
}

/* Responsive */
@media (max-width: 768px) {
    .weight-suggestion-line {
        padding: 0.375rem;
    }
    
    .toggle-slider {
        width: 40px;
        height: 22px;
    }
    
    .toggle-slider:before {
        height: 16px;
        width: 16px;
    }
    
    .toggle-switch input:checked + .toggle-slider:before {
        transform: translateX(18px);
    }
}

/* ===== DESIGN INT√âGR√â POUR LA BARRE ===== */
.barbell-card-integrated {
    background: rgba(255, 255, 255, 0.08);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 16px;
    padding: 20px;
    margin: 12px 0;
    transition: all 0.3s ease;
}

.weight-control-row {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 20px;
    margin-bottom: 16px;
}

.weight-btn {
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 12px;
    color: rgba(255, 255, 255, 0.8);
    width: 44px;
    height: 44px;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
}

.weight-btn:hover {
    background: rgba(255, 255, 255, 0.15);
    border-color: rgba(255, 255, 255, 0.3);
    color: white;
}

/* Animation de suggestion - plus visible */
.weight-btn.suggest-decrease {
    background: rgba(239, 68, 68, 0.2) !important;
    border-color: rgba(239, 68, 68, 0.5) !important;
    color: #ef4444 !important;
}

.weight-btn.suggest-increase {
    background: rgba(34, 197, 94, 0.2) !important;
    border-color: rgba(34, 197, 94, 0.5) !important;
    color: #22c55e !important;
}

.weight-btn.suggest-pulse {
    animation: pulseSuggest 2s ease-in-out infinite;
}

@keyframes pulseSuggest {
    0%, 100% { 
        transform: scale(1);
        box-shadow: 0 0 0 0 currentColor;
    }
    50% { 
        transform: scale(1.05);
        box-shadow: 0 0 0 4px rgba(255, 255, 255, 0.1);
    }
}

.barbell-total-integrated {
    font-size: 36px;
    font-weight: 700;
    color: white;
    font-family: -apple-system, BlinkMacSystemFont, 'SF Pro Display', sans-serif;
}

.weight-unit {
    font-size: 18px;
    font-weight: 400;
    opacity: 0.7;
    margin-left: 4px;
}

.barbell-plates-visualization {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 3px;
    margin: 16px 0;
    overflow-x: auto;
    padding: 8px 0;
}

.plate-integrated {
    background: rgba(255, 255, 255, 0.12);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 6px;
    padding: 4px 8px;
    font-size: 11px;
    font-weight: 600;
    color: rgba(255, 255, 255, 0.9);
    white-space: nowrap;
}

/* Coloration subtile des disques */
.plate-integrated[data-weight="20"],
.plate-integrated[data-weight="25"] {
    border-color: rgba(239, 68, 68, 0.4);
}

.plate-integrated[data-weight="10"],
.plate-integrated[data-weight="15"] {
    border-color: rgba(34, 197, 94, 0.4);
}

.plate-integrated[data-weight="5"],
.plate-integrated[data-weight="2.5"] {
    border-color: rgba(59, 130, 246, 0.4);
}

.bar-integrated {
    background: linear-gradient(90deg, 
        rgba(255, 255, 255, 0.1) 0%, 
        rgba(255, 255, 255, 0.2) 50%, 
        rgba(255, 255, 255, 0.1) 100%);
    border: 1px solid rgba(255, 255, 255, 0.3);
    border-radius: 4px;
    padding: 4px 12px;
    font-size: 10px;
    font-weight: 500;
    color: rgba(255, 255, 255, 0.8);
    margin: 0 6px;
}

.barbell-detail {
    font-size: 11px;
    color: rgba(255, 255, 255, 0.5);
    text-align: center;
    margin-top: 8px;
}

/* Mobile : permettre le scroll horizontal si n√©cessaire */
@media (max-width: 480px) {
    .barbell-plates-visualization {
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;
    }
    
    .weight-control-row {
        gap: 16px;
    }
    
    .barbell-total-integrated {
        font-size: 32px;
    }
}

/* ===== STYLES DASHBOARD ADAPTATIF ===== */
.trajectory-widget {
    background: var(--surface);
    border-radius: 16px;
    padding: 1.5rem;
    margin-bottom: 2rem;
    border: 2px solid transparent;
    transition: all 0.3s ease;
}

.trajectory-widget.on-track {
    border-color: #10b981;
}

.trajectory-widget.off-track {
    border-color: #f59e0b;
}

.trajectory-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
}

.trajectory-badge {
    background: var(--primary);
    color: white;
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-weight: 600;
}

.trajectory-stats {
    display: grid;
    gap: 1rem;
    margin-bottom: 1.5rem;
}

.stat-item {
    display: grid;
    grid-template-columns: 150px 1fr auto;
    align-items: center;
    gap: 1rem;
}

.stat-label {
    font-size: 0.9rem;
    color: var(--gray);
}

.progress-bar {
    height: 8px;
    background: var(--background);
    border-radius: 4px;
    overflow: hidden;
}

.progress-fill {
    height: 100%;
    background: var(--primary);
    transition: width 0.5s ease;
}

.insights-section {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    margin-top: 1rem;
    padding-top: 1rem;
    border-top: 1px solid var(--border);
}

.insight-item {
    padding: 0.75rem;
    background: var(--background);
    border-radius: 8px;
    font-size: 0.9rem;
}

.muscle-status-widget {
    background: var(--surface);
    border-radius: 16px;
    padding: 1.5rem;
    margin-top: 2rem;
}

.muscle-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 1rem;
    margin-top: 1rem;
}

.muscle-item {
    background: var(--background);
    border-radius: 12px;
    padding: 1rem;
    border: 2px solid transparent;
    transition: all 0.3s ease;
}

.muscle-item.ready {
    border-color: #10b981;
}

.muscle-item.moderate {
    border-color: #f59e0b;
}

.muscle-item.tired {
    border-color: #ef4444;
    opacity: 0.8;
}

.muscle-header {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-bottom: 0.75rem;
}

.muscle-emoji {
    font-size: 1.5rem;
}

.muscle-name {
    font-weight: 600;
}

.mini-progress {
    height: 4px;
    background: var(--border);
    border-radius: 2px;
    overflow: hidden;
    margin-bottom: 0.25rem;
}

.mini-progress-fill {
    height: 100%;
    background: var(--primary);
}

.volume-text {
    font-size: 0.8rem;
    color: var(--gray);
}

.last-trained {
    font-size: 0.75rem;
    color: var(--gray);
    display: block;
    margin-top: 0.5rem;
}

.time-options {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 1rem;
    margin: 2rem 0;
}

.time-option {
    background: var(--surface);
    border: 2px solid var(--border);
    border-radius: 12px;
    padding: 1.5rem;
    cursor: pointer;
    transition: all 0.2s;
    text-align: center;
}

.time-option:hover {
    border-color: var(--primary);
    transform: translateY(-2px);
}

.time-value {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    color: var(--primary);
}

.time-label {
    display: block;
    font-size: 0.9rem;
    color: var(--gray);
    margin-top: 0.25rem;
}

.action-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.exercises-list {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin: 1.5rem 0;
}

.exercise-item {
    display: flex;
    gap: 1rem;
    padding: 1rem;
    background: var(--background);
    border-radius: 8px;
    align-items: center;
}

.exercise-number {
    width: 32px;
    height: 32px;
    background: var(--primary);
    color: white;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: 600;
}

.exercise-specs {
    display: flex;
    gap: 1rem;
    margin-top: 0.5rem;
    font-size: 0.9rem;
    color: var(--gray);
}

.exercise-specs span {
    padding: 0.25rem 0.75rem;
    background: var(--surface);
    border-radius: 12px;
}


/* Loading Overlay */
.loading-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.8);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 9999;
}

.loading-content {
    text-align: center;
    color: white;
}

/* Bouton danger plus rouge */
.btn-danger[onclick*="deleteProfile"] {
    background: #dc2626 !important;
    border-color: #dc2626 !important;
}

.btn-danger[onclick*="deleteProfile"]:hover {
    background: #b91c1c !important;
    border-color: #b91c1c !important;
    transform: translateY(-2px);
}

.profile-row {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

/* Am√©lioration affichage programme */
@media (max-width: 480px) {
    .week-section h4 {
        font-size: 0.95rem;
    }
    
    .exercise-name {
        font-size: 0.95rem;
        line-height: 1.4;
    }
    
    .exercise-details {
        font-size: 0.85rem;
    }
}

/* Guided Workout Styles */
.guided-workout-container {
    padding: 1rem;
}

.workout-progress {
    margin-bottom: 2rem;
    text-align: center;
}

.progress-bar-container {
    background: rgba(255, 255, 255, 0.1);
    height: 8px;
    border-radius: 4px;
    margin-top: 0.5rem;
    overflow: hidden;
}

.progress-bar {
    background: var(--primary);
    height: 100%;
    transition: width 0.3s ease;
}

.current-exercise-card {
    background: rgba(255, 255, 255, 0.05);
    border-radius: var(--radius);
    padding: 2rem;
    margin-bottom: 2rem;
}

.exercise-targets {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 1rem;
    margin: 1.5rem 0;
}

.target-info {
    text-align: center;
}

.target-info .label {
    display: block;
    color: var(--gray);
    font-size: 0.875rem;
    margin-bottom: 0.25rem;
}

.target-info .value {
    display: block;
    font-size: 1.5rem;
    font-weight: bold;
    color: var(--primary);
}

.guided-targets {
    text-align: center;
    color: var(--primary);
    margin-top: 0.5rem;
    font-size: 0.9rem;
}

.upcoming-exercises {
    margin-top: 2rem;
}

.upcoming-exercise {
    background: rgba(255, 255, 255, 0.03);
    padding: 0.75rem;
    margin-bottom: 0.5rem;
    border-radius: var(--radius);
}
--- FIN DU FICHIER ---

--- Fichier: C:\Users\Alex\Python\fitness-app\frontend\sw.js ---
--- Nom du fichier: sw.js ---
--- Contenu ---
// Service Worker basique pour PWA
const CACHE_NAME = 'fitness-coach-v1';
const urlsToCache = [
    '/',
    '/styles.css',
    '/app.js',
    '/manifest.json',
    '/offline.html'
];

self.addEventListener('install', event => {
    event.waitUntil(
        caches.open(CACHE_NAME)
            .then(cache => cache.addAll(urlsToCache))
    );
});

self.addEventListener('fetch', event => {
    event.respondWith(
        caches.match(event.request)
            .then(response => response || fetch(event.request))
            .catch(() => caches.match('/offline.html'))
    );
});
--- FIN DU FICHIER ---

